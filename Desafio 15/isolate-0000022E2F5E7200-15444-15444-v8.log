v8-version,9,4,146,24,-node.20,0
v8-platform,windows,unknown
shared-library,C:\\Program Files\\nodejs\\node.exe,0x7ff7dd740000,0x7ff7e1462000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\ntdll.dll,0x7ff954d70000,0x7ff954f68000,0
shared-library,C:\\WINDOWS\\System32\\KERNEL32.DLL,0x7ff9535a0000,0x7ff95365d000,0
shared-library,C:\\WINDOWS\\System32\\KERNELBASE.dll,0x7ff952490000,0x7ff95275e000,0
shared-library,C:\\WINDOWS\\System32\\WS2_32.dll,0x7ff952dd0000,0x7ff952e3b000,0
shared-library,C:\\WINDOWS\\System32\\RPCRT4.dll,0x7ff9532c0000,0x7ff9533e5000,0
shared-library,C:\\WINDOWS\\System32\\PSAPI.DLL,0x7ff9532b0000,0x7ff9532b8000,0
shared-library,C:\\WINDOWS\\System32\\ADVAPI32.dll,0x7ff953ee0000,0x7ff953f8e000,0
shared-library,C:\\WINDOWS\\System32\\msvcrt.dll,0x7ff9547d0000,0x7ff95486e000,0
shared-library,C:\\WINDOWS\\System32\\sechost.dll,0x7ff953f90000,0x7ff95402c000,0
shared-library,C:\\WINDOWS\\System32\\USER32.dll,0x7ff9540b0000,0x7ff954250000,0
shared-library,C:\\WINDOWS\\System32\\win32u.dll,0x7ff952970000,0x7ff952992000,0
shared-library,C:\\WINDOWS\\System32\\GDI32.dll,0x7ff954370000,0x7ff95439a000,0
shared-library,C:\\WINDOWS\\System32\\gdi32full.dll,0x7ff952c00000,0x7ff952d0b000,0
shared-library,C:\\WINDOWS\\System32\\msvcp_win.dll,0x7ff952860000,0x7ff9528fd000,0
shared-library,C:\\WINDOWS\\System32\\ucrtbase.dll,0x7ff952760000,0x7ff952860000,0
shared-library,C:\\WINDOWS\\System32\\CRYPT32.dll,0x7ff9529a0000,0x7ff952af6000,0
shared-library,C:\\WINDOWS\\System32\\bcrypt.dll,0x7ff952da0000,0x7ff952dc7000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\dbghelp.dll,0x7ff94cbc0000,0x7ff94cda4000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\IPHLPAPI.DLL,0x7ff9518f0000,0x7ff95192b000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\USERENV.dll,0x7ff952350000,0x7ff95237e000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\WINMM.dll,0x7ff93afd0000,0x7ff93aff7000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\CRYPTBASE.DLL,0x7ff951e60000,0x7ff951e6c000,0
shared-library,C:\\WINDOWS\\System32\\IMM32.DLL,0x7ff9549d0000,0x7ff954a00000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\powrprof.dll,0x7ff951a60000,0x7ff951aab000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\UMPDC.dll,0x7ff9518d0000,0x7ff9518e2000,0
shared-library,C:\\WINDOWS\\system32\\uxtheme.dll,0x7ff94b570000,0x7ff94b60e000,0
shared-library,C:\\WINDOWS\\System32\\combase.dll,0x7ff954460000,0x7ff9547b4000,0
shared-library,C:\\WINDOWS\\system32\\mswsock.dll,0x7ff951c50000,0x7ff951cba000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\kernel.appcore.dll,0x7ff950d20000,0x7ff950d32000,0
shared-library,C:\\WINDOWS\\System32\\bcryptPrimitives.dll,0x7ff952d10000,0x7ff952d92000,0
shared-library-end
tick,0x7ff954e0cfc4,1230718,0,0x0,6
profiler,begin,1000
new,CodeRange,0x22e32610000,0
new,MemoryChunk,0x44987c0000,262144
new,MemoryChunk,0x37d24080000,262144
new,MemoryChunk,0x36d5d580000,262144
new,MemoryChunk,0x26a3bb40000,262144
new,MemoryChunk,0x11ff8a80000,262144
heap-capacity,1031072
heap-available,2198652736
new,MemoryChunk,0x3eae9a80000,262144
new,MemoryChunk,0x3fec9f80000,262144
tick,0x7ff954e0d244,1233183,0,0x0,6
new,MemoryChunk,0xc194f40000,262144
new,MemoryChunk,0x12f5b0c0000,262144
new,MemoryChunk,0x15057cc0000,262144
new,MemoryChunk,0x1945c700000,262144
new,MemoryChunk,0x2bf99080000,262144
new,MemoryChunk,0x22e32640000,262144
new,MemoryChunk,0x2e55bec0000,262144
code-creation,Builtin,2,1242431,0x7ff7de2b04a4,1356,RecordWriteEmitRememberedSetSaveFP
code-creation,Builtin,2,1242516,0x7ff7de2b0a04,448,RecordWriteOmitRememberedSetSaveFP
code-creation,Builtin,2,1242547,0x7ff7de2b0be4,636,RecordWriteEmitRememberedSetIgnoreFP
code-creation,Builtin,2,1242588,0x7ff7de2b0e64,204,RecordWriteOmitRememberedSetIgnoreFP
code-creation,Builtin,2,1242612,0x7ff7de2b0f44,364,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,1242798,0x7ff7de2b10c4,128,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,1242821,0x7ff7de2b1164,60,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,1242846,0x7ff7de2b11a4,360,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,1242872,0x7ff7de2b1324,416,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,1242891,0x7ff7de2b14e4,444,CallFunction_ReceiverIsAny
code-creation,Builtin,2,1243022,0x7ff7de2b16a4,104,CallBoundFunction
code-creation,Builtin,2,1243052,0x7ff7de2b1724,120,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,1243079,0x7ff7de2b17a4,120,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,1243101,0x7ff7de2b1824,120,Call_ReceiverIsAny
code-creation,Builtin,2,1243122,0x7ff7de2b18a4,992,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,1243140,0x7ff7de2b1ca4,992,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,1243172,0x7ff7de2b20a4,1080,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,1243194,0x7ff7de2b24e4,1076,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,1243214,0x7ff7de2b2924,1080,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,1243239,0x7ff7de2b2d64,1076,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,1243262,0x7ff7de2b31a4,948,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,1243280,0x7ff7de2b3564,948,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,1243298,0x7ff7de2b3924,948,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,1243314,0x7ff7de2b3ce4,736,CallProxy
code-creation,Builtin,2,1243330,0x7ff7de2b3fe4,148,CallVarargs
code-creation,Builtin,2,1243348,0x7ff7de2b4084,944,CallWithSpread
code-creation,Builtin,2,1243364,0x7ff7de2b4444,1956,CallWithSpread_Baseline
code-creation,Builtin,2,1243380,0x7ff7de2b4c04,1928,CallWithSpread_WithFeedback
code-creation,Builtin,2,1243399,0x7ff7de2b53a4,864,CallWithArrayLike
code-creation,Builtin,2,1243418,0x7ff7de2b5724,1820,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,1243438,0x7ff7de2b5e44,156,CallForwardVarargs
code-creation,Builtin,2,1243460,0x7ff7de2b5ee4,156,CallFunctionForwardVarargs
code-creation,Builtin,2,1243486,0x7ff7de2b5f84,132,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,1243516,0x7ff7de2b6024,228,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,1243539,0x7ff7de2b6124,316,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,1243561,0x7ff7de2b6264,28,ConstructFunction
code-creation,Builtin,2,1243579,0x7ff7de2b6284,104,ConstructBoundFunction
code-creation,Builtin,2,1243597,0x7ff7de2b6304,28,ConstructedNonConstructable
code-creation,Builtin,2,1243614,0x7ff7de2b6324,100,Construct
code-creation,Builtin,2,1243629,0x7ff7de2b63a4,148,ConstructVarargs
code-creation,Builtin,2,1243645,0x7ff7de2b6444,968,ConstructWithSpread
code-creation,Builtin,2,1243661,0x7ff7de2b6824,1748,ConstructWithSpread_Baseline
code-creation,Builtin,2,1243678,0x7ff7de2b6f04,1764,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,1243697,0x7ff7de2b7604,924,ConstructWithArrayLike
code-creation,Builtin,2,1243718,0x7ff7de2b79a4,1652,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,1243742,0x7ff7de2b8024,196,ConstructForwardVarargs
code-creation,Builtin,2,1243768,0x7ff7de2b8104,196,ConstructFunctionForwardVarargs
code-creation,Builtin,2,1243792,0x7ff7de2b81e4,804,Construct_Baseline
code-creation,Builtin,2,1243816,0x7ff7de2b8524,820,Construct_WithFeedback
code-creation,Builtin,2,1243833,0x7ff7de2b8864,476,JSConstructStubGeneric
code-creation,Builtin,2,1243856,0x7ff7de2b8a44,376,JSBuiltinsConstructStub
code-creation,Builtin,2,1243875,0x7ff7de2b8bc4,676,FastNewObject
code-creation,Builtin,2,1243893,0x7ff7de2b8e84,292,FastNewClosure
code-creation,Builtin,2,1243910,0x7ff7de2b8fc4,720,ConstructProxy
code-creation,Builtin,2,1243927,0x7ff7de2b92a4,360,JSEntry
code-creation,Builtin,2,1243942,0x7ff7de2b9424,360,JSConstructEntry
code-creation,Builtin,2,1243955,0x7ff7de2b95a4,360,JSRunMicrotasksEntry
code-creation,Builtin,2,1243969,0x7ff7de2b9724,96,JSEntryTrampoline
code-creation,Builtin,2,1243984,0x7ff7de2b97a4,96,JSConstructEntryTrampoline
code-creation,Builtin,2,1244001,0x7ff7de2b9824,280,ResumeGeneratorTrampoline
code-creation,Builtin,2,1244017,0x7ff7de2b9944,1116,StringCodePointAt
code-creation,Builtin,2,1244039,0x7ff7de2b9da4,1552,StringFromCodePointAt
code-creation,Builtin,2,1244150,0x7ff7de2ba3c4,544,StringEqual
code-creation,Builtin,2,1244182,0x7ff7de2ba604,276,StringGreaterThan
code-creation,Builtin,2,1244209,0x7ff7de2ba724,276,StringGreaterThanOrEqual
code-creation,Builtin,2,1244236,0x7ff7de2ba844,276,StringLessThan
code-creation,Builtin,2,1244255,0x7ff7de2ba964,276,StringLessThanOrEqual
code-creation,Builtin,2,1244276,0x7ff7de2baa84,2492,StringSubstring
code-creation,Builtin,2,1244299,0x7ff7de2bb444,80,OrderedHashTableHealIndex
code-creation,Builtin,2,1244318,0x7ff7de2bb4a4,1168,InterpreterEntryTrampoline
code-creation,Builtin,2,1244339,0x7ff7de2bb944,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,1244360,0x7ff7de2bb9a4,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,1244382,0x7ff7de2bba04,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,1244404,0x7ff7de2bba64,80,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,1244426,0x7ff7de2bbac4,80,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,1244448,0x7ff7de2bbb24,84,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,1244466,0x7ff7de2bbb84,84,InterpreterEnterAtBytecode
code-creation,Builtin,2,1244483,0x7ff7de2bbbe4,220,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,1244501,0x7ff7de2bbcc4,52,InterpreterOnStackReplacement
code-creation,Builtin,2,1244522,0x7ff7de2bbd04,592,BaselineOutOfLinePrologue
code-creation,Builtin,2,1244538,0x7ff7de2bbf64,56,BaselineOnStackReplacement
code-creation,Builtin,2,1244554,0x7ff7de2bbfa4,84,BaselineLeaveFrame
code-creation,Builtin,2,1244569,0x7ff7de2bc004,216,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,1244592,0x7ff7de2bc0e4,224,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,1244618,0x7ff7de2bc1e4,192,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,1244637,0x7ff7de2bc2c4,1004,CompileLazy
code-creation,Builtin,2,1244653,0x7ff7de2bc6c4,68,CompileLazyDeoptimizedCode
code-creation,Builtin,2,1244671,0x7ff7de2bc724,252,InstantiateAsmJs
code-creation,Builtin,2,1244690,0x7ff7de2bc824,32,NotifyDeoptimized
code-creation,Builtin,2,1244710,0x7ff7de2bc864,796,DeoptimizationEntry_Eager
code-creation,Builtin,2,1244728,0x7ff7de2bcb84,796,DeoptimizationEntry_Soft
code-creation,Builtin,2,1244756,0x7ff7de2bcea4,796,DeoptimizationEntry_Bailout
code-creation,Builtin,2,1244783,0x7ff7de2bd1c4,796,DeoptimizationEntry_Lazy
code-creation,Builtin,2,1244800,0x7ff7de2bd4e4,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,1244821,0x7ff7de2bd524,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,1244840,0x7ff7de2bd564,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,1244858,0x7ff7de2bd5a4,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,1244873,0x7ff7de2bd604,288,CallApiCallback
code-creation,Builtin,2,1244886,0x7ff7de2bd744,268,CallApiGetter
code-creation,Builtin,2,1244901,0x7ff7de2bd864,12,HandleApiCall
code-creation,Builtin,2,1244917,0x7ff7de2bd884,12,HandleApiCallAsFunction
code-creation,Builtin,2,1244936,0x7ff7de2bd8a4,12,HandleApiCallAsConstructor
code-creation,Builtin,2,1244959,0x7ff7de2bd8c4,64,AllocateInYoungGeneration
code-creation,Builtin,2,1244988,0x7ff7de2bd924,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,1245009,0x7ff7de2bd964,64,AllocateInOldGeneration
code-creation,Builtin,2,1245034,0x7ff7de2bd9c4,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,1245063,0x7ff7de2bda04,420,CopyFastSmiOrObjectElements
code-creation,Builtin,2,1245083,0x7ff7de2bdbc4,496,GrowFastDoubleElements
code-creation,Builtin,2,1245110,0x7ff7de2bddc4,400,GrowFastSmiOrObjectElements
code-creation,Builtin,2,1245136,0x7ff7de2bdf64,388,DebugBreakTrampoline
code-creation,Builtin,2,1245163,0x7ff7de2be104,180,ToNumber
code-creation,Builtin,2,1245188,0x7ff7de2be1c4,292,ToNumber_Baseline
code-creation,Builtin,2,1245209,0x7ff7de2be304,360,ToNumeric_Baseline
code-creation,Builtin,2,1245233,0x7ff7de2be484,104,PlainPrimitiveToNumber
code-creation,Builtin,2,1245255,0x7ff7de2be504,212,ToNumberConvertBigInt
code-creation,Builtin,2,1245274,0x7ff7de2be5e4,132,Typeof
code-creation,Builtin,2,1245310,0x7ff7de2be684,104,BigIntToI64
code-creation,Builtin,2,1245339,0x7ff7de2be704,4,BigIntToI32Pair
code-creation,Builtin,2,1245358,0x7ff7de2be724,232,I64ToBigInt
code-creation,Builtin,2,1245378,0x7ff7de2be824,4,I32PairToBigInt
code-creation,Builtin,2,1245395,0x7ff7de2be844,100,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,1245412,0x7ff7de2be8c4,4232,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,1245430,0x7ff7de2bf964,15848,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,1245452,0x7ff7de2c3764,280,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,1245470,0x7ff7de2c3884,60,LoadIC_FunctionPrototype
code-creation,Builtin,2,1245486,0x7ff7de2c38c4,12,LoadIC_StringLength
code-creation,Builtin,2,1245502,0x7ff7de2c38e4,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,1245524,0x7ff7de2c3904,3056,LoadIC_NoFeedback
code-creation,Builtin,2,1245548,0x7ff7de2c4504,32,StoreGlobalIC_Slow
code-creation,Builtin,2,1245575,0x7ff7de2c4544,7332,StoreIC_NoFeedback
code-creation,Builtin,2,1245593,0x7ff7de2c6204,180,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,1245611,0x7ff7de2c62c4,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,1245627,0x7ff7de2c6324,236,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,1245646,0x7ff7de2c6424,236,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,1245665,0x7ff7de2c6524,236,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,1245684,0x7ff7de2c6624,236,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,1245703,0x7ff7de2c6724,14344,StoreFastElementIC_Standard
code-creation,Builtin,2,1245717,0x7ff7de2c9f44,9616,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,1245737,0x7ff7de2cc4e4,13364,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,1245766,0x7ff7de2cf924,6088,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,1245787,0x7ff7de2d1104,8484,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,1245809,0x7ff7de2d3244,19368,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,1245828,0x7ff7de2d7e04,8484,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,1245851,0x7ff7de2d9f44,11024,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,1245872,0x7ff7de2dca64,792,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,1245896,0x7ff7de2dcd84,164,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,1245915,0x7ff7de2dce44,72,HasIndexedInterceptorIC
code-creation,Builtin,2,1245931,0x7ff7de2dcea4,96,DynamicCheckMapsTrampoline
code-creation,Builtin,2,1245947,0x7ff7de2dcf24,224,DynamicCheckMaps
code-creation,Builtin,2,1245966,0x7ff7de2dd024,96,DynamicCheckMapsWithFeedbackVectorTrampoline
code-creation,Builtin,2,1245985,0x7ff7de2dd0a4,188,DynamicCheckMapsWithFeedbackVector
code-creation,Builtin,2,1246006,0x7ff7de2dd164,152,EnqueueMicrotask
code-creation,Builtin,2,1246026,0x7ff7de2dd204,8,RunMicrotasksTrampoline
code-creation,Builtin,2,1246045,0x7ff7de2dd224,3476,RunMicrotasks
code-creation,Builtin,2,1246064,0x7ff7de2ddfc4,2636,HasProperty
code-creation,Builtin,2,1246082,0x7ff7de2dea24,1156,DeleteProperty
code-creation,Builtin,2,1246101,0x7ff7de2deec4,1972,CopyDataProperties
code-creation,Builtin,2,1246121,0x7ff7de2df684,9184,SetDataProperties
code-creation,Builtin,2,1246141,0x7ff7de2e1a84,28,Abort
code-creation,Builtin,2,1246160,0x7ff7de2e1aa4,28,AbortCSAAssert
code-creation,Builtin,2,1246179,0x7ff7de2e1ac4,12,EmptyFunction
code-creation,Builtin,2,1246201,0x7ff7de2e1ae4,12,Illegal
code-creation,Builtin,2,1246219,0x7ff7de2e1b04,12,StrictPoisonPillThrower
code-creation,Builtin,2,1246238,0x7ff7de2e1b24,12,UnsupportedThrower
code-creation,Builtin,2,1246258,0x7ff7de2e1b44,64,ReturnReceiver
code-creation,Builtin,2,1246278,0x7ff7de2e1ba4,28,ArrayConstructor
code-creation,Builtin,2,1246298,0x7ff7de2e1bc4,404,ArrayConstructorImpl
code-creation,Builtin,2,1246318,0x7ff7de2e1d64,216,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,1246341,0x7ff7de2e1e44,216,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,1246437,0x7ff7de2e1f24,176,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,1246465,0x7ff7de2e1fe4,176,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,1246493,0x7ff7de2e20a4,176,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,1246509,0x7ff7de2e2164,176,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,1246523,0x7ff7de2e2224,188,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,1246539,0x7ff7de2e22e4,188,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,1246554,0x7ff7de2e23a4,512,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,1246568,0x7ff7de2e25c4,480,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,1246583,0x7ff7de2e27c4,436,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,1246598,0x7ff7de2e2984,404,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,1246614,0x7ff7de2e2b24,436,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,1246634,0x7ff7de2e2ce4,404,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,1246650,0x7ff7de2e2e84,448,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,1246667,0x7ff7de2e3064,412,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,1246684,0x7ff7de2e3204,64,ArrayNArgumentsConstructor
code-creation,Builtin,2,1246702,0x7ff7de2e3264,12,ArrayConcat
code-creation,Builtin,2,1246715,0x7ff7de2e3284,12,ArrayPrototypeFill
code-creation,Builtin,2,1246730,0x7ff7de2e32a4,932,ArrayIncludesSmiOrObject
code-creation,Builtin,2,1246757,0x7ff7de2e3664,140,ArrayIncludesPackedDoubles
code-creation,Builtin,2,1246788,0x7ff7de2e3704,208,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,1246815,0x7ff7de2e37e4,548,ArrayIncludes
code-creation,Builtin,2,1246907,0x7ff7de2e3a24,856,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,1246934,0x7ff7de2e3d84,116,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,1246962,0x7ff7de2e3e04,116,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,1246986,0x7ff7de2e3e84,552,ArrayIndexOf
code-creation,Builtin,2,1247091,0x7ff7de2e40c4,12,ArrayPop
code-creation,Builtin,2,1247120,0x7ff7de2e40e4,616,ArrayPrototypePop
code-creation,Builtin,2,1247135,0x7ff7de2e4364,12,ArrayPush
code-creation,Builtin,2,1247147,0x7ff7de2e4384,2424,ArrayPrototypePush
code-creation,Builtin,2,1247160,0x7ff7de2e4d04,12,ArrayShift
code-creation,Builtin,2,1247172,0x7ff7de2e4d24,12,ArrayUnshift
code-creation,Builtin,2,1247211,0x7ff7de2e4d44,956,CloneFastJSArray
code-creation,Builtin,2,1247230,0x7ff7de2e5104,2196,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,1247245,0x7ff7de2e59a4,976,ExtractFastJSArray
code-creation,Builtin,2,1247260,0x7ff7de2e5d84,260,ArrayPrototypeEntries
code-creation,Builtin,2,1247274,0x7ff7de2e5ea4,248,ArrayPrototypeKeys
code-creation,Builtin,2,1247287,0x7ff7de2e5fa4,260,ArrayPrototypeValues
code-creation,Builtin,2,1247301,0x7ff7de2e60c4,4428,ArrayIteratorPrototypeNext
code-creation,Builtin,2,1247315,0x7ff7de2e7224,4168,FlattenIntoArray
code-creation,Builtin,2,1247331,0x7ff7de2e8284,4172,FlatMapIntoArray
code-creation,Builtin,2,1247376,0x7ff7de2e92e4,372,ArrayPrototypeFlat
code-creation,Builtin,2,1247396,0x7ff7de2e9464,428,ArrayPrototypeFlatMap
code-creation,Builtin,2,1247414,0x7ff7de2e9624,12,ArrayBufferConstructor
code-creation,Builtin,2,1247432,0x7ff7de2e9644,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,1247451,0x7ff7de2e9664,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,1247471,0x7ff7de2e9684,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,1247488,0x7ff7de2e96a4,804,AsyncFunctionEnter
code-creation,Builtin,2,1247502,0x7ff7de2e99e4,132,AsyncFunctionReject
code-creation,Builtin,2,1247515,0x7ff7de2e9a84,128,AsyncFunctionResolve
code-creation,Builtin,2,1247536,0x7ff7de2e9b24,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,1247557,0x7ff7de2e9b44,2804,AsyncFunctionAwaitCaught
code-creation,Builtin,2,1247575,0x7ff7de2ea644,2804,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,1247589,0x7ff7de2eb144,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,1247604,0x7ff7de2eb204,164,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,1247618,0x7ff7de2eb2c4,12,BigIntConstructor
code-creation,Builtin,2,1247631,0x7ff7de2eb2e4,12,BigIntAsUintN
code-creation,Builtin,2,1247644,0x7ff7de2eb304,12,BigIntAsIntN
code-creation,Builtin,2,1247656,0x7ff7de2eb324,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,1247670,0x7ff7de2eb344,12,BigIntPrototypeToString
code-creation,Builtin,2,1247684,0x7ff7de2eb364,12,BigIntPrototypeValueOf
code-creation,Builtin,2,1247701,0x7ff7de2eb384,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,1247715,0x7ff7de2eb3a4,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,1247730,0x7ff7de2eb3c4,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,1247744,0x7ff7de2eb3e4,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,1247760,0x7ff7de2eb404,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,1247776,0x7ff7de2eb424,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,1247796,0x7ff7de2eb444,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,1247814,0x7ff7de2eb464,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,1247834,0x7ff7de2eb484,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,1247859,0x7ff7de2eb4a4,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,1247879,0x7ff7de2eb4c4,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,1247935,0x7ff7de2eb4e4,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,1247958,0x7ff7de2eb504,12,CallSitePrototypeGetThis
code-creation,Builtin,2,1247975,0x7ff7de2eb524,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,1248003,0x7ff7de2eb544,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,1248030,0x7ff7de2eb564,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,1248048,0x7ff7de2eb584,12,CallSitePrototypeIsEval
code-creation,Builtin,2,1248068,0x7ff7de2eb5a4,12,CallSitePrototypeIsNative
code-creation,Builtin,2,1248091,0x7ff7de2eb5c4,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,1248109,0x7ff7de2eb5e4,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,1248123,0x7ff7de2eb604,12,CallSitePrototypeToString
code-creation,Builtin,2,1248136,0x7ff7de2eb624,12,ConsoleDebug
code-creation,Builtin,2,1248149,0x7ff7de2eb644,12,ConsoleError
code-creation,Builtin,2,1248161,0x7ff7de2eb664,12,ConsoleInfo
code-creation,Builtin,2,1248174,0x7ff7de2eb684,12,ConsoleLog
code-creation,Builtin,2,1248187,0x7ff7de2eb6a4,12,ConsoleWarn
code-creation,Builtin,2,1248210,0x7ff7de2eb6c4,12,ConsoleDir
code-creation,Builtin,2,1248229,0x7ff7de2eb6e4,12,ConsoleDirXml
code-creation,Builtin,2,1248283,0x7ff7de2eb704,12,ConsoleTable
code-creation,Builtin,2,1248324,0x7ff7de2eb724,12,ConsoleTrace
code-creation,Builtin,2,1248342,0x7ff7de2eb744,12,ConsoleGroup
code-creation,Builtin,2,1248360,0x7ff7de2eb764,12,ConsoleGroupCollapsed
code-creation,Builtin,2,1248551,0x7ff7de2eb784,12,ConsoleGroupEnd
code-creation,Builtin,2,1248589,0x7ff7de2eb7a4,12,ConsoleClear
code-creation,Builtin,2,1248606,0x7ff7de2eb7c4,12,ConsoleCount
code-creation,Builtin,2,1248622,0x7ff7de2eb7e4,12,ConsoleCountReset
code-creation,Builtin,2,1248639,0x7ff7de2eb804,12,ConsoleAssert
code-creation,Builtin,2,1248656,0x7ff7de2eb824,12,ConsoleProfile
code-creation,Builtin,2,1248672,0x7ff7de2eb844,12,ConsoleProfileEnd
code-creation,Builtin,2,1248723,0x7ff7de2eb864,12,ConsoleTime
code-creation,Builtin,2,1248867,0x7ff7de2eb884,12,ConsoleTimeLog
code-creation,Builtin,2,1248885,0x7ff7de2eb8a4,12,ConsoleTimeEnd
code-creation,Builtin,2,1248945,0x7ff7de2eb8c4,12,ConsoleTimeStamp
code-creation,Builtin,2,1248963,0x7ff7de2eb8e4,12,ConsoleContext
code-creation,Builtin,2,1248983,0x7ff7de2eb904,12,DataViewConstructor
code-creation,Builtin,2,1249016,0x7ff7de2eb924,12,DateConstructor
code-creation,Builtin,2,1249042,0x7ff7de2eb944,216,DatePrototypeGetDate
code-creation,Builtin,2,1249057,0x7ff7de2eba24,216,DatePrototypeGetDay
code-creation,Builtin,2,1249075,0x7ff7de2ebb04,216,DatePrototypeGetFullYear
code-creation,Builtin,2,1249090,0x7ff7de2ebbe4,216,DatePrototypeGetHours
code-creation,Builtin,2,1249107,0x7ff7de2ebcc4,196,DatePrototypeGetMilliseconds
code-creation,Builtin,2,1249135,0x7ff7de2ebda4,216,DatePrototypeGetMinutes
code-creation,Builtin,2,1249163,0x7ff7de2ebe84,216,DatePrototypeGetMonth
code-creation,Builtin,2,1249188,0x7ff7de2ebf64,216,DatePrototypeGetSeconds
code-creation,Builtin,2,1249202,0x7ff7de2ec044,124,DatePrototypeGetTime
code-creation,Builtin,2,1249215,0x7ff7de2ec0c4,196,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,1249229,0x7ff7de2ec1a4,196,DatePrototypeGetUTCDate
code-creation,Builtin,2,1249242,0x7ff7de2ec284,196,DatePrototypeGetUTCDay
code-creation,Builtin,2,1249255,0x7ff7de2ec364,196,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,1249269,0x7ff7de2ec444,196,DatePrototypeGetUTCHours
code-creation,Builtin,2,1249282,0x7ff7de2ec524,196,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,1249364,0x7ff7de2ec604,196,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,1249385,0x7ff7de2ec6e4,196,DatePrototypeGetUTCMonth
code-creation,Builtin,2,1249399,0x7ff7de2ec7c4,196,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,1249413,0x7ff7de2ec8a4,124,DatePrototypeValueOf
code-creation,Builtin,2,1249426,0x7ff7de2ec924,352,DatePrototypeToPrimitive
code-creation,Builtin,2,1249440,0x7ff7de2ecaa4,12,DatePrototypeGetYear
code-creation,Builtin,2,1249453,0x7ff7de2ecac4,12,DatePrototypeSetYear
code-creation,Builtin,2,1249466,0x7ff7de2ecae4,12,DateNow
code-creation,Builtin,2,1249478,0x7ff7de2ecb04,12,DateParse
code-creation,Builtin,2,1249491,0x7ff7de2ecb24,12,DatePrototypeSetDate
code-creation,Builtin,2,1249507,0x7ff7de2ecb44,12,DatePrototypeSetFullYear
code-creation,Builtin,2,1249525,0x7ff7de2ecb64,12,DatePrototypeSetHours
code-creation,Builtin,2,1249542,0x7ff7de2ecb84,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,1249563,0x7ff7de2ecba4,12,DatePrototypeSetMinutes
code-creation,Builtin,2,1249581,0x7ff7de2ecbc4,12,DatePrototypeSetMonth
code-creation,Builtin,2,1249598,0x7ff7de2ecbe4,12,DatePrototypeSetSeconds
code-creation,Builtin,2,1249615,0x7ff7de2ecc04,12,DatePrototypeSetTime
code-creation,Builtin,2,1249632,0x7ff7de2ecc24,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,1249650,0x7ff7de2ecc44,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,1249668,0x7ff7de2ecc64,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,1249688,0x7ff7de2ecc84,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,1249705,0x7ff7de2ecca4,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,1249730,0x7ff7de2eccc4,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,1249750,0x7ff7de2ecce4,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,1249766,0x7ff7de2ecd04,12,DatePrototypeToDateString
code-creation,Builtin,2,1249780,0x7ff7de2ecd24,12,DatePrototypeToISOString
code-creation,Builtin,2,1249793,0x7ff7de2ecd44,12,DatePrototypeToUTCString
code-creation,Builtin,2,1249815,0x7ff7de2ecd64,12,DatePrototypeToString
code-creation,Builtin,2,1249836,0x7ff7de2ecd84,12,DatePrototypeToTimeString
code-creation,Builtin,2,1249854,0x7ff7de2ecda4,12,DatePrototypeToJson
code-creation,Builtin,2,1249873,0x7ff7de2ecdc4,12,DateUTC
code-creation,Builtin,2,1249891,0x7ff7de2ecde4,12,ErrorConstructor
code-creation,Builtin,2,1249921,0x7ff7de2ece04,12,ErrorCaptureStackTrace
code-creation,Builtin,2,1249945,0x7ff7de2ece24,12,ErrorPrototypeToString
code-creation,Builtin,2,1249968,0x7ff7de2ece44,12,FunctionConstructor
code-creation,Builtin,2,1249999,0x7ff7de2ece64,68,FunctionPrototypeApply
code-creation,Builtin,2,1250033,0x7ff7de2ecec4,12,FunctionPrototypeBind
code-creation,Builtin,2,1250063,0x7ff7de2ecee4,32,FunctionPrototypeCall
code-creation,Builtin,2,1250093,0x7ff7de2ecf24,12,FunctionPrototypeToString
code-creation,Builtin,2,1250120,0x7ff7de2ecf44,192,CreateIterResultObject
code-creation,Builtin,2,1250159,0x7ff7de2ed024,788,CreateGeneratorObject
code-creation,Builtin,2,1250193,0x7ff7de2ed344,12,GeneratorFunctionConstructor
code-creation,Builtin,2,1250267,0x7ff7de2ed364,412,GeneratorPrototypeNext
code-creation,Builtin,2,1250300,0x7ff7de2ed504,420,GeneratorPrototypeReturn
code-creation,Builtin,2,1250327,0x7ff7de2ed6c4,424,GeneratorPrototypeThrow
code-creation,Builtin,2,1250356,0x7ff7de2ed884,12,AsyncFunctionConstructor
code-creation,Builtin,2,1250371,0x7ff7de2ed8a4,372,SuspendGeneratorBaseline
code-creation,Builtin,2,1250385,0x7ff7de2eda24,88,ResumeGeneratorBaseline
code-creation,Builtin,2,1250398,0x7ff7de2eda84,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,1250413,0x7ff7de2edac4,12,GlobalDecodeURI
code-creation,Builtin,2,1250426,0x7ff7de2edae4,12,GlobalDecodeURIComponent
code-creation,Builtin,2,1250439,0x7ff7de2edb04,12,GlobalEncodeURI
code-creation,Builtin,2,1250452,0x7ff7de2edb24,12,GlobalEncodeURIComponent
code-creation,Builtin,2,1250466,0x7ff7de2edb44,12,GlobalEscape
code-creation,Builtin,2,1250490,0x7ff7de2edb64,12,GlobalUnescape
code-creation,Builtin,2,1250515,0x7ff7de2edb84,12,GlobalEval
code-creation,Builtin,2,1250541,0x7ff7de2edba4,132,GlobalIsFinite
code-creation,Builtin,2,1250567,0x7ff7de2edc44,124,GlobalIsNaN
code-creation,Builtin,2,1250589,0x7ff7de2edcc4,12,JsonParse
code-creation,Builtin,2,1250605,0x7ff7de2edce4,12,JsonStringify
code-creation,Builtin,2,1250622,0x7ff7de2edd04,4608,LoadIC
code-creation,Builtin,2,1250649,0x7ff7de2eef24,4296,LoadIC_Megamorphic
code-creation,Builtin,2,1250673,0x7ff7de2f0004,4520,LoadIC_Noninlined
code-creation,Builtin,2,1250695,0x7ff7de2f11c4,44,LoadICTrampoline
code-creation,Builtin,2,1250722,0x7ff7de2f1204,24,LoadICBaseline
code-creation,Builtin,2,1250746,0x7ff7de2f1224,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,1250765,0x7ff7de2f1264,7376,LoadSuperIC
code-creation,Builtin,2,1250792,0x7ff7de2f2f44,24,LoadSuperICBaseline
code-creation,Builtin,2,1250813,0x7ff7de2f2f64,8148,KeyedLoadIC
code-creation,Builtin,2,1250827,0x7ff7de2f4f44,13088,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,1250841,0x7ff7de2f8284,44,KeyedLoadICTrampoline
code-creation,Builtin,2,1250854,0x7ff7de2f82c4,24,KeyedLoadICBaseline
code-creation,Builtin,2,1250868,0x7ff7de2f82e4,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,1250882,0x7ff7de2f8324,5104,StoreGlobalIC
code-creation,Builtin,2,1250894,0x7ff7de2f9724,44,StoreGlobalICTrampoline
code-creation,Builtin,2,1250907,0x7ff7de2f9764,24,StoreGlobalICBaseline
code-creation,Builtin,2,1250920,0x7ff7de2f9784,5340,StoreIC
code-creation,Builtin,2,1250933,0x7ff7de2fac64,44,StoreICTrampoline
code-creation,Builtin,2,1250945,0x7ff7de2faca4,24,StoreICBaseline
code-creation,Builtin,2,1250958,0x7ff7de2facc4,5780,KeyedStoreIC
code-creation,Builtin,2,1250971,0x7ff7de2fc364,44,KeyedStoreICTrampoline
code-creation,Builtin,2,1250984,0x7ff7de2fc3a4,24,KeyedStoreICBaseline
code-creation,Builtin,2,1250998,0x7ff7de2fc3c4,404,StoreInArrayLiteralIC
code-creation,Builtin,2,1251012,0x7ff7de2fc564,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,1251025,0x7ff7de2fc584,140,LookupContextBaseline
code-creation,Builtin,2,1251039,0x7ff7de2fc624,140,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,1251053,0x7ff7de2fc6c4,3244,LoadGlobalIC
code-creation,Builtin,2,1251066,0x7ff7de2fd384,3220,LoadGlobalICInsideTypeof
code-creation,Builtin,2,1251080,0x7ff7de2fe024,44,LoadGlobalICTrampoline
code-creation,Builtin,2,1251093,0x7ff7de2fe064,24,LoadGlobalICBaseline
code-creation,Builtin,2,1251107,0x7ff7de2fe084,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,1251121,0x7ff7de2fe0c4,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,1251135,0x7ff7de2fe0e4,140,LookupGlobalICBaseline
code-creation,Builtin,2,1251149,0x7ff7de2fe184,140,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,1251163,0x7ff7de2fe224,2064,CloneObjectIC
code-creation,Builtin,2,1251177,0x7ff7de2fea44,24,CloneObjectICBaseline
code-creation,Builtin,2,1251190,0x7ff7de2fea64,1988,CloneObjectIC_Slow
code-creation,Builtin,2,1251288,0x7ff7de2ff244,2756,KeyedHasIC
code-creation,Builtin,2,1251329,0x7ff7de2ffd24,24,KeyedHasICBaseline
code-creation,Builtin,2,1251361,0x7ff7de2ffd44,2640,KeyedHasIC_Megamorphic
code-creation,Builtin,2,1251389,0x7ff7de3007a4,1436,IterableToList
code-creation,Builtin,2,1251411,0x7ff7de300d44,1240,IterableToFixedArray
code-creation,Builtin,2,1251428,0x7ff7de301224,748,IterableToListWithSymbolLookup
code-creation,Builtin,2,1251446,0x7ff7de301524,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,1251467,0x7ff7de301564,124,IterableToListMayPreserveHoles
code-creation,Builtin,2,1251485,0x7ff7de3015e4,984,IterableToFixedArrayForWasm
code-creation,Builtin,2,1251502,0x7ff7de3019c4,1616,StringListFromIterable
code-creation,Builtin,2,1251518,0x7ff7de302024,1228,FindOrderedHashMapEntry
code-creation,Builtin,2,1251540,0x7ff7de302504,4156,MapConstructor
code-creation,Builtin,2,1251564,0x7ff7de303544,1996,MapPrototypeSet
code-creation,Builtin,2,1251582,0x7ff7de303d24,1524,MapPrototypeDelete
code-creation,Builtin,2,1251615,0x7ff7de304324,204,MapPrototypeGet
code-creation,Builtin,2,1251641,0x7ff7de304404,164,MapPrototypeHas
code-creation,Builtin,2,1251674,0x7ff7de3044c4,12,MapPrototypeClear
code-creation,Builtin,2,1251708,0x7ff7de3044e4,284,MapPrototypeEntries
code-creation,Builtin,2,1251724,0x7ff7de304604,144,MapPrototypeGetSize
code-creation,Builtin,2,1251739,0x7ff7de3046a4,492,MapPrototypeForEach
code-creation,Builtin,2,1251755,0x7ff7de3048a4,284,MapPrototypeKeys
code-creation,Builtin,2,1251771,0x7ff7de3049c4,284,MapPrototypeValues
code-creation,Builtin,2,1251787,0x7ff7de304ae4,1052,MapIteratorPrototypeNext
code-creation,Builtin,2,1251804,0x7ff7de304f04,1168,MapIteratorToList
code-creation,Builtin,2,1251821,0x7ff7de3053a4,12,NumberPrototypeToExponential
code-creation,Builtin,2,1251839,0x7ff7de3053c4,12,NumberPrototypeToFixed
code-creation,Builtin,2,1251857,0x7ff7de3053e4,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,1251876,0x7ff7de305404,12,NumberPrototypeToPrecision
code-creation,Builtin,2,1251894,0x7ff7de305424,328,SameValue
code-creation,Builtin,2,1251911,0x7ff7de305584,204,SameValueNumbersOnly
code-creation,Builtin,2,1251927,0x7ff7de305664,792,Add_Baseline
code-creation,Builtin,2,1251943,0x7ff7de305984,828,Subtract_Baseline
code-creation,Builtin,2,1251959,0x7ff7de305cc4,808,Multiply_Baseline
code-creation,Builtin,2,1251976,0x7ff7de306004,832,Divide_Baseline
code-creation,Builtin,2,1251997,0x7ff7de306364,764,Modulus_Baseline
code-creation,Builtin,2,1252013,0x7ff7de306664,808,Exponentiate_Baseline
code-creation,Builtin,2,1252030,0x7ff7de3069a4,708,BitwiseAnd_Baseline
code-creation,Builtin,2,1252048,0x7ff7de306c84,700,BitwiseOr_Baseline
code-creation,Builtin,2,1252071,0x7ff7de306f44,708,BitwiseXor_Baseline
code-creation,Builtin,2,1252087,0x7ff7de307224,720,ShiftLeft_Baseline
code-creation,Builtin,2,1252108,0x7ff7de307504,720,ShiftRight_Baseline
code-creation,Builtin,2,1252126,0x7ff7de3077e4,836,ShiftRightLogical_Baseline
code-creation,Builtin,2,1252148,0x7ff7de307b44,720,Add_WithFeedback
code-creation,Builtin,2,1252164,0x7ff7de307e24,780,Subtract_WithFeedback
code-creation,Builtin,2,1252183,0x7ff7de308144,776,Multiply_WithFeedback
code-creation,Builtin,2,1252208,0x7ff7de308464,804,Divide_WithFeedback
code-creation,Builtin,2,1252230,0x7ff7de3087a4,724,Modulus_WithFeedback
code-creation,Builtin,2,1252245,0x7ff7de308a84,764,Exponentiate_WithFeedback
code-creation,Builtin,2,1252262,0x7ff7de308d84,684,BitwiseAnd_WithFeedback
code-creation,Builtin,2,1252277,0x7ff7de309044,676,BitwiseOr_WithFeedback
code-creation,Builtin,2,1252293,0x7ff7de309304,684,BitwiseXor_WithFeedback
code-creation,Builtin,2,1252315,0x7ff7de3095c4,692,ShiftLeft_WithFeedback
code-creation,Builtin,2,1252331,0x7ff7de309884,692,ShiftRight_WithFeedback
code-creation,Builtin,2,1252348,0x7ff7de309b44,808,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,1252365,0x7ff7de309e84,1696,Equal_Baseline
code-creation,Builtin,2,1252382,0x7ff7de30a544,908,StrictEqual_Baseline
code-creation,Builtin,2,1252398,0x7ff7de30a8e4,1264,LessThan_Baseline
code-creation,Builtin,2,1252496,0x7ff7de30ade4,1264,GreaterThan_Baseline
code-creation,Builtin,2,1252521,0x7ff7de30b2e4,1264,LessThanOrEqual_Baseline
code-creation,Builtin,2,1252539,0x7ff7de30b7e4,1264,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,1252556,0x7ff7de30bce4,1620,Equal_WithFeedback
code-creation,Builtin,2,1252574,0x7ff7de30c344,940,StrictEqual_WithFeedback
code-creation,Builtin,2,1252592,0x7ff7de30c704,1240,LessThan_WithFeedback
code-creation,Builtin,2,1252608,0x7ff7de30cbe4,1240,GreaterThan_WithFeedback
code-creation,Builtin,2,1252628,0x7ff7de30d0c4,1240,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,1252646,0x7ff7de30d5a4,1240,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,1252668,0x7ff7de30da84,332,BitwiseNot_Baseline
code-creation,Builtin,2,1252689,0x7ff7de30dbe4,460,Decrement_Baseline
code-creation,Builtin,2,1252706,0x7ff7de30ddc4,464,Increment_Baseline
code-creation,Builtin,2,1252722,0x7ff7de30dfa4,488,Negate_Baseline
code-creation,Builtin,2,1252741,0x7ff7de30e1a4,316,BitwiseNot_WithFeedback
code-creation,Builtin,2,1252759,0x7ff7de30e2e4,440,Decrement_WithFeedback
code-creation,Builtin,2,1252775,0x7ff7de30e4a4,444,Increment_WithFeedback
code-creation,Builtin,2,1252793,0x7ff7de30e664,472,Negate_WithFeedback
code-creation,Builtin,2,1252807,0x7ff7de30e844,252,ObjectAssign
code-creation,Builtin,2,1252820,0x7ff7de30e944,864,ObjectCreate
code-creation,Builtin,2,1252833,0x7ff7de30ecc4,12,ObjectDefineGetter
code-creation,Builtin,2,1252845,0x7ff7de30ece4,12,ObjectDefineProperties
code-creation,Builtin,2,1252858,0x7ff7de30ed04,12,ObjectDefineProperty
code-creation,Builtin,2,1252871,0x7ff7de30ed24,12,ObjectDefineSetter
code-creation,Builtin,2,1252884,0x7ff7de30ed44,1516,ObjectEntries
code-creation,Builtin,2,1252897,0x7ff7de30f344,12,ObjectFreeze
code-creation,Builtin,2,1252909,0x7ff7de30f364,5620,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,1252922,0x7ff7de310964,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,1252936,0x7ff7de310984,600,ObjectGetOwnPropertyNames
code-creation,Builtin,2,1252949,0x7ff7de310be4,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,1252962,0x7ff7de310c04,164,ObjectHasOwn
code-creation,Builtin,2,1252974,0x7ff7de310cc4,388,ObjectIs
code-creation,Builtin,2,1252986,0x7ff7de310e64,12,ObjectIsFrozen
code-creation,Builtin,2,1252999,0x7ff7de310e84,12,ObjectIsSealed
code-creation,Builtin,2,1253011,0x7ff7de310ea4,536,ObjectKeys
code-creation,Builtin,2,1253024,0x7ff7de3110c4,12,ObjectLookupGetter
code-creation,Builtin,2,1253036,0x7ff7de3110e4,12,ObjectLookupSetter
code-creation,Builtin,2,1253049,0x7ff7de311104,2280,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,1253062,0x7ff7de311a04,216,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,1253076,0x7ff7de311ae4,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,1253089,0x7ff7de311b04,12,ObjectPrototypeGetProto
code-creation,Builtin,2,1253102,0x7ff7de311b24,12,ObjectPrototypeSetProto
code-creation,Builtin,2,1253115,0x7ff7de311b44,12,ObjectSeal
code-creation,Builtin,2,1253127,0x7ff7de311b64,1108,ObjectToString
code-creation,Builtin,2,1253140,0x7ff7de311fc4,1284,ObjectValues
code-creation,Builtin,2,1253153,0x7ff7de3124e4,280,OrdinaryHasInstance
code-creation,Builtin,2,1253166,0x7ff7de312604,344,InstanceOf
code-creation,Builtin,2,1253179,0x7ff7de312764,632,InstanceOf_WithFeedback
code-creation,Builtin,2,1253192,0x7ff7de3129e4,648,InstanceOf_Baseline
code-creation,Builtin,2,1253205,0x7ff7de312c84,268,ForInEnumerate
code-creation,Builtin,2,1253218,0x7ff7de312da4,148,ForInPrepare
code-creation,Builtin,2,1253230,0x7ff7de312e44,2584,ForInFilter
code-creation,Builtin,2,1253243,0x7ff7de313864,52,ReflectApply
code-creation,Builtin,2,1253256,0x7ff7de3138a4,60,ReflectConstruct
code-creation,Builtin,2,1253269,0x7ff7de3138e4,12,ReflectDefineProperty
code-creation,Builtin,2,1253282,0x7ff7de313904,12,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,1253295,0x7ff7de313924,12,ReflectOwnKeys
code-creation,Builtin,2,1253308,0x7ff7de313944,12,ReflectSet
code-creation,Builtin,2,1253377,0x7ff7de313964,12,RegExpCapture1Getter
code-creation,Builtin,2,1253396,0x7ff7de313984,12,RegExpCapture2Getter
code-creation,Builtin,2,1253409,0x7ff7de3139a4,12,RegExpCapture3Getter
code-creation,Builtin,2,1253423,0x7ff7de3139c4,12,RegExpCapture4Getter
code-creation,Builtin,2,1253435,0x7ff7de3139e4,12,RegExpCapture5Getter
code-creation,Builtin,2,1253448,0x7ff7de313a04,12,RegExpCapture6Getter
code-creation,Builtin,2,1253461,0x7ff7de313a24,12,RegExpCapture7Getter
code-creation,Builtin,2,1253474,0x7ff7de313a44,12,RegExpCapture8Getter
code-creation,Builtin,2,1253486,0x7ff7de313a64,12,RegExpCapture9Getter
code-creation,Builtin,2,1253499,0x7ff7de313a84,2212,RegExpConstructor
code-creation,Builtin,2,1253512,0x7ff7de314344,12,RegExpInputGetter
code-creation,Builtin,2,1253525,0x7ff7de314364,12,RegExpInputSetter
code-creation,Builtin,2,1253538,0x7ff7de314384,12,RegExpLastMatchGetter
code-creation,Builtin,2,1253551,0x7ff7de3143a4,12,RegExpLastParenGetter
code-creation,Builtin,2,1253564,0x7ff7de3143c4,12,RegExpLeftContextGetter
code-creation,Builtin,2,1253577,0x7ff7de3143e4,908,RegExpPrototypeCompile
code-creation,Builtin,2,1253590,0x7ff7de314784,12,RegExpPrototypeToString
code-creation,Builtin,2,1253603,0x7ff7de3147a4,12,RegExpRightContextGetter
code-creation,Builtin,2,1253616,0x7ff7de3147c4,252,RegExpExecAtom
code-creation,Builtin,2,1253628,0x7ff7de3148c4,1040,RegExpExecInternal
code-creation,Builtin,2,1253641,0x7ff7de314ce4,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,1253654,0x7ff7de314d04,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,1253667,0x7ff7de314d24,2684,SetConstructor
code-creation,Builtin,2,1253685,0x7ff7de3157a4,1284,SetPrototypeHas
code-creation,Builtin,2,1253698,0x7ff7de315cc4,1736,SetPrototypeAdd
code-creation,Builtin,2,1253711,0x7ff7de3163a4,1476,SetPrototypeDelete
code-creation,Builtin,2,1253724,0x7ff7de316984,12,SetPrototypeClear
code-creation,Builtin,2,1253736,0x7ff7de3169a4,284,SetPrototypeEntries
code-creation,Builtin,2,1253750,0x7ff7de316ac4,144,SetPrototypeGetSize
code-creation,Builtin,2,1253769,0x7ff7de316b64,444,SetPrototypeForEach
code-creation,Builtin,2,1253785,0x7ff7de316d24,284,SetPrototypeValues
code-creation,Builtin,2,1253801,0x7ff7de316e44,988,SetIteratorPrototypeNext
code-creation,Builtin,2,1253815,0x7ff7de317224,1112,SetOrSetIteratorToList
code-creation,Builtin,2,1253828,0x7ff7de317684,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,1253843,0x7ff7de3176a4,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,1253856,0x7ff7de3176c4,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,1253871,0x7ff7de3176e4,1280,AtomicsLoad
code-creation,Builtin,2,1253883,0x7ff7de317c04,1008,AtomicsStore
code-creation,Builtin,2,1253895,0x7ff7de318004,1704,AtomicsExchange
code-creation,Builtin,2,1253911,0x7ff7de3186c4,2092,AtomicsCompareExchange
code-creation,Builtin,2,1253925,0x7ff7de318f04,1804,AtomicsAdd
code-creation,Builtin,2,1253944,0x7ff7de319624,1804,AtomicsSub
code-creation,Builtin,2,1253958,0x7ff7de319d44,1804,AtomicsAnd
code-creation,Builtin,2,1253971,0x7ff7de31a464,1804,AtomicsOr
code-creation,Builtin,2,1253984,0x7ff7de31ab84,1804,AtomicsXor
code-creation,Builtin,2,1253997,0x7ff7de31b2a4,12,AtomicsNotify
code-creation,Builtin,2,1254010,0x7ff7de31b2c4,12,AtomicsIsLockFree
code-creation,Builtin,2,1254023,0x7ff7de31b2e4,12,AtomicsWait
code-creation,Builtin,2,1254035,0x7ff7de31b304,12,AtomicsWaitAsync
code-creation,Builtin,2,1254048,0x7ff7de31b324,12,StringFromCodePoint
code-creation,Builtin,2,1254062,0x7ff7de31b344,1428,StringFromCharCode
code-creation,Builtin,2,1254075,0x7ff7de31b8e4,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,1254088,0x7ff7de31b904,4360,StringPrototypeMatchAll
code-creation,Builtin,2,1254101,0x7ff7de31ca24,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,1254115,0x7ff7de31ca44,1228,StringPrototypeReplace
code-creation,Builtin,2,1254129,0x7ff7de31cf24,2900,StringPrototypeSplit
code-creation,Builtin,2,1254142,0x7ff7de31da84,12,StringRaw
code-creation,Builtin,2,1254155,0x7ff7de31daa4,12,SymbolConstructor
code-creation,Builtin,2,1254222,0x7ff7de31dac4,12,SymbolFor
code-creation,Builtin,2,1254241,0x7ff7de31dae4,12,SymbolKeyFor
code-creation,Builtin,2,1254253,0x7ff7de31db04,88,TypedArrayBaseConstructor
code-creation,Builtin,2,1254266,0x7ff7de31db64,256,TypedArrayConstructor
code-creation,Builtin,2,1254281,0x7ff7de31dc84,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,1254307,0x7ff7de31dca4,888,TypedArrayPrototypeByteLength
code-creation,Builtin,2,1254339,0x7ff7de31e024,368,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,1254364,0x7ff7de31e1a4,584,TypedArrayPrototypeLength
code-creation,Builtin,2,1254389,0x7ff7de31e404,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,1254418,0x7ff7de31e424,12,TypedArrayPrototypeFill
code-creation,Builtin,2,1254444,0x7ff7de31e444,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,1254473,0x7ff7de31e464,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,1254490,0x7ff7de31e484,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,1254504,0x7ff7de31e4a4,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,1254518,0x7ff7de31e4c4,316,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,1254532,0x7ff7de31e604,10664,TypedArrayPrototypeMap
code-creation,Builtin,2,1254546,0x7ff7de320fc4,792,GenericJSToWasmWrapper
code-creation,Builtin,2,1254559,0x7ff7de3212e4,148,WasmCompileLazy
code-creation,Builtin,2,1254571,0x7ff7de321384,168,WasmDebugBreak
code-creation,Builtin,2,1254584,0x7ff7de321444,16,WasmOnStackReplace
code-creation,Builtin,2,1254597,0x7ff7de321464,140,WasmFloat32ToNumber
code-creation,Builtin,2,1254610,0x7ff7de321504,152,WasmFloat64ToNumber
code-creation,Builtin,2,1254622,0x7ff7de3215a4,4,WasmI32AtomicWait32
code-creation,Builtin,2,1254635,0x7ff7de3215c4,4,WasmI64AtomicWait32
code-creation,Builtin,2,1254648,0x7ff7de3215e4,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,1254661,0x7ff7de321604,4320,WeakMapConstructor
code-creation,Builtin,2,1254677,0x7ff7de322704,196,WeakMapLookupHashIndex
code-creation,Builtin,2,1254697,0x7ff7de3227e4,220,WeakMapGet
code-creation,Builtin,2,1254709,0x7ff7de3228c4,176,WeakMapPrototypeHas
code-creation,Builtin,2,1254722,0x7ff7de322984,204,WeakMapPrototypeSet
code-creation,Builtin,2,1254735,0x7ff7de322a64,144,WeakMapPrototypeDelete
code-creation,Builtin,2,1254748,0x7ff7de322b04,2876,WeakSetConstructor
code-creation,Builtin,2,1254760,0x7ff7de323644,176,WeakSetPrototypeHas
code-creation,Builtin,2,1254773,0x7ff7de323704,204,WeakSetPrototypeAdd
code-creation,Builtin,2,1254786,0x7ff7de3237e4,144,WeakSetPrototypeDelete
code-creation,Builtin,2,1254803,0x7ff7de323884,372,WeakCollectionDelete
code-creation,Builtin,2,1254820,0x7ff7de323a04,764,WeakCollectionSet
code-creation,Builtin,2,1254833,0x7ff7de323d04,296,AsyncGeneratorResolve
code-creation,Builtin,2,1254846,0x7ff7de323e44,100,AsyncGeneratorReject
code-creation,Builtin,2,1254859,0x7ff7de323ec4,2760,AsyncGeneratorYield
code-creation,Builtin,2,1254872,0x7ff7de3249a4,2872,AsyncGeneratorReturn
code-creation,Builtin,2,1254884,0x7ff7de3254e4,292,AsyncGeneratorResumeNext
code-creation,Builtin,2,1254897,0x7ff7de325624,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,1254913,0x7ff7de325644,1020,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,1254934,0x7ff7de325a44,1028,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,1254952,0x7ff7de325e64,1028,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,1254966,0x7ff7de326284,2736,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,1254980,0x7ff7de326d44,2736,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,1254997,0x7ff7de327804,116,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,1255016,0x7ff7de327884,128,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,1255036,0x7ff7de327924,116,AsyncGeneratorYieldResolveClosure
code-creation,Builtin,2,1255055,0x7ff7de3279a4,116,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,1255073,0x7ff7de327a24,112,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,1255091,0x7ff7de327aa4,128,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,1255109,0x7ff7de327b44,1592,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,1255193,0x7ff7de328184,1696,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,1255212,0x7ff7de328844,1716,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,1255226,0x7ff7de328f04,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,1255239,0x7ff7de328f84,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,1255256,0x7ff7de329084,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,1255278,0x7ff7de329184,208,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,1255301,0x7ff7de329264,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,1255321,0x7ff7de329404,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,1255339,0x7ff7de3295a4,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,1255359,0x7ff7de3296a4,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,1255377,0x7ff7de3297a4,224,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,1255396,0x7ff7de3298a4,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,1255411,0x7ff7de329a44,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,1255425,0x7ff7de329be4,4,DirectCEntry
code-creation,Builtin,2,1255438,0x7ff7de329c04,1096,StringAdd_CheckNone
code-creation,Builtin,2,1255451,0x7ff7de32a064,2484,SubString
code-creation,Builtin,2,1255464,0x7ff7de32aa24,16,StackCheck
code-creation,Builtin,2,1255477,0x7ff7de32aa44,84,DoubleToI
code-creation,Builtin,2,1255489,0x7ff7de32aaa4,2236,GetProperty
code-creation,Builtin,2,1255502,0x7ff7de32b364,2308,GetPropertyWithReceiver
code-creation,Builtin,2,1255515,0x7ff7de32bc84,16004,SetProperty
code-creation,Builtin,2,1255527,0x7ff7de32fb24,13480,SetPropertyInLiteral
code-creation,Builtin,2,1255540,0x7ff7de332fe4,8,MemCopyUint8Uint8
code-creation,Builtin,2,1255553,0x7ff7de333004,8,MemMove
code-creation,Builtin,2,1255565,0x7ff7de333024,12,IsTraceCategoryEnabled
code-creation,Builtin,2,1255578,0x7ff7de333044,12,Trace
code-creation,Builtin,2,1255593,0x7ff7de333064,12,FinalizationRegistryUnregister
code-creation,Builtin,2,1255612,0x7ff7de333084,416,AsyncModuleEvaluate
code-creation,Builtin,2,1255629,0x7ff7de333244,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,1255646,0x7ff7de333264,12,CallAsyncModuleRejected
code-creation,Builtin,2,1255663,0x7ff7de333284,260,AggregateErrorConstructor
code-creation,Builtin,2,1255684,0x7ff7de3333a4,856,ArrayPrototypeAt
code-creation,Builtin,2,1255705,0x7ff7de333704,656,ArrayPrototypeConcat
code-creation,Builtin,2,1255721,0x7ff7de3339a4,5824,ArrayPrototypeCopyWithin
code-creation,Builtin,2,1255744,0x7ff7de335084,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,1255771,0x7ff7de335164,612,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,1255802,0x7ff7de3353e4,3316,ArrayEveryLoopContinuation
code-creation,Builtin,2,1255830,0x7ff7de3360e4,1464,ArrayEvery
code-creation,Builtin,2,1255843,0x7ff7de3366a4,284,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,1255857,0x7ff7de3367c4,988,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,1255871,0x7ff7de336ba4,3564,ArrayFilterLoopContinuation
code-creation,Builtin,2,1255884,0x7ff7de3379a4,4260,ArrayFilter
code-creation,Builtin,2,1255897,0x7ff7de338a64,204,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,1255910,0x7ff7de338b44,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,1255923,0x7ff7de338b84,312,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,1255938,0x7ff7de338cc4,528,ArrayFindLoopContinuation
code-creation,Builtin,2,1255951,0x7ff7de338ee4,1460,ArrayPrototypeFind
code-creation,Builtin,2,1255963,0x7ff7de3394a4,204,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,1255978,0x7ff7de339584,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,1255994,0x7ff7de3395c4,312,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,1256015,0x7ff7de339704,524,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,1256038,0x7ff7de339924,1460,ArrayPrototypeFindIndex
code-creation,Builtin,2,1256057,0x7ff7de339ee4,448,ArrayFindLastLoopContinuation
code-creation,Builtin,2,1256074,0x7ff7de33a0c4,1700,ArrayPrototypeFindLast
code-creation,Builtin,2,1256090,0x7ff7de33a784,448,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,1256108,0x7ff7de33a964,1700,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,1256132,0x7ff7de33b024,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,1256163,0x7ff7de33b104,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,1256184,0x7ff7de33b1e4,3156,ArrayForEachLoopContinuation
code-creation,Builtin,2,1256207,0x7ff7de33be44,1328,ArrayForEach
code-creation,Builtin,2,1256224,0x7ff7de33c384,3572,ArrayFrom
code-creation,Builtin,2,1256237,0x7ff7de33d184,148,ArrayIsArray
code-creation,Builtin,2,1256250,0x7ff7de33d224,404,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,1256264,0x7ff7de33d3c4,36,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,1256279,0x7ff7de33d404,140,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,1256293,0x7ff7de33d4a4,312,ConvertToLocaleString
code-creation,Builtin,2,1256306,0x7ff7de33d5e4,752,JoinStackPush
code-creation,Builtin,2,1256319,0x7ff7de33d8e4,272,JoinStackPop
code-creation,Builtin,2,1256332,0x7ff7de33da04,6628,ArrayPrototypeJoin
code-creation,Builtin,2,1256345,0x7ff7de33f404,5360,ArrayPrototypeToLocaleString
code-creation,Builtin,2,1256359,0x7ff7de340904,236,ArrayPrototypeToString
code-creation,Builtin,2,1256373,0x7ff7de340a04,5924,TypedArrayPrototypeJoin
code-creation,Builtin,2,1256386,0x7ff7de342144,4636,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,1256400,0x7ff7de343364,3824,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,1256414,0x7ff7de344264,260,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,1256428,0x7ff7de344384,252,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,1256442,0x7ff7de344484,532,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,1256456,0x7ff7de3446a4,3192,ArrayMapLoopContinuation
code-creation,Builtin,2,1256470,0x7ff7de345324,3912,ArrayMap
code-creation,Builtin,2,1256483,0x7ff7de346284,1000,ArrayOf
code-creation,Builtin,2,1256495,0x7ff7de346684,444,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,1256509,0x7ff7de346844,204,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,1256523,0x7ff7de346924,204,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,1256538,0x7ff7de346a04,3200,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,1256552,0x7ff7de3476a4,2000,ArrayReduceRight
code-creation,Builtin,2,1256564,0x7ff7de347e84,176,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,1256578,0x7ff7de347f44,204,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,1256592,0x7ff7de348024,204,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,1256607,0x7ff7de348104,3252,ArrayReduceLoopContinuation
code-creation,Builtin,2,1256623,0x7ff7de348dc4,1604,ArrayReduce
code-creation,Builtin,2,1256638,0x7ff7de349424,3216,ArrayPrototypeReverse
code-creation,Builtin,2,1256653,0x7ff7de34a0c4,3592,ArrayPrototypeShift
code-creation,Builtin,2,1256673,0x7ff7de34aee4,5220,ArrayPrototypeSlice
code-creation,Builtin,2,1256689,0x7ff7de34c364,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,1256703,0x7ff7de34c444,580,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,1256717,0x7ff7de34c6a4,3304,ArraySomeLoopContinuation
code-creation,Builtin,2,1256730,0x7ff7de34d3a4,1448,ArraySome
code-creation,Builtin,2,1256743,0x7ff7de34d964,14216,ArrayPrototypeSplice
code-creation,Builtin,2,1256757,0x7ff7de351104,3264,ArrayPrototypeUnshift
code-creation,Builtin,2,1256771,0x7ff7de351de4,332,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,1256784,0x7ff7de351f44,348,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,1256801,0x7ff7de3520a4,208,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,1256817,0x7ff7de352184,332,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,1256831,0x7ff7de3522e4,208,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,1256845,0x7ff7de3523c4,96,ArrayBufferIsView
code-creation,Builtin,2,1256858,0x7ff7de352444,396,ToInteger
code-creation,Builtin,2,1256870,0x7ff7de3525e4,3084,FastCreateDataProperty
code-creation,Builtin,2,1256884,0x7ff7de353204,676,CheckNumberInRange
code-creation,Builtin,2,1256897,0x7ff7de3534c4,584,CheckSameObject
code-creation,Builtin,2,1256910,0x7ff7de353724,904,BooleanConstructor
code-creation,Builtin,2,1256922,0x7ff7de353ac4,164,BooleanPrototypeToString
code-creation,Builtin,2,1256938,0x7ff7de353b84,156,BooleanPrototypeValueOf
code-creation,Builtin,2,1256953,0x7ff7de353c24,1184,BigIntAddNoThrow
code-creation,Builtin,2,1256965,0x7ff7de3540e4,1280,BigIntAdd
code-creation,Builtin,2,1256978,0x7ff7de354604,1184,BigIntSubtractNoThrow
code-creation,Builtin,2,1256991,0x7ff7de354ac4,1280,BigIntSubtract
code-creation,Builtin,2,1257004,0x7ff7de354fe4,284,BigIntUnaryMinus
code-creation,Builtin,2,1257017,0x7ff7de355104,1360,ToString
code-creation,Builtin,2,1257029,0x7ff7de355664,156,StringPrototypeToString
code-creation,Builtin,2,1257044,0x7ff7de355704,156,StringPrototypeValueOf
code-creation,Builtin,2,1257061,0x7ff7de3557a4,2480,StringToList
code-creation,Builtin,2,1257079,0x7ff7de356164,1012,StringPrototypeCharAt
code-creation,Builtin,2,1257098,0x7ff7de356564,700,StringPrototypeCharCodeAt
code-creation,Builtin,2,1257114,0x7ff7de356824,1288,StringPrototypeCodePointAt
code-creation,Builtin,2,1257129,0x7ff7de356d44,400,StringPrototypeConcat
code-creation,Builtin,2,1257142,0x7ff7de356ee4,992,StringConstructor
code-creation,Builtin,2,1257155,0x7ff7de3572e4,1436,StringAddConvertLeft
code-creation,Builtin,2,1257168,0x7ff7de357884,1464,StringAddConvertRight
code-creation,Builtin,2,1257181,0x7ff7de357e44,816,StringCharAt
code-creation,Builtin,2,1257193,0x7ff7de358184,16,FastNewClosureBaseline
code-creation,Builtin,2,1257206,0x7ff7de3581a4,196,FastNewFunctionContextEval
code-creation,Builtin,2,1257220,0x7ff7de358284,196,FastNewFunctionContextFunction
code-creation,Builtin,2,1257233,0x7ff7de358364,248,CreateRegExpLiteral
code-creation,Builtin,2,1257250,0x7ff7de358464,1060,CreateShallowArrayLiteral
code-creation,Builtin,2,1257264,0x7ff7de3588a4,504,CreateEmptyArrayLiteral
code-creation,Builtin,2,1257277,0x7ff7de358aa4,1736,CreateShallowObjectLiteral
code-creation,Builtin,2,1257293,0x7ff7de359184,384,ObjectConstructor
code-creation,Builtin,2,1257306,0x7ff7de359324,176,CreateEmptyLiteralObject
code-creation,Builtin,2,1257320,0x7ff7de3593e4,536,NumberConstructor
code-creation,Builtin,2,1257333,0x7ff7de359604,64,GenericLazyDeoptContinuation
code-creation,Builtin,2,1257346,0x7ff7de359664,64,StringToNumber
code-creation,Builtin,2,1257359,0x7ff7de3596c4,184,NonNumberToNumber
code-creation,Builtin,2,1257371,0x7ff7de359784,240,NonNumberToNumeric
code-creation,Builtin,2,1257384,0x7ff7de359884,36,ToNumeric
code-creation,Builtin,2,1257396,0x7ff7de3598c4,1184,NumberToString
code-creation,Builtin,2,1257410,0x7ff7de359d84,92,ToBoolean
code-creation,Builtin,2,1257423,0x7ff7de359de4,96,ToBooleanForBaselineJump
code-creation,Builtin,2,1257436,0x7ff7de359e64,728,ToLength
code-creation,Builtin,2,1257449,0x7ff7de35a144,1312,ToName
code-creation,Builtin,2,1257461,0x7ff7de35a684,756,ToObject
code-creation,Builtin,2,1257473,0x7ff7de35a984,208,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,1257487,0x7ff7de35aa64,208,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,1257500,0x7ff7de35ab44,208,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,1257514,0x7ff7de35ac24,288,OrdinaryToPrimitive_Number
code-creation,Builtin,2,1257527,0x7ff7de35ad64,288,OrdinaryToPrimitive_String
code-creation,Builtin,2,1257541,0x7ff7de35aea4,216,FastConsoleAssert
code-creation,Builtin,2,1257568,0x7ff7de35af84,160,DataViewPrototypeGetBuffer
code-creation,Builtin,2,1257588,0x7ff7de35b044,336,DataViewPrototypeGetByteLength
code-creation,Builtin,2,1257616,0x7ff7de35b1a4,336,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,1257635,0x7ff7de35b304,572,DataViewPrototypeGetUint8
code-creation,Builtin,2,1257650,0x7ff7de35b544,572,DataViewPrototypeGetInt8
code-creation,Builtin,2,1257666,0x7ff7de35b784,644,DataViewPrototypeGetUint16
code-creation,Builtin,2,1257680,0x7ff7de35ba24,644,DataViewPrototypeGetInt16
code-creation,Builtin,2,1257694,0x7ff7de35bcc4,808,DataViewPrototypeGetUint32
code-creation,Builtin,2,1257708,0x7ff7de35c004,684,DataViewPrototypeGetInt32
code-creation,Builtin,2,1257742,0x7ff7de35c2c4,848,DataViewPrototypeGetFloat32
code-creation,Builtin,2,1257776,0x7ff7de35c624,912,DataViewPrototypeGetFloat64
code-creation,Builtin,2,1257801,0x7ff7de35c9c4,984,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,1257821,0x7ff7de35cda4,1004,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,1257839,0x7ff7de35d1a4,928,DataViewPrototypeSetUint8
code-creation,Builtin,2,1257857,0x7ff7de35d564,928,DataViewPrototypeSetInt8
code-creation,Builtin,2,1257876,0x7ff7de35d924,1028,DataViewPrototypeSetUint16
code-creation,Builtin,2,1257902,0x7ff7de35dd44,1028,DataViewPrototypeSetInt16
code-creation,Builtin,2,1257924,0x7ff7de35e164,1064,DataViewPrototypeSetUint32
code-creation,Builtin,2,1257943,0x7ff7de35e5a4,1064,DataViewPrototypeSetInt32
code-creation,Builtin,2,1257960,0x7ff7de35e9e4,1032,DataViewPrototypeSetFloat32
code-creation,Builtin,2,1257978,0x7ff7de35ee04,1096,DataViewPrototypeSetFloat64
code-creation,Builtin,2,1257997,0x7ff7de35f264,944,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,1258015,0x7ff7de35f624,944,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,1258033,0x7ff7de35f9e4,828,FinalizationRegistryConstructor
code-creation,Builtin,2,1258051,0x7ff7de35fd24,1152,FinalizationRegistryRegister
code-creation,Builtin,2,1258069,0x7ff7de3601c4,648,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,1258092,0x7ff7de360464,328,FunctionPrototypeHasInstance
code-creation,Builtin,2,1258110,0x7ff7de3605c4,924,FastFunctionPrototypeBind
code-creation,Builtin,2,1258127,0x7ff7de360964,88,IncBlockCounter
code-creation,Builtin,2,1258144,0x7ff7de3609c4,228,GetTemplateObject
code-creation,Builtin,2,1258160,0x7ff7de360ac4,28,BytecodeBudgetInterruptFromCode
code-creation,Builtin,2,1258179,0x7ff7de360ae4,92,ForInNext
code-creation,Builtin,2,1258194,0x7ff7de360b44,128,GetImportMetaObjectBaseline
code-creation,Builtin,2,1258208,0x7ff7de360be4,116,GetIteratorWithFeedback
code-creation,Builtin,2,1258221,0x7ff7de360c64,100,GetIteratorBaseline
code-creation,Builtin,2,1258234,0x7ff7de360ce4,268,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,1258248,0x7ff7de360e04,1084,CallIteratorWithFeedback
code-creation,Builtin,2,1258262,0x7ff7de361244,288,MathAbs
code-creation,Builtin,2,1258275,0x7ff7de361384,428,MathCeil
code-creation,Builtin,2,1258287,0x7ff7de361544,432,MathFloor
code-creation,Builtin,2,1258299,0x7ff7de361704,488,MathRound
code-creation,Builtin,2,1258312,0x7ff7de361904,428,MathTrunc
code-creation,Builtin,2,1258324,0x7ff7de361ac4,368,MathPow
code-creation,Builtin,2,1258336,0x7ff7de361c44,396,MathMax
code-creation,Builtin,2,1258351,0x7ff7de361de4,404,MathMin
code-creation,Builtin,2,1258364,0x7ff7de361f84,320,MathAcos
code-creation,Builtin,2,1258376,0x7ff7de3620e4,320,MathAcosh
code-creation,Builtin,2,1258389,0x7ff7de362244,320,MathAsin
code-creation,Builtin,2,1258401,0x7ff7de3623a4,320,MathAsinh
code-creation,Builtin,2,1258414,0x7ff7de362504,320,MathAtan
code-creation,Builtin,2,1258427,0x7ff7de362664,416,MathAtan2
code-creation,Builtin,2,1258439,0x7ff7de362824,320,MathAtanh
code-creation,Builtin,2,1258452,0x7ff7de362984,320,MathCbrt
code-creation,Builtin,2,1258464,0x7ff7de362ae4,168,MathClz32
code-creation,Builtin,2,1258477,0x7ff7de362ba4,320,MathCos
code-creation,Builtin,2,1258490,0x7ff7de362d04,320,MathCosh
code-creation,Builtin,2,1258503,0x7ff7de362e64,320,MathExp
code-creation,Builtin,2,1258515,0x7ff7de362fc4,320,MathExpm1
code-creation,Builtin,2,1258528,0x7ff7de363124,272,MathFround
code-creation,Builtin,2,1258552,0x7ff7de363244,304,MathImul
code-creation,Builtin,2,1258583,0x7ff7de363384,320,MathLog
code-creation,Builtin,2,1258596,0x7ff7de3634e4,320,MathLog1p
code-creation,Builtin,2,1258614,0x7ff7de363644,320,MathLog10
code-creation,Builtin,2,1258632,0x7ff7de3637a4,320,MathLog2
code-creation,Builtin,2,1258648,0x7ff7de363904,320,MathSin
code-creation,Builtin,2,1258667,0x7ff7de363a64,180,MathSign
code-creation,Builtin,2,1258689,0x7ff7de363b24,320,MathSinh
code-creation,Builtin,2,1258710,0x7ff7de363c84,268,MathSqrt
code-creation,Builtin,2,1258724,0x7ff7de363da4,320,MathTan
code-creation,Builtin,2,1258737,0x7ff7de363f04,320,MathTanh
code-creation,Builtin,2,1258752,0x7ff7de364064,1060,MathHypot
code-creation,Builtin,2,1258769,0x7ff7de3644a4,332,MathRandom
code-creation,Builtin,2,1258785,0x7ff7de364604,2956,NumberPrototypeToString
code-creation,Builtin,2,1258802,0x7ff7de3651a4,136,NumberIsFinite
code-creation,Builtin,2,1258820,0x7ff7de365244,340,NumberIsInteger
code-creation,Builtin,2,1258837,0x7ff7de3653a4,116,NumberIsNaN
code-creation,Builtin,2,1258853,0x7ff7de365424,372,NumberIsSafeInteger
code-creation,Builtin,2,1258869,0x7ff7de3655a4,156,NumberPrototypeValueOf
code-creation,Builtin,2,1258887,0x7ff7de365644,196,NumberParseFloat
code-creation,Builtin,2,1258907,0x7ff7de365724,248,ParseInt
code-creation,Builtin,2,1258924,0x7ff7de365824,84,NumberParseInt
code-creation,Builtin,2,1258945,0x7ff7de365884,860,Add
code-creation,Builtin,2,1258969,0x7ff7de365be4,424,Subtract
code-creation,Builtin,2,1258998,0x7ff7de365da4,608,Multiply
code-creation,Builtin,2,1259018,0x7ff7de366024,532,Divide
code-creation,Builtin,2,1259035,0x7ff7de366244,592,Modulus
code-creation,Builtin,2,1259053,0x7ff7de3664a4,524,Exponentiate
code-creation,Builtin,2,1259079,0x7ff7de3666c4,344,Negate
code-creation,Builtin,2,1259105,0x7ff7de366824,112,BitwiseNot
code-creation,Builtin,2,1259125,0x7ff7de3668a4,112,Decrement
code-creation,Builtin,2,1259142,0x7ff7de366924,112,Increment
code-creation,Builtin,2,1259161,0x7ff7de3669a4,392,ShiftLeft
code-creation,Builtin,2,1259187,0x7ff7de366b44,392,ShiftRight
code-creation,Builtin,2,1259208,0x7ff7de366ce4,508,ShiftRightLogical
code-creation,Builtin,2,1259223,0x7ff7de366ee4,388,BitwiseAnd
code-creation,Builtin,2,1259242,0x7ff7de367084,388,BitwiseOr
code-creation,Builtin,2,1259259,0x7ff7de367224,388,BitwiseXor
code-creation,Builtin,2,1259277,0x7ff7de3673c4,796,LessThan
code-creation,Builtin,2,1259293,0x7ff7de3676e4,796,LessThanOrEqual
code-creation,Builtin,2,1259311,0x7ff7de367a04,796,GreaterThan
code-creation,Builtin,2,1259324,0x7ff7de367d24,796,GreaterThanOrEqual
code-creation,Builtin,2,1259340,0x7ff7de368044,860,Equal
code-creation,Builtin,2,1259357,0x7ff7de3683a4,348,StrictEqual
code-creation,Builtin,2,1259373,0x7ff7de368504,3132,ObjectFromEntries
code-creation,Builtin,2,1259392,0x7ff7de369144,756,CreateObjectWithoutProperties
code-creation,Builtin,2,1259410,0x7ff7de369444,144,ObjectIsExtensible
code-creation,Builtin,2,1259428,0x7ff7de3694e4,148,ObjectPreventExtensions
code-creation,Builtin,2,1259447,0x7ff7de369584,144,ObjectGetPrototypeOf
code-creation,Builtin,2,1259466,0x7ff7de369624,300,ObjectSetPrototypeOf
code-creation,Builtin,2,1259482,0x7ff7de369764,80,ObjectPrototypeToString
code-creation,Builtin,2,1259500,0x7ff7de3697c4,96,ObjectPrototypeValueOf
code-creation,Builtin,2,1259519,0x7ff7de369844,164,ObjectPrototypeToLocaleString
code-creation,Builtin,2,1259534,0x7ff7de369904,868,FulfillPromise
code-creation,Builtin,2,1259548,0x7ff7de369c84,988,RejectPromise
code-creation,Builtin,2,1259561,0x7ff7de36a064,2416,NewPromiseCapability
code-creation,Builtin,2,1259575,0x7ff7de36a9e4,164,PromiseCapabilityDefaultReject
code-creation,Builtin,2,1259590,0x7ff7de36aaa4,148,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,1259604,0x7ff7de36ab44,1416,PerformPromiseThen
code-creation,Builtin,2,1259618,0x7ff7de36b0e4,648,PromiseReject
code-creation,Builtin,2,1259630,0x7ff7de36b384,284,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,1259644,0x7ff7de36b4a4,104,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,1259668,0x7ff7de36b524,4560,PromiseAll
code-creation,Builtin,2,1259687,0x7ff7de36c704,4880,PromiseAllSettled
code-creation,Builtin,2,1259700,0x7ff7de36da24,1104,PromiseAllResolveElementClosure
code-creation,Builtin,2,1259715,0x7ff7de36de84,1392,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,1259729,0x7ff7de36e404,1400,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,1259744,0x7ff7de36e984,1180,PromiseAnyRejectElementClosure
code-creation,Builtin,2,1259758,0x7ff7de36ee24,2368,PromiseAny
code-creation,Builtin,2,1259771,0x7ff7de36f784,2908,PromiseConstructor
code-creation,Builtin,2,1259786,0x7ff7de3702e4,296,PromisePrototypeCatch
code-creation,Builtin,2,1259799,0x7ff7de370424,88,PromiseValueThunkFinally
code-creation,Builtin,2,1259814,0x7ff7de370484,84,PromiseThrowerFinally
code-creation,Builtin,2,1259827,0x7ff7de3704e4,904,PromiseCatchFinally
code-creation,Builtin,2,1259841,0x7ff7de370884,904,PromiseThenFinally
code-creation,Builtin,2,1259854,0x7ff7de370c24,1700,PromisePrototypeFinally
code-creation,Builtin,2,1259867,0x7ff7de3712e4,1336,PromiseRace
code-creation,Builtin,2,1259881,0x7ff7de371824,268,PromiseFulfillReactionJob
code-creation,Builtin,2,1259894,0x7ff7de371944,364,PromiseRejectReactionJob
code-creation,Builtin,2,1259908,0x7ff7de371ac4,156,PromiseResolveTrampoline
code-creation,Builtin,2,1259922,0x7ff7de371b64,656,PromiseResolve
code-creation,Builtin,2,1259937,0x7ff7de371e04,712,ResolvePromise
code-creation,Builtin,2,1259951,0x7ff7de3720e4,2224,PromisePrototypeThen
code-creation,Builtin,2,1259966,0x7ff7de3729a4,1144,PromiseResolveThenableJob
code-creation,Builtin,2,1259982,0x7ff7de372e24,448,ProxyConstructor
code-creation,Builtin,2,1259996,0x7ff7de373004,1760,ProxyDeleteProperty
code-creation,Builtin,2,1260010,0x7ff7de373704,2112,ProxyGetProperty
code-creation,Builtin,2,1260024,0x7ff7de373f64,1060,ProxyGetPrototypeOf
code-creation,Builtin,2,1260039,0x7ff7de3743a4,1668,ProxyHasProperty
code-creation,Builtin,2,1260053,0x7ff7de374a44,760,ProxyIsExtensible
code-creation,Builtin,2,1260067,0x7ff7de374d44,800,ProxyPreventExtensions
code-creation,Builtin,2,1260082,0x7ff7de375084,1148,ProxyRevocable
code-creation,Builtin,2,1260100,0x7ff7de375504,120,ProxyRevoke
code-creation,Builtin,2,1260120,0x7ff7de375584,2216,ProxySetProperty
code-creation,Builtin,2,1260139,0x7ff7de375e44,1292,ProxySetPrototypeOf
code-creation,Builtin,2,1260156,0x7ff7de376364,208,ReflectIsExtensible
code-creation,Builtin,2,1260172,0x7ff7de376444,212,ReflectPreventExtensions
code-creation,Builtin,2,1260191,0x7ff7de376524,188,ReflectGetPrototypeOf
code-creation,Builtin,2,1260209,0x7ff7de3765e4,292,ReflectSetPrototypeOf
code-creation,Builtin,2,1260227,0x7ff7de376724,284,ReflectGet
code-creation,Builtin,2,1260243,0x7ff7de376844,160,ReflectDeleteProperty
code-creation,Builtin,2,1260260,0x7ff7de376904,148,ReflectHas
code-creation,Builtin,2,1260276,0x7ff7de3769a4,5132,RegExpPrototypeExecSlow
code-creation,Builtin,2,1260294,0x7ff7de377dc4,5104,RegExpPrototypeExec
code-creation,Builtin,2,1260314,0x7ff7de3791c4,2360,RegExpPrototypeMatchAll
code-creation,Builtin,2,1260338,0x7ff7de379b04,9428,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,1260359,0x7ff7de37bfe4,8840,RegExpMatchFast
code-creation,Builtin,2,1260381,0x7ff7de37e284,3600,RegExpPrototypeMatch
code-creation,Builtin,2,1260399,0x7ff7de37f0a4,6328,RegExpReplace
code-creation,Builtin,2,1260414,0x7ff7de380964,524,RegExpPrototypeReplace
code-creation,Builtin,2,1260431,0x7ff7de380b84,1424,RegExpSearchFast
code-creation,Builtin,2,1260444,0x7ff7de381124,1640,RegExpPrototypeSearch
code-creation,Builtin,2,1260458,0x7ff7de3817a4,200,RegExpPrototypeSourceGetter
code-creation,Builtin,2,1260476,0x7ff7de381884,5872,RegExpSplit
code-creation,Builtin,2,1260493,0x7ff7de382f84,476,RegExpPrototypeSplit
code-creation,Builtin,2,1260512,0x7ff7de383164,2252,RegExpPrototypeTest
code-creation,Builtin,2,1260529,0x7ff7de383a44,1360,RegExpPrototypeTestFast
code-creation,Builtin,2,1260546,0x7ff7de383fa4,228,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,1260561,0x7ff7de3840a4,244,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,1260583,0x7ff7de3841a4,244,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,1260601,0x7ff7de3842a4,244,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,1260619,0x7ff7de3843a4,244,RegExpPrototypeLinearGetter
code-creation,Builtin,2,1260637,0x7ff7de3844a4,244,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,1260653,0x7ff7de3845a4,272,RegExpPrototypeStickyGetter
code-creation,Builtin,2,1260676,0x7ff7de3846c4,272,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,1260690,0x7ff7de3847e4,2256,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,1260704,0x7ff7de3850c4,1500,StringPrototypeAt
code-creation,Builtin,2,1260717,0x7ff7de3856a4,3008,StringPrototypeEndsWith
code-creation,Builtin,2,1260732,0x7ff7de386284,480,CreateHTML
code-creation,Builtin,2,1260765,0x7ff7de386484,164,StringPrototypeAnchor
code-creation,Builtin,2,1260794,0x7ff7de386544,128,StringPrototypeBig
code-creation,Builtin,2,1260811,0x7ff7de3865e4,128,StringPrototypeBlink
code-creation,Builtin,2,1260827,0x7ff7de386684,128,StringPrototypeBold
code-creation,Builtin,2,1260844,0x7ff7de386724,168,StringPrototypeFontcolor
code-creation,Builtin,2,1260870,0x7ff7de3867e4,168,StringPrototypeFontsize
code-creation,Builtin,2,1260894,0x7ff7de3868a4,128,StringPrototypeFixed
code-creation,Builtin,2,1260929,0x7ff7de386944,128,StringPrototypeItalics
code-creation,Builtin,2,1260963,0x7ff7de3869e4,168,StringPrototypeLink
code-creation,Builtin,2,1260998,0x7ff7de386aa4,128,StringPrototypeSmall
code-creation,Builtin,2,1261035,0x7ff7de386b44,128,StringPrototypeStrike
code-creation,Builtin,2,1261065,0x7ff7de386be4,128,StringPrototypeSub
code-creation,Builtin,2,1261086,0x7ff7de386c84,128,StringPrototypeSup
code-creation,Builtin,2,1261108,0x7ff7de386d24,1028,StringPrototypeIncludes
code-creation,Builtin,2,1261134,0x7ff7de387144,628,StringPrototypeIndexOf
code-creation,Builtin,2,1261159,0x7ff7de3873c4,344,StringPrototypeIterator
code-creation,Builtin,2,1261181,0x7ff7de387524,2024,StringIteratorPrototypeNext
code-creation,Builtin,2,1261213,0x7ff7de387d24,1304,StringPrototypeMatch
code-creation,Builtin,2,1261241,0x7ff7de388244,1304,StringPrototypeSearch
code-creation,Builtin,2,1261259,0x7ff7de388764,824,StringPrototypePadStart
code-creation,Builtin,2,1261278,0x7ff7de388aa4,824,StringPrototypePadEnd
code-creation,Builtin,2,1261306,0x7ff7de388de4,120,StringRepeat
code-creation,Builtin,2,1261333,0x7ff7de388e64,400,StringPrototypeRepeat
code-creation,Builtin,2,1261351,0x7ff7de389004,11188,StringPrototypeReplaceAll
code-creation,Builtin,2,1261367,0x7ff7de38bbc4,3388,StringPrototypeSlice
code-creation,Builtin,2,1261397,0x7ff7de38c904,3028,StringPrototypeStartsWith
code-creation,Builtin,2,1261421,0x7ff7de38d4e4,3328,StringPrototypeSubstr
code-creation,Builtin,2,1261448,0x7ff7de38e204,3260,StringPrototypeSubstring
code-creation,Builtin,2,1261474,0x7ff7de38eec4,6916,StringPrototypeTrim
code-creation,Builtin,2,1261502,0x7ff7de3909e4,6332,StringPrototypeTrimStart
code-creation,Builtin,2,1261524,0x7ff7de3922a4,5836,StringPrototypeTrimEnd
code-creation,Builtin,2,1261555,0x7ff7de393984,160,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,1261578,0x7ff7de393a44,156,SymbolPrototypeToPrimitive
code-creation,Builtin,2,1261607,0x7ff7de393ae4,172,SymbolPrototypeToString
code-creation,Builtin,2,1261634,0x7ff7de393ba4,156,SymbolPrototypeValueOf
code-creation,Builtin,2,1261668,0x7ff7de393c44,832,TypedArrayPrototypeAt
code-creation,Builtin,2,1261706,0x7ff7de393fa4,10064,CreateTypedArray
code-creation,Builtin,2,1261803,0x7ff7de396704,1000,TypedArrayPrototypeEvery
code-creation,Builtin,2,1261829,0x7ff7de396b04,372,TypedArrayPrototypeEntries
code-creation,Builtin,2,1261845,0x7ff7de396c84,3512,TypedArrayPrototypeFilter
code-creation,Builtin,2,1261861,0x7ff7de397a44,996,TypedArrayPrototypeFind
code-creation,Builtin,2,1261877,0x7ff7de397e44,1004,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,1262337,0x7ff7de398244,428,FindLastAllElementsDetachedContinuation
code-creation,Builtin,2,1262381,0x7ff7de398404,1208,TypedArrayPrototypeFindLast
code-creation,Builtin,2,1262550,0x7ff7de3988c4,436,FindLastIndexAllElementsDetachedContinuation
code-creation,Builtin,2,1262586,0x7ff7de398a84,1216,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,1262610,0x7ff7de398f64,864,TypedArrayPrototypeForEach
code-creation,Builtin,2,1262630,0x7ff7de3992e4,2352,TypedArrayFrom
code-creation,Builtin,2,1262653,0x7ff7de399c24,356,TypedArrayPrototypeKeys
code-creation,Builtin,2,1262675,0x7ff7de399da4,1028,TypedArrayOf
code-creation,Builtin,2,1262693,0x7ff7de39a1c4,952,TypedArrayPrototypeReduce
code-creation,Builtin,2,1262710,0x7ff7de39a584,944,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,1262726,0x7ff7de39a944,2508,TypedArrayPrototypeSet
code-creation,Builtin,2,1262755,0x7ff7de39b324,3040,TypedArrayPrototypeSlice
code-creation,Builtin,2,1262781,0x7ff7de39bf24,992,TypedArrayPrototypeSome
code-creation,Builtin,2,1262799,0x7ff7de39c324,1060,TypedArrayMergeSort
code-creation,Builtin,2,1262818,0x7ff7de39c764,1620,TypedArrayPrototypeSort
code-creation,Builtin,2,1262856,0x7ff7de39cdc4,2736,TypedArrayPrototypeSubArray
code-creation,Builtin,2,1262871,0x7ff7de39d884,372,TypedArrayPrototypeValues
code-creation,Builtin,2,1262885,0x7ff7de39da04,952,WeakRefConstructor
code-creation,Builtin,2,1262898,0x7ff7de39ddc4,184,WeakRefDeref
code-creation,Builtin,2,1262911,0x7ff7de39de84,680,NewSloppyArgumentsElements
code-creation,Builtin,2,1262925,0x7ff7de39e144,296,NewStrictArgumentsElements
code-creation,Builtin,2,1262938,0x7ff7de39e284,320,NewRestArgumentsElements
code-creation,Builtin,2,1262953,0x7ff7de39e3e4,1388,FastNewSloppyArguments
code-creation,Builtin,2,1262967,0x7ff7de39e964,524,FastNewStrictArguments
code-creation,Builtin,2,1262980,0x7ff7de39eb84,556,FastNewRestArguments
code-creation,Builtin,2,1262993,0x7ff7de39edc4,676,StringSlowFlatten
code-creation,Builtin,2,1263006,0x7ff7de39f084,2068,StringIndexOf
code-creation,Builtin,2,1263018,0x7ff7de39f8a4,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,1263032,0x7ff7de39f8c4,20,TestHelperPlus1
code-creation,Builtin,2,1263044,0x7ff7de39f8e4,20,TestHelperPlus2
code-creation,Builtin,2,1263057,0x7ff7de39f904,96,NewSmiBox
code-creation,Builtin,2,1263069,0x7ff7de39f984,24,ReturnTwoValues
code-creation,Builtin,2,1263082,0x7ff7de39f9a4,32,Load_FastSmiElements_0
code-creation,Builtin,2,1263095,0x7ff7de39f9e4,32,Load_FastObjectElements_0
code-creation,Builtin,2,1263109,0x7ff7de39fa24,144,Load_FastDoubleElements_0
code-creation,Builtin,2,1263122,0x7ff7de39fac4,32,Store_FastSmiElements_0
code-creation,Builtin,2,1263135,0x7ff7de39fb04,96,Store_FastObjectElements_0
code-creation,Builtin,2,1263149,0x7ff7de39fb84,48,Store_FastDoubleElements_0
code-creation,Builtin,2,1263162,0x7ff7de39fbc4,36,Delete_FastSmiElements_0
code-creation,Builtin,2,1263175,0x7ff7de39fc04,36,Delete_FastObjectElements_0
code-creation,Builtin,2,1263189,0x7ff7de39fc44,44,Delete_FastDoubleElements_0
code-creation,Builtin,2,1263203,0x7ff7de39fc84,308,SortCompareDefault
code-creation,Builtin,2,1263216,0x7ff7de39fdc4,92,SortCompareUserFn
code-creation,Builtin,2,1263229,0x7ff7de39fe24,8,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,1263243,0x7ff7de39fe44,312,Copy
code-creation,Builtin,2,1263255,0x7ff7de39ff84,5776,MergeAt
code-creation,Builtin,2,1263268,0x7ff7de3a1624,792,GallopLeft
code-creation,Builtin,2,1263281,0x7ff7de3a1944,832,GallopRight
code-creation,Builtin,2,1263296,0x7ff7de3a1ca4,3832,ArrayTimSort
code-creation,Builtin,2,1263318,0x7ff7de3a2ba4,2112,ArrayPrototypeSort
code-creation,Builtin,2,1263332,0x7ff7de3a3404,100,WasmInt32ToHeapNumber
code-creation,Builtin,2,1263347,0x7ff7de3a3484,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,1263367,0x7ff7de3a3504,76,WasmTaggedToFloat64
code-creation,Builtin,2,1263381,0x7ff7de3a3564,72,WasmMemoryGrow
code-creation,Builtin,2,1263394,0x7ff7de3a35c4,100,WasmTableInit
code-creation,Builtin,2,1263407,0x7ff7de3a3644,100,WasmTableCopy
code-creation,Builtin,2,1263420,0x7ff7de3a36c4,84,WasmTableFill
code-creation,Builtin,2,1263433,0x7ff7de3a3724,72,WasmTableGrow
code-creation,Builtin,2,1263445,0x7ff7de3a3784,144,WasmTableGet
code-creation,Builtin,2,1263468,0x7ff7de3a3824,236,WasmTableSet
code-creation,Builtin,2,1263484,0x7ff7de3a3924,88,WasmRefFunc
code-creation,Builtin,2,1263497,0x7ff7de3a3984,144,WasmAllocateFixedArray
code-creation,Builtin,2,1263510,0x7ff7de3a3a24,44,WasmThrow
code-creation,Builtin,2,1263523,0x7ff7de3a3a64,52,WasmRethrow
code-creation,Builtin,2,1263536,0x7ff7de3a3aa4,44,WasmTriggerTierUp
code-creation,Builtin,2,1263549,0x7ff7de3a3ae4,32,WasmStackGuard
code-creation,Builtin,2,1263562,0x7ff7de3a3b24,32,WasmStackOverflow
code-creation,Builtin,2,1263576,0x7ff7de3a3b64,40,WasmTraceMemory
code-creation,Builtin,2,1263589,0x7ff7de3a3ba4,32,WasmTraceEnter
code-creation,Builtin,2,1263603,0x7ff7de3a3be4,40,WasmTraceExit
code-creation,Builtin,2,1263616,0x7ff7de3a3c24,332,WasmAllocateJSArray
code-creation,Builtin,2,1263630,0x7ff7de3a3d84,104,WasmAllocatePair
code-creation,Builtin,2,1263643,0x7ff7de3a3e04,64,WasmAllocateRtt
code-creation,Builtin,2,1263660,0x7ff7de3a3e64,72,WasmAllocateFreshRtt
code-creation,Builtin,2,1263674,0x7ff7de3a3ec4,124,WasmAllocateStructWithRtt
code-creation,Builtin,2,1263688,0x7ff7de3a3f44,140,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,1263702,0x7ff7de3a3fe4,176,WasmAllocateArray_InitZero
code-creation,Builtin,2,1263716,0x7ff7de3a40a4,176,WasmAllocateArray_InitNull
code-creation,Builtin,2,1263729,0x7ff7de3a4164,116,WasmArrayCopyWithChecks
code-creation,Builtin,2,1263743,0x7ff7de3a41e4,60,WasmArrayCopy
code-creation,Builtin,2,1263757,0x7ff7de3a4224,240,WasmAllocateObjectWrapper
code-creation,Builtin,2,1263771,0x7ff7de3a4324,52,WasmSubtypeCheck
code-creation,Builtin,2,1263786,0x7ff7de3a4364,8,WasmInt32ToNumber
code-creation,Builtin,2,1263800,0x7ff7de3a4384,116,WasmUint32ToNumber
code-creation,Builtin,2,1263814,0x7ff7de3a4404,144,UintPtr53ToNumber
code-creation,Builtin,2,1263829,0x7ff7de3a44a4,96,WasmAtomicNotify
code-creation,Builtin,2,1263844,0x7ff7de3a4524,116,WasmI32AtomicWait64
code-creation,Builtin,2,1263857,0x7ff7de3a45a4,116,WasmI64AtomicWait64
code-creation,Builtin,2,1263871,0x7ff7de3a4624,580,WasmGetOwnProperty
code-creation,Builtin,2,1263886,0x7ff7de3a4884,40,WasmTrap
code-creation,Builtin,2,1263899,0x7ff7de3a48c4,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,1263914,0x7ff7de3a48e4,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,1263930,0x7ff7de3a4904,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,1263944,0x7ff7de3a4924,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,1263959,0x7ff7de3a4944,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,1263973,0x7ff7de3a4964,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,1263986,0x7ff7de3a4984,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,1264000,0x7ff7de3a49a4,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,1264015,0x7ff7de3a49c4,16,ThrowWasmTrapDataSegmentDropped
tick,0x7ff7de04526c,1264031,0,0x0,6
tick,0x7ff954e0d044,1264068,0,0x0,6
code-creation,Builtin,2,1264205,0x7ff7de3a49e4,16,ThrowWasmTrapElemSegmentDropped
code-creation,Builtin,2,1264237,0x7ff7de3a4a04,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,1264258,0x7ff7de3a4a24,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,1264275,0x7ff7de3a4a44,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,1264292,0x7ff7de3a4a64,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,1264314,0x7ff7de3a4a84,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,1264341,0x7ff7de3a4aa4,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,1264357,0x7ff7de3a4ac4,172,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,1264374,0x7ff7de3a4b84,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,1264390,0x7ff7de3a4ba4,116,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,1264407,0x7ff7de3a4c24,112,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,1264423,0x7ff7de3a4ca4,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,1264441,0x7ff7de3a4cc4,220,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,1264458,0x7ff7de3a4da4,248,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,1264485,0x7ff7de3a4ea4,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,1264506,0x7ff7de3a4ec4,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,1264523,0x7ff7de3a4ee4,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,1264539,0x7ff7de3a4f04,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,1264556,0x7ff7de3a4f24,132,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,1264573,0x7ff7de3a4fc4,8,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,1264589,0x7ff7de3a4fe4,32,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,1264606,0x7ff7de3a5024,32,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,1264624,0x7ff7de3a5064,32,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,1264642,0x7ff7de3a50a4,2680,Load_GenericElementsAccessor_0
code-creation,Builtin,2,1264663,0x7ff7de3a5b24,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,1264679,0x7ff7de3a5b44,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,1264695,0x7ff7de3a5b84,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,1264710,0x7ff7de3a5ba4,164,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,1264726,0x7ff7de3a5c64,180,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,1264742,0x7ff7de3a5d24,116,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,1264758,0x7ff7de3a5da4,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,1264774,0x7ff7de3a5de4,156,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,1264791,0x7ff7de3a5e84,112,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,1264807,0x7ff7de3a5f04,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,1264824,0x7ff7de3a5f24,152,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,1264840,0x7ff7de3a5fc4,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,1264856,0x7ff7de3a5fe4,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,1264873,0x7ff7de3a6004,620,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,1264890,0x7ff7de3a6284,220,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,1264907,0x7ff7de3a6364,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,1264923,0x7ff7de3a63a4,200,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,1264941,0x7ff7de3a6484,248,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,1264957,0x7ff7de3a6584,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,1264975,0x7ff7de3a65c4,200,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,1264992,0x7ff7de3a66a4,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,1265009,0x7ff7de3a66c4,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,1265026,0x7ff7de3a66e4,180,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,1265044,0x7ff7de3a67a4,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,1265060,0x7ff7de3a67c4,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,1265077,0x7ff7de3a67e4,180,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,1265094,0x7ff7de3a68a4,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,1265110,0x7ff7de3a68c4,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,1265128,0x7ff7de3a68e4,180,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,1265145,0x7ff7de3a69a4,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,1265161,0x7ff7de3a69c4,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,1265179,0x7ff7de3a69e4,180,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,1265195,0x7ff7de3a6aa4,132,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,1265212,0x7ff7de3a6b44,164,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,1265230,0x7ff7de3a6c04,180,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,1265248,0x7ff7de3a6cc4,12,CollatorConstructor
code-creation,Builtin,2,1265274,0x7ff7de3a6ce4,12,CollatorInternalCompare
code-creation,Builtin,2,1265294,0x7ff7de3a6d04,12,CollatorPrototypeCompare
code-creation,Builtin,2,1265310,0x7ff7de3a6d24,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,1265327,0x7ff7de3a6d44,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,1265344,0x7ff7de3a6d64,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,1265361,0x7ff7de3a6d84,12,DatePrototypeToLocaleString
code-creation,Builtin,2,1265378,0x7ff7de3a6da4,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,1265394,0x7ff7de3a6dc4,12,DateTimeFormatConstructor
code-creation,Builtin,2,1265410,0x7ff7de3a6de4,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,1265427,0x7ff7de3a6e04,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,1265443,0x7ff7de3a6e24,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,1265463,0x7ff7de3a6e44,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,1265482,0x7ff7de3a6e64,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,1265500,0x7ff7de3a6e84,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,1265519,0x7ff7de3a6ea4,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,1265537,0x7ff7de3a6ec4,12,DisplayNamesConstructor
code-creation,Builtin,2,1265554,0x7ff7de3a6ee4,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,1265571,0x7ff7de3a6f04,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,1265590,0x7ff7de3a6f24,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,1265609,0x7ff7de3a6f44,12,IntlGetCanonicalLocales
code-creation,Builtin,2,1265626,0x7ff7de3a6f64,12,ListFormatConstructor
code-creation,Builtin,2,1265646,0x7ff7de3a6f84,224,ListFormatPrototypeFormat
code-creation,Builtin,2,1265662,0x7ff7de3a7084,224,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,1265679,0x7ff7de3a7184,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,1265696,0x7ff7de3a71a4,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,1265713,0x7ff7de3a71c4,12,LocaleConstructor
code-creation,Builtin,2,1265729,0x7ff7de3a71e4,12,LocalePrototypeBaseName
code-creation,Builtin,2,1265747,0x7ff7de3a7204,12,LocalePrototypeCalendar
code-creation,Builtin,2,1265765,0x7ff7de3a7224,12,LocalePrototypeCalendars
code-creation,Builtin,2,1265782,0x7ff7de3a7244,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,1265800,0x7ff7de3a7264,12,LocalePrototypeCollation
code-creation,Builtin,2,1265818,0x7ff7de3a7284,12,LocalePrototypeCollations
code-creation,Builtin,2,1265835,0x7ff7de3a72a4,12,LocalePrototypeHourCycle
code-creation,Builtin,2,1265854,0x7ff7de3a72c4,12,LocalePrototypeHourCycles
code-creation,Builtin,2,1265870,0x7ff7de3a72e4,12,LocalePrototypeLanguage
code-creation,Builtin,2,1265894,0x7ff7de3a7304,12,LocalePrototypeMaximize
code-creation,Builtin,2,1265915,0x7ff7de3a7324,12,LocalePrototypeMinimize
code-creation,Builtin,2,1265932,0x7ff7de3a7344,12,LocalePrototypeNumeric
code-creation,Builtin,2,1265952,0x7ff7de3a7364,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,1265976,0x7ff7de3a7384,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,1265999,0x7ff7de3a73a4,12,LocalePrototypeRegion
code-creation,Builtin,2,1266015,0x7ff7de3a73c4,12,LocalePrototypeScript
code-creation,Builtin,2,1266031,0x7ff7de3a73e4,12,LocalePrototypeTextInfo
code-creation,Builtin,2,1266048,0x7ff7de3a7404,12,LocalePrototypeTimeZones
code-creation,Builtin,2,1266066,0x7ff7de3a7424,12,LocalePrototypeToString
code-creation,Builtin,2,1266084,0x7ff7de3a7444,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,1266104,0x7ff7de3a7464,12,NumberFormatConstructor
code-creation,Builtin,2,1266125,0x7ff7de3a7484,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,1266141,0x7ff7de3a74a4,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,1266166,0x7ff7de3a74c4,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,1266190,0x7ff7de3a74e4,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,1266212,0x7ff7de3a7504,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,1266229,0x7ff7de3a7524,12,PluralRulesConstructor
code-creation,Builtin,2,1266254,0x7ff7de3a7544,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,1266275,0x7ff7de3a7564,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,1266293,0x7ff7de3a7584,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,1266311,0x7ff7de3a75a4,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,1266329,0x7ff7de3a75c4,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,1266347,0x7ff7de3a75e4,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,1266366,0x7ff7de3a7604,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,1266385,0x7ff7de3a7624,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,1266405,0x7ff7de3a7644,12,SegmenterConstructor
code-creation,Builtin,2,1266424,0x7ff7de3a7664,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,1266442,0x7ff7de3a7684,12,SegmenterPrototypeSegment
code-creation,Builtin,2,1266458,0x7ff7de3a76a4,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,1266480,0x7ff7de3a76c4,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,1266504,0x7ff7de3a76e4,12,SegmentsPrototypeContaining
code-creation,Builtin,2,1266529,0x7ff7de3a7704,12,SegmentsPrototypeIterator
code-creation,Builtin,2,1266554,0x7ff7de3a7724,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,1266573,0x7ff7de3a7744,12,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,1266603,0x7ff7de3a7764,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,1266621,0x7ff7de3a7784,200,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,1266644,0x7ff7de3a7864,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,1266665,0x7ff7de3a7884,636,StringToLowerCaseIntl
code-creation,Builtin,2,1266686,0x7ff7de3a7b04,12,V8BreakIteratorConstructor
code-creation,Builtin,2,1266708,0x7ff7de3a7b24,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,1266732,0x7ff7de3a7b44,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,1266751,0x7ff7de3a7b64,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,1266776,0x7ff7de3a7b84,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,1266805,0x7ff7de3a7ba4,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,1266832,0x7ff7de3a7bc4,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,1266849,0x7ff7de3a7be4,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,1266864,0x7ff7de3a7c04,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,1266880,0x7ff7de3a7c24,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,1266894,0x7ff7de3a7c44,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,1266907,0x7ff7de3a7c64,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,1266921,0x7ff7de3a7c84,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,1266938,0x7ff7de3a7ca4,24,Wide
code-creation,BytecodeHandler,0,1266951,0x7ff7de3a7cc4,24,ExtraWide
code-creation,BytecodeHandler,0,1266964,0x7ff7de3a7ce4,104,DebugBreakWide
code-creation,BytecodeHandler,0,1266979,0x7ff7de3a7d64,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,1266993,0x7ff7de3a7de4,164,DebugBreak0
code-creation,BytecodeHandler,0,1267006,0x7ff7de3a7ea4,104,DebugBreak1
code-creation,BytecodeHandler,0,1267019,0x7ff7de3a7f24,104,DebugBreak2
code-creation,BytecodeHandler,0,1267032,0x7ff7de3a7fa4,104,DebugBreak3
code-creation,BytecodeHandler,0,1267045,0x7ff7de3a8024,104,DebugBreak4
code-creation,BytecodeHandler,0,1267060,0x7ff7de3a80a4,104,DebugBreak5
code-creation,BytecodeHandler,0,1267079,0x7ff7de3a8124,104,DebugBreak6
code-creation,BytecodeHandler,0,1267094,0x7ff7de3a81a4,32,Ldar
code-creation,BytecodeHandler,0,1267113,0x7ff7de3a81e4,68,LdaZero
code-creation,BytecodeHandler,0,1267127,0x7ff7de3a8244,76,LdaSmi
code-creation,BytecodeHandler,0,1267140,0x7ff7de3a82a4,68,LdaUndefined
code-creation,BytecodeHandler,0,1267153,0x7ff7de3a8304,68,LdaNull
code-creation,BytecodeHandler,0,1267165,0x7ff7de3a8364,68,LdaTheHole
code-creation,BytecodeHandler,0,1267178,0x7ff7de3a83c4,20,LdaTrue
code-creation,BytecodeHandler,0,1267191,0x7ff7de3a83e4,20,LdaFalse
code-creation,BytecodeHandler,0,1267208,0x7ff7de3a8404,76,LdaConstant
code-creation,BytecodeHandler,0,1267224,0x7ff7de3a8464,132,LdaContextSlot
code-creation,BytecodeHandler,0,1267243,0x7ff7de3a8504,132,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,1267274,0x7ff7de3a85a4,88,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,1267293,0x7ff7de3a8604,88,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,1267308,0x7ff7de3a8664,32,Star
code-creation,BytecodeHandler,0,1267321,0x7ff7de3a86a4,40,Mov
code-creation,BytecodeHandler,0,1267335,0x7ff7de3a86e4,40,PushContext
code-creation,BytecodeHandler,0,1267348,0x7ff7de3a8724,36,PopContext
code-creation,BytecodeHandler,0,1267362,0x7ff7de3a8764,48,TestReferenceEqual
code-creation,BytecodeHandler,0,1267376,0x7ff7de3a87a4,52,TestUndetectable
code-creation,BytecodeHandler,0,1267389,0x7ff7de3a87e4,36,TestNull
code-creation,BytecodeHandler,0,1267403,0x7ff7de3a8824,36,TestUndefined
code-creation,BytecodeHandler,0,1267416,0x7ff7de3a8864,336,TestTypeOf
code-creation,BytecodeHandler,0,1267431,0x7ff7de3a89c4,6036,LdaGlobal
code-creation,BytecodeHandler,0,1267446,0x7ff7de3aa164,4536,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,1267460,0x7ff7de3ab324,168,StaGlobal
code-creation,BytecodeHandler,0,1267474,0x7ff7de3ab3e4,160,StaContextSlot
code-creation,BytecodeHandler,0,1267487,0x7ff7de3ab4a4,116,StaCurrentContextSlot
code-creation,BytecodeHandler,0,1267501,0x7ff7de3ab524,124,LdaLookupSlot
code-creation,BytecodeHandler,0,1267515,0x7ff7de3ab5a4,240,LdaLookupContextSlot
code-creation,BytecodeHandler,0,1267529,0x7ff7de3ab6a4,4776,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,1267543,0x7ff7de3ac964,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,1267558,0x7ff7de3ac9e4,240,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,1267572,0x7ff7de3acae4,4740,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,1267587,0x7ff7de3add84,220,StaLookupSlot
code-creation,BytecodeHandler,0,1267600,0x7ff7de3ade64,5216,LdaNamedProperty
code-creation,BytecodeHandler,0,1267614,0x7ff7de3af2e4,180,LdaNamedPropertyFromSuper
code-creation,BytecodeHandler,0,1267633,0x7ff7de3af3a4,212,LdaKeyedProperty
code-creation,BytecodeHandler,0,1267656,0x7ff7de3af484,160,LdaModuleVariable
code-creation,BytecodeHandler,0,1267683,0x7ff7de3af544,292,StaModuleVariable
code-creation,BytecodeHandler,0,1267708,0x7ff7de3af684,172,StaNamedProperty
code-creation,BytecodeHandler,0,1267733,0x7ff7de3af744,172,StaNamedOwnProperty
code-creation,BytecodeHandler,0,1267750,0x7ff7de3af804,164,StaKeyedProperty
code-creation,BytecodeHandler,0,1267767,0x7ff7de3af8c4,164,StaInArrayLiteral
code-creation,BytecodeHandler,0,1267787,0x7ff7de3af984,196,StaDataPropertyInLiteral
code-creation,BytecodeHandler,0,1267806,0x7ff7de3afa64,160,CollectTypeProfile
code-creation,BytecodeHandler,0,1267823,0x7ff7de3afb24,1028,Add
code-creation,BytecodeHandler,0,1267837,0x7ff7de3aff44,1064,Sub
code-creation,BytecodeHandler,0,1267858,0x7ff7de3b0384,1024,Mul
code-creation,BytecodeHandler,0,1267875,0x7ff7de3b07a4,988,Div
code-creation,BytecodeHandler,0,1267892,0x7ff7de3b0b84,912,Mod
code-creation,BytecodeHandler,0,1267910,0x7ff7de3b0f24,964,Exp
code-creation,BytecodeHandler,0,1267925,0x7ff7de3b1304,876,BitwiseOr
code-creation,BytecodeHandler,0,1267942,0x7ff7de3b1684,888,BitwiseXor
code-creation,BytecodeHandler,0,1267972,0x7ff7de3b1a04,888,BitwiseAnd
code-creation,BytecodeHandler,0,1267992,0x7ff7de3b1d84,900,ShiftLeft
code-creation,BytecodeHandler,0,1268027,0x7ff7de3b2124,900,ShiftRight
code-creation,BytecodeHandler,0,1268052,0x7ff7de3b24c4,1020,ShiftRightLogical
code-creation,BytecodeHandler,0,1268078,0x7ff7de3b28c4,960,AddSmi
code-creation,BytecodeHandler,0,1268104,0x7ff7de3b2ca4,1000,SubSmi
code-creation,BytecodeHandler,0,1268128,0x7ff7de3b30a4,916,MulSmi
code-creation,BytecodeHandler,0,1268154,0x7ff7de3b3444,920,DivSmi
code-creation,BytecodeHandler,0,1268181,0x7ff7de3b37e4,816,ModSmi
code-creation,BytecodeHandler,0,1268202,0x7ff7de3b3b24,872,ExpSmi
code-creation,BytecodeHandler,0,1268221,0x7ff7de3b3ea4,488,BitwiseOrSmi
code-creation,BytecodeHandler,0,1268254,0x7ff7de3b40a4,488,BitwiseXorSmi
code-creation,BytecodeHandler,0,1268278,0x7ff7de3b42a4,488,BitwiseAndSmi
code-creation,BytecodeHandler,0,1268297,0x7ff7de3b44a4,488,ShiftLeftSmi
code-creation,BytecodeHandler,0,1268314,0x7ff7de3b46a4,488,ShiftRightSmi
code-creation,BytecodeHandler,0,1268339,0x7ff7de3b48a4,640,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,1268370,0x7ff7de3b4b44,656,Inc
code-creation,BytecodeHandler,0,1268389,0x7ff7de3b4de4,656,Dec
code-creation,BytecodeHandler,0,1268410,0x7ff7de3b5084,640,Negate
code-creation,BytecodeHandler,0,1268430,0x7ff7de3b5324,480,BitwiseNot
code-creation,BytecodeHandler,0,1268448,0x7ff7de3b5524,108,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,1268468,0x7ff7de3b55a4,36,LogicalNot
code-creation,BytecodeHandler,0,1268499,0x7ff7de3b55e4,208,TypeOf
code-creation,BytecodeHandler,0,1268532,0x7ff7de3b56c4,120,DeletePropertyStrict
code-creation,BytecodeHandler,0,1268558,0x7ff7de3b5744,112,DeletePropertySloppy
code-creation,BytecodeHandler,0,1268593,0x7ff7de3b57c4,40,GetSuperConstructor
code-creation,BytecodeHandler,0,1268610,0x7ff7de3b5804,1132,CallAnyReceiver
code-creation,BytecodeHandler,0,1268637,0x7ff7de3b5c84,1132,CallProperty
code-creation,BytecodeHandler,0,1268669,0x7ff7de3b6104,1012,CallProperty0
code-creation,BytecodeHandler,0,1268693,0x7ff7de3b6504,1028,CallProperty1
code-creation,BytecodeHandler,0,1268712,0x7ff7de3b6924,1040,CallProperty2
code-creation,BytecodeHandler,0,1268731,0x7ff7de3b6d44,1016,CallUndefinedReceiver
code-creation,BytecodeHandler,0,1268753,0x7ff7de3b7144,1048,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,1268785,0x7ff7de3b7564,1020,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,1268814,0x7ff7de3b7964,1040,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,1268847,0x7ff7de3b7d84,1132,CallWithSpread
code-creation,BytecodeHandler,0,1268869,0x7ff7de3b8204,124,CallRuntime
code-creation,BytecodeHandler,0,1268889,0x7ff7de3b8284,156,CallRuntimeForPair
code-creation,BytecodeHandler,0,1268906,0x7ff7de3b8324,80,CallJSRuntime
code-creation,BytecodeHandler,0,1268933,0x7ff7de3b8384,1236,InvokeIntrinsic
code-creation,BytecodeHandler,0,1268956,0x7ff7de3b8864,1020,Construct
code-creation,BytecodeHandler,0,1268979,0x7ff7de3b8c64,536,ConstructWithSpread
code-creation,BytecodeHandler,0,1269002,0x7ff7de3b8e84,1936,TestEqual
code-creation,BytecodeHandler,0,1269028,0x7ff7de3b9624,1064,TestEqualStrict
code-creation,BytecodeHandler,0,1269052,0x7ff7de3b9a64,1624,TestLessThan
code-creation,BytecodeHandler,0,1269069,0x7ff7de3ba0c4,1624,TestGreaterThan
code-creation,BytecodeHandler,0,1269091,0x7ff7de3ba724,1624,TestLessThanOrEqual
code-creation,BytecodeHandler,0,1269119,0x7ff7de3bad84,1624,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,1269140,0x7ff7de3bb3e4,860,TestInstanceOf
code-creation,BytecodeHandler,0,1269160,0x7ff7de3bb744,156,TestIn
code-creation,BytecodeHandler,0,1269177,0x7ff7de3bb7e4,112,ToName
code-creation,BytecodeHandler,0,1269196,0x7ff7de3bb864,212,ToNumber
code-creation,BytecodeHandler,0,1269214,0x7ff7de3bb944,232,ToNumeric
code-creation,BytecodeHandler,0,1269231,0x7ff7de3bba44,112,ToObject
code-creation,BytecodeHandler,0,1269251,0x7ff7de3bbac4,116,ToString
code-creation,BytecodeHandler,0,1269275,0x7ff7de3bbb44,400,CreateRegExpLiteral
code-creation,BytecodeHandler,0,1269300,0x7ff7de3bbce4,1468,CreateArrayLiteral
code-creation,BytecodeHandler,0,1269330,0x7ff7de3bc2a4,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,1269359,0x7ff7de3bc304,788,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,1269382,0x7ff7de3bc624,2140,CreateObjectLiteral
code-creation,BytecodeHandler,0,1269402,0x7ff7de3bce84,224,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,1269427,0x7ff7de3bcf84,168,CloneObject
code-creation,BytecodeHandler,0,1269442,0x7ff7de3bd044,212,GetTemplateObject
code-creation,BytecodeHandler,0,1269457,0x7ff7de3bd124,328,CreateClosure
code-creation,BytecodeHandler,0,1269471,0x7ff7de3bd284,120,CreateBlockContext
code-creation,BytecodeHandler,0,1269484,0x7ff7de3bd304,132,CreateCatchContext
code-creation,BytecodeHandler,0,1269502,0x7ff7de3bd3a4,256,CreateFunctionContext
code-creation,BytecodeHandler,0,1269519,0x7ff7de3bd4c4,256,CreateEvalContext
code-creation,BytecodeHandler,0,1269533,0x7ff7de3bd5e4,132,CreateWithContext
code-creation,BytecodeHandler,0,1269569,0x7ff7de3bd684,1568,CreateMappedArguments
code-creation,BytecodeHandler,0,1269591,0x7ff7de3bdcc4,592,CreateUnmappedArguments
code-creation,BytecodeHandler,0,1269609,0x7ff7de3bdf24,632,CreateRestParameter
code-creation,BytecodeHandler,0,1269624,0x7ff7de3be1a4,424,JumpLoop
code-creation,BytecodeHandler,0,1269639,0x7ff7de3be364,44,Jump
code-creation,BytecodeHandler,0,1269652,0x7ff7de3be3a4,56,JumpConstant
code-creation,BytecodeHandler,0,1269665,0x7ff7de3be3e4,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,1269678,0x7ff7de3be444,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,1269692,0x7ff7de3be4a4,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,1269706,0x7ff7de3be504,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,1269721,0x7ff7de3be564,84,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,1269740,0x7ff7de3be5c4,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,1269758,0x7ff7de3be624,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,1269775,0x7ff7de3be684,88,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,1269792,0x7ff7de3be6e4,152,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,1269808,0x7ff7de3be784,152,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,1269823,0x7ff7de3be824,136,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,1269837,0x7ff7de3be8c4,136,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,1269851,0x7ff7de3be964,64,JumpIfTrue
code-creation,BytecodeHandler,0,1269864,0x7ff7de3be9c4,64,JumpIfFalse
code-creation,BytecodeHandler,0,1269877,0x7ff7de3bea24,64,JumpIfNull
code-creation,BytecodeHandler,0,1269891,0x7ff7de3bea84,64,JumpIfNotNull
code-creation,BytecodeHandler,0,1269910,0x7ff7de3beae4,64,JumpIfUndefined
code-creation,BytecodeHandler,0,1269928,0x7ff7de3beb44,64,JumpIfNotUndefined
code-creation,BytecodeHandler,0,1269947,0x7ff7de3beba4,72,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,1269965,0x7ff7de3bec04,76,JumpIfJSReceiver
code-creation,BytecodeHandler,0,1269982,0x7ff7de3bec64,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,1270015,0x7ff7de3bece4,464,ForInEnumerate
code-creation,BytecodeHandler,0,1270048,0x7ff7de3beec4,252,ForInPrepare
code-creation,BytecodeHandler,0,1270067,0x7ff7de3befc4,60,ForInContinue
code-creation,BytecodeHandler,0,1270085,0x7ff7de3bf004,256,ForInNext
code-creation,BytecodeHandler,0,1270102,0x7ff7de3bf124,48,ForInStep
code-creation,BytecodeHandler,0,1270119,0x7ff7de3bf164,36,SetPendingMessage
code-creation,BytecodeHandler,0,1270137,0x7ff7de3bf1a4,116,Throw
code-creation,BytecodeHandler,0,1270152,0x7ff7de3bf224,116,ReThrow
code-creation,BytecodeHandler,0,1270169,0x7ff7de3bf2a4,112,Return
code-creation,BytecodeHandler,0,1270185,0x7ff7de3bf324,196,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,1270203,0x7ff7de3bf404,132,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,1270235,0x7ff7de3bf4a4,132,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,1270262,0x7ff7de3bf544,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,1270298,0x7ff7de3bf5e4,120,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,1270329,0x7ff7de3bf664,512,SuspendGenerator
code-creation,BytecodeHandler,0,1270353,0x7ff7de3bf884,128,ResumeGenerator
code-creation,BytecodeHandler,0,1270370,0x7ff7de3bf924,152,GetIterator
code-creation,BytecodeHandler,0,1270389,0x7ff7de3bf9c4,116,Debugger
code-creation,BytecodeHandler,0,1270408,0x7ff7de3bfa44,124,IncBlockCounter
code-creation,BytecodeHandler,0,1270424,0x7ff7de3bfac4,56,Abort
code-creation,BytecodeHandler,0,1270439,0x7ff7de3bfb04,32,Star0
code-creation,BytecodeHandler,0,1270454,0x7ff7de3bfb44,60,Illegal
code-creation,BytecodeHandler,0,1270470,0x7ff7de3bfb84,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,1270486,0x7ff7de3bfc04,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,1270505,0x7ff7de3bfc84,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,1270523,0x7ff7de3bfd04,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,1270539,0x7ff7de3bfd84,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,1270553,0x7ff7de3bfe04,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,1270567,0x7ff7de3bfe84,32,Ldar.Wide
code-creation,BytecodeHandler,0,1270580,0x7ff7de3bfec4,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,1270594,0x7ff7de3bff04,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,1270608,0x7ff7de3bff44,92,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,1270622,0x7ff7de3bffa4,92,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,1270645,0x7ff7de3c0004,48,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,1270668,0x7ff7de3c0044,48,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,1270699,0x7ff7de3c0084,32,Star.Wide
code-creation,BytecodeHandler,0,1270715,0x7ff7de3c00c4,40,Mov.Wide
code-creation,BytecodeHandler,0,1270729,0x7ff7de3c0104,40,PushContext.Wide
code-creation,BytecodeHandler,0,1270743,0x7ff7de3c0144,36,PopContext.Wide
code-creation,BytecodeHandler,0,1270758,0x7ff7de3c0184,48,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,1270772,0x7ff7de3c01c4,4668,LdaGlobal.Wide
code-creation,BytecodeHandler,0,1270786,0x7ff7de3c1404,4604,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,1270800,0x7ff7de3c2604,172,StaGlobal.Wide
code-creation,BytecodeHandler,0,1270814,0x7ff7de3c26c4,160,StaContextSlot.Wide
code-creation,BytecodeHandler,0,1270831,0x7ff7de3c2784,116,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,1270848,0x7ff7de3c2804,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,1270865,0x7ff7de3c28a4,244,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,1270880,0x7ff7de3c29a4,4852,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,1270894,0x7ff7de3c3ca4,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,1270909,0x7ff7de3c3d44,244,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,1270925,0x7ff7de3c3e44,4812,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,1270940,0x7ff7de3c5124,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,1270953,0x7ff7de3c5204,5216,LdaNamedProperty.Wide
code-creation,BytecodeHandler,0,1270967,0x7ff7de3c6684,188,LdaNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,1270982,0x7ff7de3c6744,160,LdaKeyedProperty.Wide
code-creation,BytecodeHandler,0,1270995,0x7ff7de3c6804,160,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,1271009,0x7ff7de3c68c4,300,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,1271024,0x7ff7de3c6a04,176,StaNamedProperty.Wide
code-creation,BytecodeHandler,0,1271038,0x7ff7de3c6ac4,176,StaNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,1271052,0x7ff7de3c6b84,168,StaKeyedProperty.Wide
code-creation,BytecodeHandler,0,1271068,0x7ff7de3c6c44,168,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,1271087,0x7ff7de3c6d04,200,StaDataPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,1271103,0x7ff7de3c6de4,164,CollectTypeProfile.Wide
code-creation,BytecodeHandler,0,1271116,0x7ff7de3c6ea4,984,Add.Wide
code-creation,BytecodeHandler,0,1271129,0x7ff7de3c7284,1020,Sub.Wide
code-creation,BytecodeHandler,0,1271142,0x7ff7de3c7684,972,Mul.Wide
code-creation,BytecodeHandler,0,1271155,0x7ff7de3c7a64,988,Div.Wide
code-creation,BytecodeHandler,0,1271168,0x7ff7de3c7e44,916,Mod.Wide
code-creation,BytecodeHandler,0,1271181,0x7ff7de3c81e4,988,Exp.Wide
code-creation,BytecodeHandler,0,1271194,0x7ff7de3c85c4,904,BitwiseOr.Wide
code-creation,BytecodeHandler,0,1271208,0x7ff7de3c8964,920,BitwiseXor.Wide
code-creation,BytecodeHandler,0,1271221,0x7ff7de3c8d04,920,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,1271234,0x7ff7de3c90a4,932,ShiftLeft.Wide
code-creation,BytecodeHandler,0,1271248,0x7ff7de3c9464,932,ShiftRight.Wide
code-creation,BytecodeHandler,0,1271261,0x7ff7de3c9824,1052,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,1271275,0x7ff7de3c9c44,916,AddSmi.Wide
code-creation,BytecodeHandler,0,1271295,0x7ff7de3c9fe4,960,SubSmi.Wide
code-creation,BytecodeHandler,0,1271317,0x7ff7de3ca3c4,912,MulSmi.Wide
code-creation,BytecodeHandler,0,1271336,0x7ff7de3ca764,920,DivSmi.Wide
code-creation,BytecodeHandler,0,1271353,0x7ff7de3cab04,816,ModSmi.Wide
code-creation,BytecodeHandler,0,1271369,0x7ff7de3cae44,872,ExpSmi.Wide
code-creation,BytecodeHandler,0,1271392,0x7ff7de3cb1c4,496,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,1271422,0x7ff7de3cb3c4,496,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,1271451,0x7ff7de3cb5c4,496,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,1271469,0x7ff7de3cb7c4,496,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,1271490,0x7ff7de3cb9c4,496,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,1271520,0x7ff7de3cbbc4,648,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,1271543,0x7ff7de3cbe64,616,Inc.Wide
code-creation,BytecodeHandler,0,1271568,0x7ff7de3cc0e4,616,Dec.Wide
code-creation,BytecodeHandler,0,1271591,0x7ff7de3cc364,648,Negate.Wide
code-creation,BytecodeHandler,0,1271611,0x7ff7de3cc604,492,BitwiseNot.Wide
code-creation,BytecodeHandler,0,1271635,0x7ff7de3cc804,124,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,1271656,0x7ff7de3cc884,116,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,1271675,0x7ff7de3cc904,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,1271694,0x7ff7de3cc944,1136,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,1271714,0x7ff7de3ccdc4,1136,CallProperty.Wide
code-creation,BytecodeHandler,0,1271735,0x7ff7de3cd244,1016,CallProperty0.Wide
code-creation,BytecodeHandler,0,1271765,0x7ff7de3cd644,1032,CallProperty1.Wide
code-creation,BytecodeHandler,0,1271791,0x7ff7de3cda64,1044,CallProperty2.Wide
code-creation,BytecodeHandler,0,1271811,0x7ff7de3cde84,1020,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,1271838,0x7ff7de3ce284,1052,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,1271863,0x7ff7de3ce6a4,1024,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,1271893,0x7ff7de3ceac4,1044,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,1271926,0x7ff7de3ceee4,1136,CallWithSpread.Wide
code-creation,BytecodeHandler,0,1271957,0x7ff7de3cf364,128,CallRuntime.Wide
code-creation,BytecodeHandler,0,1271987,0x7ff7de3cf404,168,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,1272007,0x7ff7de3cf4c4,84,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,1272028,0x7ff7de3cf524,1240,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,1272054,0x7ff7de3cfa04,968,Construct.Wide
code-creation,BytecodeHandler,0,1272085,0x7ff7de3cfde4,476,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,1272118,0x7ff7de3cffc4,1964,TestEqual.Wide
code-creation,BytecodeHandler,0,1272150,0x7ff7de3d0784,1068,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,1272177,0x7ff7de3d0bc4,1512,TestLessThan.Wide
code-creation,BytecodeHandler,0,1272198,0x7ff7de3d11c4,1512,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,1272217,0x7ff7de3d17c4,1512,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,1272254,0x7ff7de3d1dc4,1512,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,1272286,0x7ff7de3d23c4,864,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,1272318,0x7ff7de3d2744,160,TestIn.Wide
code-creation,BytecodeHandler,0,1272343,0x7ff7de3d2804,116,ToName.Wide
code-creation,BytecodeHandler,0,1272363,0x7ff7de3d2884,216,ToNumber.Wide
code-creation,BytecodeHandler,0,1272383,0x7ff7de3d2964,236,ToNumeric.Wide
code-creation,BytecodeHandler,0,1272412,0x7ff7de3d2a64,116,ToObject.Wide
code-creation,BytecodeHandler,0,1272439,0x7ff7de3d2ae4,404,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,1272469,0x7ff7de3d2c84,1376,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,1272497,0x7ff7de3d3204,788,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,1272530,0x7ff7de3d3524,2040,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,1272560,0x7ff7de3d3d24,172,CloneObject.Wide
code-creation,BytecodeHandler,0,1272588,0x7ff7de3d3de4,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,1272627,0x7ff7de3d3ea4,320,CreateClosure.Wide
code-creation,BytecodeHandler,0,1272660,0x7ff7de3d4004,124,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,1272681,0x7ff7de3d4084,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,1272697,0x7ff7de3d4124,256,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,1272723,0x7ff7de3d4244,256,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,1272745,0x7ff7de3d4364,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,1272769,0x7ff7de3d4404,440,JumpLoop.Wide
code-creation,BytecodeHandler,0,1272796,0x7ff7de3d45c4,44,Jump.Wide
code-creation,BytecodeHandler,0,1272819,0x7ff7de3d4604,56,JumpConstant.Wide
code-creation,BytecodeHandler,0,1272837,0x7ff7de3d4644,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,1272867,0x7ff7de3d46a4,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,1272887,0x7ff7de3d4704,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,1272918,0x7ff7de3d4764,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,1272944,0x7ff7de3d47c4,84,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,1272977,0x7ff7de3d4824,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,1273002,0x7ff7de3d4884,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,1273033,0x7ff7de3d48e4,88,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,1273059,0x7ff7de3d4944,152,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,1273092,0x7ff7de3d49e4,152,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,1273118,0x7ff7de3d4a84,136,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,1273148,0x7ff7de3d4b24,136,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,1273178,0x7ff7de3d4bc4,64,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,1273204,0x7ff7de3d4c24,64,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,1273233,0x7ff7de3d4c84,64,JumpIfNull.Wide
code-creation,BytecodeHandler,0,1273257,0x7ff7de3d4ce4,64,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,1273287,0x7ff7de3d4d44,64,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,1273307,0x7ff7de3d4da4,64,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,1273328,0x7ff7de3d4e04,72,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,1273358,0x7ff7de3d4e64,76,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,1273382,0x7ff7de3d4ec4,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,1273413,0x7ff7de3d4f44,468,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,1273444,0x7ff7de3d5124,252,ForInPrepare.Wide
code-creation,BytecodeHandler,0,1273469,0x7ff7de3d5224,60,ForInContinue.Wide
code-creation,BytecodeHandler,0,1273498,0x7ff7de3d5264,260,ForInNext.Wide
code-creation,BytecodeHandler,0,1273521,0x7ff7de3d5384,48,ForInStep.Wide
code-creation,BytecodeHandler,0,1273549,0x7ff7de3d53c4,156,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,1273578,0x7ff7de3d5464,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,1273609,0x7ff7de3d5524,120,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,1273642,0x7ff7de3d55a4,516,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,1273674,0x7ff7de3d57c4,128,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,1273697,0x7ff7de3d5864,156,GetIterator.Wide
code-creation,BytecodeHandler,0,1273716,0x7ff7de3d5904,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,1273754,0x7ff7de3d59a4,56,Abort.Wide
code-creation,BytecodeHandler,0,1273785,0x7ff7de3d59e4,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,1273821,0x7ff7de3d5a64,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,1273850,0x7ff7de3d5ae4,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,1273871,0x7ff7de3d5b64,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,1273891,0x7ff7de3d5be4,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,1273916,0x7ff7de3d5c64,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,1273951,0x7ff7de3d5ce4,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,1273984,0x7ff7de3d5d24,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,1274014,0x7ff7de3d5d44,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,1274031,0x7ff7de3d5d84,88,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,1274066,0x7ff7de3d5de4,88,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,1274091,0x7ff7de3d5e44,48,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,1274113,0x7ff7de3d5e84,48,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,1274139,0x7ff7de3d5ec4,28,Star.ExtraWide
code-creation,BytecodeHandler,0,1274164,0x7ff7de3d5ee4,40,Mov.ExtraWide
code-creation,BytecodeHandler,0,1274183,0x7ff7de3d5f24,36,PushContext.ExtraWide
code-creation,BytecodeHandler,0,1274201,0x7ff7de3d5f64,32,PopContext.ExtraWide
code-creation,BytecodeHandler,0,1274217,0x7ff7de3d5fa4,48,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,1274245,0x7ff7de3d5fe4,4656,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,1274266,0x7ff7de3d7224,4592,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,1274295,0x7ff7de3d8424,168,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,1274316,0x7ff7de3d84e4,156,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,1274335,0x7ff7de3d8584,116,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,1274356,0x7ff7de3d8604,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,1274376,0x7ff7de3d86a4,240,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,1274397,0x7ff7de3d87a4,4836,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,1274422,0x7ff7de3d9aa4,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,1274457,0x7ff7de3d9b44,240,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,1274484,0x7ff7de3d9c44,4800,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,1274516,0x7ff7de3daf24,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,1274542,0x7ff7de3db004,5196,LdaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,1274572,0x7ff7de3dc464,184,LdaNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,1274595,0x7ff7de3dc524,156,LdaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,1274612,0x7ff7de3dc5c4,160,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,1274635,0x7ff7de3dc684,296,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,1274652,0x7ff7de3dc7c4,172,StaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,1274669,0x7ff7de3dc884,172,StaNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,1274687,0x7ff7de3dc944,168,StaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,1274704,0x7ff7de3dca04,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,1274722,0x7ff7de3dcac4,196,StaDataPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,1274740,0x7ff7de3dcba4,164,CollectTypeProfile.ExtraWide
code-creation,BytecodeHandler,0,1274759,0x7ff7de3dcc64,980,Add.ExtraWide
code-creation,BytecodeHandler,0,1274775,0x7ff7de3dd044,1016,Sub.ExtraWide
code-creation,BytecodeHandler,0,1274792,0x7ff7de3dd444,972,Mul.ExtraWide
code-creation,BytecodeHandler,0,1274807,0x7ff7de3dd824,988,Div.ExtraWide
code-creation,BytecodeHandler,0,1274822,0x7ff7de3ddc04,916,Mod.ExtraWide
code-creation,BytecodeHandler,0,1274838,0x7ff7de3ddfa4,984,Exp.ExtraWide
code-creation,BytecodeHandler,0,1274853,0x7ff7de3de384,904,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,1274869,0x7ff7de3de724,916,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,1274885,0x7ff7de3deac4,916,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,1274901,0x7ff7de3dee64,928,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,1274916,0x7ff7de3df224,928,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,1274932,0x7ff7de3df5e4,1048,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,1274949,0x7ff7de3dfa04,916,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,1274965,0x7ff7de3dfda4,960,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,1274981,0x7ff7de3e0184,912,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,1275003,0x7ff7de3e0524,916,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,1275024,0x7ff7de3e08c4,816,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,1275041,0x7ff7de3e0c04,872,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,1275057,0x7ff7de3e0f84,492,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,1275074,0x7ff7de3e1184,492,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,1275091,0x7ff7de3e1384,492,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,1275108,0x7ff7de3e1584,492,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,1275125,0x7ff7de3e1784,492,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,1275143,0x7ff7de3e1984,644,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,1275161,0x7ff7de3e1c24,616,Inc.ExtraWide
code-creation,BytecodeHandler,0,1275179,0x7ff7de3e1ea4,616,Dec.ExtraWide
code-creation,BytecodeHandler,0,1275196,0x7ff7de3e2124,644,Negate.ExtraWide
code-creation,BytecodeHandler,0,1275215,0x7ff7de3e23c4,488,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,1275231,0x7ff7de3e25c4,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,1275248,0x7ff7de3e2644,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,1275265,0x7ff7de3e26c4,36,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,1275283,0x7ff7de3e2704,1128,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,1275310,0x7ff7de3e2b84,1128,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,1275328,0x7ff7de3e3004,1012,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,1275346,0x7ff7de3e3404,1024,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,1275369,0x7ff7de3e3824,1036,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,1275386,0x7ff7de3e3c44,1016,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,1275404,0x7ff7de3e4044,1048,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,1275421,0x7ff7de3e4464,1020,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,1275439,0x7ff7de3e4864,1040,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,1275456,0x7ff7de3e4c84,1128,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,1275473,0x7ff7de3e5104,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,1275491,0x7ff7de3e51a4,164,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,1275510,0x7ff7de3e5264,80,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,1275529,0x7ff7de3e52c4,1240,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,1275547,0x7ff7de3e57a4,964,Construct.ExtraWide
code-creation,BytecodeHandler,0,1275564,0x7ff7de3e5b84,472,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,1275583,0x7ff7de3e5d64,1964,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,1275600,0x7ff7de3e6524,1068,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,1275621,0x7ff7de3e6964,1508,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,1275638,0x7ff7de3e6f64,1508,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,1275656,0x7ff7de3e7564,1508,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,1275674,0x7ff7de3e7b64,1508,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,1275692,0x7ff7de3e8164,864,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,1275711,0x7ff7de3e84e4,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,1275729,0x7ff7de3e8584,116,ToName.ExtraWide
code-creation,BytecodeHandler,0,1275747,0x7ff7de3e8604,216,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,1275765,0x7ff7de3e86e4,236,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,1275783,0x7ff7de3e87e4,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,1275800,0x7ff7de3e8864,400,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,1275818,0x7ff7de3e8a04,1376,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,1275837,0x7ff7de3e8f84,788,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,1275856,0x7ff7de3e92a4,2040,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,1275874,0x7ff7de3e9aa4,168,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,1275962,0x7ff7de3e9b64,160,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,1275987,0x7ff7de3e9c24,320,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,1276005,0x7ff7de3e9d84,124,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,1276023,0x7ff7de3e9e04,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,1276041,0x7ff7de3e9ea4,256,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,1276059,0x7ff7de3e9fc4,256,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,1276077,0x7ff7de3ea0e4,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,1276096,0x7ff7de3ea184,436,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,1276113,0x7ff7de3ea344,44,Jump.ExtraWide
code-creation,BytecodeHandler,0,1276131,0x7ff7de3ea384,56,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,1276147,0x7ff7de3ea3c4,76,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,1276164,0x7ff7de3ea424,76,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,1276182,0x7ff7de3ea484,76,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,1276202,0x7ff7de3ea4e4,76,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,1276222,0x7ff7de3ea544,84,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,1276241,0x7ff7de3ea5a4,76,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,1276258,0x7ff7de3ea604,76,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,1276276,0x7ff7de3ea664,88,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,1276296,0x7ff7de3ea6c4,148,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,1276315,0x7ff7de3ea764,148,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,1276334,0x7ff7de3ea804,136,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,1276352,0x7ff7de3ea8a4,136,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,1276372,0x7ff7de3ea944,64,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,1276391,0x7ff7de3ea9a4,64,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,1276409,0x7ff7de3eaa04,64,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,1276427,0x7ff7de3eaa64,64,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,1276445,0x7ff7de3eaac4,64,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,1276462,0x7ff7de3eab24,64,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,1276480,0x7ff7de3eab84,68,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,1276499,0x7ff7de3eabe4,72,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,1276517,0x7ff7de3eac44,108,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,1276534,0x7ff7de3eacc4,464,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,1276552,0x7ff7de3eaea4,252,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,1276570,0x7ff7de3eafa4,56,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,1276588,0x7ff7de3eafe4,256,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,1276604,0x7ff7de3eb104,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,1276626,0x7ff7de3eb144,156,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,1276645,0x7ff7de3eb1e4,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,1276665,0x7ff7de3eb2a4,120,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,1276685,0x7ff7de3eb324,512,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,1276703,0x7ff7de3eb544,124,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,1276722,0x7ff7de3eb5c4,152,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,1276741,0x7ff7de3eb664,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,1276758,0x7ff7de3eb6e4,56,Abort.ExtraWide
new,MemoryChunk,0x1e6fccc0000,262144
new,MemoryChunk,0x34748a00000,262144
tick,0x7ff954e0d244,1278523,0,0x0,1
new,MemoryChunk,0x3f0abfc0000,262144
new,MemoryChunk,0x39b30f80000,262144
new,MemoryChunk,0x22cec140000,262144
code-creation,Eval,10,1288959,0x22cec141fae,5, node:internal/main/run_main_module:1:1,0x22cec141e68,~
script-source,95,node:internal/main/run_main_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  prepareMainThreadExecution\x0d\n} = require('internal/bootstrap/pre_execution');\x0d\n\x0d\nprepareMainThreadExecution(true);\x0d\n\x0d\nmarkBootstrapComplete();\x0d\n\x0d\n// Note: this loads the module through the ESM loader if the module is\x0d\n// determined to be an ES module. This hangs from the CJS module loader\x0d\n// because we currently allow monkey-patching of the module loaders\x0d\n// in the preloaded scripts through require('module').\x0d\n// runMain here might be monkey-patched by users in --require.\x0d\n// XXX: the monkey-patchability here should probably be deprecated.\x0d\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\x0d\n
code-source-info,0x22cec141fae,95,0,649,C0O0C4O649,,
code-creation,Function,10,1289110,0x22cec142056,58, node:internal/main/run_main_module:1:1,0x22cec141f28,~
code-source-info,0x22cec142056,95,0,649,C0O60C3O60C8O28C13O108C15O108C19O145C22O576C25O576C30O614C35O621C40O638C47O642C51O622C57O648,,
code-creation,LazyCompile,10,1289785,0x22cec142296,76,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x3eae9a8fdc0,~
script-source,9,node:internal/bootstrap/loaders,// This file creates the internal module & binding loaders used by built-in\x0d\n// modules. In contrast\x2C user land modules are loaded using\x0d\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\x0d\n// lib/internal/modules/esm/* (ES Modules).\x0d\n//\x0d\n// This file is compiled and run by node.cc before bootstrap/node.js\x0d\n// was called\x2C therefore the loaders are bootstrapped before we start to\x0d\n// actually bootstrap Node.js. It creates the following objects:\x0d\n//\x0d\n// C++ binding loaders:\x0d\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\x0d\n//   because it is an object attached to the global process object.\x0d\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\x0d\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\x0d\n//   about the stability of these bindings\x2C but still have to take care of\x0d\n//   compatibility issues caused by them from time to time.\x0d\n// - process._linkedBinding(): intended to be used by embedders to add\x0d\n//   additional C++ bindings in their applications. These C++ bindings\x0d\n//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag\x0d\n//   NM_F_LINKED.\x0d\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\x0d\n//   from user land unless through `require('internal/test/binding')`.\x0d\n//   These C++ bindings are created using NODE_MODULE_CONTEXT_AWARE_INTERNAL()\x0d\n//   and have their nm_flags set to NM_F_INTERNAL.\x0d\n//\x0d\n// Internal JavaScript module loader:\x0d\n// - NativeModule: a minimal module system used to load the JavaScript core\x0d\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\x0d\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\x0d\n//   so they can be loaded faster without the cost of I/O. This class makes the\x0d\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\x0d\n//   default to core modules\x2C and lets the core modules require itself via\x0d\n//   require('internal/bootstrap/loaders') even when this file is not written in\x0d\n//   CommonJS style.\x0d\n//\x0d\n// Other objects:\x0d\n// - process.moduleLoadList: an array recording the bindings and the modules\x0d\n//   loaded in the process and the order in which they are loaded.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ReflectGet\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Set up process.moduleLoadList.\x0d\nconst moduleLoadList = [];\x0d\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\x0d\n  value: moduleLoadList\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x0d\n});\x0d\n\x0d\n\x0d\n// internalBindingAllowlist contains the name of internalBinding modules\x0d\n// that are allowed for access via process.binding()... This is used\x0d\n// to provide a transition path for modules that are being moved over to\x0d\n// internalBinding.\x0d\nconst internalBindingAllowlist = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'buffer'\x2C\x0d\n  'cares_wrap'\x2C\x0d\n  'config'\x2C\x0d\n  'constants'\x2C\x0d\n  'contextify'\x2C\x0d\n  'crypto'\x2C\x0d\n  'fs'\x2C\x0d\n  'fs_event_wrap'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'icu'\x2C\x0d\n  'inspector'\x2C\x0d\n  'js_stream'\x2C\x0d\n  'natives'\x2C\x0d\n  'os'\x2C\x0d\n  'pipe_wrap'\x2C\x0d\n  'process_wrap'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'spawn_sync'\x2C\x0d\n  'stream_wrap'\x2C\x0d\n  'tcp_wrap'\x2C\x0d\n  'tls_wrap'\x2C\x0d\n  'tty_wrap'\x2C\x0d\n  'udp_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'util'\x2C\x0d\n  'uv'\x2C\x0d\n  'v8'\x2C\x0d\n  'zlib'\x2C\x0d\n]);\x0d\n\x0d\nconst runtimeDeprecatedList = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'crypto'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'v8'\x2C\x0d\n]);\x0d\n\x0d\nconst legacyWrapperList = new SafeSet([\x0d\n  'util'\x2C\x0d\n]);\x0d\n\x0d\n// Set up process.binding() and process._linkedBinding().\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n\x0d\n  process.binding = function binding(module) {\x0d\n    module = String(module);\x0d\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\x0d\n    // selective fallback to internalBinding for the deprecated ones.\x0d\n    if (internalBindingAllowlist.has(module)) {\x0d\n      if (runtimeDeprecatedList.has(module)) {\x0d\n        runtimeDeprecatedList.delete(module);\x0d\n        process.emitWarning(\x0d\n          `Access to process.binding('${module}') is deprecated.`\x2C\x0d\n          'DeprecationWarning'\x2C\x0d\n          'DEP0111');\x0d\n      }\x0d\n      if (legacyWrapperList.has(module)) {\x0d\n        return nativeModuleRequire('internal/legacy/processbinding')[module]();\x0d\n      }\x0d\n      return internalBinding(module);\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    throw new Error(`No such module: ${module}`);\x0d\n  };\x0d\n\x0d\n  process._linkedBinding = function _linkedBinding(module) {\x0d\n    module = String(module);\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object')\x0d\n      mod = bindingObj[module] = getLinkedBinding(module);\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\n// Set up internalBinding() in the closure.\x0d\n/**\x0d\n * @type {InternalBinding}\x0d\n */\x0d\nlet internalBinding;\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n  // eslint-disable-next-line no-global-assign\x0d\n  internalBinding = function internalBinding(module) {\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object') {\x0d\n      mod = bindingObj[module] = getInternalBinding(module);\x0d\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\x0d\n    }\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst loaderId = 'internal/bootstrap/loaders';\x0d\nconst {\x0d\n  moduleIds\x2C\x0d\n  compileFunction\x0d\n} = internalBinding('native_module');\x0d\n\x0d\nconst getOwn = (target\x2C property\x2C receiver) => {\x0d\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\x0d\n    ReflectGet(target\x2C property\x2C receiver) :\x0d\n    undefined;\x0d\n};\x0d\n\x0d\n/**\x0d\n * An internal abstraction for the built-in JavaScript modules of Node.js.\x0d\n * Be careful not to expose this to user land unless --expose-internals is\x0d\n * used\x2C in which case there is no compatibility guarantee about this class.\x0d\n */\x0d\nclass NativeModule {\x0d\n  /**\x0d\n   * A map from the module IDs to the module instances.\x0d\n   * @type {Map<string\x2C NativeModule>}\x0d\n   */\x0d\n  static map = new SafeMap(\x0d\n    ArrayPrototypeMap(moduleIds\x2C (id) => [id\x2C new NativeModule(id)])\x0d\n  );\x0d\n\x0d\n  constructor(id) {\x0d\n    this.filename = `${id}.js`;\x0d\n    this.id = id;\x0d\n    this.canBeRequiredByUsers = !StringPrototypeStartsWith(id\x2C 'internal/');\x0d\n\x0d\n    // The CJS exports object of the module.\x0d\n    this.exports = {};\x0d\n    // States used to work around circular dependencies.\x0d\n    this.loaded = false;\x0d\n    this.loading = false;\x0d\n\x0d\n    // The following properties are used by the ESM implementation and only\x0d\n    // initialized when the native module is loaded by users.\x0d\n    /**\x0d\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\x0d\n     * @type {ModuleWrap|undefined}\x0d\n     */\x0d\n    this.module = undefined;\x0d\n    /**\x0d\n     * Exported names for the ESM imports.\x0d\n     * @type {string[]|undefined}\x0d\n     */\x0d\n    this.exportKeys = undefined;\x0d\n  }\x0d\n\x0d\n  // To be called during pre-execution when --expose-internals is on.\x0d\n  // Enables the user-land module loader to access internal modules.\x0d\n  static exposeInternals() {\x0d\n    for (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n      // Do not expose this to user land even with --expose-internals.\x0d\n      if (id !== loaderId) {\x0d\n        mod.canBeRequiredByUsers = true;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  static exists(id) {\x0d\n    return NativeModule.map.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredByUsers(id) {\x0d\n    const mod = NativeModule.map.get(id);\x0d\n    return mod && mod.canBeRequiredByUsers;\x0d\n  }\x0d\n\x0d\n  // Used by user-land module loaders to compile and load builtins.\x0d\n  compileForPublicLoader() {\x0d\n    if (!this.canBeRequiredByUsers) {\x0d\n      // No code because this is an assertion against bugs\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not compile ${this.id} for public use`);\x0d\n    }\x0d\n    this.compileForInternalLoader();\x0d\n    if (!this.exportKeys) {\x0d\n      // When using --expose-internals\x2C we do not want to reflect the named\x0d\n      // exports from core modules as this can trigger unnecessary getters.\x0d\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\x0d\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\x0d\n    }\x0d\n    this.getESMFacade();\x0d\n    this.syncExports();\x0d\n    return this.exports;\x0d\n  }\x0d\n\x0d\n  getESMFacade() {\x0d\n    if (this.module) return this.module;\x0d\n    const { ModuleWrap } = internalBinding('module_wrap');\x0d\n    const url = `node:${this.id}`;\x0d\n    const nativeModule = this;\x0d\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\x0d\n    ArrayPrototypePush(exportsKeys\x2C 'default');\x0d\n    this.module = new ModuleWrap(\x0d\n      url\x2C undefined\x2C exportsKeys\x2C\x0d\n      function() {\x0d\n        nativeModule.syncExports();\x0d\n        this.setExport('default'\x2C nativeModule.exports);\x0d\n      });\x0d\n    // Ensure immediate sync execution to capture exports now\x0d\n    this.module.instantiate();\x0d\n    this.module.evaluate(-1\x2C false);\x0d\n    return this.module;\x0d\n  }\x0d\n\x0d\n  // Provide named exports for all builtin libraries so that the libraries\x0d\n  // may be imported in a nicer way for ESM users. The default export is left\x0d\n  // as the entire namespace (module.exports) and updates when this function is\x0d\n  // called so that APMs and other behavior are supported.\x0d\n  syncExports() {\x0d\n    const names = this.exportKeys;\x0d\n    if (this.module) {\x0d\n      for (let i = 0; i < names.length; i++) {\x0d\n        const exportName = names[i];\x0d\n        if (exportName === 'default') continue;\x0d\n        this.module.setExport(exportName\x2C\x0d\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  compileForInternalLoader() {\x0d\n    if (this.loaded || this.loading) {\x0d\n      return this.exports;\x0d\n    }\x0d\n\x0d\n    const id = this.id;\x0d\n    this.loading = true;\x0d\n\x0d\n    try {\x0d\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\x0d\n        requireWithFallbackInDeps : nativeModuleRequire;\x0d\n\x0d\n      const fn = compileFunction(id);\x0d\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\x0d\n\x0d\n      this.loaded = true;\x0d\n    } finally {\x0d\n      this.loading = false;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\x0d\n    return this.exports;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Think of this as module.exports in this file even though it is not\x0d\n// written in CommonJS style.\x0d\nconst loaderExports = {\x0d\n  internalBinding\x2C\x0d\n  NativeModule\x2C\x0d\n  require: nativeModuleRequire\x0d\n};\x0d\n\x0d\nfunction nativeModuleRequire(id) {\x0d\n  if (id === loaderId) {\x0d\n    return loaderExports;\x0d\n  }\x0d\n\x0d\n  const mod = NativeModule.map.get(id);\x0d\n  // Can't load the internal errors module from here\x2C have to use a raw error.\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\x0d\n  return mod.compileForInternalLoader();\x0d\n}\x0d\n\x0d\n// Allow internal modules from dependencies to require\x0d\n// other modules from dependencies by providing fallbacks.\x0d\nfunction requireWithFallbackInDeps(request) {\x0d\n  if (!NativeModule.map.has(request)) {\x0d\n    request = `internal/deps/${request}`;\x0d\n  }\x0d\n  return nativeModuleRequire(request);\x0d\n}\x0d\n\x0d\n// Pass the exports back to C++ land for C++ internals to use.\x0d\nreturn loaderExports;\x0d\n
code-source-info,0x22cec142296,9,10647,11000,C0O10657C2O10668C4O10664C9O10685C13O10706C14O10729C19O10742C24O10746C29O10746C35O10890C37O10900C47O10948C60O10906C65O10900C66O10970C71O10970C75O10997,,
code-creation,LazyCompile,10,1292155,0x22cec142fa6,175,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x3eae9a8fcf0,~
code-source-info,0x22cec142fa6,9,9827,10410,C0O9846C6O9861C12O9891C16O9899C17O9930C22O9939C23O9952C30O9998C37O10029C45O9998C63O10131C70O10131C75O10167C89O10202C103O10159C108O10242C109O10254C124O10286C126O10299C141O10322C152O10341C160O10373C165O10322C170O10397C174O10405,,
code-creation,Eval,10,1293916,0x22cec143f7e,5, node:internal/bootstrap/pre_execution:1:1,0x22cec143b88,~
script-source,96,node:internal/bootstrap/pre_execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n} = require('internal/options');\x0d\nconst { reconnectZeroFillToggle } = require('internal/buffer');\x0d\nconst {\x0d\n  defineOperation\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  exposeInterface\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { ERR_MANIFEST_ASSERT_INTEGRITY } = require('internal/errors').codes;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nfunction prepareMainThreadExecution(expandArgv1 = false) {\x0d\n  // TODO(joyeecheung): this is also necessary for workers when they deserialize\x0d\n  // this toggle from the snapshot.\x0d\n  reconnectZeroFillToggle();\x0d\n\x0d\n  // Patch the process object with legacy properties and normalizations\x0d\n  patchProcessObject(expandArgv1);\x0d\n  setupTraceCategoryState();\x0d\n  setupPerfHooks();\x0d\n  setupInspectorHooks();\x0d\n  setupWarningHandler();\x0d\n  setupFetch();\x0d\n  setupWebCrypto();\x0d\n\x0d\n  // Resolve the coverage directory to an absolute path\x2C and\x0d\n  // overwrite process.env so that the original path gets passed\x0d\n  // to child processes even when they switch cwd.\x0d\n  if (process.env.NODE_V8_COVERAGE) {\x0d\n    process.env.NODE_V8_COVERAGE =\x0d\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\x0d\n  }\x0d\n\x0d\n\x0d\n  setupDebugEnv();\x0d\n\x0d\n  // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\x0d\n  setupStacktracePrinterOnSigint();\x0d\n\x0d\n  // Process initial diagnostic reporting configuration\x2C if present.\x0d\n  initializeReport();\x0d\n  initializeReportSignalHandlers();  // Main-thread-only.\x0d\n\x0d\n  initializeHeapSnapshotSignalHandlers();\x0d\n\x0d\n  // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\x0d\n  // spawned by our child_process module\x2C then initialize IPC.\x0d\n  // This attaches some internal event listeners and creates:\x0d\n  // process.send()\x2C process.channel\x2C process.connected\x2C\x0d\n  // process.disconnect().\x0d\n  setupChildProcessIpcChannel();\x0d\n\x0d\n  // Load policy from disk and parse it.\x0d\n  initializePolicy();\x0d\n\x0d\n  // If this is a worker in cluster mode\x2C start up the communication\x0d\n  // channel. This needs to be done before any user code gets executed\x0d\n  // (including preload modules).\x0d\n  initializeClusterIPC();\x0d\n\x0d\n  initializeSourceMapsHandlers();\x0d\n  initializeDeprecations();\x0d\n  initializeWASI();\x0d\n  initializeCJSLoader();\x0d\n  initializeESMLoader();\x0d\n\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\x0d\n  loadPreloadModules();\x0d\n  initializeFrozenIntrinsics();\x0d\n}\x0d\n\x0d\nfunction patchProcessObject(expandArgv1) {\x0d\n  const binding = internalBinding('process_methods');\x0d\n  binding.patchProcessObject(process);\x0d\n\x0d\n  require('internal/process/per_thread').refreshHrtimeBuffer();\x0d\n\x0d\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\x0d\n    enumerable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: process.argv[0]\x0d\n  });\x0d\n  process.argv[0] = process.execPath;\x0d\n\x0d\n  if (expandArgv1 && process.argv[1] &&\x0d\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\x0d\n    // Expand process.argv[1] into a full path.\x0d\n    const path = require('path');\x0d\n    try {\x0d\n      process.argv[1] = path.resolve(process.argv[1]);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\x0d\n  // except some that we need to be able to mutate during run time.\x0d\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\x0d\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\x0d\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\x0d\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\x0d\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\x0d\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\x0d\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\x0d\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\x0d\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\x0d\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\x0d\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\x0d\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\x0d\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\x0d\n}\x0d\n\x0d\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\x0d\n  const value = getOptionValue(option);\x0d\n  if (value) {\x0d\n    ObjectDefineProperty(process\x2C name\x2C {\x0d\n      writable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      value\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupWarningHandler() {\x0d\n  const {\x0d\n    onWarning\x0d\n  } = require('internal/process/warning');\x0d\n  if (getOptionValue('--warnings') &&\x0d\n    process.env.NODE_NO_WARNINGS !== '1') {\x0d\n    process.on('warning'\x2C onWarning);\x0d\n  }\x0d\n}\x0d\n\x0d\n// https://fetch.spec.whatwg.org/\x0d\nfunction setupFetch() {\x0d\n  if (!getOptionValue('--experimental-fetch')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  emitExperimentalWarning('Fetch');\x0d\n\x0d\n  const undici = require('internal/deps/undici/undici');\x0d\n  defineOperation(globalThis\x2C 'fetch'\x2C undici.fetch);\x0d\n  exposeInterface(globalThis\x2C 'FormData'\x2C undici.FormData);\x0d\n  exposeInterface(globalThis\x2C 'Headers'\x2C undici.Headers);\x0d\n  exposeInterface(globalThis\x2C 'Request'\x2C undici.Request);\x0d\n  exposeInterface(globalThis\x2C 'Response'\x2C undici.Response);\x0d\n}\x0d\n\x0d\n// TODO(aduh95): move this to internal/bootstrap/browser when the CLI flag is\x0d\n//               removed.\x0d\nfunction setupWebCrypto() {\x0d\n  if (process.config.variables.node_no_browser_globals ||\x0d\n      !getOptionValue('--experimental-global-webcrypto')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let webcrypto;\x0d\n  ObjectDefineProperty(globalThis\x2C 'crypto'\x2C\x0d\n                       ObjectGetOwnPropertyDescriptor({\x0d\n                         get crypto() {\x0d\n                           webcrypto ??= require('internal/crypto/webcrypto');\x0d\n                           return webcrypto.crypto;\x0d\n                         }\x0d\n                       }\x2C 'crypto'));\x0d\n  if (internalBinding('config').hasOpenSSL) {\x0d\n    webcrypto ??= require('internal/crypto/webcrypto');\x0d\n    ObjectDefineProperty(globalThis\x2C 'Crypto'\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.Crypto\x0d\n    });\x0d\n    ObjectDefineProperty(globalThis\x2C 'CryptoKey'\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.CryptoKey\x0d\n    });\x0d\n    ObjectDefineProperty(globalThis\x2C 'SubtleCrypto'\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.SubtleCrypto\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// Setup User-facing NODE_V8_COVERAGE environment variable that writes\x0d\n// ScriptCoverage to a specified file.\x0d\nfunction setupCoverageHooks(dir) {\x0d\n  const cwd = require('internal/process/execution').tryGetCwd();\x0d\n  const { resolve } = require('path');\x0d\n  const coverageDirectory = resolve(cwd\x2C dir);\x0d\n  const { sourceMapCacheToObject } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n\x0d\n  if (process.features.inspector) {\x0d\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\x0d\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\x0d\n  } else {\x0d\n    process.emitWarning('The inspector is disabled\x2C ' +\x0d\n                        'coverage could not be collected'\x2C\x0d\n                        'Warning');\x0d\n    return '';\x0d\n  }\x0d\n  return coverageDirectory;\x0d\n}\x0d\n\x0d\nfunction setupStacktracePrinterOnSigint() {\x0d\n  if (!getOptionValue('--trace-sigint')) {\x0d\n    return;\x0d\n  }\x0d\n  const { SigintWatchdog } = require('internal/watchdog');\x0d\n\x0d\n  const watchdog = new SigintWatchdog();\x0d\n  watchdog.start();\x0d\n}\x0d\n\x0d\nfunction initializeReport() {\x0d\n  const { report } = require('internal/process/report');\x0d\n  ObjectDefineProperty(process\x2C 'report'\x2C {\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      return report;\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupDebugEnv() {\x0d\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\x0d\n  if (getOptionValue('--expose-internals')) {\x0d\n    require('internal/bootstrap/loaders').NativeModule.exposeInternals();\x0d\n  }\x0d\n}\x0d\n\x0d\n// This has to be called after initializeReport() is called\x0d\nfunction initializeReportSignalHandlers() {\x0d\n  const { addSignalHandler } = require('internal/process/report');\x0d\n\x0d\n  addSignalHandler();\x0d\n}\x0d\n\x0d\nfunction initializeHeapSnapshotSignalHandlers() {\x0d\n  const signal = getOptionValue('--heapsnapshot-signal');\x0d\n\x0d\n  if (!signal)\x0d\n    return;\x0d\n\x0d\n  require('internal/validators').validateSignalName(signal);\x0d\n  const { writeHeapSnapshot } = require('v8');\x0d\n\x0d\n  process.on(signal\x2C () => {\x0d\n    writeHeapSnapshot();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupTraceCategoryState() {\x0d\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\x0d\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\x0d\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\x0d\n}\x0d\n\x0d\nfunction setupPerfHooks() {\x0d\n  require('internal/perf/performance').refreshTimeOrigin();\x0d\n  require('internal/perf/utils').refreshTimeOrigin();\x0d\n}\x0d\n\x0d\nfunction setupInspectorHooks() {\x0d\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\x0d\n  // we cannot immediately call into JS to enable the hooks\x2C which could\x0d\n  // interrupt the JS execution of bootstrap. So instead we save the\x0d\n  // notification in the inspector agent if it's sent in the middle of\x0d\n  // bootstrap\x2C and process the notification later here.\x0d\n  if (internalBinding('config').hasInspector) {\x0d\n    const {\x0d\n      enable\x2C\x0d\n      disable\x0d\n    } = require('internal/inspector_async_hook');\x0d\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\x0d\n  }\x0d\n}\x0d\n\x0d\n// In general deprecations are initialized wherever the APIs are implemented\x2C\x0d\n// this is used to deprecate APIs implemented in C++ where the deprecation\x0d\n// utilities are not easily accessible.\x0d\nfunction initializeDeprecations() {\x0d\n  const { deprecate } = require('internal/util');\x0d\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\n  // DEP0103: access to `process.binding('util').isX` type checkers\x0d\n  // TODO(addaleax): Turn into a full runtime deprecation.\x0d\n  const utilBinding = internalBinding('util');\x0d\n  const types = require('internal/util/types');\x0d\n  for (const name of [\x0d\n    'isArrayBuffer'\x2C\x0d\n    'isArrayBufferView'\x2C\x0d\n    'isAsyncFunction'\x2C\x0d\n    'isDataView'\x2C\x0d\n    'isDate'\x2C\x0d\n    'isExternal'\x2C\x0d\n    'isMap'\x2C\x0d\n    'isMapIterator'\x2C\x0d\n    'isNativeError'\x2C\x0d\n    'isPromise'\x2C\x0d\n    'isRegExp'\x2C\x0d\n    'isSet'\x2C\x0d\n    'isSetIterator'\x2C\x0d\n    'isTypedArray'\x2C\x0d\n    'isUint8Array'\x2C\x0d\n    'isAnyArrayBuffer'\x2C\x0d\n  ]) {\x0d\n    utilBinding[name] = pendingDeprecation ?\x0d\n      deprecate(types[name]\x2C\x0d\n                'Accessing native typechecking bindings of Node ' +\x0d\n                'directly is deprecated. ' +\x0d\n                `Please use \\`util.types.${name}\\` instead.`\x2C\x0d\n                'DEP0103') :\x0d\n      types[name];\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): this is a legacy property exposed to process.\x0d\n  // Now that we use the config binding to carry this information\x2C remove\x0d\n  // it from the process. We may consider exposing it properly in\x0d\n  // process.features.\x0d\n  const { noBrowserGlobals } = internalBinding('config');\x0d\n  if (noBrowserGlobals) {\x0d\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\x0d\n      writable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: noBrowserGlobals\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (pendingDeprecation) {\x0d\n    process.binding = deprecate(process.binding\x2C\x0d\n                                'process.binding() is deprecated. ' +\x0d\n                                'Please use public APIs instead.'\x2C 'DEP0111');\x0d\n\x0d\n    process._tickCallback = deprecate(process._tickCallback\x2C\x0d\n                                      'process._tickCallback() is deprecated'\x2C\x0d\n                                      'DEP0134');\x0d\n  }\x0d\n\x0d\n  // Create global.process and global.Buffer as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _process = process;\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    get() {\x0d\n      return _process;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _process = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n\x0d\n  let _Buffer = Buffer;\x0d\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\x0d\n    get() {\x0d\n      return _Buffer;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _Buffer = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupChildProcessIpcChannel() {\x0d\n  if (process.env.NODE_CHANNEL_FD) {\x0d\n    const assert = require('internal/assert');\x0d\n\x0d\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\x0d\n    assert(fd >= 0);\x0d\n\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_CHANNEL_FD;\x0d\n\x0d\n    const serializationMode =\x0d\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\x0d\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\x0d\n\x0d\n    require('child_process')._forkChild(fd\x2C serializationMode);\x0d\n    assert(process.send);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeClusterIPC() {\x0d\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\x0d\n    const cluster = require('cluster');\x0d\n    cluster._setupWorker();\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_UNIQUE_ID;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializePolicy() {\x0d\n  const experimentalPolicy = getOptionValue('--experimental-policy');\x0d\n  if (experimentalPolicy) {\x0d\n    process.emitWarning('Policies are experimental.'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { pathToFileURL\x2C URL } = require('internal/url');\x0d\n    // URL here as it is slightly different parsing\x0d\n    // no bare specifiers for now\x0d\n    let manifestURL;\x0d\n    if (require('path').isAbsolute(experimentalPolicy)) {\x0d\n      manifestURL = new URL(`file://${experimentalPolicy}`);\x0d\n    } else {\x0d\n      const cwdURL = pathToFileURL(process.cwd());\x0d\n      cwdURL.pathname += '/';\x0d\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\x0d\n    }\x0d\n    const fs = require('fs');\x0d\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\x0d\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\x0d\n    if (experimentalPolicyIntegrity) {\x0d\n      const SRI = require('internal/policy/sri');\x0d\n      const { createHash\x2C timingSafeEqual } = require('crypto');\x0d\n      const realIntegrities = new SafeMap();\x0d\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\x0d\n      let foundMatch = false;\x0d\n      for (let i = 0; i < integrityEntries.length; i++) {\x0d\n        const {\x0d\n          algorithm\x2C\x0d\n          value: expected\x0d\n        } = integrityEntries[i];\x0d\n        const hash = createHash(algorithm);\x0d\n        hash.update(src);\x0d\n        const digest = hash.digest();\x0d\n        if (digest.length === expected.length &&\x0d\n          timingSafeEqual(digest\x2C expected)) {\x0d\n          foundMatch = true;\x0d\n          break;\x0d\n        }\x0d\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\x0d\n      }\x0d\n      if (!foundMatch) {\x0d\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\x0d\n      }\x0d\n    }\x0d\n    require('internal/process/policy')\x0d\n      .setup(src\x2C manifestURL.href);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeWASI() {\x0d\n  const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n  const mod = NativeModule.map.get('wasi');\x0d\n  mod.canBeRequiredByUsers =\x0d\n    getOptionValue('--experimental-wasi-unstable-preview1');\x0d\n}\x0d\n\x0d\nfunction initializeCJSLoader() {\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\x0d\n    CJSLoader.Module._initPaths();\x0d\n  }\x0d\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\x0d\n  CJSLoader.Module.runMain =\x0d\n    require('internal/modules/run_main').executeUserEntryPoint;\x0d\n}\x0d\n\x0d\nfunction initializeESMLoader() {\x0d\n  // Create this WeakMap in js-land because V8 has no C++ API for WeakMap.\x0d\n  internalBinding('module_wrap').callbackMap = new SafeWeakMap();\x0d\n\x0d\n  if (getEmbedderOptions().shouldNotRegisterESMLoader) return;\x0d\n\x0d\n  const {\x0d\n    setImportModuleDynamicallyCallback\x2C\x0d\n    setInitializeImportMetaObjectCallback\x0d\n  } = internalBinding('module_wrap');\x0d\n  const esm = require('internal/process/esm_loader');\x0d\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\x0d\n  // track of for different ESM modules.\x0d\n  setInitializeImportMetaObjectCallback(esm.initializeImportMetaObject);\x0d\n  setImportModuleDynamicallyCallback(esm.importModuleDynamicallyCallback);\x0d\n\x0d\n  // Patch the vm module when --experimental-vm-modules is on.\x0d\n  // Please update the comments in vm.js when this block changes.\x0d\n  if (getOptionValue('--experimental-vm-modules')) {\x0d\n    const {\x0d\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\x0d\n    } = require('internal/vm/module');\x0d\n    const vm = require('vm');\x0d\n    vm.Module = Module;\x0d\n    vm.SourceTextModule = SourceTextModule;\x0d\n    vm.SyntheticModule = SyntheticModule;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeSourceMapsHandlers() {\x0d\n  const { setSourceMapsEnabled } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction initializeFrozenIntrinsics() {\x0d\n  if (getOptionValue('--frozen-intrinsics')) {\x0d\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    require('internal/freeze_intrinsics')();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction loadPreloadModules() {\x0d\n  // For user code\x2C we preload modules if `-r` is passed\x0d\n  const preloadModules = getOptionValue('--require');\x0d\n  if (preloadModules && preloadModules.length > 0) {\x0d\n    const {\x0d\n      Module: {\x0d\n        _preloadModules\x0d\n      }\x2C\x0d\n    } = require('internal/modules/cjs/loader');\x0d\n    _preloadModules(preloadModules);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  patchProcessObject\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n  setupWarningHandler\x2C\x0d\n  setupFetch\x2C\x0d\n  setupWebCrypto\x2C\x0d\n  setupDebugEnv\x2C\x0d\n  setupPerfHooks\x2C\x0d\n  prepareMainThreadExecution\x2C\x0d\n  initializeDeprecations\x2C\x0d\n  initializeESMLoader\x2C\x0d\n  initializeFrozenIntrinsics\x2C\x0d\n  initializeSourceMapsHandlers\x2C\x0d\n  loadPreloadModules\x2C\x0d\n  setupTraceCategoryState\x2C\x0d\n  setupInspectorHooks\x2C\x0d\n  initializeReport\x2C\x0d\n  initializeCJSLoader\x2C\x0d\n  initializeWASI\x0d\n};\x0d\n
code-source-info,0x22cec143f7e,96,0,18262,C0O0C4O18262,,
code-creation,Function,10,1296060,0x22cec144bae,497, node:internal/bootstrap/pre_execution:1:1,0x22cec143ef8,~
code-source-info,0x22cec144bae,96,0,18262,C0O0C214O28C220O47C226O72C232O107C238O119C244O135C250O165C256O253C262O253C267O209C273O228C279O319C285O319C290O291C296O429C302O429C307O359C313O379C319O407C325O477C331O477C336O466C342O539C348O539C353O565C358O505C364O589C370O589C374O589C376O17813C383O17835C389O17858C395O17881C401O17905C407O17920C413O17939C419O17957C425O17976C431O18007C437O18034C443O18058C449O18089C455O18122C461O18145C467O18173C473O18197C479O18218C485O18242C491O17828C496O18261,,
code-creation,LazyCompile,10,1296820,0x22cec146476,225,prepareMainThreadExecution node:internal/bootstrap/pre_execution:28:36,0x22cec143fb0,~
code-source-info,0x22cec
tick,0x7ff7ddef46c5,1297063,1,0x7ff7dd90e150,2,0x7ff7de2559a0,0x22cec142fec,0x22cec1422dd,0x22cec142059
code-creation,LazyCompile,10,1297203,0x22cec147886,19,reconnectZeroFillToggle node:internal/buffer:1072:33,0x12f5b0cbdb8,~
script-source,25,node:internal/buffer,'use strict';\x0d\n\x0d\nconst {\x0d\n  BigInt\x2C\x0d\n  Float32Array\x2C\x0d\n  Float64Array\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateNumber } = require('internal/validators');\x0d\nconst {\x0d\n  asciiSlice\x2C\x0d\n  base64Slice\x2C\x0d\n  base64urlSlice\x2C\x0d\n  latin1Slice\x2C\x0d\n  hexSlice\x2C\x0d\n  ucs2Slice\x2C\x0d\n  utf8Slice\x2C\x0d\n  asciiWrite\x2C\x0d\n  base64Write\x2C\x0d\n  base64urlWrite\x2C\x0d\n  latin1Write\x2C\x0d\n  hexWrite\x2C\x0d\n  ucs2Write\x2C\x0d\n  utf8Write\x2C\x0d\n  getZeroFillToggle\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  untransferable_object_private_symbol\x2C\x0d\n  setHiddenValue\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\n// Temporary buffers to convert numbers.\x0d\nconst float32Array = new Float32Array(1);\x0d\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\x0d\nconst float64Array = new Float64Array(1);\x0d\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\x0d\n\x0d\n// Check endianness.\x0d\nfloat32Array[0] = -1; // 0xBF800000\x0d\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\x0d\n// check this with `os.endianness()` because that is determined at compile time.\x0d\nconst bigEndian = uInt8Float32Array[3] === 0;\x0d\n\x0d\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\x0d\n    boundsError(offset\x2C buf.length - (byteLength + 1));\x0d\n}\x0d\n\x0d\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\x0d\n  if (value > max || value < min) {\x0d\n    const n = typeof min === 'bigint' ? 'n' : '';\x0d\n    let range;\x0d\n    if (byteLength > 3) {\x0d\n      if (min === 0 || min === 0n) {\x0d\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\x0d\n      } else {\x0d\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\x0d\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\x0d\n      }\x0d\n    } else {\x0d\n      range = `>= ${min}${n} and <= ${max}${n}`;\x0d\n    }\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\x0d\n  }\x0d\n  checkBounds(buf\x2C offset\x2C byteLength);\x0d\n}\x0d\n\x0d\nfunction boundsError(value\x2C length\x2C type) {\x0d\n  if (MathFloor(value) !== value) {\x0d\n    validateNumber(value\x2C type);\x0d\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n\x0d\n  if (length < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\x0d\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\x0d\n                             value);\x0d\n}\x0d\n\x0d\n// Read integers.\x0d\nfunction readBigUInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const lo = first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24;\x0d\n\x0d\n  const hi = this[++offset] +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n\x0d\n  return BigInt(lo) + (BigInt(hi) << 32n);\x0d\n}\x0d\n\x0d\nfunction readBigUInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const hi = first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n\x0d\n  const lo = this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n\x0d\n  return (BigInt(hi) << 32n) + BigInt(lo);\x0d\n}\x0d\n\x0d\nfunction readBigInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = this[offset + 4] +\x0d\n    this[offset + 5] * 2 ** 8 +\x0d\n    this[offset + 6] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24);\x0d\n}\x0d\n\x0d\nfunction readBigInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last);\x0d\n}\x0d\n\x0d\nfunction readUIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    last * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readUInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n}\x0d\n\x0d\nfunction readUInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first + last * 2 ** 8;\x0d\n}\x0d\n\x0d\nfunction readUInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val;\x0d\n}\x0d\n\x0d\nfunction readUIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readUInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[offset + 4] + last * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n}\x0d\n\x0d\nfunction readInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first + last * 2 ** 8;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\nfunction readInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val | (val & 2 ** 7) * 0x1fffffe;\x0d\n}\x0d\n\x0d\nfunction readIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[++offset] + first * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\n// Read floats\x0d\nfunction readFloatBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[3] = first;\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[0] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readFloatForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[0] = first;\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[3] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[7] = first;\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[0] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[0] = first;\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[7] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\n// Write integers.\x0d\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset + 7] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 6] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 5] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 4] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset + 3] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 2] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 1] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset] = hi;\x0d\n  return offset + 8;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  const newVal = value;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  // `checkInt()` can not be used here because it checks two entries.\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (value > max || value < min) {\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\x0d\n  }\x0d\n  if (buf[offset] === undefined)\x0d\n    boundsError(offset\x2C buf.length - 1);\x0d\n\x0d\n  buf[offset] = value;\x0d\n  return offset + 1;\x0d\n}\x0d\n\x0d\nfunction writeUInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n}\x0d\n\x0d\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  buf[offset++] = MathFloor(value * 2 ** -32);\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeUInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 3;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\nfunction writeInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n}\x0d\n\x0d\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\n// Write floats.\x0d\nfunction writeDoubleForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeDoubleBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nclass FastBuffer extends Uint8Array {\x0d\n  // Using an explicit constructor here is necessary to avoid relying on\x0d\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\x0d\n    super(bufferOrLength\x2C byteOffset\x2C length);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addBufferPrototypeMethods(proto) {\x0d\n  proto.readBigUInt64LE = readBigUInt64LE;\x0d\n  proto.readBigUInt64BE = readBigUInt64BE;\x0d\n  proto.readBigUint64LE = readBigUInt64LE;\x0d\n  proto.readBigUint64BE = readBigUInt64BE;\x0d\n  proto.readBigInt64LE = readBigInt64LE;\x0d\n  proto.readBigInt64BE = readBigInt64BE;\x0d\n  proto.writeBigUInt64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUInt64BE = writeBigUInt64BE;\x0d\n  proto.writeBigUint64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUint64BE = writeBigUInt64BE;\x0d\n  proto.writeBigInt64LE = writeBigInt64LE;\x0d\n  proto.writeBigInt64BE = writeBigInt64BE;\x0d\n\x0d\n  proto.readUIntLE = readUIntLE;\x0d\n  proto.readUInt32LE = readUInt32LE;\x0d\n  proto.readUInt16LE = readUInt16LE;\x0d\n  proto.readUInt8 = readUInt8;\x0d\n  proto.readUIntBE = readUIntBE;\x0d\n  proto.readUInt32BE = readUInt32BE;\x0d\n  proto.readUInt16BE = readUInt16BE;\x0d\n  proto.readUintLE = readUIntLE;\x0d\n  proto.readUint32LE = readUInt32LE;\x0d\n  proto.readUint16LE = readUInt16LE;\x0d\n  proto.readUint8 = readUInt8;\x0d\n  proto.readUintBE = readUIntBE;\x0d\n  proto.readUint32BE = readUInt32BE;\x0d\n  proto.readUint16BE = readUInt16BE;\x0d\n  proto.readIntLE = readIntLE;\x0d\n  proto.readInt32LE = readInt32LE;\x0d\n  proto.readInt16LE = readInt16LE;\x0d\n  proto.readInt8 = readInt8;\x0d\n  proto.readIntBE = readIntBE;\x0d\n  proto.readInt32BE = readInt32BE;\x0d\n  proto.readInt16BE = readInt16BE;\x0d\n\x0d\n  proto.writeUIntLE = writeUIntLE;\x0d\n  proto.writeUInt32LE = writeUInt32LE;\x0d\n  proto.writeUInt16LE = writeUInt16LE;\x0d\n  proto.writeUInt8 = writeUInt8;\x0d\n  proto.writeUIntBE = writeUIntBE;\x0d\n  proto.writeUInt32BE = writeUInt32BE;\x0d\n  proto.writeUInt16BE = writeUInt16BE;\x0d\n  proto.writeUintLE = writeUIntLE;\x0d\n  proto.writeUint32LE = writeUInt32LE;\x0d\n  proto.writeUint16LE = writeUInt16LE;\x0d\n  proto.writeUint8 = writeUInt8;\x0d\n  proto.writeUintBE = writeUIntBE;\x0d\n  proto.writeUint32BE = writeUInt32BE;\x0d\n  proto.writeUint16BE = writeUInt16BE;\x0d\n  proto.writeIntLE = writeIntLE;\x0d\n  proto.writeInt32LE = writeInt32LE;\x0d\n  proto.writeInt16LE = writeInt16LE;\x0d\n  proto.writeInt8 = writeInt8;\x0d\n  proto.writeIntBE = writeIntBE;\x0d\n  proto.writeInt32BE = writeInt32BE;\x0d\n  proto.writeInt16BE = writeInt16BE;\x0d\n\x0d\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\x0d\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\x0d\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\x0d\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\x0d\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\x0d\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\x0d\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\x0d\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\x0d\n\x0d\n  proto.asciiSlice = asciiSlice;\x0d\n  proto.base64Slice = base64Slice;\x0d\n  proto.base64urlSlice = base64urlSlice;\x0d\n  proto.latin1Slice = latin1Slice;\x0d\n  proto.hexSlice = hexSlice;\x0d\n  proto.ucs2Slice = ucs2Slice;\x0d\n  proto.utf8Slice = utf8Slice;\x0d\n  proto.asciiWrite = asciiWrite;\x0d\n  proto.base64Write = base64Write;\x0d\n  proto.base64urlWrite = base64urlWrite;\x0d\n  proto.latin1Write = latin1Write;\x0d\n  proto.hexWrite = hexWrite;\x0d\n  proto.ucs2Write = ucs2Write;\x0d\n  proto.utf8Write = utf8Write;\x0d\n}\x0d\n\x0d\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\x0d\n// because Buffer needs this and that would introduce a cyclic dependency.\x0d\nfunction markAsUntransferable(obj) {\x0d\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\x0d\n    return;  // This object is a primitive and therefore already untransferable.\x0d\n  setHiddenValue(obj\x2C untransferable_object_private_symbol\x2C true);\x0d\n}\x0d\n\x0d\n// A toggle used to access the zero fill setting of the array buffer allocator\x0d\n// in C++.\x0d\n// |zeroFill| can be undefined when running inside an isolate where we\x0d\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\x0d\nlet zeroFill = getZeroFillToggle();\x0d\nfunction createUnsafeBuffer(size) {\x0d\n  zeroFill[0] = 0;\x0d\n  try {\x0d\n    return new FastBuffer(size);\x0d\n  } finally {\x0d\n    zeroFill[0] = 1;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The connection between the JS land zero fill toggle and the\x0d\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\x0d\n// is deserialized from the snapshot\x2C because V8 owns the underlying\x0d\n// memory of this toggle. This resets the connection.\x0d\nfunction reconnectZeroFillToggle() {\x0d\n  zeroFill = getZeroFillToggle();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FastBuffer\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n  readUInt16BE\x2C\x0d\n  readUInt32BE\x2C\x0d\n  reconnectZeroFillToggle\x0d\n};\x0d\n
code-source-info,0x22cec147886,25,31788,31830,C0O31796C5O31807C11O31805C18O31829,,
code-creation,LazyCompile,10,1302412,0x22cec14a0be,397,patchProcessObject node:internal/bootstrap/pre_execution:89:28,0x22cec144000,~
code-source-info,0x22cec14a0be
code-creation,LazyCompile,10,1302785,0x22cec14a3ee,69,internalBinding node:internal/bootstrap/loaders:164:45,0x3eae9a8f840,~
code-source-info,0x22cec14a3ee,9,5278,5523,C0O5304C7O5314C11O5329C15O5367C25O5394C30O5392C37O5429C48O5448C56O5484C61O5429C66O5507C68O5518,,
code-creation,LazyCompile,10,1303135,0x22cec14a6a6,69,refreshHrtimeBuffer node:internal/process/per_thread:66:29,0x12f5b0d8598,~
script-source,30,node:internal/process/per_thread,'use strict';\x0d\n\x0d\n// This files contains process bootstrappers that can be\x0d\n// run when setting up each thread\x2C including the main\x0d\n// thread and the worker threads.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeEvery\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  BigUint64Array\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  Set\x2C\x0d\n  SetPrototypeEntries\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  Uint32Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_ASSERTION\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst format = require('internal/util/inspect').format;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst constants = internalBinding('constants').os.signals;\x0d\n\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nconst kInternal = Symbol('internal properties');\x0d\n\x0d\nfunction assert(x\x2C msg) {\x0d\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\x0d\n}\x0d\n\x0d\nconst binding = internalBinding('process_methods');\x0d\n\x0d\nlet hrValues;\x0d\nlet hrBigintValues;\x0d\n\x0d\nfunction refreshHrtimeBuffer() {\x0d\n  // The 3 entries filled in by the original process.hrtime contains\x0d\n  // the upper/lower 32 bits of the second part of the value\x2C\x0d\n  // and the remaining nanoseconds of the value.\x0d\n  hrValues = new Uint32Array(binding.hrtimeBuffer);\x0d\n  // Use a BigUint64Array in the closure because this is actually a bit\x0d\n  // faster than simply returning a BigInt from C++ in V8 7.1.\x0d\n  hrBigintValues = new BigUint64Array(binding.hrtimeBuffer\x2C 0\x2C 1);\x0d\n}\x0d\n\x0d\n// Create the buffers.\x0d\nrefreshHrtimeBuffer();\x0d\n\x0d\nfunction hrtime(time) {\x0d\n  binding.hrtime();\x0d\n\x0d\n  if (time !== undefined) {\x0d\n    validateArray(time\x2C 'time');\x0d\n    if (time.length !== 2) {\x0d\n      throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\x0d\n    }\x0d\n\x0d\n    const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\x0d\n    const nsec = hrValues[2] - time[1];\x0d\n    const needsBorrow = nsec < 0;\x0d\n    return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\x0d\n  }\x0d\n\x0d\n  return [\x0d\n    hrValues[0] * 0x100000000 + hrValues[1]\x2C\x0d\n    hrValues[2]\x2C\x0d\n  ];\x0d\n}\x0d\n\x0d\nfunction hrtimeBigInt() {\x0d\n  binding.hrtimeBigInt();\x0d\n  return hrBigintValues[0];\x0d\n}\x0d\n\x0d\n// The execution of this function itself should not cause any side effects.\x0d\nfunction wrapProcessMethods(binding) {\x0d\n  const {\x0d\n    cpuUsage: _cpuUsage\x2C\x0d\n    memoryUsage: _memoryUsage\x2C\x0d\n    rss\x2C\x0d\n    resourceUsage: _resourceUsage\x0d\n  } = binding;\x0d\n\x0d\n  function _rawDebug(...args) {\x0d\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\x0d\n  }\x0d\n\x0d\n  // Create the argument array that will be passed to the native function.\x0d\n  const cpuValues = new Float64Array(2);\x0d\n\x0d\n  // Replace the native function with the JS version that calls the native\x0d\n  // function.\x0d\n  function cpuUsage(prevValue) {\x0d\n    // If a previous value was passed in\x2C ensure it has the correct shape.\x0d\n    if (prevValue) {\x0d\n      if (!previousValueIsValid(prevValue.user)) {\x0d\n        validateObject(prevValue\x2C 'prevValue');\x0d\n\x0d\n        validateNumber(prevValue.user\x2C 'prevValue.user');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\x0d\n                                                   prevValue.user);\x0d\n      }\x0d\n\x0d\n      if (!previousValueIsValid(prevValue.system)) {\x0d\n        validateNumber(prevValue.system\x2C 'prevValue.system');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\x0d\n                                                   prevValue.system);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Call the native function to get the current values.\x0d\n    _cpuUsage(cpuValues);\x0d\n\x0d\n    // If a previous value was passed in\x2C return diff of current from previous.\x0d\n    if (prevValue) {\x0d\n      return {\x0d\n        user: cpuValues[0] - prevValue.user\x2C\x0d\n        system: cpuValues[1] - prevValue.system\x0d\n      };\x0d\n    }\x0d\n\x0d\n    // If no previous value passed in\x2C return current value.\x0d\n    return {\x0d\n      user: cpuValues[0]\x2C\x0d\n      system: cpuValues[1]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\x0d\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\x0d\n  function previousValueIsValid(num) {\x0d\n    return typeof num === 'number' &&\x0d\n        num <= NumberMAX_SAFE_INTEGER &&\x0d\n        num >= 0;\x0d\n  }\x0d\n\x0d\n  const memValues = new Float64Array(5);\x0d\n  function memoryUsage() {\x0d\n    _memoryUsage(memValues);\x0d\n    return {\x0d\n      rss: memValues[0]\x2C\x0d\n      heapTotal: memValues[1]\x2C\x0d\n      heapUsed: memValues[2]\x2C\x0d\n      external: memValues[3]\x2C\x0d\n      arrayBuffers: memValues[4]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  memoryUsage.rss = rss;\x0d\n\x0d\n  function exit(code) {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n\x0d\n    if (code || code === 0)\x0d\n      process.exitCode = code;\x0d\n\x0d\n    if (!process._exiting) {\x0d\n      process._exiting = true;\x0d\n      process.emit('exit'\x2C process.exitCode || 0);\x0d\n    }\x0d\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\x0d\n    // in the user land. Either document it\x2C or deprecate it in favor of a\x0d\n    // better public alternative.\x0d\n    process.reallyExit(process.exitCode || 0);\x0d\n  }\x0d\n\x0d\n  function kill(pid\x2C sig) {\x0d\n    let err;\x0d\n\x0d\n    // eslint-disable-next-line eqeqeq\x0d\n    if (pid != (pid | 0)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\x0d\n    }\x0d\n\x0d\n    // Preserve null signal\x0d\n    if (sig === (sig | 0)) {\x0d\n      // XXX(joyeecheung): we have to use process._kill here because\x0d\n      // it's monkey-patched by tests.\x0d\n      err = process._kill(pid\x2C sig);\x0d\n    } else {\x0d\n      sig = sig || 'SIGTERM';\x0d\n      if (constants[sig]) {\x0d\n        err = process._kill(pid\x2C constants[sig]);\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_SIGNAL(sig);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const resourceValues = new Float64Array(16);\x0d\n  function resourceUsage() {\x0d\n    _resourceUsage(resourceValues);\x0d\n    return {\x0d\n      userCPUTime: resourceValues[0]\x2C\x0d\n      systemCPUTime: resourceValues[1]\x2C\x0d\n      maxRSS: resourceValues[2]\x2C\x0d\n      sharedMemorySize: resourceValues[3]\x2C\x0d\n      unsharedDataSize: resourceValues[4]\x2C\x0d\n      unsharedStackSize: resourceValues[5]\x2C\x0d\n      minorPageFault: resourceValues[6]\x2C\x0d\n      majorPageFault: resourceValues[7]\x2C\x0d\n      swappedOut: resourceValues[8]\x2C\x0d\n      fsRead: resourceValues[9]\x2C\x0d\n      fsWrite: resourceValues[10]\x2C\x0d\n      ipcSent: resourceValues[11]\x2C\x0d\n      ipcReceived: resourceValues[12]\x2C\x0d\n      signalsCount: resourceValues[13]\x2C\x0d\n      voluntaryContextSwitches: resourceValues[14]\x2C\x0d\n      involuntaryContextSwitches: resourceValues[15]\x0d\n    };\x0d\n  }\x0d\n\x0d\n\x0d\n  return {\x0d\n    _rawDebug\x2C\x0d\n    cpuUsage\x2C\x0d\n    resourceUsage\x2C\x0d\n    memoryUsage\x2C\x0d\n    kill\x2C\x0d\n    exit\x0d\n  };\x0d\n}\x0d\n\x0d\nconst replaceUnderscoresRegex = /_/g;\x0d\nconst leadingDashesRegex = /^--?/;\x0d\nconst trailingValuesRegex = /=.*$/;\x0d\n\x0d\n// This builds the initial process.allowedNodeEnvironmentFlags\x0d\n// from data in the config binding.\x0d\nfunction buildAllowedFlags() {\x0d\n  const {\x0d\n    envSettings: { kAllowedInEnvironment }\x2C\x0d\n    types: { kBoolean }\x2C\x0d\n  } = internalBinding('options');\x0d\n  const { options\x2C aliases } = require('internal/options');\x0d\n\x0d\n  const allowedNodeEnvironmentFlags = [];\x0d\n  for (const { 0: name\x2C 1: info } of options) {\x0d\n    if (info.envVarSettings === kAllowedInEnvironment) {\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\x0d\n      if (info.type === kBoolean) {\x0d\n        const negatedName = `--no-${name.slice(2)}`;\x0d\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function isAccepted(to) {\x0d\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\x0d\n    const recursiveExpansion = aliases.get(to);\x0d\n    if (recursiveExpansion) {\x0d\n      if (recursiveExpansion[0] === to)\x0d\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\x0d\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\x0d\n    }\x0d\n    return options.get(to).envVarSettings === kAllowedInEnvironment;\x0d\n  }\x0d\n  for (const { 0: from\x2C 1: expansion } of aliases) {\x0d\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\x0d\n      let canonical = from;\x0d\n      if (StringPrototypeEndsWith(canonical\x2C '='))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\x0d\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const trimLeadingDashes =\x0d\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\x0d\n\x0d\n  // Save these for comparison against flags provided to\x0d\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\x0d\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\x0d\n                                      trimLeadingDashes);\x0d\n\x0d\n  class NodeEnvironmentFlagsSet extends Set {\x0d\n    constructor(array) {\x0d\n      super();\x0d\n      this[kInternal] = { array };\x0d\n    }\x0d\n\x0d\n    add() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    delete() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    clear() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n    }\x0d\n\x0d\n    has(key) {\x0d\n      // This will return `true` based on various possible\x0d\n      // permutations of a flag\x2C including present/missing leading\x0d\n      // dash(es) and/or underscores-for-dashes.\x0d\n      // Strips any values after `=`\x2C inclusive.\x0d\n      // TODO(addaleax): It might be more flexible to run the option parser\x0d\n      // on a dummy option set and see whether it rejects the argument or\x0d\n      // not.\x0d\n      if (typeof key === 'string') {\x0d\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\x0d\n        if (RegExpPrototypeTest(leadingDashesRegex\x2C key)) {\x0d\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\x0d\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\x0d\n        }\x0d\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    entries() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeEntries(this[kInternal].set);\x0d\n    }\x0d\n\x0d\n    forEach(callback\x2C thisArg = undefined) {\x0d\n      ArrayPrototypeForEach(\x0d\n        this[kInternal].array\x2C\x0d\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\x0d\n      );\x0d\n    }\x0d\n\x0d\n    get size() {\x0d\n      return this[kInternal].array.length;\x0d\n    }\x0d\n\x0d\n    values() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeValues(this[kInternal].set);\x0d\n    }\x0d\n  }\x0d\n  NodeEnvironmentFlagsSet.prototype.keys =\x0d\n  NodeEnvironmentFlagsSet.prototype[SymbolIterator] =\x0d\n    NodeEnvironmentFlagsSet.prototype.values;\x0d\n\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\x0d\n\x0d\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\x0d\n    allowedNodeEnvironmentFlags\x0d\n  ));\x0d\n}\x0d\n\x0d\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\x0d\n// trace event category is enabled.\x0d\nlet traceEventsAsyncHook;\x0d\n// Dynamically enable/disable the traceEventsAsyncHook\x0d\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\x0d\n  if (asyncHooksEnabled) {\x0d\n    if (!traceEventsAsyncHook) {\x0d\n      traceEventsAsyncHook =\x0d\n        require('internal/trace_events_async_hooks').createHook();\x0d\n    }\x0d\n    traceEventsAsyncHook.enable();\x0d\n  } else if (traceEventsAsyncHook) {\x0d\n    traceEventsAsyncHook.disable();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toggleTraceCategoryState\x2C\x0d\n  assert\x2C\x0d\n  buildAllowedFlags\x2C\x0d\n  wrapProcessMethods\x2C\x0d\n  hrtime\x2C\x0d\n  hrtimeBigInt\x2C\x0d\n  refreshHrtimeBuffer\x2C\x0d\n};\x0d\n
code-source-info,0x22cec14a6a6,30,1477,1925,C0O1668C7O1695C10O1703C17O1679C25O1677C31O1858C38O1894C41O1902C53O1875C61O1873C68O1924,,
code-creation,LazyCompile,10,1305811,0x22cec14b766,832,resolve node:path:158:10,0x15057ccd510,~
script-source,41,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  CHAR_UPPERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_UPPERCASE_Z\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_QUESTION_MARK\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst platformIsWin32 = (process.platform === 'win32');\x0d\n\x0d\nfunction isPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isPosixPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isWindowsDeviceRoot(code) {\x0d\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\x0d\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\x0d\n}\x0d\n\x0d\n// Resolves . and .. elements in a path with directory names\x0d\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\x0d\n  let res = '';\x0d\n  let lastSegmentLength = 0;\x0d\n  let lastSlash = -1;\x0d\n  let dots = 0;\x0d\n  let code = 0;\x0d\n  for (let i = 0; i <= path.length; ++i) {\x0d\n    if (i < path.length)\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n    else if (isPathSeparator(code))\x0d\n      break;\x0d\n    else\x0d\n      code = CHAR_FORWARD_SLASH;\x0d\n\x0d\n    if (isPathSeparator(code)) {\x0d\n      if (lastSlash === i - 1 || dots === 1) {\x0d\n        // NOOP\x0d\n      } else if (dots === 2) {\x0d\n        if (res.length < 2 || lastSegmentLength !== 2 ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\x0d\n          if (res.length > 2) {\x0d\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            if (lastSlashIndex === -1) {\x0d\n              res = '';\x0d\n              lastSegmentLength = 0;\x0d\n            } else {\x0d\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\x0d\n              lastSegmentLength =\x0d\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            }\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          } else if (res.length !== 0) {\x0d\n            res = '';\x0d\n            lastSegmentLength = 0;\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          }\x0d\n        }\x0d\n        if (allowAboveRoot) {\x0d\n          res += res.length > 0 ? `${separator}..` : '..';\x0d\n          lastSegmentLength = 2;\x0d\n        }\x0d\n      } else {\x0d\n        if (res.length > 0)\x0d\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\x0d\n        else\x0d\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\x0d\n        lastSegmentLength = i - lastSlash - 1;\x0d\n      }\x0d\n      lastSlash = i;\x0d\n      dots = 0;\x0d\n    } else if (code === CHAR_DOT && dots !== -1) {\x0d\n      ++dots;\x0d\n    } else {\x0d\n      dots = -1;\x0d\n    }\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} sep\x0d\n * @param {{\x0d\n *  dir?: string;\x0d\n *  root?: string;\x0d\n *  base?: string;\x0d\n *  name?: string;\x0d\n *  ext?: string;\x0d\n *  }} pathObject\x0d\n * @returns {string}\x0d\n */\x0d\nfunction _format(sep\x2C pathObject) {\x0d\n  validateObject(pathObject\x2C 'pathObject');\x0d\n  const dir = pathObject.dir || pathObject.root;\x0d\n  const base = pathObject.base ||\x0d\n    `${pathObject.name || ''}${pathObject.ext || ''}`;\x0d\n  if (!dir) {\x0d\n    return base;\x0d\n  }\x0d\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\x0d\n}\x0d\n\x0d\nconst win32 = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedDevice = '';\x0d\n    let resolvedTail = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1; i--) {\x0d\n      let path;\x0d\n      if (i >= 0) {\x0d\n        path = args[i];\x0d\n        validateString(path\x2C 'path');\x0d\n\x0d\n        // Skip empty entries\x0d\n        if (path.length === 0) {\x0d\n          continue;\x0d\n        }\x0d\n      } else if (resolvedDevice.length === 0) {\x0d\n        path = process.cwd();\x0d\n      } else {\x0d\n        // Windows has the concept of drive-specific current working\x0d\n        // directories. If we've resolved a drive letter but not yet an\x0d\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\x0d\n        // the drive cwd is not available. We're sure the device is not\x0d\n        // a UNC path at this points\x2C because UNC paths are always absolute.\x0d\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\x0d\n\x0d\n        // Verify that a cwd was found and that it actually points\x0d\n        // to our drive. If not\x2C default to the drive's root.\x0d\n        if (path === undefined ||\x0d\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\x0d\n            StringPrototypeToLowerCase(resolvedDevice) &&\x0d\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\x0d\n          path = `${resolvedDevice}\\\\`;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      const len = path.length;\x0d\n      let rootEnd = 0;\x0d\n      let device = '';\x0d\n      let isAbsolute = false;\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n      // Try to match a root\x0d\n      if (len === 1) {\x0d\n        if (isPathSeparator(code)) {\x0d\n          // `path` contains just a path separator\x0d\n          rootEnd = 1;\x0d\n          isAbsolute = true;\x0d\n        }\x0d\n      } else if (isPathSeparator(code)) {\x0d\n        // Possible UNC root\x0d\n\x0d\n        // If we started with a separator\x2C we know we at least have an\x0d\n        // absolute path of some kind (UNC or otherwise)\x0d\n        isAbsolute = true;\x0d\n\x0d\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n          // Matched double path separator at beginning\x0d\n          let j = 2;\x0d\n          let last = j;\x0d\n          // Match 1 or more non-path separators\x0d\n          while (j < len &&\x0d\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more path separators\x0d\n            while (j < len &&\x0d\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j < len && j !== last) {\x0d\n              // Matched!\x0d\n              last = j;\x0d\n              // Match 1 or more non-path separators\x0d\n              while (j < len &&\x0d\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n                j++;\x0d\n              }\x0d\n              if (j === len || j !== last) {\x0d\n                // We matched a UNC root\x0d\n                device =\x0d\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n                rootEnd = j;\x0d\n              }\x0d\n            }\x0d\n          }\x0d\n        } else {\x0d\n          rootEnd = 1;\x0d\n        }\x0d\n      } else if (isWindowsDeviceRoot(code) &&\x0d\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n        // Possible device root\x0d\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n        rootEnd = 2;\x0d\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n          // Treat separator following drive name as an absolute path\x0d\n          // indicator\x0d\n          isAbsolute = true;\x0d\n          rootEnd = 3;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (device.length > 0) {\x0d\n        if (resolvedDevice.length > 0) {\x0d\n          if (StringPrototypeToLowerCase(device) !==\x0d\n              StringPrototypeToLowerCase(resolvedDevice))\x0d\n            // This path points to another device so it is not applicable\x0d\n            continue;\x0d\n        } else {\x0d\n          resolvedDevice = device;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (resolvedAbsolute) {\x0d\n        if (resolvedDevice.length > 0)\x0d\n          break;\x0d\n      } else {\x0d\n        resolvedTail =\x0d\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\x0d\n        resolvedAbsolute = isAbsolute;\x0d\n        if (isAbsolute && resolvedDevice.length > 0) {\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C\x0d\n    // but handle relative paths to be safe (might happen when process.cwd()\x0d\n    // fails)\x0d\n\x0d\n    // Normalize the tail path\x0d\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\x0d\n                                   isPathSeparator);\x0d\n\x0d\n    return resolvedAbsolute ?\x0d\n      `${resolvedDevice}\\\\${resolvedTail}` :\x0d\n      `${resolvedDevice}${resolvedTail}` || '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = 0;\x0d\n    let device;\x0d\n    let isAbsolute = false;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    // Try to match a root\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a single char\x2C exit early to avoid\x0d\n      // unnecessary work\x0d\n      return isPosixPathSeparator(code) ? '\\\\' : path;\x0d\n    }\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      // If we started with a separator\x2C we know we at least have an absolute\x0d\n      // path of some kind (UNC or otherwise)\x0d\n      isAbsolute = true;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              // Return the normalized version of the UNC root since there\x0d\n              // is nothing left to process\x0d\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              device =\x0d\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n              rootEnd = j;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        rootEnd = 1;\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n      rootEnd = 2;\x0d\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        // Treat separator following drive name as an absolute path\x0d\n        // indicator\x0d\n        isAbsolute = true;\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let tail = rootEnd < len ?\x0d\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\x0d\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\x0d\n      '';\x0d\n    if (tail.length === 0 && !isAbsolute)\x0d\n      tail = '.';\x0d\n    if (tail.length > 0 &&\x0d\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\x0d\n      tail += '\\\\';\x0d\n    if (device === undefined) {\x0d\n      return isAbsolute ? `\\\\${tail}` : tail;\x0d\n    }\x0d\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return false;\x0d\n\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n    return isPathSeparator(code) ||\x0d\n      // Possible device root\x0d\n      (len > 2 &&\x0d\n      isWindowsDeviceRoot(code) &&\x0d\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    let joined;\x0d\n    let firstPart;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = firstPart = arg;\x0d\n        else\x0d\n          joined += `\\\\${arg}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n\x0d\n    // Make sure that the joined path doesn't start with two slashes\x2C because\x0d\n    // normalize() will mistake it for a UNC path then.\x0d\n    //\x0d\n    // This step is skipped when it is very clear that the user actually\x0d\n    // intended to point at a UNC path. This is assumed when the first\x0d\n    // non-empty string arguments starts with exactly two slashes followed by\x0d\n    // at least one more non-slash character.\x0d\n    //\x0d\n    // Note that for normalize() to treat a path as a UNC path it needs to\x0d\n    // have at least 2 components\x2C so we don't filter for that here.\x0d\n    // This means that the user can use join to construct UNC paths from\x0d\n    // a server name and a share name; for example:\x0d\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\x0d\n    let needsReplace = true;\x0d\n    let slashCount = 0;\x0d\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\x0d\n      ++slashCount;\x0d\n      const firstLen = firstPart.length;\x0d\n      if (firstLen > 1 &&\x0d\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\x0d\n        ++slashCount;\x0d\n        if (firstLen > 2) {\x0d\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\x0d\n            ++slashCount;\x0d\n          else {\x0d\n            // We matched a UNC path in the first part\x0d\n            needsReplace = false;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (needsReplace) {\x0d\n      // Find any more consecutive slashes we need to replace\x0d\n      while (slashCount < joined.length &&\x0d\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\x0d\n        slashCount++;\x0d\n      }\x0d\n\x0d\n      // Replace the slashes if needed\x0d\n      if (slashCount >= 2)\x0d\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\x0d\n    }\x0d\n\x0d\n    return win32.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * It will solve the relative path from `from` to `to`\x2C for instance\x0d\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\x0d\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\x0d\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromOrig = win32.resolve(from);\x0d\n    const toOrig = win32.resolve(to);\x0d\n\x0d\n    if (fromOrig === toOrig)\x0d\n      return '';\x0d\n\x0d\n    from = StringPrototypeToLowerCase(fromOrig);\x0d\n    to = StringPrototypeToLowerCase(toOrig);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let fromStart = 0;\x0d\n    while (fromStart < from.length &&\x0d\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\x0d\n      fromStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let fromEnd = from.length;\x0d\n    while (\x0d\n      fromEnd - 1 > fromStart &&\x0d\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      fromEnd--;\x0d\n    }\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let toStart = 0;\x0d\n    while (toStart < to.length &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\x0d\n      toStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let toEnd = to.length;\x0d\n    while (toEnd - 1 > toStart &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\x0d\n      toEnd--;\x0d\n    }\x0d\n    const toLen = toEnd - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = fromLen < toLen ? fromLen : toLen;\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_BACKWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n\x0d\n    // We found a mismatch before the first common path separator was seen\x2C so\x0d\n    // return the original `to`.\x0d\n    if (i !== length) {\x0d\n      if (lastCommonSep === -1)\x0d\n        return toOrig;\x0d\n    } else {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 2) {\x0d\n          // We get here if `from` is the device root.\x0d\n          // For example: from='C:\\\\'; to='C:\\\\foo'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\x0d\n        }\x0d\n      }\x0d\n      if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 2) {\x0d\n          // We get here if `to` is the device root.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\x0d\n          lastCommonSep = 3;\x0d\n        }\x0d\n      }\x0d\n      if (lastCommonSep === -1)\x0d\n        lastCommonSep = 0;\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to` and\x0d\n    // `from`\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '\\\\..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    toStart += lastCommonSep;\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts\x0d\n    if (out.length > 0)\x0d\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\x0d\n      ++toStart;\x0d\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Note: this will *probably* throw somewhere.\x0d\n    if (typeof path !== 'string' || path.length === 0)\x0d\n      return path;\x0d\n\x0d\n    const resolvedPath = win32.resolve(path);\x0d\n\x0d\n    if (resolvedPath.length <= 2)\x0d\n      return path;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\x0d\n      // Possible UNC root\x0d\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\x0d\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\x0d\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\x0d\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\x0d\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\x0d\n        }\x0d\n      }\x0d\n    } else if (\x0d\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      // Matched device root\x2C convert the path to a long UNC path\x0d\n      return `\\\\\\\\?\\\\${resolvedPath}`;\x0d\n    }\x0d\n\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = -1;\x0d\n    let offset = 0;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a path separator\x2C exit early to avoid\x0d\n      // unnecessary work or a dot.\x0d\n      return isPathSeparator(code) ? path : '.';\x0d\n    }\x0d\n\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = offset = 1;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              return path;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n\x0d\n              // Offset by 1 to include the separator after the UNC root to\x0d\n              // treat it as a "normal root" on top of a (UNC) root\x0d\n              rootEnd = offset = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    // Possible device root\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      rootEnd =\x0d\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\x0d\n      offset = rootEnd;\x0d\n    }\x0d\n\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = len - 1; i >= offset; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1) {\x0d\n      if (rootEnd === -1)\x0d\n        return '.';\x0d\n\x0d\n      end = rootEnd;\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n    if (path.length >= 2 &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      start = 2;\x0d\n    }\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= start; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (isPathSeparator(code)) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n\x0d\n    if (path.length >= 2 &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\x0d\n      start = startPart = 2;\x0d\n    }\x0d\n\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *  dir: string;\x0d\n   *  root: string;\x0d\n   *  base: string;\x0d\n   *  name: string;\x0d\n   *  ext: string;\x0d\n   *  }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n\x0d\n    const len = path.length;\x0d\n    let rootEnd = 0;\x0d\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      if (isPathSeparator(code)) {\x0d\n        // `path` contains just a path separator\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      ret.base = ret.name = path;\x0d\n      return ret;\x0d\n    }\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = 1;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              rootEnd = j;\x0d\n            } else if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              rootEnd = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      if (len <= 2) {\x0d\n        // `path` contains just a drive root\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      rootEnd = 2;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        if (len === 3) {\x0d\n          // `path` contains just a drive root\x2C exit early to avoid\x0d\n          // unnecessary work\x0d\n          ret.root = ret.dir = path;\x0d\n          return ret;\x0d\n        }\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n    if (rootEnd > 0)\x0d\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\x0d\n\x0d\n    let startDot = -1;\x0d\n    let startPart = rootEnd;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= rootEnd; --i) {\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n           startDot === end - 1 &&\x0d\n           startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // If the directory is the root\x2C use the entire root as the `dir` including\x0d\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\x0d\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\x0d\n    if (startPart > 0 && startPart !== rootEnd)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else\x0d\n      ret.dir = ret.root;\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '\\\\'\x2C\x0d\n  delimiter: ';'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nconst posixCwd = (() => {\x0d\n  if (platformIsWin32) {\x0d\n    // Converts Windows' backslash path separators to POSIX forward slashes\x0d\n    // and truncates any drive indicator\x0d\n    const regexp = /\\\\/g;\x0d\n    return () => {\x0d\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\x0d\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // We're already on POSIX\x2C no need for any transformations\x0d\n  return () => process.cwd();\x0d\n})();\x0d\n\x0d\nconst posix = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedPath = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\x0d\n      const path = i >= 0 ? args[i] : posixCwd();\x0d\n\x0d\n      validateString(path\x2C 'path');\x0d\n\x0d\n      // Skip empty entries\x0d\n      if (path.length === 0) {\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      resolvedPath = `${path}/${resolvedPath}`;\x0d\n      resolvedAbsolute =\x0d\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C but\x0d\n    // handle relative paths to be safe (might happen when process.cwd() fails)\x0d\n\x0d\n    // Normalize the path\x0d\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\x0d\n                                   isPosixPathSeparator);\x0d\n\x0d\n    if (resolvedAbsolute) {\x0d\n      return `/${resolvedPath}`;\x0d\n    }\x0d\n    return resolvedPath.length > 0 ? resolvedPath : '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    const trailingSeparator =\x0d\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\x0d\n\x0d\n    // Normalize the path\x0d\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\x0d\n\x0d\n    if (path.length === 0) {\x0d\n      if (isAbsolute)\x0d\n        return '/';\x0d\n      return trailingSeparator ? './' : '.';\x0d\n    }\x0d\n    if (trailingSeparator)\x0d\n      path += '/';\x0d\n\x0d\n    return isAbsolute ? `/${path}` : path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    return path.length > 0 &&\x0d\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n    let joined;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = arg;\x0d\n        else\x0d\n          joined += `/${arg}`;\x0d\n      }\x0d\n    }\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n    return posix.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim leading forward slashes.\x0d\n    from = posix.resolve(from);\x0d\n    to = posix.resolve(to);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromStart = 1;\x0d\n    const fromEnd = from.length;\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n    const toStart = 1;\x0d\n    const toLen = to.length - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = (fromLen < toLen ? fromLen : toLen);\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_FORWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n    if (i === length) {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 0) {\x0d\n          // We get here if `from` is the root\x0d\n          // For example: from='/'; to='/foo'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i);\x0d\n        }\x0d\n      } else if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 0) {\x0d\n          // We get here if `to` is the root.\x0d\n          // For example: from='/foo/bar'; to='/'\x0d\n          lastCommonSep = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to`\x0d\n    // and `from`.\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '/..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts.\x0d\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Non-op on posix systems\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = path.length - 1; i >= 1; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return hasRoot ? '/' : '.';\x0d\n    if (hasRoot && end === 1)\x0d\n      return '//';\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= 0; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (code === CHAR_FORWARD_SLASH) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *   dir: string;\x0d\n   *   root: string;\x0d\n   *   base: string;\x0d\n   *   name: string;\x0d\n   *   ext: string;\x0d\n   *   }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let start;\x0d\n    if (isAbsolute) {\x0d\n      ret.root = '/';\x0d\n      start = 1;\x0d\n    } else {\x0d\n      start = 0;\x0d\n    }\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n          startDot === end - 1 &&\x0d\n          startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startPart > 0)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else if (isAbsolute)\x0d\n      ret.dir = '/';\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '/'\x2C\x0d\n  delimiter: ':'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nposix.win32 = win32.win32 = win32;\x0d\nposix.posix = win32.posix = posix;\x0d\n\x0d\n// Legacy internal API\x2C docs-only deprecated: DEP0080\x0d\nwin32._makeLong = win32.toNamespacedPath;\x0d\nposix._makeLong = posix.toNamespacedPath;\x0d\n\x0d\nmodule.exports = platformIsWin32 ? win32 : posix;\x0d\n
code-source-info,0x22cec14b
tick,0x7ff954d9f25f,1314224,0,0x0,3,0x7ff7dde840c0,0x22cec14a180,0x22cec14648b,0x22cec142065
code-creation,LazyCompile,10,1314341,0x22cec14ed7e,30,validateString node:internal/validators:118:24,0x3eae9abce70,~
script-source,15,node:internal/validators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  NumberParseInt\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_SOCKET_BAD_PORT\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n    ERR_INVALID_CALLBACK\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { normalizeEncoding } = require('internal/util');\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isArrayBufferView\x0d\n} = require('internal/util/types');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nfunction isInt32(value) {\x0d\n  return value === (value | 0);\x0d\n}\x0d\n\x0d\nfunction isUint32(value) {\x0d\n  return value === (value >>> 0);\x0d\n}\x0d\n\x0d\nconst octalReg = /^[0-7]+$/;\x0d\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\x0d\n\x0d\n/**\x0d\n * Parse and validate values that will be converted into mode_t (the S_*\x0d\n * constants). Only valid numbers and octal strings are allowed. They could be\x0d\n * converted to 32-bit unsigned integers or non-negative signed integers in the\x0d\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\x0d\n * behaviors.\x0d\n *\x0d\n * @param {*} value Values to be validated\x0d\n * @param {string} name Name of the argument\x0d\n * @param {number} [def] If specified\x2C will be returned for invalid values\x0d\n * @returns {number}\x0d\n */\x0d\nfunction parseFileMode(value\x2C name\x2C def) {\x0d\n  value ??= def;\x0d\n  if (typeof value === 'string') {\x0d\n    if (!RegExpPrototypeTest(octalReg\x2C value)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\x0d\n    }\x0d\n    value = NumberParseInt(value\x2C 8);\x0d\n  }\x0d\n\x0d\n  validateInt32(value\x2C name\x2C 0\x2C 2 ** 32 - 1);\x0d\n  return value;\x0d\n}\x0d\n\x0d\nconst validateInteger = hideStackFrames(\x0d\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\x0d\n    if (typeof value !== 'number')\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    if (!NumberIsInteger(value))\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    if (value < min || value > max)\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateInt32 = hideStackFrames(\x0d\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\x0d\n    // The defaults for min and max correspond to the limits of 32-bit integers.\x0d\n    if (!isInt32(value)) {\x0d\n      if (typeof value !== 'number') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n      }\x0d\n      if (!NumberIsInteger(value)) {\x0d\n        throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n      }\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n    if (value < min || value > max) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive) => {\x0d\n  if (!isUint32(value)) {\x0d\n    if (typeof value !== 'number') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    }\x0d\n    if (!NumberIsInteger(value)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    }\x0d\n    const min = positive ? 1 : 0;\x0d\n    // 2 ** 32 === 4294967296\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && < 4294967296`\x2C value);\x0d\n  }\x0d\n  if (positive && value === 0) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C '>= 1 && < 4294967296'\x2C value);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateString(value\x2C name) {\x0d\n  if (typeof value !== 'string')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\x0d\n}\x0d\n\x0d\nfunction validateNumber(value\x2C name) {\x0d\n  if (typeof value !== 'number')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n}\x0d\n\x0d\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\x0d\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\x0d\n    const allowed = ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(oneOf\x2C (v) =>\x0d\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\x0d\n      '\x2C ');\x0d\n    const reason = 'must be one of: ' + allowed;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateBoolean(value\x2C name) {\x0d\n  if (typeof value !== 'boolean')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {unknown} value\x0d\n * @param {string} name\x0d\n * @param {{\x0d\n *   allowArray?: boolean\x2C\x0d\n *   allowFunction?: boolean\x2C\x0d\n *   nullable?: boolean\x0d\n * }} [options]\x0d\n */\x0d\nconst validateObject = hideStackFrames(\x0d\n  (value\x2C name\x2C options) => {\x0d\n    const useDefaultOptions = options == null;\x0d\n    const allowArray = useDefaultOptions ? false : options.allowArray;\x0d\n    const allowFunction = useDefaultOptions ? false : options.allowFunction;\x0d\n    const nullable = useDefaultOptions ? false : options.nullable;\x0d\n    if ((!nullable && value === null) ||\x0d\n        (!allowArray && ArrayIsArray(value)) ||\x0d\n        (typeof value !== 'object' && (\x0d\n          !allowFunction || typeof value !== 'function'\x0d\n        ))) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n    }\x0d\n  });\x0d\n\x0d\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\x0d\n  if (!ArrayIsArray(value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\x0d\n  }\x0d\n  if (value.length < minLength) {\x0d\n    const reason = `must be longer than ${minLength}`;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateSignalName(signal\x2C name = 'signal') {\x0d\n  validateString(signal\x2C name);\x0d\n\x0d\n  if (signals[signal] === undefined) {\x0d\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\x0d\n      throw new ERR_UNKNOWN_SIGNAL(signal +\x0d\n                                   ' (signals must use all capital letters)');\x0d\n    }\x0d\n\x0d\n    throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateEncoding(data\x2C encoding) {\x0d\n  const normalizedEncoding = normalizeEncoding(encoding);\x0d\n  const length = data.length;\x0d\n\x0d\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\x0d\n                                    `is invalid for data of length ${length}`);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check that the port number is not NaN when coerced to a number\x2C\x0d\n// is an integer and that it falls within the legal range of port numbers.\x0d\nfunction validatePort(port\x2C name = 'Port'\x2C allowZero = true) {\x0d\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\x0d\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\x0d\n      +port !== (+port >>> 0) ||\x0d\n      port > 0xFFFF ||\x0d\n      (port === 0 && !allowZero)) {\x0d\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\x0d\n  }\x0d\n  return port | 0;\x0d\n}\x0d\n\x0d\nconst validateCallback = hideStackFrames((callback) => {\x0d\n  if (typeof callback !== 'function')\x0d\n    throw new ERR_INVALID_CALLBACK(callback);\x0d\n});\x0d\n\x0d\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\x0d\n  if (signal !== undefined &&\x0d\n      (signal === null ||\x0d\n       typeof signal !== 'object' ||\x0d\n       !('aborted' in signal))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validateFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function' || isAsyncFunction(value))\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validateUndefined = hideStackFrames((value\x2C name) => {\x0d\n  if (value !== undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  isInt32\x2C\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validatePlainFunction\x2C\x0d\n  validatePort\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n  validateUndefined\x2C\x0d\n  validateCallback\x2C\x0d\n  validateAbortSignal\x2C\x0d\n};\x0d\n
code-source-info,0x22cec14ed7e,15,3534,3646,C0O3553C6O3589C22O3595C27O3589C29O3645,,
code-creation,LazyCompile,10,1315629,0x22cec14f71e,17,isPathSeparator node:path:52:25,0x15057cccf90,~
code-source-info,0x22cec14f71e,41,1794,1876,C0O1806C2O1822C4O1818C11O1853C13O1849C16O1873,,
code-creation,LazyCompile,10,1315753,0x22cec14f81e,35,isWindowsDeviceRoot node:path:60:29,0x15057ccd408,~
code-source-info,0x22cec14f81e,41,1991,2136,C0O2003C2O2019C4O2016C11O2047C13O2044C20O2087C22O2084C29O2115C31O2112C34O2133,,
code-creation,LazyCompile,10,1315911,0x22cec14f93e,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20,0x3eae9abeee8,~
script-source,94,node:internal/bootstrap/switches/does_own_process_state,'use strict';\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\nprocess.abort = rawMethods.abort;\x0d\nprocess.umask = wrappedUmask;\x0d\nprocess.chdir = wrappedChdir;\x0d\nprocess.cwd = wrappedCwd;\x0d\n\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  const wrapped = wrapPosixCredentialSetters(credentials);\x0d\n\x0d\n  process.initgroups = wrapped.initgroups;\x0d\n  process.setgroups = wrapped.setgroups;\x0d\n  process.setegid = wrapped.setegid;\x0d\n  process.seteuid = wrapped.seteuid;\x0d\n  process.setgid = wrapped.setgid;\x0d\n  process.setuid = wrapped.setuid;\x0d\n}\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n\x0d\nfunction wrapPosixCredentialSetters(credentials) {\x0d\n  const {\x0d\n    codes: {\x0d\n      ERR_INVALID_ARG_TYPE\x2C\x0d\n      ERR_UNKNOWN_CREDENTIAL\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  const {\x0d\n    validateUint32\x0d\n  } = require('internal/validators');\x0d\n\x0d\n  const {\x0d\n    initgroups: _initgroups\x2C\x0d\n    setgroups: _setgroups\x2C\x0d\n    setegid: _setegid\x2C\x0d\n    seteuid: _seteuid\x2C\x0d\n    setgid: _setgid\x2C\x0d\n    setuid: _setuid\x0d\n  } = credentials;\x0d\n\x0d\n  function initgroups(user\x2C extraGroup) {\x0d\n    validateId(user\x2C 'user');\x0d\n    validateId(extraGroup\x2C 'extraGroup');\x0d\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\x0d\n    const result = _initgroups(user\x2C extraGroup);\x0d\n    if (result === 1) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\x0d\n    } else if (result === 2) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function setgroups(groups) {\x0d\n    validateArray(groups\x2C 'groups');\x0d\n    for (let i = 0; i < groups.length; i++) {\x0d\n      validateId(groups[i]\x2C `groups[${i}]`);\x0d\n    }\x0d\n    // Result is 0 on success. A positive integer indicates that the\x0d\n    // corresponding group was not found.\x0d\n    const result = _setgroups(groups);\x0d\n    if (result > 0) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function wrapIdSetter(type\x2C method) {\x0d\n    return function(id) {\x0d\n      validateId(id\x2C 'id');\x0d\n      if (typeof id === 'number') id |= 0;\x0d\n      // Result is 0 on success\x2C 1 if credential is unknown.\x0d\n      const result = method(id);\x0d\n      if (result === 1) {\x0d\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function validateId(id\x2C name) {\x0d\n    if (typeof id === 'number') {\x0d\n      validateUint32(id\x2C name);\x0d\n    } else if (typeof id !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    initgroups\x2C\x0d\n    setgroups\x2C\x0d\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\x0d\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\x0d\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\x0d\n    setuid: wrapIdSetter('User'\x2C _setuid)\x0d\n  };\x0d\n}\x0d\n\x0d\n// Cache the working directory to prevent lots of lookups. If the working\x0d\n// directory is changed by `chdir`\x2C it'll be updated.\x0d\nlet cachedCwd = '';\x0d\n\x0d\nfunction wrappedChdir(directory) {\x0d\n  validateString(directory\x2C 'directory');\x0d\n  rawMethods.chdir(directory);\x0d\n  // Mark cache that it requires an update.\x0d\n  cachedCwd = '';\x0d\n}\x0d\n\x0d\nfunction wrappedUmask(mask) {\x0d\n  if (mask !== undefined) {\x0d\n    mask = parseFileMode(mask\x2C 'mask');\x0d\n  }\x0d\n  return rawMethods.umask(mask);\x0d\n}\x0d\n\x0d\nfunction wrappedCwd() {\x0d\n  if (cachedCwd === '')\x0d\n    cachedCwd = rawMethods.cwd();\x0d\n  return cachedCwd;\x0d\n}\x0d\n
code-source-info,0x22cec14f93e,94,3464,3552,C0O3472C7O3486C12O3499C17O3522C22O3522C29O3509C35O3532C39O3549,,
code-creation,LazyCompile,10,1316902,0x22cec14ffa6,442,normalizeString node:path:66:25,0x15057ccd458,~
code-source-info,0x22cec14ffa6,41,2226,4212,C0O2292C3O2323C5O2345C8O2363C10O2380C12O2399C14O2412C18O2404C23O2445C27O2438C32O2460C37O2467C45O2517C51O2547C53O2571C58O2609C64O2641C66O2661C69O2655C76O2673C83O2713C85O2722C90O2748C97O2755C104O2780C111O2802C114O2837C118O2844C122O2802C130O2853C132O2849C139O2878C142O2913C146O2920C150O2878C158O2929C160O2925C165O2960C172O2967C177O3010C182O3010C188O3067C190O3086C195O3111C198O3136C202O3196C215O3202C221O3304C225O3311C231O3317C234O3317C239O3315C243O3389C246O3417C248O3440C250O3476C256O3483C261O3505C264O3528C266O3564C269O3592C271O3615C273O3658C277O3702C283O3709C293O3718C308O3751C313O3818C319O3825C324O3841C326O3851C330O3863C335O3900C345O3863C363O3936C370O3979C380O3942C386O3997C388O4019C391O4031C395O4052C398O4074C402O4096C404O4109C406O4105C413O4126C418O4143C425O4172C428O2422C433O2386C439O4198C441O4209,,
code-creation,LazyCompile,10,1317257,0x22cec1506c6,63,addReadOnlyProcessAlias node:internal/bootstrap/pre_execution:130:33,0x22cec144050,~
code-source-info,0x22cec1506c6,96,4358,4593,C16O4411C21O4411C26O4438C28O4456C36O4486C43O4552C49O4571C56O4456C62O4592,,
code-creation,LazyCompile,10,1317406,0x22cec150866,82,getOptionValue node:internal/options:39:24,0x2bf990bdb40,~
script-source,91,node:internal/options,'use strict';\x0d\n\x0d\nconst {\x0d\n  getCLIOptions\x2C\x0d\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\x0d\n} = internalBinding('options');\x0d\n\x0d\nlet warnOnAllowUnauthorized = true;\x0d\n\x0d\nlet optionsMap;\x0d\nlet aliasesMap;\x0d\nlet embedderOptions;\x0d\n\x0d\n// getCLIOptions() would serialize the option values from C++ land.\x0d\n// It would error if the values are queried before bootstrap is\x0d\n// complete so that we don't accidentally include runtime-dependent\x0d\n// states into a runtime-independent snapshot.\x0d\nfunction getCLIOptionsFromBinding() {\x0d\n  if (!optionsMap) {\x0d\n    ({ options: optionsMap } = getCLIOptions());\x0d\n  }\x0d\n  return optionsMap;\x0d\n}\x0d\n\x0d\nfunction getAliasesFromBinding() {\x0d\n  if (!aliasesMap) {\x0d\n    ({ aliases: aliasesMap } = getCLIOptions());\x0d\n  }\x0d\n  return aliasesMap;\x0d\n}\x0d\n\x0d\nfunction getEmbedderOptions() {\x0d\n  if (!embedderOptions) {\x0d\n    embedderOptions = getEmbedderOptionsFromBinding();\x0d\n  }\x0d\n  return embedderOptions;\x0d\n}\x0d\n\x0d\nfunction getOptionValue(optionName) {\x0d\n  const options = getCLIOptionsFromBinding();\x0d\n  if (optionName.startsWith('--no-')) {\x0d\n    const option = options.get('--' + optionName.slice(5));\x0d\n    return option && !option.value;\x0d\n  }\x0d\n  return options.get(optionName)?.value;\x0d\n}\x0d\n\x0d\nfunction getAllowUnauthorized() {\x0d\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\x0d\n\x0d\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\x0d\n    warnOnAllowUnauthorized = false;\x0d\n    process.emitWarning(\x0d\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\x0d\n      'environment variable to \\'0\\' makes TLS connections ' +\x0d\n      'and HTTPS requests insecure by disabling ' +\x0d\n      'certificate verification.');\x0d\n  }\x0d\n  return allowUnauthorized;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  get options() {\x0d\n    return getCLIOptionsFromBinding();\x0d\n  }\x2C\x0d\n  get aliases() {\x0d\n    return getAliasesFromBinding();\x0d\n  }\x2C\x0d\n  getOptionValue\x2C\x0d\n  getAllowUnauthorized\x2C\x0d\n  getEmbedderOptions\x0d\n};\x0d\n
code-source-info,0x22cec150866,91,940,1190,C0O974C3O974C7O1020C15O1020C22O1071C30O1093C38O1093C43O1080C47O1071C53O1109C55O1134C60O1140C61O1164C66O1164C74O1179C81O1187,,
code-creation,LazyCompile,10,1318169,0x22cec150c16,33,getCLIOptionsFromBinding node:internal/options:18:34,0x2bf990bd848,~
code-source-info,0x22cec150c16,91,514,620,C0O522C6O546C11O573C15O558C28O599C32O617,,
code-creation,LazyCompile,10,1319235,0x22cec150d96,46,setupTraceCategoryState node:internal/bootstrap/pre_execution:277:33,0x22cec1443c0,~
code-source-info,0x22cec150d96,96,8711,8942,C0O8754C6O8754C11O8727C16O8827C22O8827C27O8798C32O8870C35O8895C40O8870C45O8941,,
code-creation,LazyCompile,10,1319464,0x22cec150f2e,77,toggleTraceCategoryState node:internal/process/per_thread:390:34,0x12f5b0d8cb8,~
code-source-info,0x22cec150f2e,30,11548,11855,C0O11573C4O11603C10O11639C16O11671C21O11715C26O11716C33O11660C39O11742C44O11763C49O11763C55O11783C61O11816C66O11837C71O11837C76O11854,,
code-creation,LazyCompile,10,1319618,0x22cec1510de,42,setupPerfHooks node:internal/bootstrap/pre_execution:283:24,0x22cec144410,~
code-source-info,0x22cec1510de,96,8969,9092,C0O8977C6O8977C11O9013C16O9014C20O9038C26O9038C31O9068C36O9069C41O9091,,
code-creation,LazyCompile,10,1319783,0x22cec15125e,42,refreshTimeOrigin node:internal/perf/performance:181:27,0x1945c72b218,~
script-source,73,node:internal/perf/performance,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  EventTarget\x2C\x0d\n} = require('internal/event_target');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst {\x0d\n  mark\x2C\x0d\n  measure\x2C\x0d\n  clearMarkTimings\x2C\x0d\n} = require('internal/perf/usertiming');\x0d\nconst {\x0d\n  clearEntriesFromBuffer\x2C\x0d\n  filterBufferMapByNameAndType\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nconst eventLoopUtilization = require('internal/perf/event_loop_utilization');\x0d\nconst nodeTiming = require('internal/perf/nodetiming');\x0d\nconst timerify = require('internal/perf/timerify');\x0d\nconst { customInspectSymbol: kInspect } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst {\x0d\n  getTimeOriginTimestamp\x0d\n} = internalBinding('performance');\x0d\n\x0d\nclass Performance extends EventTarget {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `Performance ${inspect({\x0d\n      nodeTiming: this.nodeTiming\x2C\x0d\n      timeOrigin: this.timeOrigin\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction toJSON() {\x0d\n  return {\x0d\n    nodeTiming: this.nodeTiming\x2C\x0d\n    timeOrigin: this.timeOrigin\x2C\x0d\n    eventLoopUtilization: this.eventLoopUtilization()\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction clearMarks(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearMarkTimings(name);\x0d\n  clearEntriesFromBuffer('mark'\x2C name);\x0d\n}\x0d\n\x0d\nfunction clearMeasures(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearEntriesFromBuffer('measure'\x2C name);\x0d\n}\x0d\n\x0d\nfunction getEntries() {\x0d\n  return filterBufferMapByNameAndType();\x0d\n}\x0d\n\x0d\nfunction getEntriesByName(name) {\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('name');\x0d\n  }\x0d\n  name = `${name}`;\x0d\n  return filterBufferMapByNameAndType(name\x2C undefined);\x0d\n}\x0d\n\x0d\nfunction getEntriesByType(type) {\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('type');\x0d\n  }\x0d\n  type = `${type}`;\x0d\n  return filterBufferMapByNameAndType(undefined\x2C type);\x0d\n}\x0d\n\x0d\nclass InternalPerformance extends EventTarget {}\x0d\nInternalPerformance.prototype.constructor = Performance.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalPerformance.prototype\x2C Performance.prototype);\x0d\n\x0d\nObjectDefineProperties(Performance.prototype\x2C {\x0d\n  clearMarks: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMarks\x2C\x0d\n  }\x2C\x0d\n  clearMeasures: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMeasures\x2C\x0d\n  }\x2C\x0d\n  eventLoopUtilization: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: eventLoopUtilization\x2C\x0d\n  }\x2C\x0d\n  getEntries: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntries\x2C\x0d\n  }\x2C\x0d\n  getEntriesByName: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByName\x2C\x0d\n  }\x2C\x0d\n  getEntriesByType: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByType\x2C\x0d\n  }\x2C\x0d\n  mark: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: mark\x2C\x0d\n  }\x2C\x0d\n  measure: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: measure\x2C\x0d\n  }\x2C\x0d\n  nodeTiming: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: nodeTiming\x2C\x0d\n  }\x2C\x0d\n  now: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: now\x2C\x0d\n  }\x2C\x0d\n  timerify: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: timerify\x2C\x0d\n  }\x2C\x0d\n  // This would be updated during pre-execution in case\x0d\n  // the process is launched from a snapshot.\x0d\n  // TODO(joyeecheung): we may want to warn about access to\x0d\n  // this during snapshot building.\x0d\n  timeOrigin: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  }\x2C\x0d\n  toJSON: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: toJSON\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  ObjectDefineProperty(Performance.prototype\x2C 'timeOrigin'\x2C {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  InternalPerformance\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x22cec15125e,73,4040,4203,C0O4048C7O4069C10O4081C25O4168C28O4168C35O4048C41O4202,,
code-creation,LazyCompile,10,1320723,0x22cec151986,19,refreshTimeOrigin node:internal/perf/utils:25:27,0x15057ce2118,~
script-source,46,node:internal/perf/utils,'use strict';\x0d\n\x0d\nconst binding = internalBinding('performance');\x0d\nconst {\x0d\n  milestones\x2C\x0d\n  getTimeOrigin\x2C\x0d\n} = binding;\x0d\n\x0d\n// TODO(joyeecheung): we may want to warn about access to\x0d\n// this during snapshot building.\x0d\nlet timeOrigin = getTimeOrigin();\x0d\n\x0d\nfunction now() {\x0d\n  const hr = process.hrtime();\x0d\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction getMilestoneTimestamp(milestoneIdx) {\x0d\n  const ns = milestones[milestoneIdx];\x0d\n  if (ns === -1)\x0d\n    return ns;\x0d\n  return ns / 1e6 - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  timeOrigin = getTimeOrigin();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  now\x2C\x0d\n  getMilestoneTimestamp\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x22cec151986,46,549,589,C0O557C5O570C11O568C18O588,,
code-creation,LazyCompile,10,1320994,0x22cec151bf6,62,setupInspectorHooks node:internal/bootstrap/pre_execution:288:29,0x22cec144460,~
code-source-info,0x22cec151bf6,96,9124,9690,C0O9473C6O9477C11O9502C17O9571C23O9571C28O9539C33O9554C38O9618C44O9618C49O9646C54O9647C61O9689,,
code-creation,Eval,10,1321321,0x22cec151fa6,5, node:internal/inspector_async_hook:1:1,0x22cec151df0,~
script-source,97,node:internal/inspector_async_hook,'use strict';\x0d\n\x0d\nlet hook;\x0d\nlet config;\x0d\n\x0d\nconst {\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction lazyHookCreation() {\x0d\n  const inspector = internalBinding('inspector');\x0d\n  const { createHook } = require('async_hooks');\x0d\n  config = internalBinding('config');\x0d\n\x0d\n  hook = createHook({\x0d\n    init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n    // It's difficult to tell which tasks will be recurring and which won't\x2C\x0d\n    // therefore we mark all tasks as recurring. Based on the discussion\x0d\n    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293\x2C\x0d\n    // this should be fine as long as we call asyncTaskCanceled() too.\x0d\n      const recurring = true;\x0d\n      if (type === 'PROMISE')\x0d\n        this.promiseIds.add(asyncId);\x0d\n      else\x0d\n        inspector.asyncTaskScheduled(type\x2C asyncId\x2C recurring);\x0d\n    }\x2C\x0d\n\x0d\n    before(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskStarted(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    after(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskFinished(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    destroy(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return this.promiseIds.delete(asyncId);\x0d\n      inspector.asyncTaskCanceled(asyncId);\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  hook.promiseIds = new SafeSet();\x0d\n}\x0d\n\x0d\nfunction enable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  if (config.bits < 64) {\x0d\n    // V8 Inspector stores task ids as (void*) pointers.\x0d\n    // async_hooks store ids as 64bit numbers.\x0d\n    // As a result\x2C we cannot reliably translate async_hook ids to V8 async_task\x0d\n    // ids on 32bit platforms.\x0d\n    process.emitWarning(\x0d\n      'Warning: Async stack traces in debugger are not available ' +\x0d\n      `on ${config.bits}bit platforms. The feature is disabled.`\x2C\x0d\n      {\x0d\n        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE'\x2C\x0d\n      });\x0d\n  } else {\x0d\n    hook.enable();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction disable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  hook.disable();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  enable\x2C\x0d\n  disable\x0d\n};\x0d\n
code-source-info,0x22cec151fa6,97,0,2048,C0O0C4O2048,,
code-creation,Function,10,1321738,0x22cec1521c6,79, node:internal/inspector_async_hook:1:1,0x22cec151f20,~
code-source-info,0x22cec1521c6,97,0,2048,C0O0C42O21C43O21C45O32C46O32C48O54C54O2002C61O2024C67O2035C73O2017C78O2047,,
code-creation,LazyCompile,10,1322007,0x22cec15282e,69,setupWarningHandler node:internal/bootstrap/pre_execution:142:29,0x22cec1440a0,~
code-source-info,0x22cec15282e,96,4625,4830,C0O4663C6O4663C11O4646C16O4703C24O4707C33O4752C38O4756C45O4773C50O4789C53O4797C61O4797C68O4829,,
code-creation,LazyCompile,10,1322302,0x22cec15298e,20,addListener node:events:618:58,0xc194f6ba38,~
script-source,23,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n} = primordials;\x0d\nconst kRejection = SymbolFor('nodejs.rejection');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nlet spliceOne;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNHANDLED_ERROR\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kCapture = Symbol('kCapture');\x0d\nconst kErrorMonitor = Symbol('events.errorMonitor');\x0d\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\x0d\nconst kMaxEventTargetListenersWarned =\x0d\n  Symbol('events.maxEventTargetListenersWarned');\x0d\n\x0d\nlet EventEmitterAsyncResource;\x0d\n// The EventEmitterAsyncResource has to be initialized lazily because event.js\x0d\n// is loaded so early in the bootstrap process\x2C before async_hooks is available.\x0d\n//\x0d\n// This implementation was adapted straight from addaleax's\x0d\n// eventemitter-asyncresource MIT-licensed userland module.\x0d\n// https://github.com/addaleax/eventemitter-asyncresource\x0d\nfunction lazyEventEmitterAsyncResource() {\x0d\n  if (EventEmitterAsyncResource === undefined) {\x0d\n    const {\x0d\n      AsyncResource\x0d\n    } = require('async_hooks');\x0d\n\x0d\n    const kEventEmitter = Symbol('kEventEmitter');\x0d\n    const kAsyncResource = Symbol('kAsyncResource');\x0d\n    class EventEmitterReferencingAsyncResource extends AsyncResource {\x0d\n      /**\x0d\n       * @param {EventEmitter} ee\x0d\n       * @param {string} [type]\x0d\n       * @param {{\x0d\n       *   triggerAsyncId?: number\x2C\x0d\n       *   requireManualDestroy?: boolean\x2C\x0d\n       * }} [options]\x0d\n       */\x0d\n      constructor(ee\x2C type\x2C options) {\x0d\n        super(type\x2C options);\x0d\n        this[kEventEmitter] = ee;\x0d\n      }\x0d\n\x0d\n      /**\x0d\n       * @type {EventEmitter}\x0d\n       */\x0d\n      get eventEmitter() {\x0d\n        if (this[kEventEmitter] === undefined)\x0d\n          throw new ERR_INVALID_THIS('EventEmitterReferencingAsyncResource');\x0d\n        return this[kEventEmitter];\x0d\n      }\x0d\n    }\x0d\n\x0d\n    EventEmitterAsyncResource =\x0d\n      class EventEmitterAsyncResource extends EventEmitter {\x0d\n        /**\x0d\n         * @param {{\x0d\n         *   name?: string\x2C\x0d\n         *   triggerAsyncId?: number\x2C\x0d\n         *   requireManualDestroy?: boolean\x2C\x0d\n         * }} [options]\x0d\n         */\x0d\n        constructor(options = undefined) {\x0d\n          let name;\x0d\n          if (typeof options === 'string') {\x0d\n            name = options;\x0d\n            options = undefined;\x0d\n          } else {\x0d\n            if (new.target === EventEmitterAsyncResource) {\x0d\n              validateString(options?.name\x2C 'options.name');\x0d\n            }\x0d\n            name = options?.name || new.target.name;\x0d\n          }\x0d\n          super(options);\x0d\n\x0d\n          this[kAsyncResource] =\x0d\n            new EventEmitterReferencingAsyncResource(this\x2C name\x2C options);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @param {symbol\x2Cstring} event\x0d\n         * @param  {...any} args\x0d\n         * @returns {boolean}\x0d\n         */\x0d\n        emit(event\x2C ...args) {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          const { asyncResource } = this;\x0d\n          ArrayPrototypeUnshift(args\x2C super.emit\x2C this\x2C event);\x0d\n          return ReflectApply(asyncResource.runInAsyncScope\x2C asyncResource\x2C\x0d\n                              args);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @returns {void}\x0d\n         */\x0d\n        emitDestroy() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          this.asyncResource.emitDestroy();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get asyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.asyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get triggerAsyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.triggerAsyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {EventEmitterReferencingAsyncResource}\x0d\n         */\x0d\n        get asyncResource() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this[kAsyncResource];\x0d\n        }\x0d\n      };\x0d\n  }\x0d\n  return EventEmitterAsyncResource;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new `EventEmitter` instance.\x0d\n * @param {{ captureRejections?: boolean; }} [opts]\x0d\n * @constructs {EventEmitter}\x0d\n */\x0d\nfunction EventEmitter(opts) {\x0d\n  EventEmitter.init.call(this\x2C opts);\x0d\n}\x0d\nmodule.exports = EventEmitter;\x0d\nmodule.exports.once = once;\x0d\nmodule.exports.on = on;\x0d\nmodule.exports.getEventListeners = getEventListeners;\x0d\n// Backwards-compat with node 0.10.x\x0d\nEventEmitter.EventEmitter = EventEmitter;\x0d\n\x0d\nEventEmitter.usingDomains = false;\x0d\n\x0d\nEventEmitter.captureRejectionSymbol = kRejection;\x0d\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\x0d\n  get() {\x0d\n    return EventEmitter.prototype[kCapture];\x0d\n  }\x2C\x0d\n  set(value) {\x0d\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\x0d\n\x0d\n    EventEmitter.prototype[kCapture] = value;\x0d\n  }\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'EventEmitterAsyncResource'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get: lazyEventEmitterAsyncResource\x2C\x0d\n  set: undefined\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nEventEmitter.errorMonitor = kErrorMonitor;\x0d\n\x0d\n// The default for captureRejections is false\x0d\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\x0d\n  value: false\x2C\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\nEventEmitter.prototype._events = undefined;\x0d\nEventEmitter.prototype._eventsCount = 0;\x0d\nEventEmitter.prototype._maxListeners = undefined;\x0d\n\x0d\n// By default EventEmitters will print a warning if more than 10 listeners are\x0d\n// added to it. This is a useful default which helps finding memory leaks.\x0d\nlet defaultMaxListeners = 10;\x0d\nlet isEventTarget;\x0d\n\x0d\nfunction checkListener(listener) {\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n}\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get: function() {\x0d\n    return defaultMaxListeners;\x0d\n  }\x2C\x0d\n  set: function(arg) {\x0d\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\x0d\n      throw new ERR_OUT_OF_RANGE('defaultMaxListeners'\x2C\x0d\n                                 'a non-negative number'\x2C\x0d\n                                 arg);\x0d\n    }\x0d\n    defaultMaxListeners = arg;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperties(EventEmitter\x2C {\x0d\n  kMaxEventTargetListeners: {\x0d\n    value: kMaxEventTargetListeners\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n  kMaxEventTargetListenersWarned: {\x0d\n    value: kMaxEventTargetListenersWarned\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Sets the max listeners.\x0d\n * @param {number} n\x0d\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\x0d\n * @returns {void}\x0d\n */\x0d\nEventEmitter.setMaxListeners =\x0d\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\x0d\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n))\x0d\n      throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n    if (eventTargets.length === 0) {\x0d\n      defaultMaxListeners = n;\x0d\n    } else {\x0d\n      if (isEventTarget === undefined)\x0d\n        isEventTarget = require('internal/event_target').isEventTarget;\x0d\n\x0d\n      for (let i = 0; i < eventTargets.length; i++) {\x0d\n        const target = eventTargets[i];\x0d\n        if (isEventTarget(target)) {\x0d\n          target[kMaxEventTargetListeners] = n;\x0d\n          target[kMaxEventTargetListenersWarned] = false;\x0d\n        } else if (typeof target.setMaxListeners === 'function') {\x0d\n          target.setMaxListeners(n);\x0d\n        } else {\x0d\n          throw new ERR_INVALID_ARG_TYPE(\x0d\n            'eventTargets'\x2C\x0d\n            ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n            target);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n// If you're updating this function definition\x2C please also update any\x0d\n// re-definitions\x2C such as the one in the Domain module (lib/domain.js).\x0d\nEventEmitter.init = function(opts) {\x0d\n\x0d\n  if (this._events === undefined ||\x0d\n      this._events === ObjectGetPrototypeOf(this)._events) {\x0d\n    this._events = ObjectCreate(null);\x0d\n    this._eventsCount = 0;\x0d\n  }\x0d\n\x0d\n  this._maxListeners = this._maxListeners || undefined;\x0d\n\x0d\n\x0d\n  if (opts?.captureRejections) {\x0d\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\x0d\n    this[kCapture] = Boolean(opts.captureRejections);\x0d\n  } else {\x0d\n    // Assigning the kCapture property directly saves an expensive\x0d\n    // prototype lookup in a very sensitive hot path.\x0d\n    this[kCapture] = EventEmitter.prototype[kCapture];\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\x0d\n  if (!that[kCapture]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Handle Promises/A+ spec\x2C then could be a getter\x0d\n  // that throws on second use.\x0d\n  try {\x0d\n    const then = promise.then;\x0d\n\x0d\n    if (typeof then === 'function') {\x0d\n      then.call(promise\x2C undefined\x2C function(err) {\x0d\n        // The callback is called with nextTick to avoid a follow-up\x0d\n        // rejection from this promise.\x0d\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\x0d\n      });\x0d\n    }\x0d\n  } catch (err) {\x0d\n    that.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\x0d\n  if (typeof ee[kRejection] === 'function') {\x0d\n    ee[kRejection](err\x2C type\x2C ...args);\x0d\n  } else {\x0d\n    // We have to disable the capture rejections mechanism\x2C otherwise\x0d\n    // we might end up in an infinite loop.\x0d\n    const prev = ee[kCapture];\x0d\n\x0d\n    // If the error handler throws\x2C it is not catchable and it\x0d\n    // will end up in 'uncaughtException'. We restore the previous\x0d\n    // value of kCapture in case the uncaughtException is present\x0d\n    // and the exception is handled.\x0d\n    try {\x0d\n      ee[kCapture] = false;\x0d\n      ee.emit('error'\x2C err);\x0d\n    } finally {\x0d\n      ee[kCapture] = prev;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Increases the max listeners of the event emitter.\x0d\n * @param {number} n\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\x0d\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\x0d\n    throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n  }\x0d\n  this._maxListeners = n;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction _getMaxListeners(that) {\x0d\n  if (that._maxListeners === undefined)\x0d\n    return EventEmitter.defaultMaxListeners;\x0d\n  return that._maxListeners;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the current max listener value for the event emitter.\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\x0d\n  return _getMaxListeners(this);\x0d\n};\x0d\n\x0d\n// Returns the length and line number of the first sequence of `a` that fully\x0d\n// appears in `b` with a length of at least 4.\x0d\nfunction identicalSequenceRange(a\x2C b) {\x0d\n  for (let i = 0; i < a.length - 3; i++) {\x0d\n    // Find the first entry of b that matches the current entry of a.\x0d\n    const pos = ArrayPrototypeIndexOf(b\x2C a[i]);\x0d\n    if (pos !== -1) {\x0d\n      const rest = b.length - pos;\x0d\n      if (rest > 3) {\x0d\n        let len = 1;\x0d\n        const maxLen = MathMin(a.length - i\x2C rest);\x0d\n        // Count the number of consecutive entries.\x0d\n        while (maxLen > len && a[i + len] === b[pos + len]) {\x0d\n          len++;\x0d\n        }\x0d\n        if (len > 3) {\x0d\n          return [len\x2C i];\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return [0\x2C 0];\x0d\n}\x0d\n\x0d\nfunction enhanceStackTrace(err\x2C own) {\x0d\n  let ctorInfo = '';\x0d\n  try {\x0d\n    const { name } = this.constructor;\x0d\n    if (name !== 'EventEmitter')\x0d\n      ctorInfo = ` on ${name} instance`;\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\x0d\n\x0d\n  const errStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\x0d\n  const ownStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\x0d\n\x0d\n  const { 0: len\x2C 1: off } = identicalSequenceRange(ownStack\x2C errStack);\x0d\n  if (len > 0) {\x0d\n    ArrayPrototypeSplice(ownStack\x2C off + 1\x2C len - 2\x2C\x0d\n                         '    [... lines matching original stack trace ...]');\x0d\n  }\x0d\n\x0d\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously calls each of the listeners registered\x0d\n * for the event.\x0d\n * @param {string | symbol} type\x0d\n * @param {...any} [args]\x0d\n * @returns {boolean}\x0d\n */\x0d\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\x0d\n  let doError = (type === 'error');\x0d\n\x0d\n  const events = this._events;\x0d\n  if (events !== undefined) {\x0d\n    if (doError && events[kErrorMonitor] !== undefined)\x0d\n      this.emit(kErrorMonitor\x2C ...args);\x0d\n    doError = (doError && events.error === undefined);\x0d\n  } else if (!doError)\x0d\n    return false;\x0d\n\x0d\n  // If there is no 'error' event listener then throw.\x0d\n  if (doError) {\x0d\n    let er;\x0d\n    if (args.length > 0)\x0d\n      er = args[0];\x0d\n    if (er instanceof Error) {\x0d\n      try {\x0d\n        const capture = {};\x0d\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\x0d\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\x0d\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\x0d\n          configurable: true\x0d\n        });\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n\x0d\n      // Note: The comments on the `throw` lines are intentional\x2C they show\x0d\n      // up in Node's output if this results in an unhandled exception.\x0d\n      throw er; // Unhandled 'error' event\x0d\n    }\x0d\n\x0d\n    let stringifiedEr;\x0d\n    try {\x0d\n      stringifiedEr = inspect(er);\x0d\n    } catch {\x0d\n      stringifiedEr = er;\x0d\n    }\x0d\n\x0d\n    // At least give some kind of context to the user\x0d\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\x0d\n    err.context = er;\x0d\n    throw err; // Unhandled 'error' event\x0d\n  }\x0d\n\x0d\n  const handler = events[type];\x0d\n\x0d\n  if (handler === undefined)\x0d\n    return false;\x0d\n\x0d\n  if (typeof handler === 'function') {\x0d\n    const result = handler.apply(this\x2C args);\x0d\n\x0d\n    // We check if result is undefined first because that\x0d\n    // is the most common case so we do not pay any perf\x0d\n    // penalty\x0d\n    if (result !== undefined && result !== null) {\x0d\n      addCatch(this\x2C result\x2C type\x2C args);\x0d\n    }\x0d\n  } else {\x0d\n    const len = handler.length;\x0d\n    const listeners = arrayClone(handler);\x0d\n    for (let i = 0; i < len; ++i) {\x0d\n      const result = listeners[i].apply(this\x2C args);\x0d\n\x0d\n      // We check if result is undefined first because that\x0d\n      // is the most common case so we do not pay any perf\x0d\n      // penalty.\x0d\n      // This code is duplicated because extracting it away\x0d\n      // would make it non-inlineable.\x0d\n      if (result !== undefined && result !== null) {\x0d\n        addCatch(this\x2C result\x2C type\x2C args);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n};\x0d\n\x0d\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\x0d\n  let m;\x0d\n  let events;\x0d\n  let existing;\x0d\n\x0d\n  checkListener(listener);\x0d\n\x0d\n  events = target._events;\x0d\n  if (events === undefined) {\x0d\n    events = target._events = ObjectCreate(null);\x0d\n    target._eventsCount = 0;\x0d\n  } else {\x0d\n    // To avoid recursion in the case that type === "newListener"! Before\x0d\n    // adding it to the listeners\x2C first emit "newListener".\x0d\n    if (events.newListener !== undefined) {\x0d\n      target.emit('newListener'\x2C type\x2C\x0d\n                  listener.listener ?? listener);\x0d\n\x0d\n      // Re-assign `events` because a newListener handler could have caused the\x0d\n      // this._events to be assigned to a new object\x0d\n      events = target._events;\x0d\n    }\x0d\n    existing = events[type];\x0d\n  }\x0d\n\x0d\n  if (existing === undefined) {\x0d\n    // Optimize the case of one listener. Don't need the extra array object.\x0d\n    events[type] = listener;\x0d\n    ++target._eventsCount;\x0d\n  } else {\x0d\n    if (typeof existing === 'function') {\x0d\n      // Adding the second element\x2C need to change to array.\x0d\n      existing = events[type] =\x0d\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\x0d\n      // If we've already got an array\x2C just append.\x0d\n    } else if (prepend) {\x0d\n      existing.unshift(listener);\x0d\n    } else {\x0d\n      existing.push(listener);\x0d\n    }\x0d\n\x0d\n    // Check for listener leak\x0d\n    m = _getMaxListeners(target);\x0d\n    if (m > 0 && existing.length > m && !existing.warned) {\x0d\n      existing.warned = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      const w = genericNodeError(\x0d\n        `Possible EventEmitter memory leak detected. ${existing.length} ${String(type)} listeners ` +\x0d\n        `added to ${inspect(target\x2C { depth: -1 })}. Use emitter.setMaxListeners() to increase limit`\x2C\x0d\n        { name: 'MaxListenersExceededWarning'\x2C emitter: target\x2C type: type\x2C count: existing.length });\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return target;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a listener to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\x0d\n  return _addListener(this\x2C type\x2C listener\x2C false);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\x0d\n\x0d\n/**\x0d\n * Adds the `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependListener =\x0d\n    function prependListener(type\x2C listener) {\x0d\n      return _addListener(this\x2C type\x2C listener\x2C true);\x0d\n    };\x0d\n\x0d\nfunction onceWrapper() {\x0d\n  if (!this.fired) {\x0d\n    this.target.removeListener(this.type\x2C this.wrapFn);\x0d\n    this.fired = true;\x0d\n    if (arguments.length === 0)\x0d\n      return this.listener.call(this.target);\x0d\n    return this.listener.apply(this.target\x2C arguments);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction _onceWrap(target\x2C type\x2C listener) {\x0d\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\x0d\n  const wrapped = onceWrapper.bind(state);\x0d\n  wrapped.listener = listener;\x0d\n  state.wrapFn = wrapped;\x0d\n  return wrapped;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.once = function once(type\x2C listener) {\x0d\n  checkListener(listener);\x0d\n\x0d\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n  return this;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependOnceListener =\x0d\n    function prependOnceListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n      return this;\x0d\n    };\x0d\n\x0d\n/**\x0d\n * Removes the specified `listener` from the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeListener =\x0d\n    function removeListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      const list = events[type];\x0d\n      if (list === undefined)\x0d\n        return this;\x0d\n\x0d\n      if (list === listener || list.listener === listener) {\x0d\n        if (--this._eventsCount === 0)\x0d\n          this._events = ObjectCreate(null);\x0d\n        else {\x0d\n          delete events[type];\x0d\n          if (events.removeListener)\x0d\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\x0d\n        }\x0d\n      } else if (typeof list !== 'function') {\x0d\n        let position = -1;\x0d\n\x0d\n        for (let i = list.length - 1; i >= 0; i--) {\x0d\n          if (list[i] === listener || list[i].listener === listener) {\x0d\n            position = i;\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (position < 0)\x0d\n          return this;\x0d\n\x0d\n        if (position === 0)\x0d\n          list.shift();\x0d\n        else {\x0d\n          if (spliceOne === undefined)\x0d\n            spliceOne = require('internal/util').spliceOne;\x0d\n          spliceOne(list\x2C position);\x0d\n        }\x0d\n\x0d\n        if (list.length === 1)\x0d\n          events[type] = list[0];\x0d\n\x0d\n        if (events.removeListener !== undefined)\x0d\n          this.emit('removeListener'\x2C type\x2C listener);\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\x0d\n\x0d\n/**\x0d\n * Removes all listeners from the event emitter. (Only\x0d\n * removes listeners for a specific event name if specified\x0d\n * as `type`).\x0d\n * @param {string | symbol} [type]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeAllListeners =\x0d\n    function removeAllListeners(type) {\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      // Not listening for removeListener\x2C no need to emit\x0d\n      if (events.removeListener === undefined) {\x0d\n        if (arguments.length === 0) {\x0d\n          this._events = ObjectCreate(null);\x0d\n          this._eventsCount = 0;\x0d\n        } else if (events[type] !== undefined) {\x0d\n          if (--this._eventsCount === 0)\x0d\n            this._events = ObjectCreate(null);\x0d\n          else\x0d\n            delete events[type];\x0d\n        }\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      // Emit removeListener for all listeners on all events\x0d\n      if (arguments.length === 0) {\x0d\n        for (const key of ReflectOwnKeys(events)) {\x0d\n          if (key === 'removeListener') continue;\x0d\n          this.removeAllListeners(key);\x0d\n        }\x0d\n        this.removeAllListeners('removeListener');\x0d\n        this._events = ObjectCreate(null);\x0d\n        this._eventsCount = 0;\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      const listeners = events[type];\x0d\n\x0d\n      if (typeof listeners === 'function') {\x0d\n        this.removeListener(type\x2C listeners);\x0d\n      } else if (listeners !== undefined) {\x0d\n        // LIFO order\x0d\n        for (let i = listeners.length - 1; i >= 0; i--) {\x0d\n          this.removeListener(type\x2C listeners[i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nfunction _listeners(target\x2C type\x2C unwrap) {\x0d\n  const events = target._events;\x0d\n\x0d\n  if (events === undefined)\x0d\n    return [];\x0d\n\x0d\n  const evlistener = events[type];\x0d\n  if (evlistener === undefined)\x0d\n    return [];\x0d\n\x0d\n  if (typeof evlistener === 'function')\x0d\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\x0d\n\x0d\n  return unwrap ?\x0d\n    unwrapListeners(evlistener) : arrayClone(evlistener);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.listeners = function listeners(type) {\x0d\n  return _listeners(this\x2C type\x2C true);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners and wrappers for\x0d\n * the event name specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\x0d\n  return _listeners(this\x2C type\x2C false);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to the event name\x0d\n * specified as `type`.\x0d\n * @deprecated since v3.2.0\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.listenerCount = function(emitter\x2C type) {\x0d\n  if (typeof emitter.listenerCount === 'function') {\x0d\n    return emitter.listenerCount(type);\x0d\n  }\x0d\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.listenerCount = listenerCount;\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nfunction listenerCount(type) {\x0d\n  const events = this._events;\x0d\n\x0d\n  if (events !== undefined) {\x0d\n    const evlistener = events[type];\x0d\n\x0d\n    if (typeof evlistener === 'function') {\x0d\n      return 1;\x0d\n    } else if (evlistener !== undefined) {\x0d\n      return evlistener.length;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array listing the events for which\x0d\n * the emitter has registered listeners.\x0d\n * @returns {any[]}\x0d\n */\x0d\nEventEmitter.prototype.eventNames = function eventNames() {\x0d\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\x0d\n};\x0d\n\x0d\nfunction arrayClone(arr) {\x0d\n  // At least since V8 8.3\x2C this implementation is faster than the previous\x0d\n  // which always used a simple for-loop\x0d\n  switch (arr.length) {\x0d\n    case 2: return [arr[0]\x2C arr[1]];\x0d\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\x0d\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\x0d\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\x0d\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\x0d\n  }\x0d\n  return ArrayPrototypeSlice(arr);\x0d\n}\x0d\n\x0d\nfunction unwrapListeners(arr) {\x0d\n  const ret = arrayClone(arr);\x0d\n  for (let i = 0; i < ret.length; ++i) {\x0d\n    const orig = ret[i].listener;\x0d\n    if (typeof orig === 'function')\x0d\n      ret[i] = orig;\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {EventEmitter | EventTarget} emitterOrTarget\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nfunction getEventListeners(emitterOrTarget\x2C type) {\x0d\n  // First check if EventEmitter\x0d\n  if (typeof emitterOrTarget.listeners === 'function') {\x0d\n    return emitterOrTarget.listeners(type);\x0d\n  }\x0d\n  // Require event target lazily to avoid always loading it\x0d\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\x0d\n  if (isEventTarget(emitterOrTarget)) {\x0d\n    const root = emitterOrTarget[kEvents].get(type);\x0d\n    const listeners = [];\x0d\n    let handler = root?.next;\x0d\n    while (handler?.listener !== undefined) {\x0d\n      const listener = handler.listener?.deref ?\x0d\n        handler.listener.deref() : handler.listener;\x0d\n      listeners.push(listener);\x0d\n      handler = handler.next;\x0d\n    }\x0d\n    return listeners;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\x0d\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n                                 emitterOrTarget);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a `Promise` that is fulfilled when the emitter\x0d\n * emits the given event.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string} name\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {Promise}\x0d\n */\x0d\nasync function once(emitter\x2C name\x2C options = {}) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const errorListener = (err) => {\x0d\n      emitter.removeListener(name\x2C resolver);\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      reject(err);\x0d\n    };\x0d\n    const resolver = (...args) => {\x0d\n      if (typeof emitter.removeListener === 'function') {\x0d\n        emitter.removeListener('error'\x2C errorListener);\x0d\n      }\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      resolve(args);\x0d\n    };\x0d\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C { once: true });\x0d\n    if (name !== 'error' && typeof emitter.once === 'function') {\x0d\n      emitter.once('error'\x2C errorListener);\x0d\n    }\x0d\n    function abortListener() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\x0d\n      reject(new AbortError());\x0d\n    }\x0d\n    if (signal != null) {\x0d\n      eventTargetAgnosticAddListener(\x0d\n        signal\x2C 'abort'\x2C abortListener\x2C { once: true });\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf(async function* () {}).prototype);\x0d\n\x0d\nfunction createIterResult(value\x2C done) {\x0d\n  return { value\x2C done };\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.removeListener === 'function') {\x0d\n    emitter.removeListener(name\x2C listener);\x0d\n  } else if (typeof emitter.removeEventListener === 'function') {\x0d\n    emitter.removeEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.on === 'function') {\x0d\n    if (flags?.once) {\x0d\n      emitter.once(name\x2C listener);\x0d\n    } else {\x0d\n      emitter.on(name\x2C listener);\x0d\n    }\x0d\n  } else if (typeof emitter.addEventListener === 'function') {\x0d\n    // EventTarget does not have `error` event semantics like Node\x0d\n    // EventEmitters\x2C we do not listen to `error` events here.\x0d\n    emitter.addEventListener(name\x2C (arg) => { listener(arg); }\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an `AsyncIterator` that iterates `event` events.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} event\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {AsyncIterator}\x0d\n */\x0d\nfunction on(emitter\x2C event\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n\x0d\n  const unconsumedEvents = [];\x0d\n  const unconsumedPromises = [];\x0d\n  let error = null;\x0d\n  let finished = false;\x0d\n\x0d\n  const iterator = ObjectSetPrototypeOf({\x0d\n    next() {\x0d\n      // First\x2C we consume all unread events\x0d\n      const value = unconsumedEvents.shift();\x0d\n      if (value) {\x0d\n        return PromiseResolve(createIterResult(value\x2C false));\x0d\n      }\x0d\n\x0d\n      // Then we error\x2C if an error happened\x0d\n      // This happens one time if at all\x2C because after 'error'\x0d\n      // we stop listening\x0d\n      if (error) {\x0d\n        const p = PromiseReject(error);\x0d\n        // Only the first element errors\x0d\n        error = null;\x0d\n        return p;\x0d\n      }\x0d\n\x0d\n      // If the iterator is finished\x2C resolve to done\x0d\n      if (finished) {\x0d\n        return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      // Wait until an event happens\x0d\n      return new Promise(function(resolve\x2C reject) {\x0d\n        unconsumedPromises.push({ resolve\x2C reject });\x0d\n      });\x0d\n    }\x2C\x0d\n\x0d\n    return() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n\x0d\n      if (signal) {\x0d\n        eventTargetAgnosticRemoveListener(\x0d\n          signal\x2C\x0d\n          'abort'\x2C\x0d\n          abortListener\x2C\x0d\n          { once: true });\x0d\n      }\x0d\n\x0d\n      finished = true;\x0d\n\x0d\n      for (const promise of unconsumedPromises) {\x0d\n        promise.resolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n    }\x2C\x0d\n\x0d\n    throw(err) {\x0d\n      if (!err || !(err instanceof Error)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\x0d\n                                       'Error'\x2C err);\x0d\n      }\x0d\n      error = err;\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n    }\x2C\x0d\n\x0d\n    [SymbolAsyncIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x2C AsyncIteratorPrototype);\x0d\n\x0d\n  eventTargetAgnosticAddListener(emitter\x2C event\x2C eventHandler);\x0d\n  if (event !== 'error' && typeof emitter.on === 'function') {\x0d\n    emitter.on('error'\x2C errorHandler);\x0d\n  }\x0d\n\x0d\n  if (signal) {\x0d\n    eventTargetAgnosticAddListener(\x0d\n      signal\x2C\x0d\n      'abort'\x2C\x0d\n      abortListener\x2C\x0d\n      { once: true });\x0d\n  }\x0d\n\x0d\n  return iterator;\x0d\n\x0d\n  function abortListener() {\x0d\n    errorHandler(new AbortError());\x0d\n  }\x0d\n\x0d\n  function eventHandler(...args) {\x0d\n    const promise = ArrayPrototypeShift(unconsumedPromises);\x0d\n    if (promise) {\x0d\n      promise.resolve(createIterResult(args\x2C false));\x0d\n    } else {\x0d\n      unconsumedEvents.push(args);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function errorHandler(err) {\x0d\n    finished = true;\x0d\n\x0d\n    const toError = ArrayPrototypeShift(unconsumedPromises);\x0d\n\x0d\n    if (toError) {\x0d\n      toError.reject(err);\x0d\n    } else {\x0d\n      // The next time we call next()\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    iterator.return();\x0d\n  }\x0d\n}\x0d\n
code-source-info,0x22cec15298e,23,18854,18928,C0O18876C14O18883C19O18925,,
tick,0x7ff7dd7d2220,1327773,0,0x0,3,0x7ff7dde840c0,0x22cec15286b,0x22cec1464a4,0x22cec142065
code-creation,LazyCompile,10,1327964,0x22cec155056,378,_addListener node:events:555:22,0xc194f6b998,~
code-source-info,0x22cec
code-creation,LazyCompile,10,1328203,0x22cec155366,15,checkListener node:events:258:23,0xc194f6b2f8,~
code-source-info,0x22cec155366,23,7884,7942,C0O7900C8O7900C14O7941,,
code-creation,LazyCompile,10,1328291,0x22cec155456,30, node:internal/validators:236:42,0x3eae9abd308,~
code-source-info,0x22cec155456,15,7461,7580,C0O7483C6O7521C22O7527C27O7521C29O7579,,
code-creation,LazyCompile,10,1328607,0x22cec1556d6,380,emit node:events:475:44,0xc194f6b8d8,~
code-source-info,0x22cec1556d
code-creation,LazyCompile,10,1328959,0x22cec155a7e,172,startListeningIfSignal node:internal/process/signal:22:32,0x3eae9abdca8,~
script-source,93,node:internal/process/signal,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nlet Signal;\x0d\nconst signalWraps = new SafeMap();\x0d\n\x0d\nfunction isSignal(event) {\x0d\n  return typeof event === 'string' && signals[event] !== undefined;\x0d\n}\x0d\n\x0d\n// Detect presence of a listener for the special signal types\x0d\nfunction startListeningIfSignal(type) {\x0d\n  if (isSignal(type) && !signalWraps.has(type)) {\x0d\n    if (Signal === undefined)\x0d\n      Signal = internalBinding('signal_wrap').Signal;\x0d\n    const wrap = new Signal();\x0d\n\x0d\n    wrap.unref();\x0d\n\x0d\n    wrap.onsignal = FunctionPrototypeBind(process.emit\x2C process\x2C type\x2C type);\x0d\n\x0d\n    const signum = signals[type];\x0d\n    const err = wrap.start(signum);\x0d\n    if (err) {\x0d\n      wrap.close();\x0d\n      throw errnoException(err\x2C 'uv_signal_start');\x0d\n    }\x0d\n\x0d\n    signalWraps.set(type\x2C wrap);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction stopListeningIfSignal(type) {\x0d\n  const wrap = signalWraps.get(type);\x0d\n  if (wrap !== undefined && process.listenerCount(type) === 0) {\x0d\n    wrap.close();\x0d\n    signalWraps.delete(type);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  startListeningIfSignal\x2C\x0d\n  stopListeningIfSignal\x0d\n};\x0d\n
code-source-info,0x22cec155a7e,93,450,944,C0O462C3O466C11O485C14O497C19O497C26O515C32O548C38O557C43O587C50O555C56O614C61O614C67O640C72O640C76O656C78O672C84O702C98O672C103O670C107O752C114O759C118O789C123O789C129O809C131O832C136O832C140O848C148O854C153O848C154O908C159O920C164O920C171O943,,
code-creation,LazyCompile,10,1329339,0x22cec155e3e,19,isSignal node:internal/process/signal:17:18,0x3eae9abdaf0,~
code-source-info,0x22cec155e3e,93,271,352,C0O284C8O320C13O327C17O335C18O349,,
code-creation,LazyCompile,10,1329515,0x22cec156076,156,setupFetch node:internal/bootstrap/pre_execution:153:20,0x22cec1440f0,~
code-source-info,0x22cec156076,96,4888,5357,C0O4896C8O4901C14O4948C15O4955C16O4966C24O4966C28O5020C34O5020C39O5063C46O5079C52O5107C57O5063C62O5118C69O5134C75O5165C80O5118C85O5179C92O5195C98O5225C103O5179C108O5238C115O5254C121O5284C126O5238C131O5297C138O5313C144O5344C149O5297C155O5356,,
new,MemoryChunk,0x22e32680000,262144
code-creation,Function,11,1329794,0x22e32683060,572,getOptionValue node:internal/options:39:24,0x2bf990bdb40,^
code-source-info,0x22e32683060,91,940,1190,,,
code-creation,Function,11,1329870,0x22e32683300,216,isPathSeparator node:path:52:25,0x15057cccf90,^
code-source-info,0x22e32683300,41,1794,1876,,,
code-creation,Function,11,1330009,0x22e32683440,3076,normalizeString node:path:66:25,0x15057ccd458,^
code-source-info,0x22e32683440,41,2226,4212,,,
code-creation,LazyCompile,10,1330274,0x22cec156886,268,setupWebCrypto node:internal/bootstrap/pre_execution:170:24,0x22cec144140,~
code-source-info,0x22cec156886,96,5490,6624,C0O5490C8O5498C13O5510C18O5517C23O5527C33O5562C39O5562C45O5620C46O5627C47O5642C48O5642C50O5656C61O5677C71O5723C102O5723C108O5656C113O6000C121O6004C126O6029C132O6049C146O6063C150O6059C152O6106C163O6127C177O6251C185O6106C190O6272C201O6293C215O6420C223O6272C228O6444C239O6465C253O6595C261O6444C267O6623,,
code-creation,LazyCompile,10,1330527,0x22cec156b06,5,get node:internal/bootstrap/node:135:6,0x3eae9a94a28,~
script-source,10,node:internal/bootstrap/node,// Hello\x2C and welcome to hacking node.js!\x0d\n//\x0d\n// This file is invoked by `node::RunBootstrapping()` in `src/node.cc`\x2C and is\x0d\n// responsible for setting up node.js core before executing main scripts\x0d\n// under `lib/internal/main/`.\x0d\n//\x0d\n// This file is expected not to perform any asynchronous operations itself\x0d\n// when being executed - those should be done in either\x0d\n// `lib/internal/bootstrap/pre_execution.js` or in main scripts. The majority\x0d\n// of the code here focuses on setting up the global proxy and the process\x0d\n// object in a synchronous manner.\x0d\n// As special caution is given to the performance of the startup process\x2C\x0d\n// many dependencies are invoked lazily.\x0d\n//\x0d\n// Scripts run before this file:\x0d\n// - `lib/internal/per_context/primordials.js`: to save copies of JavaScript\x0d\n//   builtins that won't be affected by user land monkey-patching for internal\x0d\n//   modules to use.\x0d\n// - `lib/internal/bootstrap/loaders.js`: to setup internal binding and\x0d\n//   module loaders\x2C including `process.binding()`\x2C `process._linkedBinding()`\x2C\x0d\n//   `internalBinding()` and `NativeModule`.\x0d\n//\x0d\n// This file is run to bootstrap both the main thread and the worker threads.\x0d\n// After this file is run\x2C certain properties are setup according to the\x0d\n// configuration of the Node.js instance using the files in\x0d\n// `lib/internal/bootstrap/switches/`.\x0d\n//\x0d\n// Then\x2C depending on how the Node.js instance is launched\x2C one of the main\x0d\n// scripts in `lib/internal/main` will be selected by C++ to start the actual\x0d\n// execution. They may run additional setups exported by\x0d\n// `lib/internal/bootstrap/pre_execution.js` depending on the runtime states.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C require\x2C internalBinding\x2C primordials */\x0d\n\x0d\nsetupPrepareStackTrace();\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFill\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPreventExtensions\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectGet\x2C\x0d\n  ReflectSet\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst config = internalBinding('config');\x0d\nconst internalTimers = require('internal/timers');\x0d\nconst { deprecate } = require('internal/util');\x0d\n\x0d\nsetupProcessObject();\x0d\n\x0d\nsetupGlobalProxy();\x0d\nsetupBuffer();\x0d\n\x0d\nprocess.domain = null;\x0d\nprocess._exiting = false;\x0d\n\x0d\n// process.config is serialized config.gypi\x0d\nconst nativeModule = internalBinding('native_module');\x0d\n\x0d\n// TODO(@jasnell): Once this has gone through one full major\x0d\n// release cycle\x2C remove the Proxy and setter and update the\x0d\n// getter to either return a read-only object or always return\x0d\n// a freshly parsed version of nativeModule.config.\x0d\n\x0d\nconst deprecationHandler = {\x0d\n  warned: false\x2C\x0d\n  message: 'Setting process.config is deprecated. ' +\x0d\n           'In the future the property will be read-only.'\x2C\x0d\n  code: 'DEP0150'\x2C\x0d\n  maybeWarn() {\x0d\n    if (!this.warned) {\x0d\n      process.emitWarning(this.message\x2C {\x0d\n        type: 'DeprecationWarning'\x2C\x0d\n        code: this.code\x0d\n      });\x0d\n      this.warned = true;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C key\x2C descriptor) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectDefineProperty(target\x2C key\x2C descriptor);\x0d\n  }\x2C\x0d\n\x0d\n  deleteProperty(target\x2C key) {\x0d\n    this.maybeWarn();\x0d\n    delete target[key];\x0d\n  }\x2C\x0d\n\x0d\n  preventExtensions(target) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectPreventExtensions(target);\x0d\n  }\x2C\x0d\n\x0d\n  set(target\x2C key\x2C value) {\x0d\n    this.maybeWarn();\x0d\n    return ReflectSet(target\x2C key\x2C value);\x0d\n  }\x2C\x0d\n\x0d\n  get(target\x2C key\x2C receiver) {\x0d\n    const val = ReflectGet(target\x2C key\x2C receiver);\x0d\n    if (val != null && typeof val === 'object') {\x0d\n      // eslint-disable-next-line node-core/prefer-primordials\x0d\n      return new Proxy(val\x2C deprecationHandler);\x0d\n    }\x0d\n    return val;\x0d\n  }\x2C\x0d\n\x0d\n  setPrototypeOf(target\x2C proto) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectSetPrototypeOf(target\x2C proto);\x0d\n  }\x0d\n};\x0d\n\x0d\n// eslint-disable-next-line node-core/prefer-primordials\x0d\nlet processConfig = new Proxy(\x0d\n  JSONParse(nativeModule.config)\x2C\x0d\n  deprecationHandler);\x0d\n\x0d\nObjectDefineProperty(process\x2C 'config'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return processConfig; }\x2C\x0d\n  set(value) {\x0d\n    deprecationHandler.maybeWarn();\x0d\n    processConfig = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nrequire('internal/worker/js_transferable').setup();\x0d\n\x0d\n// Bootstrappers for all threads\x2C including worker threads and main thread\x0d\nconst perThreadSetup = require('internal/process/per_thread');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\n// Set up methods on the process object for all threads\x0d\n{\x0d\n  process.dlopen = rawMethods.dlopen;\x0d\n  process.uptime = rawMethods.uptime;\x0d\n\x0d\n  // TODO(joyeecheung): either remove them or make them public\x0d\n  process._getActiveRequests = rawMethods._getActiveRequests;\x0d\n  process._getActiveHandles = rawMethods._getActiveHandles;\x0d\n\x0d\n  process.getActiveResourcesInfo = function() {\x0d\n    const timerCounts = internalTimers.getTimerCounts();\x0d\n    return ArrayPrototypeConcat(\x0d\n      rawMethods._getActiveRequestsInfo()\x2C\x0d\n      rawMethods._getActiveHandlesInfo()\x2C\x0d\n      ArrayPrototypeFill(new Array(timerCounts.timeoutCount)\x2C 'Timeout')\x2C\x0d\n      ArrayPrototypeFill(new Array(timerCounts.immediateCount)\x2C 'Immediate'));\x0d\n  };\x0d\n\x0d\n  // TODO(joyeecheung): remove these\x0d\n  process.reallyExit = rawMethods.reallyExit;\x0d\n  process._kill = rawMethods._kill;\x0d\n\x0d\n  const wrapped = perThreadSetup.wrapProcessMethods(rawMethods);\x0d\n  process._rawDebug = wrapped._rawDebug;\x0d\n  process.cpuUsage = wrapped.cpuUsage;\x0d\n  process.resourceUsage = wrapped.resourceUsage;\x0d\n  process.memoryUsage = wrapped.memoryUsage;\x0d\n  process.kill = wrapped.kill;\x0d\n  process.exit = wrapped.exit;\x0d\n\x0d\n  process.hrtime = perThreadSetup.hrtime;\x0d\n  process.hrtime.bigint = perThreadSetup.hrtimeBigInt;\x0d\n\x0d\n  process.openStdin = function() {\x0d\n    process.stdin.resume();\x0d\n    return process.stdin;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  process.getuid = credentials.getuid;\x0d\n  process.geteuid = credentials.geteuid;\x0d\n  process.getgid = credentials.getgid;\x0d\n  process.getegid = credentials.getegid;\x0d\n  process.getgroups = credentials.getgroups;\x0d\n}\x0d\n\x0d\n// Setup the callbacks that node::AsyncWrap will call when there are hooks to\x0d\n// process. They use the same functions as the JS embedder API. These callbacks\x0d\n// are setup immediately to prevent async_wrap.setupHooks() from being hijacked\x0d\n// and the cost of doing so is negligible.\x0d\nconst { nativeHooks } = require('internal/async_hooks');\x0d\ninternalBinding('async_wrap').setupHooks(nativeHooks);\x0d\n\x0d\nconst {\x0d\n  setupTaskQueue\x2C\x0d\n  queueMicrotask\x0d\n} = require('internal/process/task_queues');\x0d\n\x0d\nif (!config.noBrowserGlobals) {\x0d\n  // Override global console from the one provided by the VM\x0d\n  // to the one implemented by Node.js\x0d\n  // https://console.spec.whatwg.org/#console-namespace\x0d\n  exposeNamespace(globalThis\x2C 'console'\x2C\x0d\n                  createGlobalConsole(globalThis.console));\x0d\n\x0d\n  const { URL\x2C URLSearchParams } = require('internal/url');\x0d\n  // https://url.spec.whatwg.org/#url\x0d\n  exposeInterface(globalThis\x2C 'URL'\x2C URL);\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams\x0d\n  exposeInterface(globalThis\x2C 'URLSearchParams'\x2C URLSearchParams);\x0d\n\x0d\n  const {\x0d\n    TextEncoder\x2C TextDecoder\x0d\n  } = require('internal/encoding');\x0d\n  // https://encoding.spec.whatwg.org/#textencoder\x0d\n  exposeInterface(globalThis\x2C 'TextEncoder'\x2C TextEncoder);\x0d\n  // https://encoding.spec.whatwg.org/#textdecoder\x0d\n  exposeInterface(globalThis\x2C 'TextDecoder'\x2C TextDecoder);\x0d\n\x0d\n  const {\x0d\n    AbortController\x2C\x0d\n    AbortSignal\x2C\x0d\n  } = require('internal/abort_controller');\x0d\n  exposeInterface(globalThis\x2C 'AbortController'\x2C AbortController);\x0d\n  exposeInterface(globalThis\x2C 'AbortSignal'\x2C AbortSignal);\x0d\n\x0d\n  const {\x0d\n    EventTarget\x2C\x0d\n    Event\x2C\x0d\n  } = require('internal/event_target');\x0d\n  exposeInterface(globalThis\x2C 'EventTarget'\x2C EventTarget);\x0d\n  exposeInterface(globalThis\x2C 'Event'\x2C Event);\x0d\n  const {\x0d\n    MessageChannel\x2C\x0d\n    MessagePort\x2C\x0d\n    MessageEvent\x2C\x0d\n  } = require('internal/worker/io');\x0d\n  exposeInterface(globalThis\x2C 'MessageChannel'\x2C MessageChannel);\x0d\n  exposeInterface(globalThis\x2C 'MessagePort'\x2C MessagePort);\x0d\n  exposeInterface(globalThis\x2C 'MessageEvent'\x2C MessageEvent);\x0d\n\x0d\n  // https://html.spec.whatwg.org/multipage/webappapis.html#windoworworkerglobalscope\x0d\n  const timers = require('timers');\x0d\n  defineOperation(globalThis\x2C 'clearInterval'\x2C timers.clearInterval);\x0d\n  defineOperation(globalThis\x2C 'clearTimeout'\x2C timers.clearTimeout);\x0d\n  defineOperation(globalThis\x2C 'setInterval'\x2C timers.setInterval);\x0d\n  defineOperation(globalThis\x2C 'setTimeout'\x2C timers.setTimeout);\x0d\n\x0d\n  defineOperation(globalThis\x2C 'queueMicrotask'\x2C queueMicrotask);\x0d\n\x0d\n  // https://www.w3.org/TR/hr-time-2/#the-performance-attribute\x0d\n  defineReplacableAttribute(globalThis\x2C 'performance'\x2C\x0d\n                            require('perf_hooks').performance);\x0d\n\x0d\n  // Non-standard extensions:\x0d\n  defineOperation(globalThis\x2C 'clearImmediate'\x2C timers.clearImmediate);\x0d\n  defineOperation(globalThis\x2C 'setImmediate'\x2C timers.setImmediate);\x0d\n}\x0d\n\x0d\n// Set the per-Environment callback that will be called\x0d\n// when the TrackingTraceStateObserver updates trace state.\x0d\n// Note that when NODE_USE_V8_PLATFORM is true\x2C the observer is\x0d\n// attached to the per-process TracingController.\x0d\nconst { setTraceCategoryStateUpdateHandler } = internalBinding('trace_events');\x0d\nsetTraceCategoryStateUpdateHandler(perThreadSetup.toggleTraceCategoryState);\x0d\n\x0d\n// process.allowedNodeEnvironmentFlags\x0d\nObjectDefineProperty(process\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n  get() {\x0d\n    const flags = perThreadSetup.buildAllowedFlags();\x0d\n    process.allowedNodeEnvironmentFlags = flags;\x0d\n    return process.allowedNodeEnvironmentFlags;\x0d\n  }\x2C\x0d\n  // If the user tries to set this to another value\x2C override\x0d\n  // this completely to that value.\x0d\n  set(value) {\x0d\n    ObjectDefineProperty(this\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n      value\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      writable: true\x0d\n    });\x0d\n  }\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n// process.assert\x0d\nprocess.assert = deprecate(\x0d\n  perThreadSetup.assert\x2C\x0d\n  'process.assert() is deprecated. Please use the `assert` module instead.'\x2C\x0d\n  'DEP0100');\x0d\n\x0d\n// TODO(joyeecheung): this property has not been well-maintained\x2C should we\x0d\n// deprecate it in favor of a better API?\x0d\nconst { isDebugBuild\x2C hasOpenSSL\x2C hasInspector } = config;\x0d\nconst features = {\x0d\n  inspector: hasInspector\x2C\x0d\n  debug: isDebugBuild\x2C\x0d\n  uv: true\x2C\x0d\n  ipv6: true\x2C  // TODO(bnoordhuis) ping libuv\x0d\n  tls_alpn: hasOpenSSL\x2C\x0d\n  tls_sni: hasOpenSSL\x2C\x0d\n  tls_ocsp: hasOpenSSL\x2C\x0d\n  tls: hasOpenSSL\x2C\x0d\n  // This needs to be dynamic because snapshot is built without code cache.\x0d\n  // TODO(joyeecheung): https://github.com/nodejs/node/issues/31074\x0d\n  // Make it possible to build snapshot with code cache\x0d\n  get cached_builtins() {\x0d\n    return nativeModule.hasCachedBuiltins();\x0d\n  }\x0d\n};\x0d\n\x0d\nObjectDefineProperty(process\x2C 'features'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x2C\x0d\n  configurable: false\x2C\x0d\n  value: features\x0d\n});\x0d\n\x0d\n{\x0d\n  const {\x0d\n    onGlobalUncaughtException\x2C\x0d\n    setUncaughtExceptionCaptureCallback\x2C\x0d\n    hasUncaughtExceptionCaptureCallback\x0d\n  } = require('internal/process/execution');\x0d\n\x0d\n  // For legacy reasons this is still called `_fatalException`\x2C even\x0d\n  // though it is now a global uncaught exception handler.\x0d\n  // The C++ land node::errors::TriggerUncaughtException grabs it\x0d\n  // from the process object because it has been monkey-patchable.\x0d\n  // TODO(joyeecheung): investigate whether process._fatalException\x0d\n  // can be deprecated.\x0d\n  process._fatalException = onGlobalUncaughtException;\x0d\n  process.setUncaughtExceptionCaptureCallback =\x0d\n    setUncaughtExceptionCaptureCallback;\x0d\n  process.hasUncaughtExceptionCaptureCallback =\x0d\n    hasUncaughtExceptionCaptureCallback;\x0d\n}\x0d\n\x0d\nconst { emitWarning } = require('internal/process/warning');\x0d\nprocess.emitWarning = emitWarning;\x0d\n\x0d\n// We initialize the tick callbacks and the timer callbacks last during\x0d\n// bootstrap to make sure that any operation done before this are synchronous.\x0d\n// If any ticks or timers are scheduled before this they are unlikely to work.\x0d\n{\x0d\n  const { nextTick\x2C runNextTicks } = setupTaskQueue();\x0d\n  process.nextTick = nextTick;\x0d\n  // Used to emulate a tick manually in the JS land.\x0d\n  // A better name for this function would be `runNextTicks` but\x0d\n  // it has been exposed to the process object so we keep this legacy name\x0d\n  // TODO(joyeecheung): either remove it or make it public\x0d\n  process._tickCallback = runNextTicks;\x0d\n\x0d\n  const { setupTimers } = internalBinding('timers');\x0d\n  const {\x0d\n    processImmediate\x2C\x0d\n    processTimers\x2C\x0d\n  } = internalTimers.getTimerCallbacks(runNextTicks);\x0d\n  // Sets two per-Environment callbacks that will be run from libuv:\x0d\n  // - processImmediate will be run in the callback of the per-Environment\x0d\n  //   check handle.\x0d\n  // - processTimers will be run in the callback of the per-Environment timer.\x0d\n  setupTimers(processImmediate\x2C processTimers);\x0d\n  // Note: only after this point are the timers effective\x0d\n}\x0d\n\x0d\n// Preload modules so that they are included in the builtin snapshot.\x0d\nrequire('fs');\x0d\nrequire('v8');\x0d\nrequire('vm');\x0d\nrequire('url');\x0d\nrequire('internal/options');\x0d\n\x0d\nfunction setupPrepareStackTrace() {\x0d\n  const {\x0d\n    setEnhanceStackForFatalException\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  const {\x0d\n    prepareStackTrace\x2C\x0d\n    fatalExceptionStackEnhancers: {\x0d\n      beforeInspector\x2C\x0d\n      afterInspector\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  // Tell our PrepareStackTraceCallback passed to the V8 API\x0d\n  // to call prepareStackTrace().\x0d\n  setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  // Set the function used to enhance the error stack for printing\x0d\n  setEnhanceStackForFatalException(beforeInspector\x2C afterInspector);\x0d\n}\x0d\n\x0d\nfunction setupProcessObject() {\x0d\n  const EventEmitter = require('events');\x0d\n  const origProcProto = ObjectGetPrototypeOf(process);\x0d\n  ObjectSetPrototypeOf(origProcProto\x2C EventEmitter.prototype);\x0d\n  FunctionPrototypeCall(EventEmitter\x2C process);\x0d\n  ObjectDefineProperty(process\x2C SymbolToStringTag\x2C {\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: 'process'\x0d\n  });\x0d\n  // Make process globally available to users by putting it on the global proxy\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    value: process\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupGlobalProxy() {\x0d\n  ObjectDefineProperty(globalThis\x2C SymbolToStringTag\x2C {\x0d\n    value: 'global'\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupBuffer() {\x0d\n  const {\x0d\n    Buffer\x2C\x0d\n    atob\x2C\x0d\n    btoa\x2C\x0d\n  } = require('buffer');\x0d\n  const bufferBinding = internalBinding('buffer');\x0d\n\x0d\n  // Only after this point can C++ use Buffer::New()\x0d\n  bufferBinding.setBufferPrototype(Buffer.prototype);\x0d\n  delete bufferBinding.setBufferPrototype;\x0d\n  delete bufferBinding.zeroFill;\x0d\n\x0d\n  ObjectDefineProperties(globalThis\x2C {\x0d\n    'Buffer': {\x0d\n      value: Buffer\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n    'atob': {\x0d\n      value: atob\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n    'btoa': {\x0d\n      value: btoa\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction createGlobalConsole(consoleFromVM) {\x0d\n  const consoleFromNode =\x0d\n    require('internal/console/global');\x0d\n  if (config.hasInspector) {\x0d\n    const inspector = require('internal/util/inspector');\x0d\n    // This will be exposed by `require('inspector').console` later.\x0d\n    inspector.consoleFromVM = consoleFromVM;\x0d\n    // TODO(joyeecheung): postpone this until the first time inspector\x0d\n    // is activated.\x0d\n    inspector.wrapConsole(consoleFromNode\x2C consoleFromVM);\x0d\n    const { setConsoleExtensionInstaller } = internalBinding('inspector');\x0d\n    // Setup inspector command line API.\x0d\n    setConsoleExtensionInstaller(inspector.installConsoleExtensions);\x0d\n  }\x0d\n  return consoleFromNode;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-namespaces\x0d\nfunction exposeNamespace(target\x2C name\x2C namespaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: namespaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#Replaceable\x0d\nfunction defineReplacableAttribute(target\x2C name\x2C value) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value\x2C\x0d\n  });\x0d\n}\x0d\n
code-source-info,0x22cec156b06,10,4267,4295,C0O4272C4O4293,,
code-creation,LazyCompile,10,1333066,0x22cec157c76,52,get node:internal/bootstrap/node:112:6,0x3eae9a94988,~
code-source-info,0x22cec157c76,10,3630,3901,C0O3673C14O3673C20O3713C29O3830C35O3852C43O3837C48O3872C49O3885C51O3896,,
code-creation,LazyCompile,10,1333258,0x22cec157e9e,75,setupDebugEnv node:internal/bootstrap/pre_execution:249:23,0x22cec1442d0,~
code-source-info,0x22cec157e9e,96,7933,8148,C0O7941C6O7941C11O7974C19O8002C24O8006C29O7975C34O8022C42O8026C48O8071C54O8071C59O8108C64O8121C69O8122C74O8147,,
code-creation,LazyCompile,10,1333524,0x22cec1582d6,159,initializeDebugEnv node:internal/util/debuglog:22:28,0xc194f619f0,~
script-source,22,node:internal/util/debuglog,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\x0d\n\x0d\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\x0d\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\x0d\nlet debugImpls;\x0d\nlet testEnabled;\x0d\n\x0d\n\x0d\n// `debugEnv` is initial value of process.env.NODE_DEBUG\x0d\nfunction initializeDebugEnv(debugEnv) {\x0d\n  debugImpls = ObjectCreate(null);\x0d\n  if (debugEnv) {\x0d\n    // This is run before any user code\x2C it's OK not to use primordials.\x0d\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\x0d\n      .replaceAll('*'\x2C '.*')\x0d\n      .replaceAll('\x2C'\x2C '$|^');\x0d\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\x0d\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\x0d\n  } else {\x0d\n    testEnabled = () => false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Emits warning when user sets\x0d\n// NODE_DEBUG=http or NODE_DEBUG=http2.\x0d\nfunction emitWarningIfNeeded(set) {\x0d\n  if ('HTTP' === set || 'HTTP2' === set) {\x0d\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\x0d\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\x0d\n      'data (such as passwords\x2C tokens and authentication headers) ' +\x0d\n      'in the resulting log.');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction debuglogImpl(enabled\x2C set) {\x0d\n  if (debugImpls[set] === undefined) {\x0d\n    if (enabled) {\x0d\n      const pid = process.pid;\x0d\n      emitWarningIfNeeded(set);\x0d\n      debugImpls[set] = function debug(...args) {\x0d\n        const colors = process.stderr.hasColors && process.stderr.hasColors();\x0d\n        const msg = formatWithOptions({ colors }\x2C ...args);\x0d\n        const coloredPID = inspect(pid\x2C { colors });\x0d\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\x0d\n      };\x0d\n    } else {\x0d\n      debugImpls[set] = noop;\x0d\n    }\x0d\n  }\x0d\n  return debugImpls[set];\x0d\n}\x0d\n\x0d\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\x0d\n// so it needs to be called lazily in top scopes of internal modules\x0d\n// that may be loaded before these run time states are allowed to\x0d\n// be accessed.\x0d\nfunction debuglog(set\x2C cb) {\x0d\n  function init() {\x0d\n    set = StringPrototypeToUpperCase(set);\x0d\n    enabled = testEnabled(set);\x0d\n  }\x0d\n  let debug = (...args) => {\x0d\n    init();\x0d\n    // Only invokes debuglogImpl() when the debug function is\x0d\n    // called for the first time.\x0d\n    debug = debuglogImpl(enabled\x2C set);\x0d\n    if (typeof cb === 'function')\x0d\n      cb(debug);\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  let enabled;\x0d\n  let test = () => {\x0d\n    init();\x0d\n    test = () => enabled;\x0d\n    return enabled;\x0d\n  };\x0d\n  const logger = (...args) => {\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\x0d\n    get() {\x0d\n      return test();\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n  return logger;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  debuglog\x2C\x0d\n  initializeDebugEnv\x0d\n};\x0d\n
code-source-info,0x22cec1582d6,22,567,1024,C0O583C7O596C14O594C20O619C31O734C44O734C51O779C62O780C69O809C80O810C88O861C100O876C116O861C121O861C123O900C132O912C144O990C151O1002C158O1023,,
code-creation,LazyCompile,10,1334278,0x22cec1588de,49,setupStacktracePrinterOnSigint node:internal/bootstrap/pre_execution:228:40,0x22cec144208,~
code-source-info,0x22cec1588de,96,7477,7671,C0O7485C8O7490C14O7531C15O7538C16O7574C22O7574C27O7555C32O7626C38O7660C43O7660C48O7670,,
code-creation,LazyCompile,10,1334436,0x22cec158af6,62,initializeReport node:internal/bootstrap/pre_execution:238:26,0x22cec144258,~
code-source-info,0x22cec158af6,96,7700,7907,C0O7700C8O7727C16O7727C21O7716C27O7766C42O7787C47O7861C55O7766C61O7906,,
code-creation,Eval,10,1334874,0x22cec1590a6,5, node:internal/process/report:1:1,0x22cec158eb0,~
script-source,98,node:internal/process/report,'use strict';\x0d\nconst {\x0d\n  ERR_SYNTHETIC\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst nr = internalBinding('report');\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n} = primordials;\x0d\nconst report = {\x0d\n  writeReport(file\x2C err) {\x0d\n    if (typeof file === 'object' && file !== null) {\x0d\n      err = file;\x0d\n      file = undefined;\x0d\n    } else if (file !== undefined) {\x0d\n      validateString(file\x2C 'file');\x0d\n    }\x0d\n\x0d\n    if (err === undefined) {\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    } else {\x0d\n      validateObject(err\x2C 'err');\x0d\n    }\x0d\n\x0d\n    return nr.writeReport('JavaScript API'\x2C 'API'\x2C file\x2C err);\x0d\n  }\x2C\x0d\n  getReport(err) {\x0d\n    if (err === undefined)\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    else\x0d\n      validateObject(err\x2C 'err');\x0d\n\x0d\n    return JSONParse(nr.getReport(err));\x0d\n  }\x2C\x0d\n  get directory() {\x0d\n    return nr.getDirectory();\x0d\n  }\x2C\x0d\n  set directory(dir) {\x0d\n    validateString(dir\x2C 'directory');\x0d\n    nr.setDirectory(dir);\x0d\n  }\x2C\x0d\n  get filename() {\x0d\n    return nr.getFilename();\x0d\n  }\x2C\x0d\n  set filename(name) {\x0d\n    validateString(name\x2C 'filename');\x0d\n    nr.setFilename(name);\x0d\n  }\x2C\x0d\n  get compact() {\x0d\n    return nr.getCompact();\x0d\n  }\x2C\x0d\n  set compact(b) {\x0d\n    validateBoolean(b\x2C 'compact');\x0d\n    nr.setCompact(b);\x0d\n  }\x2C\x0d\n  get signal() {\x0d\n    return nr.getSignal();\x0d\n  }\x2C\x0d\n  set signal(sig) {\x0d\n    validateSignalName(sig\x2C 'signal');\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler(sig);\x0d\n    nr.setSignal(sig);\x0d\n  }\x2C\x0d\n  get reportOnFatalError() {\x0d\n    return nr.shouldReportOnFatalError();\x0d\n  }\x2C\x0d\n  set reportOnFatalError(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnFatalError(trigger);\x0d\n  }\x2C\x0d\n  get reportOnSignal() {\x0d\n    return nr.shouldReportOnSignal();\x0d\n  }\x2C\x0d\n  set reportOnSignal(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnSignal(trigger);\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler();\x0d\n  }\x2C\x0d\n  get reportOnUncaughtException() {\x0d\n    return nr.shouldReportOnUncaughtException();\x0d\n  }\x2C\x0d\n  set reportOnUncaughtException(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnUncaughtException(trigger);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addSignalHandler(sig) {\x0d\n  if (nr.shouldReportOnSignal()) {\x0d\n    if (typeof sig !== 'string')\x0d\n      sig = nr.getSignal();\x0d\n\x0d\n    process.on(sig\x2C signalHandler);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeSignalHandler() {\x0d\n  const sig = nr.getSignal();\x0d\n\x0d\n  if (sig)\x0d\n    process.removeListener(sig\x2C signalHandler);\x0d\n}\x0d\n\x0d\nfunction signalHandler(sig) {\x0d\n  nr.writeReport(sig\x2C 'Signal'\x2C null\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addSignalHandler\x2C\x0d\n  report\x0d\n};\x0d\n
code-source-info,0x22cec1590a6,98,0,2666,C0O0C4O2666,,
code-creation,Function,10,1335419,0x22cec159bb6,306, node:internal/process/report:1:1,0x22cec159020,~
code-source-info,0x22cec159bb6,98,0,2666,C0O0C48O45C51O45C56O71C61O26C67O174C70O174C75O91C81O111C87O130C93O153C99O218C102O218C106O218C108O257C114O302C119O307C127O709C281O2611C288O2633C294O2654C300O2626C305O2665,,
code-creation,LazyCompile,10,1336014,0x22cec15ba6e,21,initializeReportSignalHandlers node:internal/bootstrap/pre_execution:257:40,0x22cec144320,~
code-source-info,0x22cec15ba6e,96,8252,8352,C0O8289C6O8289C11O8268C16O8330C20O8351,,
code-creation,LazyCompile,10,1336196,0x22cec15bb76,57,addSignalHandler node:internal/process/report:98:26,0x22cec1590d8,~
code-source-info,0x22cec15bb76,98,2241,2394,C0O2252C5O2259C10O2259C16O2290C22O2326C27O2335C32O2335C38O2355C41O2363C49O2363C56O2393,,
code-creation,LazyCompile,10,1336391,0x22cec15c13e,92,initializeHeapSnapshotSignalHandlers node:internal/bootstrap/pre_execution:263:46,0x22cec144370,~
code-source-info,0x22cec15c13e,96,8401,8675,C0O8401C8O8424C18O8424C23O8470C25O8488C26O8495C27O8501C35O8501C40O8531C45O8532C50O8593C58O8593C63O8571C69O8613C74O8621C79O8624C84O8621C91O8674,,
code-creation,LazyCompile,10,1336567,0x22cec15c3ce,138,setupChildProcessIpcChannel node:internal/bootstrap/pre_execution:393:37,0x22cec144540,~
code-source-info,0x22cec15c3ce,96,12545,13091,C0O12553C3O12565C8O12569C14O12608C20O12608C25O12654C33O12677C38O12681C46O12654C52O12708C53O12718C57O12708C61O12802C64O12817C73O12878C76O12886C81O12890C90O12938C93O12953C102O12997C108O12997C113O13021C118O13022C124O13062C127O13077C132O13062C137O13090,,
code-creation,LazyCompile,10,1336785,0x22cec15c55e,21,assert node:internal/assert:11:16,0xc194f609c8,~
script-source,21,node:internal/assert,'use strict';\x0d\n\x0d\nlet error;\x0d\nfunction lazyError() {\x0d\n  if (!error) {\x0d\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\x0d\n  }\x0d\n  return error;\x0d\n}\x0d\n\x0d\nfunction assert(value\x2C message) {\x0d\n  if (!value) {\x0d\n    const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n    throw new ERR_INTERNAL_ASSERTION(message);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction fail(message) {\x0d\n  const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n  throw new ERR_INTERNAL_ASSERTION(message);\x0d\n}\x0d\n\x0d\nassert.fail = fail;\x0d\n\x0d\nmodule.exports = assert;\x0d\n
code-source-info,0x22cec15c55e,21,182,322,C0O204C4O254C7O254C11O272C13O278C18O272C20O321,,
tick,0x7ff7ddeda6b2,1338245,1,0x7ff7dd90e150,2,0x7ff7de2559a0,0x22cec142fec,0x22cec1422dd,0x22cec15c43a,0x22cec146502,0x22cec142065
code-creation,Eval,10,1338663,0x22cec15d3d6,5, node:child_process:1:1,0x22cec15cf00,~
script-source,99,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeLastIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  promisify\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  getSystemErrorName\x0d\n} = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nlet debug = require('internal/util/debuglog').debuglog(\x0d\n  'child_process'\x2C\x0d\n  (fn) => {\x0d\n    debug = fn;\x0d\n  }\x0d\n);\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes: errorCodes\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\x0d\n  ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = errorCodes;\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst child_process = require('internal/child_process');\x0d\nconst {\x0d\n  getValidStdio\x2C\x0d\n  setupChannel\x2C\x0d\n  ChildProcess\x2C\x0d\n  stdioStringToArray\x0d\n} = child_process;\x0d\n\x0d\nconst MAX_BUFFER = 1024 * 1024;\x0d\n\x0d\n/**\x0d\n * Spawns a new Node.js process + fork.\x0d\n * @param {string|URL} modulePath\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   detached?: boolean;\x0d\n *   env?: Object;\x0d\n *   execPath?: string;\x0d\n *   execArgv?: string[];\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   killSignal?: string | number;\x0d\n *   silent?: boolean;\x0d\n *   stdio?: Array | string;\x0d\n *   uid?: number;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   timeout?: number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction fork(modulePath\x2C args = []\x2C options) {\x0d\n  modulePath = getValidatedPath(modulePath\x2C 'modulePath');\x0d\n\x0d\n  // Get options and args arguments.\x0d\n  let execArgv;\x0d\n\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  } else if (!ArrayIsArray(args)) {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  } else {\x0d\n    options = { ...options };\x0d\n  }\x0d\n\x0d\n  // Prepare arguments for fork:\x0d\n  execArgv = options.execArgv || process.execArgv;\x0d\n\x0d\n  if (execArgv === process.execArgv && process._eval != null) {\x0d\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\x0d\n    if (index > 0) {\x0d\n      // Remove the -e switch to avoid fork bombing ourselves.\x0d\n      execArgv = ArrayPrototypeSlice(execArgv);\x0d\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  args = [...execArgv\x2C modulePath\x2C ...args];\x0d\n\x0d\n  if (typeof options.stdio === 'string') {\x0d\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\x0d\n  } else if (!ArrayIsArray(options.stdio)) {\x0d\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\x0d\n    // and stderr from the parent if silent isn't set.\x0d\n    options.stdio = stdioStringToArray(\x0d\n      options.silent ? 'pipe' : 'inherit'\x2C\x0d\n      'ipc');\x0d\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\x0d\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\x0d\n  }\x0d\n\x0d\n  options.execPath = options.execPath || process.execPath;\x0d\n  options.shell = false;\x0d\n\x0d\n  return spawn(options.execPath\x2C args\x2C options);\x0d\n}\x0d\n\x0d\nfunction _forkChild(fd\x2C serializationMode) {\x0d\n  // set process.send()\x0d\n  const p = new Pipe(PipeConstants.IPC);\x0d\n  p.open(fd);\x0d\n  p.unref();\x0d\n  const control = setupChannel(process\x2C p\x2C serializationMode);\x0d\n  process.on('newListener'\x2C function onNewListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.refCounted();\x0d\n  });\x0d\n  process.on('removeListener'\x2C function onRemoveListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  // Make a shallow copy so we don't clobber the user's options object.\x0d\n  options = { ...options };\x0d\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\x0d\n\x0d\n  return {\x0d\n    file: command\x2C\x0d\n    options: options\x2C\x0d\n    callback: callback\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given command.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cmd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   shell?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction exec(command\x2C options\x2C callback) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\x0d\n  return module.exports.execFile(opts.file\x2C\x0d\n                                 opts.options\x2C\x0d\n                                 opts.callback);\x0d\n}\x0d\n\x0d\nconst customPromiseExecFunction = (orig) => {\x0d\n  return (...args) => {\x0d\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\x0d\n\x0d\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\x0d\n      if (err !== null) {\x0d\n        err.stdout = stdout;\x0d\n        err.stderr = stderr;\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve({ stdout\x2C stderr });\x0d\n      }\x0d\n    });\x0d\n\x0d\n    return promise;\x0d\n  };\x0d\n};\x0d\n\x0d\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(exec)\x0d\n});\x0d\n\x0d\n/**\x0d\n * Spawns the specified file as a shell.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction execFile(file\x2C args = []\x2C options\x2C callback) {\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args === 'object') {\x0d\n    if (!ArrayIsArray(args)) {\x0d\n      callback = options;\x0d\n      options = args;\x0d\n      args = [];\x0d\n    }\x0d\n  } else if (typeof args === 'function') {\x0d\n    callback = args;\x0d\n    options = {};\x0d\n    args = [];\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  }\x0d\n\x0d\n  if (callback && typeof callback !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('callback'\x2C callback);\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    encoding: 'utf8'\x2C\x0d\n    timeout: 0\x2C\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    killSignal: 'SIGTERM'\x2C\x0d\n    cwd: null\x2C\x0d\n    env: null\x2C\x0d\n    shell: false\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  const child = spawn(file\x2C args\x2C {\x0d\n    cwd: options.cwd\x2C\x0d\n    env: options.env\x2C\x0d\n    gid: options.gid\x2C\x0d\n    shell: options.shell\x2C\x0d\n    signal: options.signal\x2C\x0d\n    uid: options.uid\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\x0d\n  });\x0d\n\x0d\n  let encoding;\x0d\n  const _stdout = [];\x0d\n  const _stderr = [];\x0d\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\x0d\n    encoding = options.encoding;\x0d\n  } else {\x0d\n    encoding = null;\x0d\n  }\x0d\n  let stdoutLen = 0;\x0d\n  let stderrLen = 0;\x0d\n  let killed = false;\x0d\n  let exited = false;\x0d\n  let timeoutId;\x0d\n\x0d\n  let ex = null;\x0d\n\x0d\n  let cmd = file;\x0d\n\x0d\n  function exithandler(code\x2C signal) {\x0d\n    if (exited) return;\x0d\n    exited = true;\x0d\n\x0d\n    if (timeoutId) {\x0d\n      clearTimeout(timeoutId);\x0d\n      timeoutId = null;\x0d\n    }\x0d\n\x0d\n    if (!callback) return;\x0d\n\x0d\n    // merge chunks\x0d\n    let stdout;\x0d\n    let stderr;\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stdout &&\x0d\n        child.stdout.readableEncoding\x0d\n      )) {\x0d\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\x0d\n    } else {\x0d\n      stdout = Buffer.concat(_stdout);\x0d\n    }\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stderr &&\x0d\n        child.stderr.readableEncoding\x0d\n      )) {\x0d\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\x0d\n    } else {\x0d\n      stderr = Buffer.concat(_stderr);\x0d\n    }\x0d\n\x0d\n    if (!ex && code === 0 && signal === null) {\x0d\n      callback(null\x2C stdout\x2C stderr);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (args.length !== 0)\x0d\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\x0d\n\x0d\n    if (!ex) {\x0d\n      ex = genericNodeError(`Command failed: ${cmd}\\n${stderr}`\x2C {\x0d\n        code: code < 0 ? getSystemErrorName(code) : code\x2C\x0d\n        killed: child.killed || killed\x2C\x0d\n        signal: signal\x0d\n      });\x0d\n    }\x0d\n\x0d\n    ex.cmd = cmd;\x0d\n    callback(ex\x2C stdout\x2C stderr);\x0d\n  }\x0d\n\x0d\n  function errorhandler(e) {\x0d\n    ex = e;\x0d\n\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    exithandler();\x0d\n  }\x0d\n\x0d\n  function kill() {\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    killed = true;\x0d\n    try {\x0d\n      child.kill(options.killSignal);\x0d\n    } catch (e) {\x0d\n      ex = e;\x0d\n      exithandler();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    timeoutId = setTimeout(function delayedKill() {\x0d\n      kill();\x0d\n      timeoutId = null;\x0d\n    }\x2C options.timeout);\x0d\n  }\x0d\n\x0d\n  if (child.stdout) {\x0d\n    if (encoding)\x0d\n      child.stdout.setEncoding(encoding);\x0d\n\x0d\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\x0d\n      const encoding = child.stdout.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      const slice = encoding ? StringPrototypeSlice :\x0d\n        (buf\x2C ...args) => buf.slice(...args);\x0d\n      stdoutLen += length;\x0d\n\x0d\n      if (stdoutLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\x0d\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\x0d\n        kill();\x0d\n      } else {\x0d\n        ArrayPrototypePush(_stdout\x2C chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (child.stderr) {\x0d\n    if (encoding)\x0d\n      child.stderr.setEncoding(encoding);\x0d\n\x0d\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\x0d\n      const encoding = child.stderr.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      stderrLen += length;\x0d\n\x0d\n      if (stderrLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\x0d\n        ArrayPrototypePush(_stderr\x2C\x0d\n                           chunk.slice(0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\x0d\n        kill();\x0d\n      } else {\x0d\n        _stderr.push(chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  child.addListener('close'\x2C exithandler);\x0d\n  child.addListener('error'\x2C errorhandler);\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(execFile)\x0d\n});\x0d\n\x0d\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\x0d\n  validateString(file\x2C 'file');\x0d\n\x0d\n  if (file.length === 0)\x0d\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\x0d\n\x0d\n  if (ArrayIsArray(args)) {\x0d\n    args = ArrayPrototypeSlice(args);\x0d\n  } else if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\x0d\n  } else {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options === undefined)\x0d\n    options = {};\x0d\n  else\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n  let cwd = options.cwd;\x0d\n\x0d\n  // Validate the cwd\x2C if present.\x0d\n  if (cwd != null) {\x0d\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\x0d\n  }\x0d\n\x0d\n  // Validate detached\x2C if present.\x0d\n  if (options.detached != null) {\x0d\n    validateBoolean(options.detached\x2C 'options.detached');\x0d\n  }\x0d\n\x0d\n  // Validate the uid\x2C if present.\x0d\n  if (options.uid != null && !isInt32(options.uid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\x0d\n  }\x0d\n\x0d\n  // Validate the gid\x2C if present.\x0d\n  if (options.gid != null && !isInt32(options.gid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\x0d\n  }\x0d\n\x0d\n  // Validate the shell\x2C if present.\x0d\n  if (options.shell != null &&\x0d\n      typeof options.shell !== 'boolean' &&\x0d\n      typeof options.shell !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\x0d\n                                   ['boolean'\x2C 'string']\x2C options.shell);\x0d\n  }\x0d\n\x0d\n  // Validate argv0\x2C if present.\x0d\n  if (options.argv0 != null) {\x0d\n    validateString(options.argv0\x2C 'options.argv0');\x0d\n  }\x0d\n\x0d\n  // Validate windowsHide\x2C if present.\x0d\n  if (options.windowsHide != null) {\x0d\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\x0d\n  }\x0d\n\x0d\n  // Validate windowsVerbatimArguments\x2C if present.\x0d\n  let { windowsVerbatimArguments } = options;\x0d\n  if (windowsVerbatimArguments != null) {\x0d\n    validateBoolean(windowsVerbatimArguments\x2C\x0d\n                    'options.windowsVerbatimArguments');\x0d\n  }\x0d\n\x0d\n  if (options.shell) {\x0d\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\x0d\n    // Set the shell\x2C switches\x2C and commands.\x0d\n    if (process.platform === 'win32') {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else\x0d\n        file = process.env.comspec || 'cmd.exe';\x0d\n      // '/d /s /c' is used only for cmd.exe.\x0d\n      if (RegExpPrototypeTest(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file)) {\x0d\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\x0d\n        windowsVerbatimArguments = true;\x0d\n      } else {\x0d\n        args = ['-c'\x2C command];\x0d\n      }\x0d\n    } else {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else if (process.platform === 'android')\x0d\n        file = '/system/bin/sh';\x0d\n      else\x0d\n        file = '/bin/sh';\x0d\n      args = ['-c'\x2C command];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof options.argv0 === 'string') {\x0d\n    ArrayPrototypeUnshift(args\x2C options.argv0);\x0d\n  } else {\x0d\n    ArrayPrototypeUnshift(args\x2C file);\x0d\n  }\x0d\n\x0d\n  const env = options.env || process.env;\x0d\n  const envPairs = [];\x0d\n\x0d\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\x0d\n  // collect coverage for programs that spawn with white-listed environment.\x0d\n  if (process.env.NODE_V8_COVERAGE &&\x0d\n      !ObjectPrototypeHasOwnProperty(options.env || {}\x2C 'NODE_V8_COVERAGE')) {\x0d\n    env.NODE_V8_COVERAGE = process.env.NODE_V8_COVERAGE;\x0d\n  }\x0d\n\x0d\n  let envKeys = [];\x0d\n  // Prototype values are intentionally included.\x0d\n  for (const key in env) {\x0d\n    ArrayPrototypePush(envKeys\x2C key);\x0d\n  }\x0d\n\x0d\n  if (process.platform === 'win32') {\x0d\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\x0d\n    // keeping only the first one (in lexicographic order)\x0d\n    const sawKey = new SafeSet();\x0d\n    envKeys = ArrayPrototypeFilter(\x0d\n      ArrayPrototypeSort(envKeys)\x2C\x0d\n      (key) => {\x0d\n        const uppercaseKey = StringPrototypeToUpperCase(key);\x0d\n        if (sawKey.has(uppercaseKey)) {\x0d\n          return false;\x0d\n        }\x0d\n        sawKey.add(uppercaseKey);\x0d\n        return true;\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n\x0d\n  for (const key of envKeys) {\x0d\n    const value = env[key];\x0d\n    if (value !== undefined) {\x0d\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    // Make a shallow copy so we don't clobber the user's options object.\x0d\n    ...options\x2C\x0d\n    args\x2C\x0d\n    cwd\x2C\x0d\n    detached: !!options.detached\x2C\x0d\n    envPairs\x2C\x0d\n    file\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction abortChildProcess(child\x2C killSignal) {\x0d\n  if (!child)\x0d\n    return;\x0d\n  try {\x0d\n    if (child.kill(killSignal)) {\x0d\n      child.emit('error'\x2C new AbortError());\x0d\n    }\x0d\n  } catch (err) {\x0d\n    child.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   argv0?: string;\x0d\n *   stdio?: Array | string;\x0d\n *   detached?: boolean;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction spawn(file\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\x0d\n  validateTimeout(options.timeout);\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const killSignal = sanitizeKillSignal(options.killSignal);\x0d\n  const child = new ChildProcess();\x0d\n\x0d\n  debug('spawn'\x2C options);\x0d\n  child.spawn(options);\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    let timeoutId = setTimeout(() => {\x0d\n      if (timeoutId) {\x0d\n        try {\x0d\n          child.kill(killSignal);\x0d\n        } catch (err) {\x0d\n          child.emit('error'\x2C err);\x0d\n        }\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    }\x2C options.timeout);\x0d\n\x0d\n    child.once('exit'\x2C () => {\x0d\n      if (timeoutId) {\x0d\n        clearTimeout(timeoutId);\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (options.signal) {\x0d\n    const signal = options.signal;\x0d\n    if (signal.aborted) {\x0d\n      process.nextTick(onAbortListener);\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAbortListener\x2C { once: true });\x0d\n      child.once('exit'\x2C\x0d\n                 () => signal.removeEventListener('abort'\x2C onAbortListener));\x0d\n    }\x0d\n\x0d\n    function onAbortListener() {\x0d\n      abortChildProcess(child\x2C killSignal);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process synchronously using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   argv0?: string;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {{\x0d\n *   pid: number;\x0d\n *   output: Array;\x0d\n *   stdout: Buffer | string;\x0d\n *   stderr: Buffer | string;\x0d\n *   status: number | null;\x0d\n *   signal: string | null;\x0d\n *   error: Error;\x0d\n *   }}\x0d\n */\x0d\nfunction spawnSync(file\x2C args\x2C options) {\x0d\n  options = {\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\x0d\n  };\x0d\n\x0d\n  debug('spawnSync'\x2C options);\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  // Validate and translate the kill signal\x2C if present.\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\x0d\n\x0d\n  if (options.input) {\x0d\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\x0d\n    stdin.input = options.input;\x0d\n  }\x0d\n\x0d\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\x0d\n  for (let i = 0; i < options.stdio.length; i++) {\x0d\n    const input = options.stdio[i] && options.stdio[i].input;\x0d\n    if (input != null) {\x0d\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\x0d\n      if (isArrayBufferView(input)) {\x0d\n        pipe.input = input;\x0d\n      } else if (typeof input === 'string') {\x0d\n        pipe.input = Buffer.from(input\x2C options.encoding);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\x0d\n                                       ['Buffer'\x2C\x0d\n                                        'TypedArray'\x2C\x0d\n                                        'DataView'\x2C\x0d\n                                        'string']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child_process.spawnSync(options);\x0d\n}\x0d\n\x0d\n\x0d\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\x0d\n  let err;\x0d\n  if (ret.error) {\x0d\n    err = ret.error;\x0d\n    ObjectAssign(err\x2C ret);\x0d\n  } else if (ret.status !== 0) {\x0d\n    let msg = 'Command failed: ';\x0d\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\x0d\n    if (ret.stderr && ret.stderr.length > 0)\x0d\n      msg += `\\n${ret.stderr.toString()}`;\x0d\n    err = genericNodeError(msg\x2C ret);\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a file as a shell synchronously.\x0d\n * @param {string} command\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execFileSync(command\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(command\x2C args\x2C options);\x0d\n\x0d\n  const inheritStderr = !options.stdio;\x0d\n  const ret = spawnSync(options.file\x2C\x0d\n                        ArrayPrototypeSlice(options.args\x2C 1)\x2C options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C options.args\x2C undefined);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given `command` synchronously.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   shell?: string;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execSync(command\x2C options) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\x0d\n  const inheritStderr = !opts.options.stdio;\x0d\n\x0d\n  const ret = spawnSync(opts.file\x2C opts.options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C opts.args\x2C command);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateTimeout(timeout) {\x0d\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateMaxBuffer(maxBuffer) {\x0d\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\x0d\n                               'a positive number'\x2C\x0d\n                               maxBuffer);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction sanitizeKillSignal(killSignal) {\x0d\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\x0d\n    return convertToValidSignal(killSignal);\x0d\n  } else if (killSignal != null) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\x0d\n                                   ['string'\x2C 'number']\x2C\x0d\n                                   killSignal);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _forkChild\x2C\x0d\n  ChildProcess\x2C\x0d\n  exec\x2C\x0d\n  execFile\x2C\x0d\n  execFileSync\x2C\x0d\n  execSync\x2C\x0d\n  fork\x2C\x0d\n  spawn\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x22cec15d3d6,99,0,25421,C0O0C4O25421,,
code-creation,Function,10,1343119,0x22cec15de36,748, node:child_process:1:1,0x22cec15d350,~
code-source-info,0x22cec15de
code-creation,LazyCompile,10,1343929,0x22cec160406,82,debuglog node:internal/util/debuglog:71:18,0xc194f61d40,~
code-source-info,0x22cec160406,22,2302,3328,C0O2302C28O2432C32O2432C34O2847C35O2847C37O2870C41O2870C43O2963C48O3169C58O3190C63O3216C74O3169C79O3311C81O3325,,
code-creation,Eval,10,1346250,0x22cec1633ee,5, node:internal/child_process:1:1,0x22cec162cf0,~
script-source,100,node:internal/child_process,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\x0d\n    ERR_IPC_CHANNEL_CLOSED\x2C\x0d\n    ERR_IPC_DISCONNECTED\x2C\x0d\n    ERR_IPC_ONE_PIPE\x2C\x0d\n    ERR_IPC_SYNC_FORK\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst EventEmitter = require('events');\x0d\nconst net = require('net');\x0d\nconst dgram = require('dgram');\x0d\nconst inspect = require('internal/util/inspect').inspect;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { Process } = internalBinding('process_wrap');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\nconst { TCP } = internalBinding('tcp_wrap');\x0d\nconst { TTY } = internalBinding('tty_wrap');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst SocketList = require('internal/socket_list');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst { convertToValidSignal\x2C deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst spawn_sync = internalBinding('spawn_sync');\x0d\nconst { kStateSymbol } = require('internal/dgram');\x0d\n\x0d\nconst {\x0d\n  UV_EACCES\x2C\x0d\n  UV_EAGAIN\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_EMFILE\x2C\x0d\n  UV_ENFILE\x2C\x0d\n  UV_ENOENT\x2C\x0d\n  UV_ENOSYS\x2C\x0d\n  UV_ESRCH\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\x0d\n\x0d\n// Lazy loaded for startup performance and to allow monkey patching of\x0d\n// internalBinding('http_parser').HTTPParser.\x0d\nlet freeParser;\x0d\nlet HTTPParser;\x0d\n\x0d\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\x0d\nconst kChannelHandle = Symbol('kChannelHandle');\x0d\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\x0d\nconst kPendingMessages = Symbol('kPendingMessages');\x0d\n\x0d\n// This object contain function to convert TCP objects to native handle objects\x0d\n// and back again.\x0d\nconst handleConversion = {\x0d\n  'net.Native': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Server': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C server\x2C options) {\x0d\n      return server._handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const server = new net.Server();\x0d\n      server.listen(handle\x2C () => {\x0d\n        emit(server);\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Socket': {\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      if (!socket._handle)\x0d\n        return;\x0d\n\x0d\n      // If the socket was created by net.Server\x0d\n      if (socket.server) {\x0d\n        // The worker should keep track of the socket\x0d\n        message.key = socket.server._connectionKey;\x0d\n\x0d\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\x0d\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\x0d\n\x0d\n        // The server should no longer expose a .connection property\x0d\n        // and when asked to close it should query the socket status from\x0d\n        // the workers\x0d\n        if (firstTime) socket.server._setupWorker(socketList);\x0d\n\x0d\n        // Act like socket is detached\x0d\n        if (!options.keepOpen)\x0d\n          socket.server._connections--;\x0d\n      }\x0d\n\x0d\n      const handle = socket._handle;\x0d\n\x0d\n      // Remove handle from socket object\x2C it will be closed when the socket\x0d\n      // will be sent\x0d\n      if (!options.keepOpen) {\x0d\n        handle.onread = nop;\x0d\n        socket._handle = null;\x0d\n        socket.setTimeout(0);\x0d\n\x0d\n        if (freeParser === undefined)\x0d\n          freeParser = require('_http_common').freeParser;\x0d\n        if (HTTPParser === undefined)\x0d\n          HTTPParser = require('_http_common').HTTPParser;\x0d\n\x0d\n        // In case of an HTTP connection socket\x2C release the associated\x0d\n        // resources\x0d\n        if (socket.parser && socket.parser instanceof HTTPParser) {\x0d\n          freeParser(socket.parser\x2C null\x2C socket);\x0d\n          if (socket._httpMessage)\x0d\n            socket._httpMessage.detachSocket(socket);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\x0d\n      // Store the handle after successfully sending it\x2C so it can be closed\x0d\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\x0d\n      // just close it.\x0d\n      if (handle && !options.keepOpen) {\x0d\n        if (target) {\x0d\n          // There can only be one _pendingMessage as passing handles are\x0d\n          // processed one at a time: handles are stored in _handleQueue while\x0d\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\x0d\n          assert(!target._pendingMessage);\x0d\n          target._pendingMessage =\x0d\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\x0d\n        } else {\x0d\n          handle.close();\x0d\n        }\x0d\n      }\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new net.Socket({\x0d\n        handle: handle\x2C\x0d\n        readable: true\x2C\x0d\n        writable: true\x0d\n      });\x0d\n\x0d\n      // If the socket was created by net.Server we will track the socket\x0d\n      if (message.key) {\x0d\n\x0d\n        // Add socket to connections list\x0d\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\x0d\n        socketList.add({\x0d\n          socket: socket\x0d\n        });\x0d\n      }\x0d\n\x0d\n      emit(socket);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Native': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Socket': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      message.dgramType = socket.type;\x0d\n\x0d\n      return socket[kStateSymbol].handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new dgram.Socket(message.dgramType);\x0d\n\x0d\n      socket.bind(handle\x2C () => {\x0d\n        emit(socket);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction stdioStringToArray(stdio\x2C channel) {\x0d\n  const options = [];\x0d\n\x0d\n  switch (stdio) {\x0d\n    case 'ignore':\x0d\n    case 'overlapped':\x0d\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\x0d\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\x0d\n    default:\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  if (channel) ArrayPrototypePush(options\x2C channel);\x0d\n\x0d\n  return options;\x0d\n}\x0d\n\x0d\nfunction ChildProcess() {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  this._closesNeeded = 1;\x0d\n  this._closesGot = 0;\x0d\n  this.connected = false;\x0d\n\x0d\n  this.signalCode = null;\x0d\n  this.exitCode = null;\x0d\n  this.killed = false;\x0d\n  this.spawnfile = null;\x0d\n\x0d\n  this._handle = new Process();\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  this._handle.onexit = (exitCode\x2C signalCode) => {\x0d\n    if (signalCode) {\x0d\n      this.signalCode = signalCode;\x0d\n    } else {\x0d\n      this.exitCode = exitCode;\x0d\n    }\x0d\n\x0d\n    if (this.stdin) {\x0d\n      this.stdin.destroy();\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n\x0d\n    if (exitCode < 0) {\x0d\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\x0d\n      const err = errnoException(exitCode\x2C syscall);\x0d\n\x0d\n      if (this.spawnfile)\x0d\n        err.path = this.spawnfile;\x0d\n\x0d\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\x0d\n      this.emit('error'\x2C err);\x0d\n    } else {\x0d\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\x0d\n    }\x0d\n\x0d\n    // If any of the stdio streams have not been touched\x2C\x0d\n    // then pull all the data through so that it can get the\x0d\n    // eof and emit a 'close' event.\x0d\n    // Do it on nextTick so that the user has one last chance\x0d\n    // to consume the output\x2C if for example they only want to\x0d\n    // start reading the data once the process exits.\x0d\n    process.nextTick(flushStdio\x2C this);\x0d\n\x0d\n    maybeClose(this);\x0d\n  };\x0d\n}\x0d\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction flushStdio(subprocess) {\x0d\n  const stdio = subprocess.stdio;\x0d\n\x0d\n  if (stdio == null) return;\x0d\n\x0d\n  for (let i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\x0d\n    // which data can be read from a stream\x2C e.g. being consumed on the\x0d\n    // native layer directly as a StreamBase.\x0d\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\x0d\n      continue;\x0d\n    }\x0d\n    stream.resume();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction createSocket(pipe\x2C readable) {\x0d\n  return net.Socket({ handle: pipe\x2C readable\x2C writable: !readable });\x0d\n}\x0d\n\x0d\n\x0d\nfunction getHandleWrapType(stream) {\x0d\n  if (stream instanceof Pipe) return 'pipe';\x0d\n  if (stream instanceof TTY) return 'tty';\x0d\n  if (stream instanceof TCP) return 'tcp';\x0d\n  if (stream instanceof UDP) return 'udp';\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction closePendingHandle(target) {\x0d\n  target._pendingMessage.handle.close();\x0d\n  target._pendingMessage = null;\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.spawn = function(options) {\x0d\n  let i = 0;\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  // If no `stdio` option was given - use default\x0d\n  let stdio = options.stdio || 'pipe';\x0d\n\x0d\n  stdio = getValidStdio(stdio\x2C false);\x0d\n\x0d\n  const ipc = stdio.ipc;\x0d\n  const ipcFd = stdio.ipcFd;\x0d\n  stdio = options.stdio = stdio.stdio;\x0d\n\x0d\n\x0d\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\x0d\n                [undefined\x2C 'json'\x2C 'advanced']);\x0d\n  const serialization = options.serialization || 'json';\x0d\n\x0d\n  if (ipc !== undefined) {\x0d\n    // Let child process know about opened IPC channel\x0d\n    if (options.envPairs === undefined)\x0d\n      options.envPairs = [];\x0d\n    else\x0d\n      validateArray(options.envPairs\x2C 'options.envPairs');\x0d\n\x0d\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\x0d\n    ArrayPrototypePush(options.envPairs\x2C\x0d\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\x0d\n  }\x0d\n\x0d\n  validateString(options.file\x2C 'options.file');\x0d\n  this.spawnfile = options.file;\x0d\n\x0d\n  if (options.args === undefined) {\x0d\n    this.spawnargs = [];\x0d\n  } else {\x0d\n    validateArray(options.args\x2C 'options.args');\x0d\n    this.spawnargs = options.args;\x0d\n  }\x0d\n\x0d\n  const err = this._handle.spawn(options);\x0d\n\x0d\n  // Run-time errors should emit an error\x2C not throw an exception.\x0d\n  if (err === UV_EACCES ||\x0d\n      err === UV_EAGAIN ||\x0d\n      err === UV_EMFILE ||\x0d\n      err === UV_ENFILE ||\x0d\n      err === UV_ENOENT) {\x0d\n    process.nextTick(onErrorNT\x2C this\x2C err);\x0d\n\x0d\n    // There is no point in continuing when we've hit EMFILE or ENFILE\x0d\n    // because we won't be able to set up the stdio file descriptors.\x0d\n    if (err === UV_EMFILE || err === UV_ENFILE)\x0d\n      return err;\x0d\n  } else if (err) {\x0d\n    // Close all opened fds on error\x0d\n    for (i = 0; i < stdio.length; i++) {\x0d\n      const stream = stdio[i];\x0d\n      if (stream.type === 'pipe') {\x0d\n        stream.handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    throw errnoException(err\x2C 'spawn');\x0d\n  } else {\x0d\n    process.nextTick(onSpawnNT\x2C this);\x0d\n  }\x0d\n\x0d\n  this.pid = this._handle.pid;\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    if (stream.type === 'ignore') continue;\x0d\n\x0d\n    if (stream.ipc) {\x0d\n      this._closesNeeded++;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\x0d\n    // otherwise we might attempt to read from the stream when at the same time\x0d\n    // the child process does.\x0d\n    if (stream.type === 'wrap') {\x0d\n      stream.handle.reading = false;\x0d\n      stream.handle.readStop();\x0d\n      stream._stdio.pause();\x0d\n      stream._stdio.readableFlowing = false;\x0d\n      stream._stdio._readableState.reading = false;\x0d\n      stream._stdio[kIsUsedAsStdio] = true;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (stream.handle) {\x0d\n      // When i === 0 - we're dealing with stdin\x0d\n      // (which is the only one writable pipe).\x0d\n      stream.socket = createSocket(this.pid !== 0 ?\x0d\n        stream.handle : null\x2C i > 0);\x0d\n\x0d\n      if (i > 0 && this.pid !== 0) {\x0d\n        this._closesNeeded++;\x0d\n        stream.socket.on('close'\x2C () => {\x0d\n          maybeClose(this);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\x0d\n    stdio[0].socket : null;\x0d\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\x0d\n    stdio[1].socket : null;\x0d\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\x0d\n    stdio[2].socket : null;\x0d\n\x0d\n  this.stdio = [];\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++)\x0d\n    ArrayPrototypePush(this.stdio\x2C\x0d\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\x0d\n\x0d\n  // Add .send() method and start listening for IPC data\x0d\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\x0d\n\x0d\n  return err;\x0d\n};\x0d\n\x0d\n\x0d\nfunction onErrorNT(self\x2C err) {\x0d\n  self._handle.onexit(err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onSpawnNT(self) {\x0d\n  self.emit('spawn');\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.kill = function(sig) {\x0d\n\x0d\n  const signal = sig === 0 ? sig :\x0d\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\x0d\n\x0d\n  if (this._handle) {\x0d\n    const err = this._handle.kill(signal);\x0d\n    if (err === 0) {\x0d\n      /* Success. */\x0d\n      this.killed = true;\x0d\n      return true;\x0d\n    }\x0d\n    if (err === UV_ESRCH) {\x0d\n      /* Already dead. */\x0d\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\x0d\n      /* The underlying platform doesn't support this signal. */\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n    } else {\x0d\n      /* Other error\x2C almost certainly EPERM. */\x0d\n      this.emit('error'\x2C errnoException(err\x2C 'kill'));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /* Kill didn't succeed. */\x0d\n  return false;\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.ref = function() {\x0d\n  if (this._handle) this._handle.ref();\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.unref = function() {\x0d\n  if (this._handle) this._handle.unref();\x0d\n};\x0d\n\x0d\nclass Control extends EventEmitter {\x0d\n  #channel = null;\x0d\n  #refs = 0;\x0d\n  #refExplicitlySet = false;\x0d\n\x0d\n  constructor(channel) {\x0d\n    super();\x0d\n    this.#channel = channel;\x0d\n    this[kPendingMessages] = [];\x0d\n  }\x0d\n\x0d\n  // The methods keeping track of the counter are being used to track the\x0d\n  // listener count on the child process object as well as when writes are\x0d\n  // in progress. Once the user has explicitly requested a certain state\x2C these\x0d\n  // methods become no-ops in order to not interfere with the user's intentions.\x0d\n  refCounted() {\x0d\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\x0d\n      this.#channel.ref();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  unrefCounted() {\x0d\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\x0d\n      this.#channel.unref();\x0d\n      this.emit('unref');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.unref();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this.#channel ? this.#channel.fd : undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst channelDeprecationMsg = '_channel is deprecated. ' +\x0d\n                              'Use ChildProcess.channel instead.';\x0d\n\x0d\nlet serialization;\x0d\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\x0d\n  const control = new Control(channel);\x0d\n  target.channel = control;\x0d\n  target[kChannelHandle] = channel;\x0d\n\x0d\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\x0d\n    get: deprecate(() => {\x0d\n      return target.channel;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    set: deprecate((val) => {\x0d\n      target.channel = val;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x0d\n  });\x0d\n\x0d\n  target._handleQueue = null;\x0d\n  target._pendingMessage = null;\x0d\n\x0d\n  if (serialization === undefined)\x0d\n    serialization = require('internal/child_process/serialization');\x0d\n  const {\x0d\n    initMessageChannel\x2C\x0d\n    parseChannelMessages\x2C\x0d\n    writeChannelMessage\x0d\n  } = serialization[serializationMode];\x0d\n\x0d\n  let pendingHandle = null;\x0d\n  initMessageChannel(channel);\x0d\n  channel.pendingHandle = null;\x0d\n  channel.onread = function(arrayBuffer) {\x0d\n    const recvHandle = channel.pendingHandle;\x0d\n    channel.pendingHandle = null;\x0d\n    if (arrayBuffer) {\x0d\n      const nread = streamBaseState[kReadBytesOrError];\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\x0d\n      if (recvHandle)\x0d\n        pendingHandle = recvHandle;\x0d\n\x0d\n      for (const message of parseChannelMessages(channel\x2C pool)) {\x0d\n        // There will be at most one NODE_HANDLE message in every chunk we\x0d\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\x0d\n        // that we deliver the handle with the right message however.\x0d\n        if (isInternal(message)) {\x0d\n          if (message.cmd === 'NODE_HANDLE') {\x0d\n            handleMessage(message\x2C pendingHandle\x2C true);\x0d\n            pendingHandle = null;\x0d\n          } else {\x0d\n            handleMessage(message\x2C undefined\x2C true);\x0d\n          }\x0d\n        } else {\x0d\n          handleMessage(message\x2C undefined\x2C false);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      this.buffering = false;\x0d\n      target.disconnect();\x0d\n      channel.onread = nop;\x0d\n      channel.close();\x0d\n      target.channel = null;\x0d\n      maybeClose(target);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Object where socket lists will live\x0d\n  channel.sockets = { got: {}\x2C send: {} };\x0d\n\x0d\n  // Handlers will go through this\x0d\n  target.on('internalMessage'\x2C function(message\x2C handle) {\x0d\n    // Once acknowledged - continue sending handles.\x0d\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n        message.cmd === 'NODE_HANDLE_NACK') {\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        if (message.cmd === 'NODE_HANDLE_ACK') {\x0d\n          closePendingHandle(target);\x0d\n        } else if (target._pendingMessage.retransmissions++ ===\x0d\n                   MAX_HANDLE_RETRANSMISSIONS) {\x0d\n          closePendingHandle(target);\x0d\n          process.emitWarning('Handle did not reach the receiving process ' +\x0d\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\x0d\n        }\x0d\n      }\x0d\n\x0d\n      assert(ArrayIsArray(target._handleQueue));\x0d\n      const queue = target._handleQueue;\x0d\n      target._handleQueue = null;\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        target._send(target._pendingMessage.message\x2C\x0d\n                     target._pendingMessage.handle\x2C\x0d\n                     target._pendingMessage.options\x2C\x0d\n                     target._pendingMessage.callback);\x0d\n      }\x0d\n\x0d\n      for (let i = 0; i < queue.length; i++) {\x0d\n        const args = queue[i];\x0d\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\x0d\n      }\x0d\n\x0d\n      // Process a pending disconnect (if any).\x0d\n      if (!target.connected && target.channel && !target._handleQueue)\x0d\n        target._disconnect();\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (message.cmd !== 'NODE_HANDLE') return;\x0d\n\x0d\n    // It is possible that the handle is not received because of some error on\x0d\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\x0d\n    // sender about it by sending a NODE_HANDLE_NACK message.\x0d\n    if (!handle)\x0d\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\x0d\n\x0d\n    // Acknowledge handle receival. Don't emit error events (for example if\x0d\n    // the other side has disconnected) because this call to send() is not\x0d\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\x0d\n    // a message.\x0d\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\x0d\n\x0d\n    const obj = handleConversion[message.type];\x0d\n\x0d\n    // Update simultaneous accepts on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      handle.setSimultaneousAccepts(false);\x0d\n    }\x0d\n\x0d\n    // Convert handle object\x0d\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\x0d\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.on('newListener'\x2C function() {\x0d\n\x0d\n    process.nextTick(() => {\x0d\n      if (!target.channel || !target.listenerCount('message'))\x0d\n        return;\x0d\n\x0d\n      const messages = target.channel[kPendingMessages];\x0d\n      const { length } = messages;\x0d\n      if (!length) return;\x0d\n\x0d\n      for (let i = 0; i < length; i++) {\x0d\n        ReflectApply(target.emit\x2C target\x2C messages[i]);\x0d\n      }\x0d\n\x0d\n      target.channel[kPendingMessages] = [];\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    if (typeof handle === 'function') {\x0d\n      callback = handle;\x0d\n      handle = undefined;\x0d\n      options = undefined;\x0d\n    } else if (typeof options === 'function') {\x0d\n      callback = options;\x0d\n      options = undefined;\x0d\n    } else if (options !== undefined) {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    options = { swallowErrors: false\x2C ...options };\x0d\n\x0d\n    if (this.connected) {\x0d\n      return this._send(message\x2C handle\x2C options\x2C callback);\x0d\n    }\x0d\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n    } else {\x0d\n      process.nextTick(() => this.emit('error'\x2C ex));\x0d\n    }\x0d\n    return false;\x0d\n  };\x0d\n\x0d\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    assert(this.connected || this.channel);\x0d\n\x0d\n    if (message === undefined)\x0d\n      throw new ERR_MISSING_ARGS('message');\x0d\n\x0d\n    // Non-serializable messages should not reach the remote\x0d\n    // end point; as any failure in the stringification there\x0d\n    // will result in error message that is weakly consumable.\x0d\n    // So perform a final check on message prior to sending.\x0d\n    if (typeof message !== 'string' &&\x0d\n        typeof message !== 'object' &&\x0d\n        typeof message !== 'number' &&\x0d\n        typeof message !== 'boolean') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\x0d\n    }\x0d\n\x0d\n    // Support legacy function signature\x0d\n    if (typeof options === 'boolean') {\x0d\n      options = { swallowErrors: options };\x0d\n    }\x0d\n\x0d\n    let obj;\x0d\n\x0d\n    // Package messages with a handle object\x0d\n    if (handle) {\x0d\n      // This message will be handled by an internalMessage event handler\x0d\n      message = {\x0d\n        cmd: 'NODE_HANDLE'\x2C\x0d\n        type: null\x2C\x0d\n        msg: message\x0d\n      };\x0d\n\x0d\n      if (handle instanceof net.Socket) {\x0d\n        message.type = 'net.Socket';\x0d\n      } else if (handle instanceof net.Server) {\x0d\n        message.type = 'net.Server';\x0d\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\x0d\n        message.type = 'net.Native';\x0d\n      } else if (handle instanceof dgram.Socket) {\x0d\n        message.type = 'dgram.Socket';\x0d\n      } else if (handle instanceof UDP) {\x0d\n        message.type = 'dgram.Native';\x0d\n      } else {\x0d\n        throw new ERR_INVALID_HANDLE_TYPE();\x0d\n      }\x0d\n\x0d\n      // Queue-up message and handle if we haven't received ACK yet.\x0d\n      if (this._handleQueue) {\x0d\n        ArrayPrototypePush(this._handleQueue\x2C {\x0d\n          callback: callback\x2C\x0d\n          handle: handle\x2C\x0d\n          options: options\x2C\x0d\n          message: message.msg\x2C\x0d\n        });\x0d\n        return this._handleQueue.length === 1;\x0d\n      }\x0d\n\x0d\n      obj = handleConversion[message.type];\x0d\n\x0d\n      // convert TCP object to native handle object\x0d\n      handle = ReflectApply(handleConversion[message.type].send\x2C\x0d\n                            target\x2C [message\x2C handle\x2C options]);\x0d\n\x0d\n      // If handle was sent twice\x2C or it is impossible to get native handle\x0d\n      // out of it - just send a text without the handle.\x0d\n      if (!handle)\x0d\n        message = message.msg;\x0d\n\x0d\n      // Update simultaneous accepts on Windows\x0d\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\x0d\n        handle.setSimultaneousAccepts(true);\x0d\n      }\x0d\n    } else if (this._handleQueue &&\x0d\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\x0d\n      // Queue request anyway to avoid out-of-order messages.\x0d\n      ArrayPrototypePush(this._handleQueue\x2C {\x0d\n        callback: callback\x2C\x0d\n        handle: null\x2C\x0d\n        options: options\x2C\x0d\n        message: message\x2C\x0d\n      });\x0d\n      return this._handleQueue.length === 1;\x0d\n    }\x0d\n\x0d\n    const req = new WriteWrap();\x0d\n\x0d\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\x0d\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n    if (err === 0) {\x0d\n      if (handle) {\x0d\n        if (!this._handleQueue)\x0d\n          this._handleQueue = [];\x0d\n        if (obj && obj.postSend)\x0d\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\x0d\n      }\x0d\n\x0d\n      if (wasAsyncWrite) {\x0d\n        req.oncomplete = () => {\x0d\n          control.unrefCounted();\x0d\n          if (typeof callback === 'function')\x0d\n            callback(null);\x0d\n        };\x0d\n        control.refCounted();\x0d\n      } else if (typeof callback === 'function') {\x0d\n        process.nextTick(callback\x2C null);\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup handle on error\x0d\n      if (obj && obj.postSend)\x0d\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\x0d\n\x0d\n      if (!options.swallowErrors) {\x0d\n        const ex = errnoException(err\x2C 'write');\x0d\n        if (typeof callback === 'function') {\x0d\n          process.nextTick(callback\x2C ex);\x0d\n        } else {\x0d\n          process.nextTick(() => this.emit('error'\x2C ex));\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\x0d\n    return channel.writeQueueSize < (65536 * 2);\x0d\n  };\x0d\n\x0d\n  // Connected will be set to false immediately when a disconnect() is\x0d\n  // requested\x2C even though the channel might still be alive internally to\x0d\n  // process queued messages. The three states are distinguished as follows:\x0d\n  // - disconnect() never requested: channel is not null and connected\x0d\n  //   is true\x0d\n  // - disconnect() requested\x2C messages in the queue: channel is not null\x0d\n  //   and connected is false\x0d\n  // - disconnect() requested\x2C channel actually disconnected: channel is\x0d\n  //   null and connected is false\x0d\n  target.connected = true;\x0d\n\x0d\n  target.disconnect = function() {\x0d\n    if (!this.connected) {\x0d\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // Do not allow any new messages to be written.\x0d\n    this.connected = false;\x0d\n\x0d\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\x0d\n    // postpone the disconnect so that it happens internally after the\x0d\n    // queue is flushed.\x0d\n    if (!this._handleQueue)\x0d\n      this._disconnect();\x0d\n  };\x0d\n\x0d\n  target._disconnect = function() {\x0d\n    assert(this.channel);\x0d\n\x0d\n    // This marks the fact that the channel is actually disconnected.\x0d\n    this.channel = null;\x0d\n    this[kChannelHandle] = null;\x0d\n\x0d\n    if (this._pendingMessage)\x0d\n      closePendingHandle(this);\x0d\n\x0d\n    let fired = false;\x0d\n    function finish() {\x0d\n      if (fired) return;\x0d\n      fired = true;\x0d\n\x0d\n      channel.close();\x0d\n      target.emit('disconnect');\x0d\n    }\x0d\n\x0d\n    // If a message is being read\x2C then wait for it to complete.\x0d\n    if (channel.buffering) {\x0d\n      this.once('message'\x2C finish);\x0d\n      this.once('internalMessage'\x2C finish);\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(finish);\x0d\n  };\x0d\n\x0d\n  function emit(event\x2C message\x2C handle) {\x0d\n    if ('internalMessage' === event || target.listenerCount('message')) {\x0d\n      target.emit(event\x2C message\x2C handle);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(\x0d\n      target.channel[kPendingMessages]\x2C\x0d\n      [event\x2C message\x2C handle]\x0d\n    );\x0d\n  }\x0d\n\x0d\n  function handleMessage(message\x2C handle\x2C internal) {\x0d\n    if (!target.channel)\x0d\n      return;\x0d\n\x0d\n    const eventName = (internal ? 'internalMessage' : 'message');\x0d\n\x0d\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\x0d\n  }\x0d\n\x0d\n  channel.readStart();\x0d\n  return control;\x0d\n}\x0d\n\x0d\nconst INTERNAL_PREFIX = 'NODE_';\x0d\nfunction isInternal(message) {\x0d\n  return (message !== null &&\x0d\n          typeof message === 'object' &&\x0d\n          typeof message.cmd === 'string' &&\x0d\n          message.cmd.length > INTERNAL_PREFIX.length &&\x0d\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\x0d\n            INTERNAL_PREFIX);\x0d\n}\x0d\n\x0d\nconst nop = FunctionPrototype;\x0d\n\x0d\nfunction getValidStdio(stdio\x2C sync) {\x0d\n  let ipc;\x0d\n  let ipcFd;\x0d\n\x0d\n  // Replace shortcut with an array\x0d\n  if (typeof stdio === 'string') {\x0d\n    stdio = stdioStringToArray(stdio);\x0d\n  } else if (!ArrayIsArray(stdio)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  // At least 3 stdio will be created\x0d\n  // Don't concat() a new Array() because it would be sparse\x2C and\x0d\n  // stdio.reduce() would skip the sparse elements of stdio.\x0d\n  // See https://stackoverflow.com/a/5501711/3561\x0d\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\x0d\n\x0d\n  // Translate stdio into C++-readable form\x0d\n  // (i.e. PipeWraps or fds)\x0d\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\x0d\n    function cleanup() {\x0d\n      for (let i = 0; i < acc.length; i++) {\x0d\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\x0d\n          acc[i].handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Defaults\x0d\n    if (stdio == null) {\x0d\n      stdio = i < 3 ? 'pipe' : 'ignore';\x0d\n    }\x0d\n\x0d\n    if (stdio === 'ignore') {\x0d\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\x0d\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\x0d\n               (typeof stdio === 'number' && stdio < 0)) {\x0d\n      const a = {\x0d\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\x0d\n        readable: i === 0\x2C\x0d\n        writable: i !== 0\x0d\n      };\x0d\n\x0d\n      if (!sync)\x0d\n        a.handle = new Pipe(PipeConstants.SOCKET);\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C a);\x0d\n    } else if (stdio === 'ipc') {\x0d\n      if (sync || ipc !== undefined) {\x0d\n        // Cleanup previously created pipes\x0d\n        cleanup();\x0d\n        if (!sync)\x0d\n          throw new ERR_IPC_ONE_PIPE();\x0d\n        else\x0d\n          throw new ERR_IPC_SYNC_FORK();\x0d\n      }\x0d\n\x0d\n      ipc = new Pipe(PipeConstants.IPC);\x0d\n      ipcFd = i;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'pipe'\x2C\x0d\n        handle: ipc\x2C\x0d\n        ipc: true\x0d\n      });\x0d\n    } else if (stdio === 'inherit') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'inherit'\x2C\x0d\n        fd: i\x0d\n      });\x0d\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'fd'\x2C\x0d\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\x0d\n      });\x0d\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\x0d\n               getHandleWrapType(stdio._handle)) {\x0d\n      const handle = getHandleWrapType(stdio) ?\x0d\n        stdio :\x0d\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'wrap'\x2C\x0d\n        wrapType: getHandleWrapType(handle)\x2C\x0d\n        handle: handle\x2C\x0d\n        _stdio: stdio\x0d\n      });\x0d\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\x0d\n      if (!sync) {\x0d\n        cleanup();\x0d\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup\x0d\n      cleanup();\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n    }\x0d\n\x0d\n    return acc;\x0d\n  }\x2C []);\x0d\n\x0d\n  return { stdio\x2C ipc\x2C ipcFd };\x0d\n}\x0d\n\x0d\n\x0d\nfunction getSocketList(type\x2C worker\x2C key) {\x0d\n  const sockets = worker[kChannelHandle].sockets[type];\x0d\n  let socketList = sockets[key];\x0d\n  if (!socketList) {\x0d\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\x0d\n    socketList = sockets[key] = new Construct(worker\x2C key);\x0d\n  }\x0d\n  return socketList;\x0d\n}\x0d\n\x0d\n\x0d\nfunction maybeClose(subprocess) {\x0d\n  subprocess._closesGot++;\x0d\n\x0d\n  if (subprocess._closesGot === subprocess._closesNeeded) {\x0d\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction spawnSync(options) {\x0d\n  const result = spawn_sync.spawn(options);\x0d\n\x0d\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\x0d\n    for (let i = 0; i < result.output.length; i++) {\x0d\n      if (!result.output[i])\x0d\n        continue;\x0d\n      result.output[i] = result.output[i].toString(options.encoding);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  result.stdout = result.output && result.output[1];\x0d\n  result.stderr = result.output && result.output[2];\x0d\n\x0d\n  if (result.error) {\x0d\n    result.error = errnoException(result.error\x2C 'spawnSync ' + options.file);\x0d\n    result.error.path = options.file;\x0d\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ChildProcess\x2C\x0d\n  kChannelHandle\x2C\x0d\n  setupChannel\x2C\x0d\n  getValidStdio\x2C\x0d\n  stdioStringToArray\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x22cec1633ee,100,0,32650,C0O0C4O32650,,
code-creation,Function,10,1351240,0x22cec164a0e,1265, node:internal/child_process:1:1,0x22cec163368,~
code-source-info,0x22cec164a0e
code-creation,Function,10,1354381,0x22cec165186,35,<instance_members_initializer> node:internal/child_process:525:3,0x22cec1640d0,~
code-source-info,0x22cec165186,100,14231,14290,C3O14242C16O14259C26O14285C34O14290,,
code-creation,Eval,10,1357317,0x22cec169476,5, node:net:1:1,0x22cec168c78,~
script-source,101,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  Boolean\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst stream = require('stream');\x0d\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  normalizedArgsSymbol\x2C\x0d\n  makeSyncWrite\x0d\n} = require('internal/net');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  UV_EADDRINUSE\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_ENOTCONN\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst { ShutdownWrap } = internalBinding('stream_wrap');\x0d\nconst {\x0d\n  TCP\x2C\x0d\n  TCPConnectWrap\x2C\x0d\n  constants: TCPConstants\x0d\n} = internalBinding('tcp_wrap');\x0d\nconst {\x0d\n  Pipe\x2C\x0d\n  PipeConnectWrap\x2C\x0d\n  constants: PipeConstants\x0d\n} = internalBinding('pipe_wrap');\x0d\nconst {\x0d\n  newAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kHandle\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x0d\n} = require('internal/stream_base_commons');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ADDRESS_FAMILY\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FD_TYPE\x2C\x0d\n    ERR_INVALID_IP_ADDRESS\x2C\x0d\n    ERR_SERVER_ALREADY_LISTEN\x2C\x0d\n    ERR_SERVER_NOT_RUNNING\x2C\x0d\n    ERR_SOCKET_CLOSED\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n  errnoException\x2C\x0d\n  exceptionWithHostPort\x2C\x0d\n  genericNodeError\x2C\x0d\n  uvExceptionWithHostPort\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\x0d\nconst {\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n} = require('internal/dtrace');\x0d\n\x0d\n// Lazy loaded to improve startup performance.\x0d\nlet cluster;\x0d\nlet dns;\x0d\nlet BlockList;\x0d\nlet SocketAddress;\x0d\n\x0d\nconst { clearTimeout } = require('timers');\x0d\nconst { kTimeout } = require('internal/timers');\x0d\n\x0d\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\x0d\nconst DEFAULT_IPV6_ADDR = '::';\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction getFlags(ipv6Only) {\x0d\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\x0d\n}\x0d\n\x0d\nfunction createHandle(fd\x2C is_server) {\x0d\n  validateInt32(fd\x2C 'fd'\x2C 0);\x0d\n  const type = guessHandleType(fd);\x0d\n  if (type === 'PIPE') {\x0d\n    return new Pipe(\x0d\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (type === 'TCP') {\x0d\n    return new TCP(\x0d\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_FD_TYPE(type);\x0d\n}\x0d\n\x0d\n\x0d\nfunction getNewAsyncId(handle) {\x0d\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\x0d\n    newAsyncId() : handle.getAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\nfunction isPipeName(s) {\x0d\n  return typeof s === 'string' && toNumber(s) === false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new TCP or IPC server\x0d\n * @param {{\x0d\n *   allowHalfOpen?: boolean;\x0d\n *   pauseOnConnect?: boolean;\x0d\n *   }} [options]\x0d\n * @param {Function} [connectionListener]\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nfunction createServer(options\x2C connectionListener) {\x0d\n  return new Server(options\x2C connectionListener);\x0d\n}\x0d\n\x0d\n\x0d\n// Target API:\x0d\n//\x0d\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\x0d\n//   ...\x0d\n// });\x0d\n//\x0d\n// There are various forms:\x0d\n//\x0d\n// connect(options\x2C [cb])\x0d\n// connect(port\x2C [host]\x2C [cb])\x0d\n// connect(path\x2C [cb]);\x0d\n//\x0d\nfunction connect(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  const options = normalized[0];\x0d\n  debug('createConnection'\x2C normalized);\x0d\n  const socket = new Socket(options);\x0d\n\x0d\n  if (options.timeout) {\x0d\n    socket.setTimeout(options.timeout);\x0d\n  }\x0d\n\x0d\n  return socket.connect(normalized);\x0d\n}\x0d\n\x0d\n\x0d\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\x0d\n// cb is either a function or null.\x0d\n// Used to normalize arguments of Socket.prototype.connect() and\x0d\n// Server.prototype.listen(). Possible combinations of parameters:\x0d\n//   (options[...][\x2C cb])\x0d\n//   (path[...][\x2C cb])\x0d\n//   ([port][\x2C host][...][\x2C cb])\x0d\n// For Socket.prototype.connect()\x2C the [...] part is ignored\x0d\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\x0d\n// but will not be handled here (handled in listen())\x0d\nfunction normalizeArgs(args) {\x0d\n  let arr;\x0d\n\x0d\n  if (args.length === 0) {\x0d\n    arr = [{}\x2C null];\x0d\n    arr[normalizedArgsSymbol] = true;\x0d\n    return arr;\x0d\n  }\x0d\n\x0d\n  const arg0 = args[0];\x0d\n  let options = {};\x0d\n  if (typeof arg0 === 'object' && arg0 !== null) {\x0d\n    // (options[...][\x2C cb])\x0d\n    options = arg0;\x0d\n  } else if (isPipeName(arg0)) {\x0d\n    // (path[...][\x2C cb])\x0d\n    options.path = arg0;\x0d\n  } else {\x0d\n    // ([port][\x2C host][...][\x2C cb])\x0d\n    options.port = arg0;\x0d\n    if (args.length > 1 && typeof args[1] === 'string') {\x0d\n      options.host = args[1];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const cb = args[args.length - 1];\x0d\n  if (typeof cb !== 'function')\x0d\n    arr = [options\x2C null];\x0d\n  else\x0d\n    arr = [options\x2C cb];\x0d\n\x0d\n  arr[normalizedArgsSymbol] = true;\x0d\n  return arr;\x0d\n}\x0d\n\x0d\n\x0d\n// Called when creating new Socket\x2C or when re-using a closed Socket\x0d\nfunction initSocketHandle(self) {\x0d\n  self._undestroy();\x0d\n  self._sockname = null;\x0d\n\x0d\n  // Handle creation may be deferred to bind() or connect() time.\x0d\n  if (self._handle) {\x0d\n    self._handle[owner_symbol] = self;\x0d\n    self._handle.onread = onStreamRead;\x0d\n    self[async_id_symbol] = getNewAsyncId(self._handle);\x0d\n\x0d\n    let userBuf = self[kBuffer];\x0d\n    if (userBuf) {\x0d\n      const bufGen = self[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        userBuf = bufGen();\x0d\n        if (!isUint8Array(userBuf))\x0d\n          return;\x0d\n        self[kBuffer] = userBuf;\x0d\n      }\x0d\n      self._handle.useUserBuffer(userBuf);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nconst kBytesRead = Symbol('kBytesRead');\x0d\nconst kBytesWritten = Symbol('kBytesWritten');\x0d\nconst kSetNoDelay = Symbol('kSetNoDelay');\x0d\nconst kSetKeepAlive = Symbol('kSetKeepAlive');\x0d\nconst kSetKeepAliveInitialDelay = Symbol('kSetKeepAliveInitialDelay');\x0d\n\x0d\nfunction Socket(options) {\x0d\n  if (!(this instanceof Socket)) return new Socket(options);\x0d\n  if (options?.objectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      'options.objectMode'\x2C\x0d\n      options.objectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      `options.${\x0d\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\x0d\n      }`\x2C\x0d\n      options.readableObjectMode || options.writableObjectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  }\x0d\n  if (typeof options?.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options?.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.connecting = false;\x0d\n  // Problem with this is that users can supply their own handle\x2C that may not\x0d\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\x0d\n  // probably be supplied by async_hooks.\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._hadError = false;\x0d\n  this[kHandle] = null;\x0d\n  this._parent = null;\x0d\n  this._host = null;\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n  this[kTimeout] = null;\x0d\n  this[kBuffer] = null;\x0d\n  this[kBufferCb] = null;\x0d\n  this[kBufferGen] = null;\x0d\n\x0d\n  if (typeof options === 'number')\x0d\n    options = { fd: options }; // Legacy interface.\x0d\n  else\x0d\n    options = { ...options };\x0d\n\x0d\n  // Default to *not* allowing half open sockets.\x0d\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\x0d\n  // For backwards compat do not emit close on destroy.\x0d\n  options.emitClose = false;\x0d\n  options.autoDestroy = true;\x0d\n  // Handle strings directly.\x0d\n  options.decodeStrings = false;\x0d\n  stream.Duplex.call(this\x2C options);\x0d\n\x0d\n  if (options.handle) {\x0d\n    this._handle = options.handle; // private\x0d\n    this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  } else if (options.fd !== undefined) {\x0d\n    const { fd } = options;\x0d\n    let err;\x0d\n\x0d\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\x0d\n    // a valid `PIPE` or `TCP` descriptor\x0d\n    this._handle = createHandle(fd\x2C false);\x0d\n\x0d\n    err = this._handle.open(fd);\x0d\n\x0d\n    // While difficult to fabricate\x2C in some architectures\x0d\n    // `open` may return an error code for valid file descriptors\x0d\n    // which cannot be opened. This is difficult to test as most\x0d\n    // un-openable fds will throw on `createHandle`\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n\x0d\n    if ((fd === 1 || fd === 2) &&\x0d\n        (this._handle instanceof Pipe) && isWindows) {\x0d\n      // Make stdout and stderr blocking on Windows\x0d\n      err = this._handle.setBlocking(true);\x0d\n      if (err)\x0d\n        throw errnoException(err\x2C 'setBlocking');\x0d\n\x0d\n      this._writev = null;\x0d\n      this._write = makeSyncWrite(fd);\x0d\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\x0d\n      // we need to let it do that by turning it into a writable\x2C own\x0d\n      // property.\x0d\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\x0d\n        value: 0\x2C writable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const onread = options.onread;\x0d\n  if (onread !== null && typeof onread === 'object' &&\x0d\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\x0d\n      typeof onread.callback === 'function') {\x0d\n    if (typeof onread.buffer === 'function') {\x0d\n      this[kBuffer] = true;\x0d\n      this[kBufferGen] = onread.buffer;\x0d\n    } else {\x0d\n      this[kBuffer] = onread.buffer;\x0d\n    }\x0d\n    this[kBufferCb] = onread.callback;\x0d\n  }\x0d\n\x0d\n  this[kSetNoDelay] = Boolean(options.noDelay);\x0d\n  this[kSetKeepAlive] = Boolean(options.keepAlive);\x0d\n  this[kSetKeepAliveInitialDelay] = ~~(options.keepAliveInitialDelay / 1000);\x0d\n\x0d\n  // Shut down the socket when we're finished with it.\x0d\n  this.on('end'\x2C onReadableStreamEnd);\x0d\n\x0d\n  initSocketHandle(this);\x0d\n\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  // If we have a handle\x2C then start the flow of data into the\x0d\n  // buffer.  if not\x2C then this will happen when we connect\x0d\n  if (this._handle && options.readable !== false) {\x0d\n    if (options.pauseOnCreate) {\x0d\n      // Stop the handle from reading and pause the stream\x0d\n      this._handle.reading = false;\x0d\n      this._handle.readStop();\x0d\n      this.readableFlowing = false;\x0d\n    } else if (!options.manualStart) {\x0d\n      this.read(0);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Reserve properties\x0d\n  this.server = null;\x0d\n  this._server = null;\x0d\n\x0d\n  // Used after `.destroy()`\x0d\n  this[kBytesRead] = 0;\x0d\n  this[kBytesWritten] = 0;\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\x0d\n\x0d\n// Refresh existing timeouts.\x0d\nSocket.prototype._unrefTimer = function _unrefTimer() {\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    if (s[kTimeout])\x0d\n      s[kTimeout].refresh();\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// The user has called .end()\x2C and all the bytes have been\x0d\n// sent out to the other side.\x0d\nSocket.prototype._final = function(cb) {\x0d\n  // If still connecting - defer handling `_final` until 'connect' will happen\x0d\n  if (this.pending) {\x0d\n    debug('_final: not yet connected');\x0d\n    return this.once('connect'\x2C () => this._final(cb));\x0d\n  }\x0d\n\x0d\n  if (!this._handle)\x0d\n    return cb();\x0d\n\x0d\n  debug('_final: not ended\x2C call shutdown()');\x0d\n\x0d\n  const req = new ShutdownWrap();\x0d\n  req.oncomplete = afterShutdown;\x0d\n  req.handle = this._handle;\x0d\n  req.callback = cb;\x0d\n  const err = this._handle.shutdown(req);\x0d\n\x0d\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\x0d\n    return cb();\x0d\n  else if (err !== 0)\x0d\n    return cb(errnoException(err\x2C 'shutdown'));\x0d\n};\x0d\n\x0d\nfunction afterShutdown() {\x0d\n  const self = this.handle[owner_symbol];\x0d\n\x0d\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed\x2C\x0d\n        self._readableState);\x0d\n\x0d\n  this.callback();\x0d\n}\x0d\n\x0d\n// Provide a better error message when we call end() as a result\x0d\n// of the other side sending a FIN.  The standard 'write after end'\x0d\n// is overly vague\x2C and makes it seem like the user's code is to blame.\x0d\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\x0d\n  if (!this.writableEnded) {\x0d\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\x0d\n  }\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  const er = genericNodeError(\x0d\n    'This socket has been ended by the other party'\x2C\x0d\n    { code: 'EPIPE' }\x0d\n  );\x0d\n  if (typeof cb === 'function') {\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\x0d\n  }\x0d\n  this.destroy(er);\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nSocket.prototype.setTimeout = setStreamTimeout;\x0d\n\x0d\n\x0d\nSocket.prototype._onTimeout = function() {\x0d\n  const handle = this._handle;\x0d\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\x0d\n  if (lastWriteQueueSize > 0 && handle) {\x0d\n    // `lastWriteQueueSize !== writeQueueSize` means there is\x0d\n    // an active write in progress\x2C so we suppress the timeout.\x0d\n    const { writeQueueSize } = handle;\x0d\n    if (lastWriteQueueSize !== writeQueueSize) {\x0d\n      this[kLastWriteQueueSize] = writeQueueSize;\x0d\n      this._unrefTimer();\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  debug('_onTimeout');\x0d\n  this.emit('timeout');\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setNoDelay = function(enable) {\x0d\n  // Backwards compatibility: assume true when `enable` is omitted\x0d\n  enable = Boolean(enable === undefined ? true : enable);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setNoDelay && enable !== this[kSetNoDelay]) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    this._handle.setNoDelay(enable);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setKeepAlive = function(enable\x2C initialDelayMsecs) {\x0d\n  enable = Boolean(enable);\x0d\n  const initialDelay = ~~(initialDelayMsecs / 1000);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setKeepAlive && enable !== this[kSetKeepAlive]) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    this._handle.setKeepAlive(enable\x2C initialDelay);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  return this._getsockname();\x0d\n};\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\x0d\n  get: function() {\x0d\n    return this.connecting;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\x0d\n  get() {\x0d\n    return !this._handle || this.connecting;\x0d\n  }\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\x0d\n  get: function() {\x0d\n    if (this.connecting) {\x0d\n      return 'opening';\x0d\n    } else if (this.readable && this.writable) {\x0d\n      return 'open';\x0d\n    } else if (this.readable && !this.writable) {\x0d\n      return 'readOnly';\x0d\n    } else if (!this.readable && this.writable) {\x0d\n      return 'writeOnly';\x0d\n    }\x0d\n    return 'closed';\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\x0d\n  get: function() {\x0d\n    if (this._handle) {\x0d\n      return this.writableLength;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\x0d\n  get: function() {\x0d\n    return this._unrefTimer;\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nfunction tryReadStart(socket) {\x0d\n  // Not already reading\x2C start the flow\x0d\n  debug('Socket._handle.readStart');\x0d\n  socket._handle.reading = true;\x0d\n  const err = socket._handle.readStart();\x0d\n  if (err)\x0d\n    socket.destroy(errnoException(err\x2C 'read'));\x0d\n}\x0d\n\x0d\n// Just call handle.readStart until we have enough in the buffer\x0d\nSocket.prototype._read = function(n) {\x0d\n  debug('_read');\x0d\n\x0d\n  if (this.connecting || !this._handle) {\x0d\n    debug('_read wait for connection');\x0d\n    this.once('connect'\x2C () => this._read(n));\x0d\n  } else if (!this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\x0d\n  stream.Duplex.prototype.end.call(this\x2C\x0d\n                                   data\x2C encoding\x2C callback);\x0d\n  DTRACE_NET_STREAM_END(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.pause = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      this._handle.reading) {\x0d\n    this._handle.reading = false;\x0d\n    if (!this.destroyed) {\x0d\n      const err = this._handle.readStop();\x0d\n      if (err)\x0d\n        this.destroy(errnoException(err\x2C 'read'));\x0d\n    }\x0d\n  }\x0d\n  return stream.Duplex.prototype.pause.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.resume = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.resume.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.read = function(n) {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.read.call(this\x2C n);\x0d\n};\x0d\n\x0d\n\x0d\n// Called when the 'end' event is emitted.\x0d\nfunction onReadableStreamEnd() {\x0d\n  if (!this.allowHalfOpen) {\x0d\n    this.write = writeAfterFIN;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.destroySoon = function() {\x0d\n  if (this.writable)\x0d\n    this.end();\x0d\n\x0d\n  if (this.writableFinished)\x0d\n    this.destroy();\x0d\n  else\x0d\n    this.once('finish'\x2C this.destroy);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._destroy = function(exception\x2C cb) {\x0d\n  debug('destroy');\x0d\n\x0d\n  this.connecting = false;\x0d\n\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    clearTimeout(s[kTimeout]);\x0d\n  }\x0d\n\x0d\n  debug('close');\x0d\n  if (this._handle) {\x0d\n    if (this !== process.stderr)\x0d\n      debug('close handle');\x0d\n    const isException = exception ? true : false;\x0d\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\x0d\n    this[kBytesRead] = this._handle.bytesRead;\x0d\n    this[kBytesWritten] = this._handle.bytesWritten;\x0d\n\x0d\n    this._handle.close(() => {\x0d\n      debug('emit close');\x0d\n      this.emit('close'\x2C isException);\x0d\n    });\x0d\n    this._handle.onread = noop;\x0d\n    this._handle = null;\x0d\n    this._sockname = null;\x0d\n    cb(exception);\x0d\n  } else {\x0d\n    cb(exception);\x0d\n    process.nextTick(emitCloseNT\x2C this);\x0d\n  }\x0d\n\x0d\n  if (this._server) {\x0d\n    debug('has server');\x0d\n    this._server._connections--;\x0d\n    if (this._server._emitCloseIfDrained) {\x0d\n      this._server._emitCloseIfDrained();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype._getpeername = function() {\x0d\n  if (!this._handle || !this._handle.getpeername) {\x0d\n    return this._peername || {};\x0d\n  } else if (!this._peername) {\x0d\n    this._peername = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getpeername(this._peername);\x0d\n  }\x0d\n  return this._peername;\x0d\n};\x0d\n\x0d\nfunction protoGetter(name\x2C callback) {\x0d\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: callback\x0d\n  });\x0d\n}\x0d\n\x0d\nprotoGetter('bytesRead'\x2C function bytesRead() {\x0d\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\x0d\n});\x0d\n\x0d\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\x0d\n  return this._getpeername().address;\x0d\n});\x0d\n\x0d\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\x0d\n  return this._getpeername().family;\x0d\n});\x0d\n\x0d\nprotoGetter('remotePort'\x2C function remotePort() {\x0d\n  return this._getpeername().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._getsockname = function() {\x0d\n  if (!this._handle || !this._handle.getsockname) {\x0d\n    return {};\x0d\n  } else if (!this._sockname) {\x0d\n    this._sockname = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getsockname(this._sockname);\x0d\n  }\x0d\n  return this._sockname;\x0d\n};\x0d\n\x0d\n\x0d\nprotoGetter('localAddress'\x2C function localAddress() {\x0d\n  return this._getsockname().address;\x0d\n});\x0d\n\x0d\n\x0d\nprotoGetter('localPort'\x2C function localPort() {\x0d\n  return this._getsockname().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype[kAfterAsyncWrite] = function() {\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n};\x0d\n\x0d\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\x0d\n  // If we are still connecting\x2C then buffer this for later.\x0d\n  // The Writable logic will buffer up any more writes while\x0d\n  // waiting for this one to be done.\x0d\n  if (this.connecting) {\x0d\n    this._pendingData = data;\x0d\n    this._pendingEncoding = encoding;\x0d\n    this.once('connect'\x2C function connect() {\x0d\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  if (!this._handle) {\x0d\n    cb(new ERR_SOCKET_CLOSED());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  let req;\x0d\n  if (writev)\x0d\n    req = writevGeneric(this\x2C data\x2C cb);\x0d\n  else\x0d\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\x0d\n  if (req.async)\x0d\n    this[kLastWriteQueueSize] = req.bytes;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._writev = function(chunks\x2C cb) {\x0d\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\x0d\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\x0d\n// really hurt anyone either. This can probably be removed safely if desired.\x0d\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\x0d\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\x0d\n});\x0d\n\x0d\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\x0d\n  let bytes = this._bytesDispatched;\x0d\n  const data = this._pendingData;\x0d\n  const encoding = this._pendingEncoding;\x0d\n  const writableBuffer = this.writableBuffer;\x0d\n\x0d\n  if (!writableBuffer)\x0d\n    return undefined;\x0d\n\x0d\n  for (const el of writableBuffer) {\x0d\n    bytes += el.chunk instanceof Buffer ?\x0d\n      el.chunk.length :\x0d\n      Buffer.byteLength(el.chunk\x2C el.encoding);\x0d\n  }\x0d\n\x0d\n  if (ArrayIsArray(data)) {\x0d\n    // Was a writev\x2C iterate over chunks to get total length\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const chunk = data[i];\x0d\n\x0d\n      if (data.allBuffers || chunk instanceof Buffer)\x0d\n        bytes += chunk.length;\x0d\n      else\x0d\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\x0d\n    }\x0d\n  } else if (data) {\x0d\n    // Writes are either a string or a Buffer.\x0d\n    if (typeof data !== 'string')\x0d\n      bytes += data.length;\x0d\n    else\x0d\n      bytes += Buffer.byteLength(data\x2C encoding);\x0d\n  }\x0d\n\x0d\n  return bytes;\x0d\n});\x0d\n\x0d\n\x0d\nfunction checkBindError(err\x2C port\x2C handle) {\x0d\n  // EADDRINUSE may not be reported until we call listen() or connect().\x0d\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\x0d\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\x0d\n  // bound to the expected port before calling listen() or connect().\x0d\n  //\x0d\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\x0d\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\x0d\n  // really support pipes anyway.\x0d\n  if (err === 0 && port > 0 && handle.getsockname) {\x0d\n    const out = {};\x0d\n    err = handle.getsockname(out);\x0d\n    if (err === 0 && port !== out.port) {\x0d\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\x0d\n      err = UV_EADDRINUSE;\x0d\n    }\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnect(\x0d\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\x0d\n  // TODO return promise from Socket.prototype.connect which\x0d\n  // wraps _connectReq.\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (localAddress || localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\x0d\n      err = self._handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\x0d\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n    debug('binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C self._handle);\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\x0d\n      self.destroy(ex);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (addressType === 6 || addressType === 4) {\x0d\n    const req = new TCPConnectWrap();\x0d\n    req.oncomplete = afterConnect;\x0d\n    req.address = address;\x0d\n    req.port = port;\x0d\n    req.localAddress = localAddress;\x0d\n    req.localPort = localPort;\x0d\n\x0d\n    if (addressType === 4)\x0d\n      err = self._handle.connect(req\x2C address\x2C port);\x0d\n    else\x0d\n      err = self._handle.connect6(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    const req = new PipeConnectWrap();\x0d\n    req.address = address;\x0d\n    req.oncomplete = afterConnect;\x0d\n\x0d\n    err = self._handle.connect(req\x2C address\x2C afterConnect);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    const ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.connect = function(...args) {\x0d\n  let normalized;\x0d\n  // If passed an array\x2C it's treated as an array of arguments that have\x0d\n  // already been normalized (so we don't normalize more than once). This has\x0d\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\x0d\n  // reverted as it had unintended side effects.\x0d\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\x0d\n    normalized = args[0];\x0d\n  } else {\x0d\n    normalized = normalizeArgs(args);\x0d\n  }\x0d\n  const options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  // options.port === null will be checked later.\x0d\n  if (options.port === undefined && options.path == null)\x0d\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\x0d\n\x0d\n  if (this.write !== Socket.prototype.write)\x0d\n    this.write = Socket.prototype.write;\x0d\n\x0d\n  if (this.destroyed) {\x0d\n    this._handle = null;\x0d\n    this._peername = null;\x0d\n    this._sockname = null;\x0d\n  }\x0d\n\x0d\n  const { path } = options;\x0d\n  const pipe = !!path;\x0d\n  debug('pipe'\x2C pipe\x2C path);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this._handle = pipe ?\x0d\n      new Pipe(PipeConstants.SOCKET) :\x0d\n      new TCP(TCPConstants.SOCKET);\x0d\n    initSocketHandle(this);\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('connect'\x2C cb);\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  this.connecting = true;\x0d\n\x0d\n  if (pipe) {\x0d\n    validateString(path\x2C 'options.path');\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x0d\n    );\x0d\n  } else {\x0d\n    lookupAndConnect(this\x2C options);\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction lookupAndConnect(self\x2C options) {\x0d\n  const { localAddress\x2C localPort } = options;\x0d\n  const host = options.host || 'localhost';\x0d\n  let { port } = options;\x0d\n\x0d\n  if (localAddress && !isIP(localAddress)) {\x0d\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\x0d\n  }\x0d\n\x0d\n  if (localPort) {\x0d\n    validateNumber(localPort\x2C 'options.localPort');\x0d\n  }\x0d\n\x0d\n  if (typeof port !== 'undefined') {\x0d\n    if (typeof port !== 'number' && typeof port !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\x0d\n                                     ['number'\x2C 'string']\x2C port);\x0d\n    }\x0d\n    validatePort(port);\x0d\n  }\x0d\n  port |= 0;\x0d\n\x0d\n  // If host is an IP\x2C skip performing a lookup\x0d\n  const addressType = isIP(host);\x0d\n  if (addressType) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\x0d\n      if (self.connecting)\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (options.lookup !== undefined)\x0d\n    validateFunction(options.lookup\x2C 'options.lookup');\x0d\n\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  const dnsopts = {\x0d\n    family: options.family\x2C\x0d\n    hints: options.hints || 0\x0d\n  };\x0d\n\x0d\n  if (!isWindows &&\x0d\n      dnsopts.family !== 4 &&\x0d\n      dnsopts.family !== 6 &&\x0d\n      dnsopts.hints === 0) {\x0d\n    dnsopts.hints = dns.ADDRCONFIG;\x0d\n  }\x0d\n\x0d\n  debug('connect: find host'\x2C host);\x0d\n  debug('connect: dns options'\x2C dnsopts);\x0d\n  self._host = host;\x0d\n  const lookup = options.lookup || dns.lookup;\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\x0d\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) return;\x0d\n\x0d\n      if (err) {\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (!isIP(ip)) {\x0d\n        err = new ERR_INVALID_IP_ADDRESS(ip);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (addressType !== 4 && addressType !== 6) {\x0d\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\x0d\n                                             options.host\x2C\x0d\n                                             options.port);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else {\x0d\n        self._unrefTimer();\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction connectErrorNT(self\x2C err) {\x0d\n  self.destroy(err);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.ref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.ref === 'function') {\x0d\n    this._handle.ref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.unref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.unref === 'function') {\x0d\n    this._handle.unref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  // Callback may come after call to destroy\x0d\n  if (self.destroyed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  debug('afterConnect');\x0d\n\x0d\n  assert(self.connecting);\x0d\n  self.connecting = false;\x0d\n  self._sockname = null;\x0d\n\x0d\n  if (status === 0) {\x0d\n    if (self.readable && !readable) {\x0d\n      self.push(null);\x0d\n      self.read();\x0d\n    }\x0d\n    if (self.writable && !writable) {\x0d\n      self.end();\x0d\n    }\x0d\n    self._unrefTimer();\x0d\n\x0d\n    if (self[kSetNoDelay] && self._handle.setNoDelay) {\x0d\n      self._handle.setNoDelay(true);\x0d\n    }\x0d\n\x0d\n    if (self[kSetKeepAlive] && self._handle.setKeepAlive) {\x0d\n      self._handle.setKeepAlive(true\x2C self[kSetKeepAliveInitialDelay]);\x0d\n    }\x0d\n\x0d\n    self.emit('connect');\x0d\n    self.emit('ready');\x0d\n\x0d\n    // Start the first read\x2C or get an immediate EOF.\x0d\n    // this doesn't actually consume any bytes\x2C because len=0.\x0d\n    if (readable && !self.isPaused())\x0d\n      self.read(0);\x0d\n\x0d\n  } else {\x0d\n    self.connecting = false;\x0d\n    let details;\x0d\n    if (req.localAddress && req.localPort) {\x0d\n      details = req.localAddress + ':' + req.localPort;\x0d\n    }\x0d\n    const ex = exceptionWithHostPort(status\x2C\x0d\n                                     'connect'\x2C\x0d\n                                     req.address\x2C\x0d\n                                     req.port\x2C\x0d\n                                     details);\x0d\n    if (details) {\x0d\n      ex.localAddress = req.localAddress;\x0d\n      ex.localPort = req.localPort;\x0d\n    }\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addAbortSignalOption(self\x2C options) {\x0d\n  if (options?.signal === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const { signal } = options;\x0d\n  const onAborted = () => {\x0d\n    self.close();\x0d\n  };\x0d\n  if (signal.aborted) {\x0d\n    process.nextTick(onAborted);\x0d\n  } else {\x0d\n    signal.addEventListener('abort'\x2C onAborted);\x0d\n    self.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Server(options\x2C connectionListener) {\x0d\n  if (!(this instanceof Server))\x0d\n    return new Server(options\x2C connectionListener);\x0d\n\x0d\n  EventEmitter.call(this);\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    connectionListener = options;\x0d\n    options = {};\x0d\n    this.on('connection'\x2C connectionListener);\x0d\n  } else if (options == null || typeof options === 'object') {\x0d\n    options = { ...options };\x0d\n\x0d\n    if (typeof connectionListener === 'function') {\x0d\n      this.on('connection'\x2C connectionListener);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n  }\x0d\n  if (typeof options.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this._connections = 0;\x0d\n\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._handle = null;\x0d\n  this._usingWorkers = false;\x0d\n  this._workers = [];\x0d\n  this._unref = false;\x0d\n\x0d\n  this.allowHalfOpen = options.allowHalfOpen || false;\x0d\n  this.pauseOnConnect = !!options.pauseOnConnect;\x0d\n  this.noDelay = Boolean(options.noDelay);\x0d\n  this.keepAlive = Boolean(options.keepAlive);\x0d\n  this.keepAliveInitialDelay = ~~(options.keepAliveInitialDelay / 1000);\x0d\n}\x0d\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Server\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\x0d\n\x0d\n// Returns handle if it can be created\x2C or error code if it can't\x0d\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  let err = 0;\x0d\n  // Assign handle in listen\x2C and clean up if bind or listen fails\x0d\n  let handle;\x0d\n\x0d\n  let isTCP = false;\x0d\n  if (typeof fd === 'number' && fd >= 0) {\x0d\n    try {\x0d\n      handle = createHandle(fd\x2C true);\x0d\n    } catch (e) {\x0d\n      // Not a fd we can listen on.  This will trigger an error.\x0d\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\x0d\n      return UV_EINVAL;\x0d\n    }\x0d\n\x0d\n    err = handle.open(fd);\x0d\n    if (err)\x0d\n      return err;\x0d\n\x0d\n    assert(!address && !port);\x0d\n  } else if (port === -1 && addressType === -1) {\x0d\n    handle = new Pipe(PipeConstants.SERVER);\x0d\n    if (isWindows) {\x0d\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\x0d\n      if (!NumberIsNaN(instances)) {\x0d\n        handle.setPendingInstances(instances);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    handle = new TCP(TCPConstants.SERVER);\x0d\n    isTCP = true;\x0d\n  }\x0d\n\x0d\n  if (address || port || isTCP) {\x0d\n    debug('bind to'\x2C address || 'any');\x0d\n    if (!address) {\x0d\n      // Try binding to ipv6 first\x0d\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\x0d\n      if (err) {\x0d\n        handle.close();\x0d\n        // Fallback to ipv4\x0d\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\x0d\n      }\x0d\n    } else if (addressType === 6) {\x0d\n      err = handle.bind6(address\x2C port\x2C flags);\x0d\n    } else {\x0d\n      err = handle.bind(address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\x0d\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\x0d\n\x0d\n  // If there is not yet a handle\x2C we need to create one and bind.\x0d\n  // In the case of a server sent via IPC\x2C we don't need to do this.\x0d\n  if (this._handle) {\x0d\n    debug('setupListenHandle: have a handle already');\x0d\n  } else {\x0d\n    debug('setupListenHandle: create a handle');\x0d\n\x0d\n    let rval = null;\x0d\n\x0d\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\x0d\n    if (!address && typeof fd !== 'number') {\x0d\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\x0d\n\x0d\n      if (typeof rval === 'number') {\x0d\n        rval = null;\x0d\n        address = DEFAULT_IPV4_ADDR;\x0d\n        addressType = 4;\x0d\n      } else {\x0d\n        address = DEFAULT_IPV6_ADDR;\x0d\n        addressType = 6;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (rval === null)\x0d\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n    if (typeof rval === 'number') {\x0d\n      const error = uvExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\x0d\n      process.nextTick(emitErrorNT\x2C this\x2C error);\x0d\n      return;\x0d\n    }\x0d\n    this._handle = rval;\x0d\n  }\x0d\n\x0d\n  this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  this._handle.onconnection = onconnection;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\x0d\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\x0d\n  // which will thus give us a backlog of 512 entries.\x0d\n  const err = this._handle.listen(backlog || 511);\x0d\n\x0d\n  if (err) {\x0d\n    const ex = uvExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               emitErrorNT\x2C\x0d\n                               this\x2C\x0d\n                               ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Generate connection key\x2C this should be unique to the connection\x0d\n  this._connectionKey = addressType + ':' + address + ':' + port;\x0d\n\x0d\n  // Unref the handle if the server was unref'ed prior to listening\x0d\n  if (this._unref)\x0d\n    this.unref();\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitListeningNT\x2C\x0d\n                             this);\x0d\n}\x0d\n\x0d\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitListeningNT(self) {\x0d\n  // Ensure handle hasn't closed\x0d\n  if (self._handle)\x0d\n    self.emit('listening');\x0d\n}\x0d\n\x0d\n\x0d\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\x0d\n                         backlog\x2C fd\x2C exclusive\x2C flags) {\x0d\n  exclusive = !!exclusive;\x0d\n\x0d\n  if (cluster === undefined) cluster = require('cluster');\x0d\n\x0d\n  if (cluster.isPrimary || exclusive) {\x0d\n    // Will create a new handle\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const serverQuery = {\x0d\n    address: address\x2C\x0d\n    port: port\x2C\x0d\n    addressType: addressType\x2C\x0d\n    fd: fd\x2C\x0d\n    flags\x2C\x0d\n    backlog\x2C\x0d\n  };\x0d\n\x0d\n  // Get the primary's server handle\x2C and listen on it\x0d\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\x0d\n\x0d\n  function listenOnPrimaryHandle(err\x2C handle) {\x0d\n    err = checkBindError(err\x2C port\x2C handle);\x0d\n\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\x0d\n      return server.emit('error'\x2C ex);\x0d\n    }\x0d\n\x0d\n    // Reuse primary's server handle\x0d\n    server._handle = handle;\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype.listen = function(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  let options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  if (this._handle) {\x0d\n    throw new ERR_SERVER_ALREADY_LISTEN();\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('listening'\x2C cb);\x0d\n  }\x0d\n  const backlogFromArgs =\x0d\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\x0d\n    toNumber(args.length > 1 && args[1]) ||\x0d\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\x0d\n\x0d\n  options = options._handle || options.handle || options;\x0d\n  const flags = getFlags(options.ipv6Only);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\x0d\n  if (options instanceof TCP) {\x0d\n    this._handle = options;\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\x0d\n    return this;\x0d\n  }\x0d\n  addAbortSignalOption(this\x2C options);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\x0d\n  if (typeof options.fd === 'number' && options.fd >= 0) {\x0d\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\x0d\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\x0d\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\x0d\n  // null\x2C bind to an arbitrary unused port\x0d\n  if (args.length === 0 || typeof args[0] === 'function' ||\x0d\n      (typeof options.port === 'undefined' && 'port' in options) ||\x0d\n      options.port === null) {\x0d\n    options.port = 0;\x0d\n  }\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\x0d\n  // or (options[\x2C cb]) where options.port is specified\x0d\n  // or if options.port is normalized as 0 before\x0d\n  let backlog;\x0d\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\x0d\n    validatePort(options.port\x2C 'options.port');\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    // start TCP server listening on host:port\x0d\n    if (options.host) {\x0d\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\x0d\n                      options.exclusive\x2C flags);\x0d\n    } else { // Undefined host\x2C listens on unspecified address\x0d\n      // Default addressType 4 will be used to search for primary server\x0d\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\x0d\n                      backlog\x2C undefined\x2C options.exclusive);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\x0d\n  // where path or options.path is a UNIX domain socket or Windows pipe\x0d\n  if (options.path && isPipeName(options.path)) {\x0d\n    const pipeName = this._pipeName = options.path;\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    listenInCluster(this\x2C pipeName\x2C -1\x2C -1\x2C\x0d\n                    backlog\x2C undefined\x2C options.exclusive);\x0d\n\x0d\n    if (!this._handle) {\x0d\n      // Failed and an error shall be emitted in the next tick.\x0d\n      // Therefore\x2C we directly return.\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    let mode = 0;\x0d\n    if (options.readableAll === true)\x0d\n      mode |= PipeConstants.UV_READABLE;\x0d\n    if (options.writableAll === true)\x0d\n      mode |= PipeConstants.UV_WRITABLE;\x0d\n    if (mode !== 0) {\x0d\n      const err = this._handle.fchmod(mode);\x0d\n      if (err) {\x0d\n        this._handle.close();\x0d\n        this._handle = null;\x0d\n        throw errnoException(err\x2C 'uv_pipe_chmod');\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!(('port' in options) || ('path' in options))) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\x0d\n                                    'must have the property "port" or "path"');\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n};\x0d\n\x0d\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C exclusive\x2C flags) {\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\x0d\n    if (err) {\x0d\n      self.emit('error'\x2C err);\x0d\n    } else {\x0d\n      addressType = ip ? addressType : 4;\x0d\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\x0d\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\x0d\n  get: function() {\x0d\n    return !!this._handle;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nServer.prototype.address = function() {\x0d\n  if (this._handle && this._handle.getsockname) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getsockname(out);\x0d\n    if (err) {\x0d\n      throw errnoException(err\x2C 'address');\x0d\n    }\x0d\n    return out;\x0d\n  } else if (this._pipeName) {\x0d\n    return this._pipeName;\x0d\n  }\x0d\n  return null;\x0d\n};\x0d\n\x0d\nfunction onconnection(err\x2C clientHandle) {\x0d\n  const handle = this;\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  debug('onconnection');\x0d\n\x0d\n  if (err) {\x0d\n    self.emit('error'\x2C errnoException(err\x2C 'accept'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (self.maxConnections && self._connections >= self.maxConnections) {\x0d\n    clientHandle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const socket = new Socket({\x0d\n    handle: clientHandle\x2C\x0d\n    allowHalfOpen: self.allowHalfOpen\x2C\x0d\n    pauseOnCreate: self.pauseOnConnect\x2C\x0d\n    readable: true\x2C\x0d\n    writable: true\x0d\n  });\x0d\n\x0d\n  if (self.noDelay && handle.setNoDelay) {\x0d\n    handle.setNoDelay(true);\x0d\n  }\x0d\n\x0d\n  if (self.keepAlive && self.setKeepAlive) {\x0d\n    handle.setKeepAlive(true\x2C handle.keepAliveInitialDelay);\x0d\n  }\x0d\n\x0d\n  self._connections++;\x0d\n  socket.server = self;\x0d\n  socket._server = self;\x0d\n\x0d\n  DTRACE_NET_SERVER_CONNECTION(socket);\x0d\n  self.emit('connection'\x2C socket);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Gets the number of concurrent connections on the server\x0d\n * @param {Function} cb\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nServer.prototype.getConnections = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function end(err\x2C connections) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               cb\x2C\x0d\n                               err\x2C\x0d\n                               connections);\x0d\n  }\x0d\n\x0d\n  if (!this._usingWorkers) {\x0d\n    end(null\x2C this._connections);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Poll workers\x0d\n  let left = this._workers.length;\x0d\n  let total = this._connections;\x0d\n\x0d\n  function oncount(err\x2C count) {\x0d\n    if (err) {\x0d\n      left = -1;\x0d\n      return end(err);\x0d\n    }\x0d\n\x0d\n    total += count;\x0d\n    if (--left === 0) return end(null\x2C total);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < this._workers.length; n++) {\x0d\n    this._workers[n].getConnections(oncount);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nServer.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function') {\x0d\n    if (!this._handle) {\x0d\n      this.once('close'\x2C function close() {\x0d\n        cb(new ERR_SERVER_NOT_RUNNING());\x0d\n      });\x0d\n    } else {\x0d\n      this.once('close'\x2C cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (this._handle) {\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n  }\x0d\n\x0d\n  if (this._usingWorkers) {\x0d\n    let left = this._workers.length;\x0d\n    const onWorkerClose = () => {\x0d\n      if (--left !== 0) return;\x0d\n\x0d\n      this._connections = 0;\x0d\n      this._emitCloseIfDrained();\x0d\n    };\x0d\n\x0d\n    // Increment connections to be sure that\x2C even if all sockets will be closed\x0d\n    // during polling of workers\x2C `close` event will be emitted only once.\x0d\n    this._connections++;\x0d\n\x0d\n    // Poll workers\x0d\n    for (let n = 0; n < this._workers.length; n++)\x0d\n      this._workers[n].close(onWorkerClose);\x0d\n  } else {\x0d\n    this._emitCloseIfDrained();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype._emitCloseIfDrained = function() {\x0d\n  debug('SERVER _emitCloseIfDrained');\x0d\n\x0d\n  if (this._handle || this._connections) {\x0d\n    debug('SERVER handle? %j   connections? %d'\x2C\x0d\n          !!this._handle\x2C this._connections);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitCloseNT\x2C\x0d\n                             this);\x0d\n};\x0d\n\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  debug('SERVER: emit close');\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\x0d\n  err\x2C event\x2C sock) {\x0d\n\x0d\n  switch (event) {\x0d\n    case 'connection':\x0d\n      sock.destroy(err);\x0d\n      break;\x0d\n    default:\x0d\n      this.emit('error'\x2C err);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get() { return this[kHandle]; }\x2C\x0d\n  set(v) { return this[kHandle] = v; }\x0d\n});\x0d\n\x0d\nServer.prototype._setupWorker = function(socketList) {\x0d\n  this._usingWorkers = true;\x0d\n  this._workers.push(socketList);\x0d\n  socketList.once('exit'\x2C (socketList) => {\x0d\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\x0d\n    this._workers.splice(index\x2C 1);\x0d\n  });\x0d\n};\x0d\n\x0d\nServer.prototype.ref = function() {\x0d\n  this._unref = false;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype.unref = function() {\x0d\n  this._unref = true;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nlet _setSimultaneousAccepts;\x0d\nlet warnSimultaneousAccepts = true;\x0d\n\x0d\nif (isWindows) {\x0d\n  let simultaneousAccepts;\x0d\n\x0d\n  _setSimultaneousAccepts = function(handle) {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n    if (handle === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (simultaneousAccepts === undefined) {\x0d\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\x0d\n                             process.env.NODE_MANY_ACCEPTS !== '0');\x0d\n    }\x0d\n\x0d\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\x0d\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\x0d\n      handle._simultaneousAccepts = simultaneousAccepts;\x0d\n    }\x0d\n  };\x0d\n} else {\x0d\n  _setSimultaneousAccepts = function() {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _createServerHandle: createServerHandle\x2C\x0d\n  _normalizeArgs: normalizeArgs\x2C\x0d\n  _setSimultaneousAccepts\x2C\x0d\n  get BlockList() {\x0d\n    BlockList ??= require('internal/blocklist').BlockList;\x0d\n    return BlockList;\x0d\n  }\x2C\x0d\n  get SocketAddress() {\x0d\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\x0d\n    return SocketAddress;\x0d\n  }\x2C\x0d\n  connect\x2C\x0d\n  createConnection: connect\x2C\x0d\n  createServer\x2C\x0d\n  isIP: isIP\x2C\x0d\n  isIPv4: isIPv4\x2C\x0d\n  isIPv6: isIPv6\x2C\x0d\n  Server\x2C\x0d\n  Socket\x2C\x0d\n  Stream: Socket\x2C // Legacy naming\x0d\n};\x0d\n
code-source-info,0x22cec169476,101,0,51035,C0O0C4O51035,,
code-creation,Function,10,1364301,0x22cec16c356,2547, node:net:1:1,0x22cec1693f0,~
code-source-info,0x22cec16c356,101,0,51035,C0O0C417O1183C423O1200C429O1226C435O1238C441O1249C447O1265C453O1284C459O1309C464O1334C469O1384C475O1384C479O1384C481O1419C487O1419C491O1419C493O1451C499O1451C504O1484C518O1485C524O1451C526O1618C532O1618C537O1543C543O1552C548O1563C553O1574C559O1599C565O1659C571O1659C575O1659C577O1748C580O1748C585O1699C591O1717C597O1731C603O1793C609O1793C614O1782C620O1841C623O1841C628O1821C634O1892C637O1892C642O1875C648O1992C651O1992C656O1936C662O1944C668O1974C674O2092C677O2092C682O2033C688O2042C694O2073C700O2228C706O2228C711O2134C717O2149C728O2191C734O2208C740O2438C746O2438C751O2273C757O2291C763O2308C769O2325C774O2346C780O2358C785O2375C790O2396C796O2408C802O2422C808O2856C814O2856C819O2856C824O2505C830O2538C836O2565C842O2593C848O2619C854O2648C860O2680C866O2709C872O2733C878O2760C884O2779C890O2805C896O2826C902O2910C908O2910C913O2893C919O3073C925O3073C930O2954C936O2978C942O2999C948O3017C954O3036C960O3053C966O3134C969O3134C973O3134C975O3236C981O3236C986O3176C992O3209C998O3319C999O3319C1001O3333C1002O3333C1004O3343C1005O3343C1007O3359C1008O3359C1010O3402C1016O3402C1021O3385C1027O3443C1033O3443C1038O3430C1044O3500C1046O3500C1048O3538C1050O3538C1052O3565C1055O3573C1062O3582C1065O3565C1067O3611C1071O3611C1073O7211C1076O7211C1080O7211C1082O7256C1085O7256C1089O7256C1091O7302C1094O7302C1098O7302C1100O7348C1103O7348C1107O7348C1109O7408C1112O7408C1116O7408C1118O12064C1121O12092C1129O12110C1134O12117C1139O12064C1144O12130C1150O12166C1155O12130C1160O12209C1163O12216C1172O12238C1176O12474C1179O12481C1188O12498C1192O14068C1195O14075C1202O14096C1206O14121C1209O14128C1218O14149C1222O14677C1225O14684C1234O14705C1238O15106C1241O15113C1250O15136C1254O15642C1257O15649C1266O15667C1270O15722C1276O15750C1290O15786C1298O15722C1303O15841C1309O15869C1323O15896C1331O15841C1336O15988C1342O16016C1356O16051C1364O15988C1369O16388C1375O16416C1389O16451C1397O16388C1402O16544C1408O16572C1413O16583C1419O16607C1430O16544C1435O16988C1438O16995C1447O17011C1451O17258C1454O17265C1463O17279C1467O17480C1470O17487C1479O17503C1483O17857C1486O17864C1495O17881C1499O18080C1502O18087C1511O18102C1515O18456C1518O18463C1527O18485C1531O18649C1534O18656C1543O18675C1547O19674C1550O19681C1559O19704C1563O20184C1571O20184C1576O20308C1584O20308C1594O20411C1602O20411C1612O20511C1620O20511C1630O20607C1633O20614C1642O20637C1650O20931C1658O20931C1668O21034C1676O21034C1686O21128C1689O21135C1694O21145C1698O21163C1706O21219C1709O21226C1718O21250C1726O22049C1729O22056C1738O22074C1746O22153C1749O22160C1758O22177C1766O22428C1774O22428C1784O22572C1792O22572C1802O26164C1805O26171C1814O26189C1822O30744C1825O30751C1834O30765C1842O30972C1845O30979C1854O30995C1862O34520C1865O34548C1877O34572C1886O34520C1896O34585C1902O34585C1912O38706C1915O38713C1926O38732C1934O40250C1937O40257C1950O40274C1958O44343C1964O44371C1985O44405C1997O44343C2007O44503C2010O44510C2023O44528C2031O45846C2034O45853C2047O45878C2055O46675C2058O46682C2071O46698C2079O47609C2082O47616C2095O47646C2103O48146C2106O48153C2118O48176C2131O48200C2139O48533C2145O48558C2166O48583C2178O48624C2190O48533C2200O48674C2206O48702C2223O48729C2235O48765C2247O48674C2257O48810C2260O48817C2273O48840C2281O49095C2284O49102C2297O49116C2305O49228C2308O49235C2321O49251C2329O49368C2331O49424C2332O49424C2334O49433C2345O49457C2346O49457C2348O49483C2357O50213C2362O50495C2372O50538C2382O50577C2392O50595C2402O50863C2412O50893C2422O50905C2432O50928C2442O50945C2452O50964C2462O50975C2472O50986C2482O51005C2537O50510C2546O51034,,
code-creation,Eval,10,1366135,0x22cec171cf6,5, node:internal/net:1:1,0x22cec171b30,~
script-source,102,node:internal/net,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst { writeBuffer } = internalBinding('fs');\x0d\nconst errors = require('internal/errors');\x0d\n\x0d\n// IPv4 Segment\x0d\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\x0d\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\x0d\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\x0d\n\x0d\n// IPv6 Segment\x0d\nconst v6Seg = '(?:[0-9a-fA-F]{1\x2C4})';\x0d\nconst IPv6Reg = new RegExp('^(' +\x0d\n  `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1\x2C2}|:)|` +\x0d\n  `(?:${v6Seg}:){4}(?:(:${v6Seg}){0\x2C1}:${v4Str}|(:${v6Seg}){1\x2C3}|:)|` +\x0d\n  `(?:${v6Seg}:){3}(?:(:${v6Seg}){0\x2C2}:${v4Str}|(:${v6Seg}){1\x2C4}|:)|` +\x0d\n  `(?:${v6Seg}:){2}(?:(:${v6Seg}){0\x2C3}:${v4Str}|(:${v6Seg}){1\x2C5}|:)|` +\x0d\n  `(?:${v6Seg}:){1}(?:(:${v6Seg}){0\x2C4}:${v4Str}|(:${v6Seg}){1\x2C6}|:)|` +\x0d\n  `(?::((?::${v6Seg}){0\x2C5}:${v4Str}|(?::${v6Seg}){1\x2C7}|:))` +\x0d\n')(%[0-9a-zA-Z-.:]{1\x2C})?$');\x0d\n\x0d\nfunction isIPv4(s) {\x0d\n  return RegExpPrototypeTest(IPv4Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIPv6(s) {\x0d\n  return RegExpPrototypeTest(IPv6Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIP(s) {\x0d\n  if (isIPv4(s)) return 4;\x0d\n  if (isIPv6(s)) return 6;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\nfunction makeSyncWrite(fd) {\x0d\n  return function(chunk\x2C enc\x2C cb) {\x0d\n    if (enc !== 'buffer')\x0d\n      chunk = Buffer.from(chunk\x2C enc);\x0d\n\x0d\n    this._handle.bytesWritten += chunk.length;\x0d\n\x0d\n    const ctx = {};\x0d\n    writeBuffer(fd\x2C chunk\x2C 0\x2C chunk.length\x2C null\x2C undefined\x2C ctx);\x0d\n    if (ctx.errno !== undefined) {\x0d\n      const ex = errors.uvException(ctx);\x0d\n      ex.errno = ctx.errno;\x0d\n      return cb(ex);\x0d\n    }\x0d\n    cb();\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  makeSyncWrite\x2C\x0d\n  normalizedArgsSymbol: Symbol('normalizedArgs')\x0d\n};\x0d\n
code-source-info,0x22cec171cf6,102,0,1818,C0O0C4O1818,,
code-creation,Function,10,1366469,0x22cec1720e6,617, node:internal/net:1:1,0x22cec171c70,~
code-source-info,0x22cec1720e6,102,0,1818,C0O0C45O28C50O39C56O63C61O107C64O107C69O124C73O107C75O158C78O158C83O142C89O197C92O197C96O197C98O259C101O330C106O334C119O349C124O375C129O390C142O375C147O375C149O435C152O476C160O503C173O519C183O492C192O542C205O558C218O568C228O531C237O591C250O608C263O619C273O580C282O648C295O666C308O681C321O692C331O637C340O721C353O739C366O754C379O765C389O710C398O794C411O812C424O827C437O838C447O783C456O867C469O885C482O900C495O911C505O856C514O946C527O961C540O974C550O929C556O992C562O476C567O476C569O1695C576O1717C582O1726C588O1737C594O1748C601O1788C611O1710C616O1817,,
code-creation,Eval,10,1367266,0x22cec173aee,5, node:internal/dtrace:1:1,0x22cec1739a8,~
script-source,103,node:internal/dtrace,'use strict';\x0d\n\x0d\nconst config = internalBinding('config');\x0d\n\x0d\nconst {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE = () => {}\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION = () => {}\x2C\x0d\n  DTRACE_NET_STREAM_END = () => {}\x0d\n} = (config.hasDtrace ? internalBinding('dtrace') : {});\x0d\n\x0d\nmodule.exports = {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n};\x0d\n
code-source-info,0x22cec173aee,103,0,589,C0O0C4O589,,
code-creation,Function,10,1367420,0x22cec173fc6,140, node:internal/dtrace:1:1,0x22cec173a68,~
code-source-info,0x22cec173fc6,103,0,589,C0O32C3O32C8O333C17O345C25O73C36O115C47O158C58O200C69O243C80O287C91O381C98O403C104O434C110O466C116O497C122O529C128O562C134O396C139O588,,
code-creation,LazyCompile,10,1368279,0x22cec174f8e,34,protoGetter node:net:740:21,0x22cec1698b8,~
code-source-info,0x22cec174f8e,101,20034,20180,C0O20056C8O20084C13O20095C20O20162C27O20056C33O20179,,
code-creation,Eval,10,1370489,0x22cec17a31e,5, node:dgram:1:1,0x22cec179db8,~
script-source,104,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst errors = require('internal/errors');\x0d\nconst {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x2C\x0d\n} = require('internal/dgram');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_MISSING_ARGS\x2C\x0d\n  ERR_SOCKET_ALREADY_BOUND\x2C\x0d\n  ERR_SOCKET_BAD_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\x0d\n  ERR_INVALID_FD_TYPE\x0d\n} = errors.codes;\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateString\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n} = require('internal/validators');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\x0d\n\x0d\nconst {\x0d\n  constants: { UV_UDP_IPV6ONLY }\x2C\x0d\n  UDP\x2C\x0d\n  SendWrap\x0d\n} = internalBinding('udp_wrap');\x0d\n\x0d\nconst BIND_STATE_UNBOUND = 0;\x0d\nconst BIND_STATE_BINDING = 1;\x0d\nconst BIND_STATE_BOUND = 2;\x0d\n\x0d\nconst CONNECT_STATE_DISCONNECTED = 0;\x0d\nconst CONNECT_STATE_CONNECTING = 1;\x0d\nconst CONNECT_STATE_CONNECTED = 2;\x0d\n\x0d\nconst RECV_BUFFER = true;\x0d\nconst SEND_BUFFER = false;\x0d\n\x0d\n// Lazily loaded\x0d\nlet _cluster = null;\x0d\nfunction lazyLoadCluster() {\x0d\n  if (!_cluster) _cluster = require('cluster');\x0d\n  return _cluster;\x0d\n}\x0d\n\x0d\nconst errnoException = errors.errnoException;\x0d\nconst exceptionWithHostPort = errors.exceptionWithHostPort;\x0d\n\x0d\n\x0d\nfunction Socket(type\x2C listener) {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n  let lookup;\x0d\n  let recvBufferSize;\x0d\n  let sendBufferSize;\x0d\n\x0d\n  let options;\x0d\n  if (type !== null && typeof type === 'object') {\x0d\n    options = type;\x0d\n    type = options.type;\x0d\n    lookup = options.lookup;\x0d\n    recvBufferSize = options.recvBufferSize;\x0d\n    sendBufferSize = options.sendBufferSize;\x0d\n  }\x0d\n\x0d\n  const handle = newHandle(type\x2C lookup);\x0d\n  handle[owner_symbol] = this;\x0d\n\x0d\n  this[async_id_symbol] = handle.getAsyncId();\x0d\n  this.type = type;\x0d\n\x0d\n  if (typeof listener === 'function')\x0d\n    this.on('message'\x2C listener);\x0d\n\x0d\n  this[kStateSymbol] = {\x0d\n    handle\x2C\x0d\n    receiving: false\x2C\x0d\n    bindState: BIND_STATE_UNBOUND\x2C\x0d\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\x0d\n    queue: undefined\x2C\x0d\n    reuseAddr: options && options.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\x0d\n    ipv6Only: options && options.ipv6Only\x2C\x0d\n    recvBufferSize\x2C\x0d\n    sendBufferSize\x0d\n  };\x0d\n\x0d\n  if (options?.signal !== undefined) {\x0d\n    const { signal } = options;\x0d\n    validateAbortSignal(signal\x2C 'options.signal');\x0d\n    const onAborted = () => {\x0d\n      this.close();\x0d\n    };\x0d\n    if (signal.aborted) {\x0d\n      onAborted();\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAborted);\x0d\n      this.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n    }\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction createSocket(type\x2C listener) {\x0d\n  return new Socket(type\x2C listener);\x0d\n}\x0d\n\x0d\n\x0d\nfunction startListening(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  state.handle.onmessage = onMessage;\x0d\n  // Todo: handle errors\x0d\n  state.handle.recvStart();\x0d\n  state.receiving = true;\x0d\n  state.bindState = BIND_STATE_BOUND;\x0d\n\x0d\n  if (state.recvBufferSize)\x0d\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\x0d\n\x0d\n  if (state.sendBufferSize)\x0d\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\x0d\n\x0d\n  socket.emit('listening');\x0d\n}\x0d\n\x0d\nfunction replaceHandle(self\x2C newHandle) {\x0d\n  const state = self[kStateSymbol];\x0d\n  const oldHandle = state.handle;\x0d\n\x0d\n  // Set up the handle that we got from primary.\x0d\n  newHandle.lookup = oldHandle.lookup;\x0d\n  newHandle.bind = oldHandle.bind;\x0d\n  newHandle.send = oldHandle.send;\x0d\n  newHandle[owner_symbol] = self;\x0d\n\x0d\n  // Replace the existing handle by the handle we got from primary.\x0d\n  oldHandle.close();\x0d\n  state.handle = newHandle;\x0d\n}\x0d\n\x0d\nfunction bufferSize(self\x2C size\x2C buffer) {\x0d\n  if (size >>> 0 !== size)\x0d\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\x0d\n\x0d\n  const ctx = {};\x0d\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\x0d\n  if (ret === undefined) {\x0d\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n// Query primary process to get the server handle and utilize it.\x0d\nfunction bindServerHandle(self\x2C options\x2C errCb) {\x0d\n  const cluster = lazyLoadCluster();\x0d\n\x0d\n  const state = self[kStateSymbol];\x0d\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\x0d\n    if (err) {\x0d\n      errCb(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!state.handle) {\x0d\n      // Handle has been closed in the mean time.\x0d\n      return handle.close();\x0d\n    }\x0d\n\x0d\n    replaceHandle(self\x2C handle);\x0d\n    startListening(self);\x0d\n  });\x0d\n}\x0d\n\x0d\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\x0d\n  let port = port_;\x0d\n\x0d\n  healthCheck(this);\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_UNBOUND)\x0d\n    throw new ERR_SOCKET_ALREADY_BOUND();\x0d\n\x0d\n  state.bindState = BIND_STATE_BINDING;\x0d\n\x0d\n  const cb = arguments.length && arguments[arguments.length - 1];\x0d\n  if (typeof cb === 'function') {\x0d\n    function removeListeners() {\x0d\n      this.removeListener('error'\x2C removeListeners);\x0d\n      this.removeListener('listening'\x2C onListening);\x0d\n    }\x0d\n\x0d\n    function onListening() {\x0d\n      FunctionPrototypeCall(removeListeners\x2C this);\x0d\n      FunctionPrototypeCall(cb\x2C this);\x0d\n    }\x0d\n\x0d\n    this.on('error'\x2C removeListeners);\x0d\n    this.on('listening'\x2C onListening);\x0d\n  }\x0d\n\x0d\n  if (port !== null &&\x0d\n      typeof port === 'object' &&\x0d\n      typeof port.recvStart === 'function') {\x0d\n    replaceHandle(this\x2C port);\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Open an existing fd instead of creating a new one.\x0d\n  if (port !== null && typeof port === 'object' &&\x0d\n      isInt32(port.fd) && port.fd > 0) {\x0d\n    const fd = port.fd;\x0d\n    const exclusive = !!port.exclusive;\x0d\n    const state = this[kStateSymbol];\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: null\x2C\x0d\n        port: null\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd\x2C\x0d\n        flags: null\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = errnoException(err\x2C 'open');\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP')\x0d\n      throw new ERR_INVALID_FD_TYPE(type);\x0d\n    const err = state.handle.open(fd);\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  let address;\x0d\n  let exclusive;\x0d\n\x0d\n  if (port !== null && typeof port === 'object') {\x0d\n    address = port.address || '';\x0d\n    exclusive = !!port.exclusive;\x0d\n    port = port.port;\x0d\n  } else {\x0d\n    address = typeof address_ === 'function' ? '' : address_;\x0d\n    exclusive = false;\x0d\n  }\x0d\n\x0d\n  // Defaulting address for bind to all interfaces\x0d\n  if (!address) {\x0d\n    if (this.type === 'udp4')\x0d\n      address = '0.0.0.0';\x0d\n    else\x0d\n      address = '::';\x0d\n  }\x0d\n\x0d\n  // Resolve address first\x0d\n  state.handle.lookup(address\x2C (err\x2C ip) => {\x0d\n    if (err) {\x0d\n      state.bindState = BIND_STATE_UNBOUND;\x0d\n      this.emit('error'\x2C err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    let flags = 0;\x0d\n    if (state.reuseAddr)\x0d\n      flags |= UV_UDP_REUSEADDR;\x0d\n    if (state.ipv6Only)\x0d\n      flags |= UV_UDP_IPV6ONLY;\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: ip\x2C\x0d\n        port: port\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd: -1\x2C\x0d\n        flags: flags\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n    } else {\x0d\n      if (!state.handle)\x0d\n        return; // Handle has been closed in the mean time\x0d\n\x0d\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\x0d\n      if (err) {\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n        // Todo: close?\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      startListening(this);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\x0d\n  port = validatePort(port\x2C 'Port'\x2C false);\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = '';\x0d\n  } else if (address === undefined) {\x0d\n    address = '';\x0d\n  }\x0d\n\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTING;\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\x0d\n                                        port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\x0d\n};\x0d\n\x0d\n\x0d\nfunction _connect(port\x2C address\x2C callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (callback)\x0d\n    this.once('connect'\x2C callback);\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doConnect\x2C\x0d\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  state.handle.lookup(address\x2C afterDns);\x0d\n}\x0d\n\x0d\n\x0d\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n  if (!state.handle)\x0d\n    return;\x0d\n\x0d\n  if (!ex) {\x0d\n    const err = state.handle.connect(ip\x2C port);\x0d\n    if (err) {\x0d\n      ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (ex) {\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n    return process.nextTick(() => {\x0d\n      if (callback) {\x0d\n        self.removeListener('connect'\x2C callback);\x0d\n        callback(ex);\x0d\n      } else {\x0d\n        self.emit('error'\x2C ex);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTED;\x0d\n  process.nextTick(() => self.emit('connect'));\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.disconnect = function() {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const err = state.handle.disconnect();\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'connect');\x0d\n  else\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n};\x0d\n\x0d\n\x0d\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\x0d\nSocket.prototype.sendto = function(buffer\x2C\x0d\n                                   offset\x2C\x0d\n                                   length\x2C\x0d\n                                   port\x2C\x0d\n                                   address\x2C\x0d\n                                   callback) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  validateNumber(length\x2C 'length');\x0d\n  validateNumber(port\x2C 'port');\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\x0d\n};\x0d\n\x0d\n\x0d\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\x0d\n  if (typeof buffer === 'string') {\x0d\n    buffer = Buffer.from(buffer);\x0d\n  } else if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  offset = offset >>> 0;\x0d\n  length = length >>> 0;\x0d\n  if (offset > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n  }\x0d\n\x0d\n  if (offset + length > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n  }\x0d\n\x0d\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixBufferList(list) {\x0d\n  const newlist = new Array(list.length);\x0d\n\x0d\n  for (let i = 0\x2C l = list.length; i < l; i++) {\x0d\n    const buf = list[i];\x0d\n    if (typeof buf === 'string')\x0d\n      newlist[i] = Buffer.from(buf);\x0d\n    else if (!isArrayBufferView(buf))\x0d\n      return null;\x0d\n    else\x0d\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\x0d\n  }\x0d\n\x0d\n  return newlist;\x0d\n}\x0d\n\x0d\n\x0d\nfunction enqueue(self\x2C toEnqueue) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\x0d\n  // event handler that flushes the send queue after binding is done.\x0d\n  if (state.queue === undefined) {\x0d\n    state.queue = [];\x0d\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\x0d\n    self.once('listening'\x2C onListenSuccess);\x0d\n  }\x0d\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenSuccess() {\x0d\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\x0d\n  FunctionPrototypeCall(clearQueue\x2C this);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenError(err) {\x0d\n  this.removeListener('listening'\x2C onListenSuccess);\x0d\n  this[kStateSymbol].queue = undefined;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearQueue() {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n  state.queue = undefined;\x0d\n\x0d\n  // Flush the send queue.\x0d\n  for (const queueEntry of queue)\x0d\n    queueEntry();\x0d\n}\x0d\n\x0d\n// valid combinations\x0d\n// For connectionless sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port)\x0d\n// send(bufferOrList\x2C port\x2C address\x2C callback)\x0d\n// send(bufferOrList\x2C port\x2C address)\x0d\n// send(bufferOrList\x2C port\x2C callback)\x0d\n// send(bufferOrList\x2C port)\x0d\n// For connected sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length)\x0d\n// send(bufferOrList\x2C callback)\x0d\n// send(bufferOrList)\x0d\nSocket.prototype.send = function(buffer\x2C\x0d\n                                 offset\x2C\x0d\n                                 length\x2C\x0d\n                                 port\x2C\x0d\n                                 address\x2C\x0d\n                                 callback) {\x0d\n\x0d\n  let list;\x0d\n  const state = this[kStateSymbol];\x0d\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\x0d\n  if (!connected) {\x0d\n    if (address || (port && typeof port !== 'function')) {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n    } else {\x0d\n      callback = port;\x0d\n      port = offset;\x0d\n      address = length;\x0d\n    }\x0d\n  } else {\x0d\n    if (typeof length === 'number') {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n      if (typeof port === 'function') {\x0d\n        callback = port;\x0d\n        port = null;\x0d\n      }\x0d\n    } else {\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    if (port || address)\x0d\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n  }\x0d\n\x0d\n  if (!ArrayIsArray(buffer)) {\x0d\n    if (typeof buffer === 'string') {\x0d\n      list = [ Buffer.from(buffer) ];\x0d\n    } else if (!isArrayBufferView(buffer)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                     ['Buffer'\x2C\x0d\n                                      'TypedArray'\x2C\x0d\n                                      'DataView'\x2C\x0d\n                                      'string']\x2C\x0d\n                                     buffer);\x0d\n    } else {\x0d\n      list = [ buffer ];\x0d\n    }\x0d\n  } else if (!(list = fixBufferList(buffer))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  if (!connected)\x0d\n    port = validatePort(port\x2C 'Port'\x2C false);\x0d\n\x0d\n  // Normalize callback so it's either a function or undefined but not anything\x0d\n  // else.\x0d\n  if (typeof callback !== 'function')\x0d\n    callback = undefined;\x0d\n\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = undefined;\x0d\n  } else if (address && typeof address !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('address'\x2C ['string'\x2C 'falsy']\x2C address);\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (list.length === 0)\x0d\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\x0d\n\x0d\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\x0d\n  // send queue and send after binding is complete.\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\x0d\n                                        list\x2C port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doSend\x2C\x0d\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  if (!connected) {\x0d\n    state.handle.lookup(address\x2C afterDns);\x0d\n  } else {\x0d\n    afterDns(null\x2C null);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  if (ex) {\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(() => self.emit('error'\x2C ex));\x0d\n    return;\x0d\n  } else if (!state.handle) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new SendWrap();\x0d\n  req.list = list;  // Keep reference alive.\x0d\n  req.address = address;\x0d\n  req.port = port;\x0d\n  if (callback) {\x0d\n    req.callback = callback;\x0d\n    req.oncomplete = afterSend;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (port)\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\x0d\n  else\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\x0d\n\x0d\n  if (err >= 1) {\x0d\n    // Synchronous finish. The return code is msg_length + 1 so that we can\x0d\n    // distinguish between synchronous success and asynchronous success.\x0d\n    if (callback)\x0d\n      process.nextTick(callback\x2C null\x2C err - 1);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (err && callback) {\x0d\n    // Don't emit as error\x2C dgram_legacy.js compatibility\x0d\n    const ex = exceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\x0d\n    process.nextTick(callback\x2C ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterSend(err\x2C sent) {\x0d\n  if (err) {\x0d\n    err = exceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\x0d\n  } else {\x0d\n    err = null;\x0d\n  }\x0d\n\x0d\n  this.callback(err\x2C sent);\x0d\n}\x0d\n\x0d\nSocket.prototype.close = function(callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n\x0d\n  if (typeof callback === 'function')\x0d\n    this.on('close'\x2C callback);\x0d\n\x0d\n  if (queue !== undefined) {\x0d\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n  stopReceiving(this);\x0d\n  state.handle.close();\x0d\n  state.handle = null;\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             socketCloseNT\x2C\x0d\n                             this);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction socketCloseNT(self) {\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const out = {};\x0d\n  const err = this[kStateSymbol].handle.getsockname(out);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'getsockname');\x0d\n  }\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\nSocket.prototype.remoteAddress = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const out = {};\x0d\n  const err = state.handle.getpeername(out);\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'getpeername');\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setBroadcast = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setBroadcast');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastLoopback = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastLoopback');\x0d\n  }\x0d\n\x0d\n  return arg; // 0.4 compatibility\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n  validateString(interfaceAddress\x2C 'interfaceAddress');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastInterface');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addMembership = function(multicastAddress\x2C\x0d\n                                          interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropMembership = function(multicastAddress\x2C\x0d\n                                           interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                        groupAddress\x2C\x0d\n                                                        interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                          groupAddress\x2C\x0d\n                                                          interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                         groupAddress\x2C\x0d\n                                                         interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                           groupAddress\x2C\x0d\n                                                           interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nfunction healthCheck(socket) {\x0d\n  if (!socket[kStateSymbol].handle) {\x0d\n    // Error message from dgram_legacy.js.\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction stopReceiving(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  if (!state.receiving)\x0d\n    return;\x0d\n\x0d\n  state.handle.recvStop();\x0d\n  state.receiving = false;\x0d\n}\x0d\n\x0d\n\x0d\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\x0d\n  const self = handle[owner_symbol];\x0d\n  if (nread < 0) {\x0d\n    return self.emit('error'\x2C errnoException(nread\x2C 'recvmsg'));\x0d\n  }\x0d\n  rinfo.size = buf.length; // compatibility\x0d\n  self.emit('message'\x2C buf\x2C rinfo);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setRecvBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setSendBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getRecvBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getSendBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\n// Deprecated private APIs.\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].handle;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].handle = val;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].receiving;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].receiving = val;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].bindState;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].bindState = val;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].queue;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].queue = val;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].reuseAddr;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].reuseAddr = val;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._healthCheck = deprecate(function() {\x0d\n  healthCheck(this);\x0d\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\nSocket.prototype._stopReceiving = deprecate(function() {\x0d\n  stopReceiving(this);\x0d\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  _createSocketHandle: deprecate(\x0d\n    _createSocketHandle\x2C\x0d\n    'dgram._createSocketHandle() is deprecated'\x2C\x0d\n    'DEP0112'\x0d\n  )\x2C\x0d\n  createSocket\x2C\x0d\n  Socket\x0d\n};\x0d\n
code-source-info,0x22cec17a31e,104,0,28325,C0O0C4O28325,,
tick,0x7ff7de06d391,1375153,1,0x7ff7dd90e150,3,0x7ff7de2559a0,0x22cec142fec,0x22cec1422dd,0x22cec16c72b,0x22cec14300d,0x22cec1422dd,0x22cec164bfc,0x22cec14300d,0x22cec1422dd,0x22cec15e07a,0x22cec14300d,0x22cec1422dd,0x22cec15c43a,0x22cec146502,0x22cec142065
code-creation,Function,10,1375228,0x22cec17c22e,1501, node:dgram:1:1,0x22cec17a298,~
code-source-info,0x22cec17c22e
code-creation,Eval,10,1376539,0x22cec17f636,5, node:internal/dgram:1:1,0x22cec17f430,~
script-source,105,node:internal/dgram,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { codes } = require('internal/errors');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst { UV_EINVAL } = internalBinding('uv');\x0d\nconst {\x0d\n  ERR_SOCKET_BAD_TYPE\x2C\x0d\n} = codes;\x0d\nconst kStateSymbol = Symbol('state symbol');\x0d\nlet dns;  // Lazy load for startup performance.\x0d\n\x0d\n\x0d\nfunction lookup4(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\x0d\n}\x0d\n\x0d\n\x0d\nfunction lookup6(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '::1'\x2C 6\x2C callback);\x0d\n}\x0d\n\x0d\nfunction newHandle(type\x2C lookup) {\x0d\n  if (lookup === undefined) {\x0d\n    if (dns === undefined) {\x0d\n      dns = require('dns');\x0d\n    }\x0d\n\x0d\n    lookup = dns.lookup;\x0d\n  } else {\x0d\n    validateFunction(lookup\x2C 'lookup');\x0d\n  }\x0d\n\x0d\n  if (type === 'udp4') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  if (type === 'udp6') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\x0d\n    handle.bind = handle.bind6;\x0d\n    handle.connect = handle.connect6;\x0d\n    handle.send = handle.send6;\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  throw new ERR_SOCKET_BAD_TYPE();\x0d\n}\x0d\n\x0d\n\x0d\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  const handle = newHandle(addressType);\x0d\n  let err;\x0d\n\x0d\n  if (isInt32(fd) && fd > 0) {\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP') {\x0d\n      err = UV_EINVAL;\x0d\n    } else {\x0d\n      err = handle.open(fd);\x0d\n    }\x0d\n  } else if (port || address) {\x0d\n    err = handle.bind(address\x2C port || 0\x2C flags);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x0d\n};\x0d\n
code-source-info,0x22cec17f636,105,0,1941,C0O0C4O1941,,
code-creation,Function,10,1376967,0x22cec17f8fe,196, node:internal/dgram:1:1,0x22cec17f5b0,~
code-source-info,0x22cec17f8fe,105,0,1941,C0O0C56O28C62O54C67O101C73O101C78O91C83O146C86O146C91O138C97O204C100O204C105O184C111O276C117O276C122O241C128O253C134O331C137O331C142O317C148O366C154O421C157O421C162O450C163O450C165O1863C172O1885C178O1902C184O1926C190O1878C195O1940,,
new,MemoryChunk,0x24dc49c0000,262144
code-creation,LazyCompile,10,1377824,0x24dc49c3406,152,deprecate node:internal/util:96:19,0xc194f45aa8,~
script-source,16,node:internal/util,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  overrideStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\nconst {\x0d\n  getHiddenValue\x2C\x0d\n  setHiddenValue\x2C\x0d\n  arrow_message_private_symbol: kArrowMessagePrivateSymbolIndex\x2C\x0d\n  decorated_private_symbol: kDecoratedPrivateSymbolIndex\x2C\x0d\n  sleep: _sleep\x2C\x0d\n  toUSVString: _toUSVString\x2C\x0d\n} = internalBinding('util');\x0d\nconst { isNativeError } = internalBinding('types');\x0d\n\x0d\nconst noCrypto = !process.versions.openssl;\x0d\n\x0d\nconst experimentalWarnings = new SafeSet();\x0d\n\x0d\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\x0d\n\x0d\nconst unpairedSurrogateRe =\x0d\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\x0d\nfunction toUSVString(val) {\x0d\n  const str = `${val}`;\x0d\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\x0d\n  // slower than `unpairedSurrogateRe.exec()`.\x0d\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\x0d\n  if (!match)\x0d\n    return str;\x0d\n  return _toUSVString(str\x2C match.index);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nfunction removeColors(str) {\x0d\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\x0d\n}\x0d\n\x0d\nfunction isError(e) {\x0d\n  // An error could be an instance of Error while not being a native error\x0d\n  // or could be from a different realm and not be instance of Error but still\x0d\n  // be a native error.\x0d\n  return isNativeError(e) || e instanceof Error;\x0d\n}\x0d\n\x0d\n// Keep a list of deprecation codes that have been warned on so we only warn on\x0d\n// each one once.\x0d\nconst codesWarned = new SafeSet();\x0d\n\x0d\nlet validateString;\x0d\n\x0d\n// Mark that a method should not be used.\x0d\n// Returns a modified function which warns once by default.\x0d\n// If --no-deprecation is set\x2C then it is a no-op.\x0d\nfunction deprecate(fn\x2C msg\x2C code) {\x0d\n  if (process.noDeprecation === true) {\x0d\n    return fn;\x0d\n  }\x0d\n\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateString === undefined)\x0d\n    ({ validateString } = require('internal/validators'));\x0d\n\x0d\n  if (code !== undefined)\x0d\n    validateString(code\x2C 'code');\x0d\n\x0d\n  let warned = false;\x0d\n  function deprecated(...args) {\x0d\n    if (!warned) {\x0d\n      warned = true;\x0d\n      if (code !== undefined) {\x0d\n        if (!codesWarned.has(code)) {\x0d\n          process.emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\x0d\n          codesWarned.add(code);\x0d\n        }\x0d\n      } else {\x0d\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\x0d\n      }\x0d\n    }\x0d\n    if (new.target) {\x0d\n      return ReflectConstruct(fn\x2C args\x2C new.target);\x0d\n    }\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\x0d\n  ObjectSetPrototypeOf(deprecated\x2C fn);\x0d\n  if (fn.prototype) {\x0d\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\x0d\n    // that calling the unwrapped constructor gives an instanceof the wrapped\x0d\n    // constructor.\x0d\n    deprecated.prototype = fn.prototype;\x0d\n  }\x0d\n\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\nfunction decorateErrorStack(err) {\x0d\n  if (!(isError(err) && err.stack) ||\x0d\n      getHiddenValue(err\x2C kDecoratedPrivateSymbolIndex) === true)\x0d\n    return;\x0d\n\x0d\n  const arrow = getHiddenValue(err\x2C kArrowMessagePrivateSymbolIndex);\x0d\n\x0d\n  if (arrow) {\x0d\n    err.stack = arrow + err.stack;\x0d\n    setHiddenValue(err\x2C kDecoratedPrivateSymbolIndex\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction assertCrypto() {\x0d\n  if (noCrypto)\x0d\n    throw new ERR_NO_CRYPTO();\x0d\n}\x0d\n\x0d\n// Return undefined if there is no match.\x0d\n// Move the "slow cases" to a separate function to make sure this function gets\x0d\n// inlined properly. That prioritizes the common case.\x0d\nfunction normalizeEncoding(enc) {\x0d\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\x0d\n  return slowCases(enc);\x0d\n}\x0d\n\x0d\nfunction slowCases(enc) {\x0d\n  switch (enc.length) {\x0d\n    case 4:\x0d\n      if (enc === 'UTF8') return 'utf8';\x0d\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf8') return 'utf8';\x0d\n      if (enc === 'ucs2') return 'utf16le';\x0d\n      break;\x0d\n    case 3:\x0d\n      if (enc === 'hex' || enc === 'HEX' ||\x0d\n          `${enc}`.toLowerCase() === 'hex')\x0d\n        return 'hex';\x0d\n      break;\x0d\n    case 5:\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      if (enc === 'UTF-8') return 'utf8';\x0d\n      if (enc === 'ASCII') return 'ascii';\x0d\n      if (enc === 'UCS-2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf-8') return 'utf8';\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      break;\x0d\n    case 6:\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      if (enc === 'BASE64') return 'base64';\x0d\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      break;\x0d\n    case 7:\x0d\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\x0d\n          `${enc}`.toLowerCase() === 'utf16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 8:\x0d\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\x0d\n        `${enc}`.toLowerCase() === 'utf-16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 9:\x0d\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\x0d\n          `${enc}`.toLowerCase() === 'base64url')\x0d\n        return 'base64url';\x0d\n      break;\x0d\n    default:\x0d\n      if (enc === '') return 'utf8';\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitExperimentalWarning(feature) {\x0d\n  if (experimentalWarnings.has(feature)) return;\x0d\n  const msg = `${feature} is an experimental feature. This feature could ` +\x0d\n       'change at any time';\x0d\n  experimentalWarnings.add(feature);\x0d\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\x0d\n}\x0d\n\x0d\nfunction filterDuplicateStrings(items\x2C low) {\x0d\n  const map = new SafeMap();\x0d\n  for (let i = 0; i < items.length; i++) {\x0d\n    const item = items[i];\x0d\n    const key = StringPrototypeToLowerCase(item);\x0d\n    if (low) {\x0d\n      map.set(key\x2C key);\x0d\n    } else {\x0d\n      map.set(key\x2C item);\x0d\n    }\x0d\n  }\x0d\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\x0d\n}\x0d\n\x0d\nfunction cachedResult(fn) {\x0d\n  let result;\x0d\n  return () => {\x0d\n    if (result === undefined)\x0d\n      result = fn();\x0d\n    return ArrayPrototypeSlice(result);\x0d\n  };\x0d\n}\x0d\n\x0d\n// Useful for Wrapping an ES6 Class with a constructor Function that\x0d\n// does not require the new keyword. For instance:\x0d\n//   class A { constructor(x) {this.x = x;}}\x0d\n//   const B = createClassWrapper(A);\x0d\n//   B() instanceof A // true\x0d\n//   B() instanceof B // true\x0d\nfunction createClassWrapper(type) {\x0d\n  function fn(...args) {\x0d\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\x0d\n  }\x0d\n  // Mask the wrapper function name and length values\x0d\n  ObjectDefineProperties(fn\x2C {\x0d\n    name: { value: type.name }\x2C\x0d\n    length: { value: type.length }\x0d\n  });\x0d\n  ObjectSetPrototypeOf(fn\x2C type);\x0d\n  fn.prototype = type.prototype;\x0d\n  return fn;\x0d\n}\x0d\n\x0d\nlet signalsToNamesMapping;\x0d\nfunction getSignalsToNamesMapping() {\x0d\n  if (signalsToNamesMapping !== undefined)\x0d\n    return signalsToNamesMapping;\x0d\n\x0d\n  signalsToNamesMapping = ObjectCreate(null);\x0d\n  for (const key in signals) {\x0d\n    signalsToNamesMapping[signals[key]] = key;\x0d\n  }\x0d\n\x0d\n  return signalsToNamesMapping;\x0d\n}\x0d\n\x0d\nfunction convertToValidSignal(signal) {\x0d\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\x0d\n    return signal;\x0d\n\x0d\n  if (typeof signal === 'string') {\x0d\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\x0d\n    if (signalName) return signalName;\x0d\n  }\x0d\n\x0d\n  throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n}\x0d\n\x0d\nfunction getConstructorOf(obj) {\x0d\n  while (obj) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '') {\x0d\n      return descriptor.value;\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorName(err) {\x0d\n  const entry = uvErrmapGet(err);\x0d\n  return entry ? entry[0] : `Unknown system error ${err}`;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorMap() {\x0d\n  return lazyUv().getErrorMap();\x0d\n}\x0d\n\x0d\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\x0d\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\x0d\n\x0d\nlet validateFunction;\x0d\n\x0d\nfunction promisify(original) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateFunction === undefined)\x0d\n    ({ validateFunction } = require('internal/validators'));\x0d\n\x0d\n  validateFunction(original\x2C 'original');\x0d\n\x0d\n  if (original[kCustomPromisifiedSymbol]) {\x0d\n    const fn = original[kCustomPromisifiedSymbol];\x0d\n\x0d\n    validateFunction(fn\x2C 'util.promisify.custom');\x0d\n\x0d\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // Names to create an object from in case the callback receives multiple\x0d\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\x0d\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\x0d\n\x0d\n  function fn(...args) {\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\x0d\n        if (err) {\x0d\n          return reject(err);\x0d\n        }\x0d\n        if (argumentNames !== undefined && values.length > 1) {\x0d\n          const obj = {};\x0d\n          for (let i = 0; i < argumentNames.length; i++)\x0d\n            obj[argumentNames[i]] = values[i];\x0d\n          resolve(obj);\x0d\n        } else {\x0d\n          resolve(values[0]);\x0d\n        }\x0d\n      });\x0d\n      ReflectApply(original\x2C this\x2C args);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\x0d\n\x0d\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n  });\x0d\n  return ObjectDefineProperties(\x0d\n    fn\x2C\x0d\n    ObjectGetOwnPropertyDescriptors(original)\x0d\n  );\x0d\n}\x0d\n\x0d\npromisify.custom = kCustomPromisifiedSymbol;\x0d\n\x0d\n// The built-in Array#join is slower in v8 6.0\x0d\nfunction join(output\x2C separator) {\x0d\n  let str = '';\x0d\n  if (output.length !== 0) {\x0d\n    const lastIndex = output.length - 1;\x0d\n    for (let i = 0; i < lastIndex; i++) {\x0d\n      // It is faster not to use a template string here\x0d\n      str += output[i];\x0d\n      str += separator;\x0d\n    }\x0d\n    str += output[lastIndex];\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\x0d\n// between 1.5-10x faster than the two-arg version of Array#splice()\x0d\nfunction spliceOne(list\x2C index) {\x0d\n  for (; index + 1 < list.length; index++)\x0d\n    list[index] = list[index + 1];\x0d\n  list.pop();\x0d\n}\x0d\n\x0d\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\x0d\n\x0d\nlet getStructuredStack;\x0d\n\x0d\nfunction isInsideNodeModules() {\x0d\n  if (getStructuredStack === undefined) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    // Use `runInNewContext()` to get something tamper-proof and\x0d\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\x0d\n    // the perf implications should be okay.\x0d\n    getStructuredStack = runInNewContext(`(function() {\x0d\n      try { Error.stackTraceLimit = Infinity; } catch {}\x0d\n      return function structuredStack() {\x0d\n        const e = new Error();\x0d\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\x0d\n        return e.stack;\x0d\n      };\x0d\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\x0d\n  }\x0d\n\x0d\n  const stack = getStructuredStack();\x0d\n\x0d\n  // Iterate over all stack frames and look for the first one not coming\x0d\n  // from inside Node.js itself:\x0d\n  if (ArrayIsArray(stack)) {\x0d\n    for (const frame of stack) {\x0d\n      const filename = frame.getFileName();\x0d\n      // If a filename does not start with / or contain \\\x2C\x0d\n      // it's likely from Node.js core.\x0d\n      if (!RegExpPrototypeTest(/^\\/|\\\\/\x2C filename))\x0d\n        continue;\x0d\n      return RegExpPrototypeTest(kNodeModulesRE\x2C filename);\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction once(callback) {\x0d\n  let called = false;\x0d\n  return function(...args) {\x0d\n    if (called) return;\x0d\n    called = true;\x0d\n    ReflectApply(callback\x2C this\x2C args);\x0d\n  };\x0d\n}\x0d\n\x0d\nlet validateUint32;\x0d\n\x0d\nfunction sleep(msec) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateUint32 === undefined)\x0d\n    ({ validateUint32 } = require('internal/validators'));\x0d\n\x0d\n  validateUint32(msec\x2C 'msec');\x0d\n  _sleep(msec);\x0d\n}\x0d\n\x0d\nfunction createDeferredPromise() {\x0d\n  let resolve;\x0d\n  let reject;\x0d\n  const promise = new Promise((res\x2C rej) => {\x0d\n    resolve = res;\x0d\n    reject = rej;\x0d\n  });\x0d\n\x0d\n  return { promise\x2C resolve\x2C reject };\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\nlet DOMException;\x0d\nconst lazyDOMException = hideStackFrames((message\x2C name) => {\x0d\n  if (DOMException === undefined)\x0d\n    DOMException = internalBinding('messaging').DOMException;\x0d\n  return new DOMException(message\x2C name);\x0d\n});\x0d\n\x0d\nfunction structuredClone(value) {\x0d\n  const {\x0d\n    DefaultSerializer\x2C\x0d\n    DefaultDeserializer\x2C\x0d\n  } = require('v8');\x0d\n  const ser = new DefaultSerializer();\x0d\n  ser._getDataCloneError = hideStackFrames((message) =>\x0d\n    lazyDOMException(message\x2C 'DataCloneError'));\x0d\n  ser.writeValue(value);\x0d\n  const serialized = ser.releaseBuffer();\x0d\n\x0d\n  const des = new DefaultDeserializer(serialized);\x0d\n  return des.readValue();\x0d\n}\x0d\n\x0d\nconst kEnumerableProperty = ObjectCreate(null);\x0d\nkEnumerableProperty.enumerable = true;\x0d\n\x0d\nmodule.exports = {\x0d\n  assertCrypto\x2C\x0d\n  cachedResult\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createClassWrapper\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  decorateErrorStack\x2C\x0d\n  defineOperation\x2C\x0d\n  deprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  exposeInterface\x2C\x0d\n  filterDuplicateStrings\x2C\x0d\n  getConstructorOf\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  isError\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  join\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  once\x2C\x0d\n  promisify\x2C\x0d\n  sleep\x2C\x0d\n  spliceOne\x2C\x0d\n  structuredClone\x2C\x0d\n  toUSVString\x2C\x0d\n  removeColors\x2C\x0d\n\x0d\n  // Symbol used to customize promisify conversion\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n\x0d\n  // Symbol used to provide a custom inspect function for an object as an\x0d\n  // alternative to using 'inspect'\x0d\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\x0d\n\x0d\n  // Used by the buffer module to capture an internal reference to the\x0d\n  // default isEncoding implementation\x2C just in case userland overrides it.\x0d\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\x0d\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x2C\x0d\n\x0d\n  kEnumerableProperty\x2C\x0d\n};\x0d\n
code-source-info,0x24dc49c3406,16,2503,3720,C0O2503C26O2524C31O2536C37O2550C42O2567C44O2577C45O2636C53O2675C61O2697C66O2678C83O2735C87O2764C100O2764C105O2812C106O2812C108O3407C121O3407C126O3448C129O3455C135O3652C141O3678C145O3673C149O3699C151O3717,,
code-creation,Function,11,1380952,0x22e326840c0,1344,deprecate node:internal/util:96:19,0xc194f45aa8,^
code-source-info,0x22e326840c0,16,2503,3720,,,
code-creation,Function,11,1381044,0x22e32684660,664,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x3eae9a8fdc0,^
code-source-info,0x22e32684660,9,10647,11000,,,
code-creation,Function,11,1381124,0x22e32684960,548,internalBinding node:internal/bootstrap/loaders:164:45,0x3eae9a8f840,^
code-source-info,0x22e32684960,9,5278,5523,,,
code-creation,Function,11,1381236,0x22e32684c00,1252,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x3eae9a8fcf0,^
code-source-info,0x22e32684c00,9,9827,10410,,,
code-creation,Eval,10,1381928,0x24dc49c5ad6,5, node:internal/socket_list:1:1,0x24dc49c5980,~
script-source,106,node:internal/socket_list,'use strict';\x0d\n\x0d\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\n// This object keeps track of the sockets that are sent\x0d\nclass SocketListSend extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\x0d\n  }\x0d\n\x0d\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\x0d\n    const self = this;\x0d\n\x0d\n    if (!this.child.connected) return onclose();\x0d\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\x0d\n\x0d\n    function onclose() {\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\x0d\n    }\x0d\n\x0d\n    function onreply(msg) {\x0d\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\x0d\n      self.child.removeListener('disconnect'\x2C onclose);\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n\x0d\n      callback(null\x2C msg);\x0d\n    }\x0d\n\x0d\n    this.child.once('disconnect'\x2C onclose);\x0d\n    this.child.on('internalMessage'\x2C onreply);\x0d\n  }\x0d\n\x0d\n  close(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\x0d\n  }\x0d\n\x0d\n  getConnections(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\x0d\n      if (err) return callback(err);\x0d\n      callback(null\x2C msg.count);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// This object keeps track of the sockets that are received\x0d\nclass SocketListReceive extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n\x0d\n    this.connections = 0;\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n\x0d\n    function onempty(self) {\x0d\n      if (!self.child.connected) return;\x0d\n\x0d\n      self.child._send({\x0d\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\x0d\n        key: self.key\x0d\n      }\x2C undefined\x2C true);\x0d\n    }\x0d\n\x0d\n    this.child.on('internalMessage'\x2C (msg) => {\x0d\n      if (msg.key !== this.key) return;\x0d\n\x0d\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\x0d\n        // Already empty\x0d\n        if (this.connections === 0) return onempty(this);\x0d\n\x0d\n        // Wait for sockets to get closed\x0d\n        this.once('empty'\x2C onempty);\x0d\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\x0d\n        if (!this.child.connected) return;\x0d\n        this.child._send({\x0d\n          cmd: 'NODE_SOCKET_COUNT'\x2C\x0d\n          key: this.key\x2C\x0d\n          count: this.connections\x0d\n        });\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  add(obj) {\x0d\n    this.connections++;\x0d\n\x0d\n    // Notify the previous owner of the socket about its state change\x0d\n    obj.socket.once('close'\x2C () => {\x0d\n      this.connections--;\x0d\n\x0d\n      if (this.connections === 0) this.emit('empty'\x2C this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = { SocketListSend\x2C SocketListReceive };\x0d\n
code-source-info,0x24dc49c5ad6,106,0,2813,C0O0C4O2813,,
code-creation,Function,10,1382755,0x24dc49c6116,126, node:internal/socket_list:1:1,0x24dc49c5a50,~
code-source-info,0x24dc49c6116,106,0,2813,C0O0C8O59C11O59C16O85C21O25C27O117C30O117C35O225C73O1583C101O2756C108O2775C114O2791C120O2771C125O2812,,
code-creation,LazyCompile,10,1383552,0x24dc49c6cb6,14,customPromiseExecFunction node:child_process:230:35,0x22cec15d9b8,~
code-source-info,0x24dc49c6cb6,99,6803,7183,C0O6803C9O6818C13O7180,,
code-creation,LazyCompile,10,1383769,0x24dc49c8cd6,129,_forkChild node:child_process:169:20,0x22cec15d458,~
code-source-info,0x24dc49c8cd6,99,5058,5540,C0O5058C8O5122C19O5131C22O5145C29O5122C35O5156C40O5156C45O5171C50O5171C54O5199C72O5199C77O5199C79O5247C84O5255C97O5255C103O5390C108O5398C121O5398C128O5539,,
tick,0x7ff954e0d604,1386178,1,0x7ff7dd889b60,6,0x7ff7de2559a0,0x24dc49c8cfe,0x22cec15c444,0x22cec146502,0x22cec142065
tick,0x7ff9535c24c8,1398870,1,0x7ff7dd889b60,6,0x7ff7de2559a0,0x24dc49c8cfe,0x22cec15c444,0x22cec146502,0x22cec142065
code-creation,LazyCompile,10,1399906,0x24dc49c96d6,396,setupChannel node:internal/child_process:571:22,0x22cec1636a0,~
code-source-info,0x24dc49c96d
code-creation,LazyCompile,10,1400322,0x24dc49cbeae,72,Control node:internal/child_process:529:14,0x22cec163ed8,~
code-source-info,0x24dc49cbeae,100,14308,14402,C3O14325C11O14325C40O14339C48O14353C52O14369C59O14374C64O14392C71O14401,,
code-creation,LazyCompile,10,1400483,0x24dc49cbfe6,21,EventEmitter node:events:208:22,0xc194f6b1b0,~
code-source-info,0x24dc49cbfe6,23,6474,6524,C0O6486C3O6499C8O6504C13O6504C20O6523,,
code-creation,LazyCompile,10,1400651,0x24dc49cc12e,149,EventEmitter.init node:events:327:29,0xc194f6b5a8,~
code-source-info,0x24dc49cc12e,23,10006,10614,C0O10029C6O10066C13O10078C16O10078C21O10104C25O10074C30O10121C32O10136C37O10136C41O10134C45O10161C46O10179C50O10220C60O10213C64O10255C71O10263C80O10291C85O10312C93O10291C98O10366C100O10371C105O10383C108O10396C113O10383C117O10381C123O10556C125O10561C131O10586C138O10596C140O10595C143O10571C148O10613,,
code-creation,Eval,10,1401317,0x24dc49ccc76,5, node:internal/child_process/serialization:1:1,0x24dc49cc990,~
script-source,107,node:internal/child_process/serialization,'use strict';\x0d\n\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSubarray\x2C\x0d\n} = primordials;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst v8 = require('v8');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst assert = require('internal/assert');\x0d\nconst { streamBaseState\x2C kLastWriteWasAsync } = internalBinding('stream_wrap');\x0d\n\x0d\nconst kMessageBuffer = Symbol('kMessageBuffer');\x0d\nconst kJSONBuffer = Symbol('kJSONBuffer');\x0d\nconst kStringDecoder = Symbol('kStringDecoder');\x0d\n\x0d\n// Extend V8's serializer APIs to give more JSON-like behaviour in\x0d\n// some cases; in particular\x2C for native objects this serializes them the same\x0d\n// way that JSON does rather than throwing an exception.\x0d\nconst kArrayBufferViewTag = 0;\x0d\nconst kNotArrayBufferViewTag = 1;\x0d\nclass ChildProcessSerializer extends v8.DefaultSerializer {\x0d\n  _writeHostObject(object) {\x0d\n    if (isArrayBufferView(object)) {\x0d\n      this.writeUint32(kArrayBufferViewTag);\x0d\n      return super._writeHostObject(object);\x0d\n    }\x0d\n    this.writeUint32(kNotArrayBufferViewTag);\x0d\n    this.writeValue({ ...object });\x0d\n  }\x0d\n}\x0d\n\x0d\nclass ChildProcessDeserializer extends v8.DefaultDeserializer {\x0d\n  _readHostObject() {\x0d\n    const tag = this.readUint32();\x0d\n    if (tag === kArrayBufferViewTag)\x0d\n      return super._readHostObject();\x0d\n\x0d\n    assert(tag === kNotArrayBufferViewTag);\x0d\n    return this.readValue();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Messages are parsed in either of the following formats:\x0d\n// - Newline-delimited JSON\x2C or\x0d\n// - V8-serialized buffers\x2C prefixed with their length as a big endian uint32\x0d\n//   (aka 'advanced')\x0d\nconst advanced = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kMessageBuffer] = Buffer.alloc(0);\x0d\n    channel.buffering = false;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    let messageBuffer = Buffer.concat([channel[kMessageBuffer]\x2C readData]);\x0d\n    while (messageBuffer.length > 4) {\x0d\n      const size = messageBuffer.readUInt32BE();\x0d\n      if (messageBuffer.length < 4 + size) {\x0d\n        break;\x0d\n      }\x0d\n\x0d\n      const deserializer = new ChildProcessDeserializer(\x0d\n        TypedArrayPrototypeSubarray(messageBuffer\x2C 4\x2C 4 + size));\x0d\n      messageBuffer = TypedArrayPrototypeSubarray(messageBuffer\x2C 4 + size);\x0d\n\x0d\n      deserializer.readHeader();\x0d\n      yield deserializer.readValue();\x0d\n    }\x0d\n    channel[kMessageBuffer] = messageBuffer;\x0d\n    channel.buffering = messageBuffer.length > 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const ser = new ChildProcessSerializer();\x0d\n    ser.writeHeader();\x0d\n    ser.writeValue(message);\x0d\n    const serializedMessage = ser.releaseBuffer();\x0d\n    const sizeBuffer = Buffer.allocUnsafe(4);\x0d\n    sizeBuffer.writeUInt32BE(serializedMessage.length);\x0d\n\x0d\n    const buffer = Buffer.concat([\x0d\n      sizeBuffer\x2C\x0d\n      serializedMessage\x2C\x0d\n    ]);\x0d\n    const result = channel.writeBuffer(req\x2C buffer\x2C handle);\x0d\n    // Mirror what stream_base_commons.js does for Buffer retention.\x0d\n    if (streamBaseState[kLastWriteWasAsync])\x0d\n      req.buffer = buffer;\x0d\n    return result;\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nconst json = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kJSONBuffer] = '';\x0d\n    channel[kStringDecoder] = undefined;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    if (channel[kStringDecoder] === undefined)\x0d\n      channel[kStringDecoder] = new StringDecoder('utf8');\x0d\n    const chunks =\x0d\n      StringPrototypeSplit(channel[kStringDecoder].write(readData)\x2C '\\n');\x0d\n    const numCompleteChunks = chunks.length - 1;\x0d\n    // Last line does not have trailing linebreak\x0d\n    const incompleteChunk = chunks[numCompleteChunks];\x0d\n    if (numCompleteChunks === 0) {\x0d\n      channel[kJSONBuffer] += incompleteChunk;\x0d\n    } else {\x0d\n      chunks[0] = channel[kJSONBuffer] + chunks[0];\x0d\n      for (let i = 0; i < numCompleteChunks; i++)\x0d\n        yield JSONParse(chunks[i]);\x0d\n      channel[kJSONBuffer] = incompleteChunk;\x0d\n    }\x0d\n    channel.buffering = channel[kJSONBuffer].length !== 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const string = JSONStringify(message) + '\\n';\x0d\n    return channel.writeUtf8String(req\x2C string\x2C handle);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nmodule.exports = { advanced\x2C json };\x0d\n
code-source-info,0x24dc49ccc76,107,0,4335,C0O0C4O4335,,
code-creation,Function,10,1401797,0x24dc49cd4de,369, node:internal/child_process/serialization:1:1,0x24dc49ccbf0,~
code-source-info,0x24dc49cd4de,107,0,4335,C0O0C56O28C62O42C68O60C74O85C79O96C85O163C88O163C93O152C99O209C102O209C107O191C113O248C116O248C121O294C124O294C129O272C135O342C138O342C142O342C144O419C147O419C152O379C158O396C164O477C167O477C171O477C173O524C176O524C180O524C182O571C185O571C189O571C191O834C192O834C194O869C196O869C202O913C237O873C243O1237C278O1195C280O1695C285O1700C293O1821C301O2538C312O3192C317O3197C325O3312C333O4122C344O4297C351O4316C357O4326C363O4312C368O4334,,
code-creation,LazyCompile,10,1402375,0x24dc49ce17e,23,initMessageChannel node:internal/child_process/serialization:100:21,0x24dc49cced8,~
code-source-info,0x24dc49ce17e,107,3215,3305,C0O3232C2O3240C7O3253C11O3264C13O3272C17O3288C22O3304,,
code-creation,LazyCompile,10,1402600,0x24dc49ce7d6,19,_getMaxListeners node:events:404:26,0xc194f6b778,~
code-source-info,0x24dc49ce7d6,23,12272,12400,C0O12293C6O12327C9O12347C13O12367C14O12383C18O12397,,
code-creation,LazyCompile,10,1402698,0x24dc49ce8ce,5,get node:events:264:16,0xc194f6b398,~
code-source-info,0x24dc49ce8ce,23,8043,8085,C0O8053C4O8080,,
code-creation,LazyCompile,10,1402890,0x24dc49cec2e,322,arrayClone node:events:879:20,0xc194f6c040,~
code-source-info,0x24dc49cec2e,23,26079,26544,C0O26221C42O26244C50O26255C62O26263C71O26268C72O26282C80O26293C92O26301C104O26309C113O26314C114O26328C122O26339C134O26347C146O26355C158O26363C167O26368C168O26382C176O26393C188O26401C200O26409C212O26417C224O26425C233O26430C234O26444C242O26455C254O26463C266O26471C278O26479C290O26487C302O26495C311O26500C312O26509C317O26516C321O26541,,
code-creation,LazyCompile,10,1403172,0x24dc49ceefe,22, node:internal/child_process:706:36,0x24dc49c91f0,~
code-source-info,0x24dc49ceefe,100,20095,20508,C0O20107C5O20115C15O20115C21O20507,,
code-creation,LazyCompile,10,1403455,0x24dc49cf19e,368,nextTick node:internal/process/task_queues:104:18,0x12f5b0daa50,~
script-source,32,node:internal/process/task_queues,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  // For easy access to the nextTick state in the C++ land\x2C\x0d\n  // and to avoid unnecessary calls into JS land.\x0d\n  tickInfo\x2C\x0d\n  // Used to run V8's micro task queue.\x0d\n  runMicrotasks\x2C\x0d\n  setTickCallback\x2C\x0d\n  enqueueMicrotask\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  setHasRejectionToWarn\x2C\x0d\n  hasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x0d\n} = require('internal/process/promises');\x0d\n\x0d\nconst {\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  newAsyncId\x2C\x0d\n  initHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit\x2C\x0d\n  emitBefore\x2C\x0d\n  emitAfter\x2C\x0d\n  emitDestroy\x2C\x0d\n  symbols: { async_id_symbol\x2C trigger_async_id_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst FixedQueue = require('internal/fixed_queue');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { AsyncResource } = require('async_hooks');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasTickScheduled = 0;\x0d\n\x0d\nfunction hasTickScheduled() {\x0d\n  return tickInfo[kHasTickScheduled] === 1;\x0d\n}\x0d\n\x0d\nfunction setHasTickScheduled(value) {\x0d\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nconst queue = new FixedQueue();\x0d\n\x0d\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\x0d\nfunction runNextTicks() {\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    runMicrotasks();\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    return;\x0d\n\x0d\n  processTicksAndRejections();\x0d\n}\x0d\n\x0d\nfunction processTicksAndRejections() {\x0d\n  let tock;\x0d\n  do {\x0d\n    while ((tock = queue.shift()) !== null) {\x0d\n      const asyncId = tock[async_id_symbol];\x0d\n      emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\x0d\n\x0d\n      try {\x0d\n        const callback = tock.callback;\x0d\n        if (tock.args === undefined) {\x0d\n          callback();\x0d\n        } else {\x0d\n          const args = tock.args;\x0d\n          switch (args.length) {\x0d\n            case 1: callback(args[0]); break;\x0d\n            case 2: callback(args[0]\x2C args[1]); break;\x0d\n            case 3: callback(args[0]\x2C args[1]\x2C args[2]); break;\x0d\n            case 4: callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]); break;\x0d\n            default: callback(...args);\x0d\n          }\x0d\n        }\x0d\n      } finally {\x0d\n        if (destroyHooksExist())\x0d\n          emitDestroy(asyncId);\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n    runMicrotasks();\x0d\n  } while (!queue.isEmpty() || processPromiseRejections());\x0d\n  setHasTickScheduled(false);\x0d\n  setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\n// `nextTick()` will not enqueue any callback when the process is about to\x0d\n// exit since the callback would not have a chance to be executed.\x0d\nfunction nextTick(callback) {\x0d\n  validateCallback(callback);\x0d\n\x0d\n  if (process._exiting)\x0d\n    return;\x0d\n\x0d\n  let args;\x0d\n  switch (arguments.length) {\x0d\n    case 1: break;\x0d\n    case 2: args = [arguments[1]]; break;\x0d\n    case 3: args = [arguments[1]\x2C arguments[2]]; break;\x0d\n    case 4: args = [arguments[1]\x2C arguments[2]\x2C arguments[3]]; break;\x0d\n    default:\x0d\n      args = new Array(arguments.length - 1);\x0d\n      for (let i = 1; i < arguments.length; i++)\x0d\n        args[i - 1] = arguments[i];\x0d\n  }\x0d\n\x0d\n  if (queue.isEmpty())\x0d\n    setHasTickScheduled(true);\x0d\n  const asyncId = newAsyncId();\x0d\n  const triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  const tickObject = {\x0d\n    [async_id_symbol]: asyncId\x2C\x0d\n    [trigger_async_id_symbol]: triggerAsyncId\x2C\x0d\n    callback\x2C\x0d\n    args\x0d\n  };\x0d\n  if (initHooksExist())\x0d\n    emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\x0d\n  queue.push(tickObject);\x0d\n}\x0d\n\x0d\nfunction runMicrotask() {\x0d\n  this.runInAsyncScope(() => {\x0d\n    const callback = this.callback;\x0d\n    try {\x0d\n      callback();\x0d\n    } finally {\x0d\n      this.emitDestroy();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\x0d\n\x0d\nfunction queueMicrotask(callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const asyncResource = new AsyncResource(\x0d\n    'Microtask'\x2C\x0d\n    defaultMicrotaskResourceOpts\x0d\n  );\x0d\n  asyncResource.callback = callback;\x0d\n\x0d\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask\x2C asyncResource));\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setupTaskQueue() {\x0d\n    // Sets the per-isolate promise rejection callback\x0d\n    listenForRejections();\x0d\n    // Sets the callback to be run in every tick.\x0d\n    setTickCallback(processTicksAndRejections);\x0d\n    return {\x0d\n      nextTick\x2C\x0d\n      runNextTicks\x0d\n    };\x0d\n  }\x2C\x0d\n  queueMicrotask\x0d\n};\x0d\n
code-source-info,0x24dc49cf19e
code-creation,LazyCompile,10,1404267,0x24dc49cfa0e,21, node:internal/validators:222:42,0x3eae9abd268,~
code-source-info,0x24dc49cfa0e,15,7036,7140,C0O7055C6O7096C13O7102C18O7096C20O7139,,
code-creation,LazyCompile,10,1404409,0x24dc49cfb0e,15,isEmpty node:internal/fixed_queue:95:10,0x12f5b0dfc80,~
script-source,34,node:internal/fixed_queue,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\x0d\nconst kSize = 2048;\x0d\nconst kMask = kSize - 1;\x0d\n\x0d\n// The FixedQueue is implemented as a singly-linked list of fixed-size\x0d\n// circular buffers. It looks something like this:\x0d\n//\x0d\n//  head                                                       tail\x0d\n//    |                                                          |\x0d\n//    v                                                          v\x0d\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\x0d\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |       bottom --> |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |    ...    |               |    ...    |                  |    ...    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |  [empty]  | <-- top       |   item    |                  |   item    |\x0d\n// |  [empty]  |               |   item    |                  |   item    |\x0d\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n//\x0d\n// Or\x2C if there is only one circular buffer\x2C it looks something\x0d\n// like either of these:\x0d\n//\x0d\n//  head   tail                                 head   tail\x0d\n//    |     |                                     |     |\x0d\n//    v     v                                     v     v\x0d\n// +-----------+                               +-----------+\x0d\n// |  [null]   |                               |  [null]   |\x0d\n// +-----------+                               +-----------+\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |   item    | <-- bottom            top --> |  [empty]  |\x0d\n// |   item    |                               |  [empty]  |\x0d\n// |  [empty]  | <-- top            bottom --> |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// +-----------+                               +-----------+\x0d\n//\x0d\n// Adding a value means moving `top` forward by one\x2C removing means\x0d\n// moving `bottom` forward by one. After reaching the end\x2C the queue\x0d\n// wraps around.\x0d\n//\x0d\n// When `top === bottom` the current queue is empty and when\x0d\n// `top + 1 === bottom` it's full. This wastes a single space of storage\x0d\n// but allows much quicker checks.\x0d\n\x0d\nclass FixedCircularBuffer {\x0d\n  constructor() {\x0d\n    this.bottom = 0;\x0d\n    this.top = 0;\x0d\n    this.list = new Array(kSize);\x0d\n    this.next = null;\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.top === this.bottom;\x0d\n  }\x0d\n\x0d\n  isFull() {\x0d\n    return ((this.top + 1) & kMask) === this.bottom;\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    this.list[this.top] = data;\x0d\n    this.top = (this.top + 1) & kMask;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const nextItem = this.list[this.bottom];\x0d\n    if (nextItem === undefined)\x0d\n      return null;\x0d\n    this.list[this.bottom] = undefined;\x0d\n    this.bottom = (this.bottom + 1) & kMask;\x0d\n    return nextItem;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = class FixedQueue {\x0d\n  constructor() {\x0d\n    this.head = this.tail = new FixedCircularBuffer();\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.head.isEmpty();\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    if (this.head.isFull()) {\x0d\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\x0d\n      // and sets it as the new main queue.\x0d\n      this.head = this.head.next = new FixedCircularBuffer();\x0d\n    }\x0d\n    this.head.push(data);\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const tail = this.tail;\x0d\n    const next = tail.shift();\x0d\n    if (tail.isEmpty() && tail.next !== null) {\x0d\n      // If there is another queue\x2C it forms the new tail.\x0d\n      this.tail = tail.next;\x0d\n    }\x0d\n    return next;\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x24dc49cfb0e,34,3731,3773,C0O3753C5O3758C10O3758C14O3768,,
code-creation,LazyCompile,10,1405401,0x24dc49cffc6,13,isEmpty node:internal/fixed_queue:67:10,0x12f5b0dfa10,~
code-source-info,0x24dc49cffc6,34,3150,3197,C0O3172C5O3185C9O3176C12O3192,,
code-creation,LazyCompile,10,1405525,0x24dc49d00b6,25,setHasTickScheduled node:internal/process/task_queues:52:29,0x12f5b0da960,~
code-source-info,0x24dc49d00b6,32,1155,1215,C0O1168C7O1177C12O1198C19O1196C24O1214,,
code-creation,LazyCompile,10,1405713,0x24dc49d01ae,23,newAsyncId node:internal/async_hooks:417:20,0x3eae9ab8838,~
script-source,13,node:internal/async_hooks,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst promiseHooks = require('internal/promise_hooks');\x0d\n\x0d\nconst async_wrap = internalBinding('async_wrap');\x0d\nconst { setCallbackTrampoline } = async_wrap;\x0d\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\x0d\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\x0d\n * hooks for each type.\x0d\n *\x0d\n * async_id_fields is a Float64Array wrapping the double array of\x0d\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\x0d\n * the various asynchronous states of the application. These are:\x0d\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\x0d\n *    current execution stack.\x0d\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\x0d\n *    the resource corresponding to the current execution stack.\x0d\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\x0d\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\x0d\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\x0d\n *    of retrieving the triggerAsyncId value is:\x0d\n *    1. the value passed directly to the constructor\x0d\n *    2. value set in kDefaultTriggerAsyncId\x0d\n *    3. executionAsyncId of the current resource.\x0d\n *\x0d\n * async_ids_stack is a Float64Array that contains part of the async ID\x0d\n * stack. Each pushAsyncContext() call adds two doubles to it\x2C and each\x0d\n * popAsyncContext() call removes two doubles from it.\x0d\n * It has a fixed size\x2C so if that is exceeded\x2C calls to the native\x0d\n * side are used instead in pushAsyncContext() and popAsyncContext().\x0d\n */\x0d\nconst {\x0d\n  async_hook_fields\x2C\x0d\n  async_id_fields\x2C\x0d\n  execution_async_resources\x0d\n} = async_wrap;\x0d\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\x0d\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\x0d\n// responsible for the current execution stack. This is unwound as each resource\x0d\n// exits. In the case of a fatal exception this stack is emptied after calling\x0d\n// each hook's after() callback.\x0d\nconst {\x0d\n  pushAsyncContext: pushAsyncContext_\x2C\x0d\n  popAsyncContext: popAsyncContext_\x2C\x0d\n  executionAsyncResource: executionAsyncResource_\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n} = async_wrap;\x0d\n// Properties in active_hooks are used to keep track of the set of hooks being\x0d\n// executed in case another hook is enabled/disabled. The new set of hooks is\x0d\n// then restored once the active set of hooks is finished executing.\x0d\nconst active_hooks = {\x0d\n  // Array of all AsyncHooks that will be iterated whenever an async event\x0d\n  // fires. Using var instead of (preferably const) in order to assign\x0d\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\x0d\n  // execution.\x0d\n  array: []\x2C\x0d\n  // Use a counter to track nested calls of async hook callbacks and make sure\x0d\n  // the active_hooks.array isn't altered mid execution.\x0d\n  call_depth: 0\x2C\x0d\n  // Use to temporarily store and updated active_hooks.array if the user\x0d\n  // enables or disables a hook while hooks are being processed. If a hook is\x0d\n  // enabled() or disabled() during hook execution then the current set of\x0d\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\x0d\n  // subsequent changes are on the duplicated array. When all hooks have\x0d\n  // completed executing active_hooks.tmp_array is assigned to\x0d\n  // active_hooks.array.\x0d\n  tmp_array: null\x2C\x0d\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\x0d\n  // async_hook_fields can't be reassigned\x2C store each uint32 in an array that\x0d\n  // is written back to async_hook_fields when active_hooks.array is restored.\x0d\n  tmp_fields: null\x0d\n};\x0d\n\x0d\nconst { registerDestroyHook } = async_wrap;\x0d\nconst { enqueueMicrotask } = internalBinding('task_queue');\x0d\nconst { resource_symbol\x2C owner_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Each constant tracks how many callbacks there are for any given step of\x0d\n// async execution. These are tracked so if the user didn't include callbacks\x0d\n// for a given step\x2C that step can bail out early.\x0d\nconst {\x0d\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\x0d\n  kCheck\x2C kExecutionAsyncId\x2C kAsyncIdCounter\x2C kTriggerAsyncId\x2C\x0d\n  kDefaultTriggerAsyncId\x2C kStackLength\x2C kUsesExecutionAsyncResource\x2C\x0d\n} = async_wrap.constants;\x0d\n\x0d\nconst { async_id_symbol\x2C\x0d\n        trigger_async_id_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Lazy load of internal/util/inspect;\x0d\nlet inspect;\x0d\n\x0d\n// Used in AsyncHook and AsyncResource.\x0d\nconst init_symbol = Symbol('init');\x0d\nconst before_symbol = Symbol('before');\x0d\nconst after_symbol = Symbol('after');\x0d\nconst destroy_symbol = Symbol('destroy');\x0d\nconst promise_resolve_symbol = Symbol('promiseResolve');\x0d\nconst emitBeforeNative = emitHookFactory(before_symbol\x2C 'emitBeforeNative');\x0d\nconst emitAfterNative = emitHookFactory(after_symbol\x2C 'emitAfterNative');\x0d\nconst emitDestroyNative = emitHookFactory(destroy_symbol\x2C 'emitDestroyNative');\x0d\nconst emitPromiseResolveNative =\x0d\n    emitHookFactory(promise_resolve_symbol\x2C 'emitPromiseResolveNative');\x0d\n\x0d\nlet domain_cb;\x0d\nfunction useDomainTrampoline(fn) {\x0d\n  domain_cb = fn;\x0d\n}\x0d\n\x0d\nfunction callbackTrampoline(asyncId\x2C resource\x2C cb\x2C ...args) {\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  execution_async_resources[index] = resource;\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n\x0d\n  let result;\x0d\n  if (asyncId === 0 && typeof domain_cb === 'function') {\x0d\n    args.unshift(cb);\x0d\n    result = domain_cb.apply(this\x2C args);\x0d\n  } else {\x0d\n    result = cb.apply(this\x2C args);\x0d\n  }\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  execution_async_resources.pop();\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst topLevelResource = {};\x0d\n\x0d\nfunction executionAsyncResource() {\x0d\n  // Indicate to the native layer that this function is likely to be used\x2C\x0d\n  // in which case it will inform JS about the current async resource via\x0d\n  // the trampoline above.\x0d\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\x0d\n\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  if (index === -1) return topLevelResource;\x0d\n  const resource = execution_async_resources[index] ||\x0d\n    executionAsyncResource_(index);\x0d\n  return lookupPublicResource(resource);\x0d\n}\x0d\n\x0d\nfunction inspectExceptionValue(e) {\x0d\n  inspect ??= require('internal/util/inspect').inspect;\x0d\n  return { message: inspect(e) };\x0d\n}\x0d\n\x0d\n// Used to fatally abort the process if a callback throws.\x0d\nfunction fatalError(e) {\x0d\n  if (typeof e?.stack === 'string') {\x0d\n    process._rawDebug(e.stack);\x0d\n  } else {\x0d\n    const o = inspectExceptionValue(e);\x0d\n    ErrorCaptureStackTrace(o\x2C fatalError);\x0d\n    process._rawDebug(o.stack);\x0d\n  }\x0d\n\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (getOptionValue('--abort-on-uncaught-exception')) {\x0d\n    process.abort();\x0d\n  }\x0d\n  process.exit(1);\x0d\n}\x0d\n\x0d\nfunction lookupPublicResource(resource) {\x0d\n  if (typeof resource !== 'object' || resource === null) return resource;\x0d\n  // TODO(addaleax): Merge this with owner_symbol and use it across all\x0d\n  // AsyncWrap instances.\x0d\n  const publicResource = resource[resource_symbol];\x0d\n  if (publicResource !== undefined)\x0d\n    return publicResource;\x0d\n  return resource;\x0d\n}\x0d\n\x0d\n// Emit From Native //\x0d\n\x0d\n// Used by C++ to call all init() callbacks. Because some state can be setup\x0d\n// from C++ there's no need to perform all the same operations as in\x0d\n// emitInitScript.\x0d\nfunction emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  resource = lookupPublicResource(resource);\x0d\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\x0d\n        active_hooks.array[i][init_symbol](\x0d\n          asyncId\x2C type\x2C triggerAsyncId\x2C\x0d\n          resource\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case active_hooks.tmp_array\x0d\n  // will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Called from native. The asyncId stack handling is taken care of there\x0d\n// before this is called.\x0d\nfunction emitHook(symbol\x2C asyncId) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  // Use a single try/catch for all hook to avoid setting up one per\x0d\n  // iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][symbol] === 'function') {\x0d\n        active_hooks.array[i][symbol](asyncId);\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case\x0d\n  // active_hooks.tmp_array will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitHookFactory(symbol\x2C name) {\x0d\n  const fn = emitHook.bind(undefined\x2C symbol);\x0d\n\x0d\n  // Set the name property of the function as it looks good in the stack trace.\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C {\x0d\n    value: name\x0d\n  });\x0d\n  return fn;\x0d\n}\x0d\n\x0d\n// Manage Active Hooks //\x0d\n\x0d\nfunction getHookArrays() {\x0d\n  if (active_hooks.call_depth === 0)\x0d\n    return [active_hooks.array\x2C async_hook_fields];\x0d\n  // If this hook is being enabled while in the middle of processing the array\x0d\n  // of currently active hooks then duplicate the current set of active hooks\x0d\n  // and store this there. This shouldn't fire until the next time hooks are\x0d\n  // processed.\x0d\n  if (active_hooks.tmp_array === null)\x0d\n    storeActiveHooks();\x0d\n  return [active_hooks.tmp_array\x2C active_hooks.tmp_fields];\x0d\n}\x0d\n\x0d\n\x0d\nfunction storeActiveHooks() {\x0d\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\x0d\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\x0d\n  // 4. So do this the long way.\x0d\n  active_hooks.tmp_fields = [];\x0d\n  copyHooks(active_hooks.tmp_fields\x2C async_hook_fields);\x0d\n}\x0d\n\x0d\nfunction copyHooks(destination\x2C source) {\x0d\n  destination[kInit] = source[kInit];\x0d\n  destination[kBefore] = source[kBefore];\x0d\n  destination[kAfter] = source[kAfter];\x0d\n  destination[kDestroy] = source[kDestroy];\x0d\n  destination[kPromiseResolve] = source[kPromiseResolve];\x0d\n}\x0d\n\x0d\n\x0d\n// Then restore the correct hooks array in case any hooks were added/removed\x0d\n// during hook callback execution.\x0d\nfunction restoreActiveHooks() {\x0d\n  active_hooks.array = active_hooks.tmp_array;\x0d\n  copyHooks(async_hook_fields\x2C active_hooks.tmp_fields);\x0d\n\x0d\n  active_hooks.tmp_array = null;\x0d\n  active_hooks.tmp_fields = null;\x0d\n}\x0d\n\x0d\nfunction trackPromise(promise\x2C parent) {\x0d\n  if (promise[async_id_symbol]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Get trigger id from parent async id before making the async id of the\x0d\n  // child so if a new one must be made it will be lower than the child.\x0d\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\x0d\n    getDefaultTriggerAsyncId();\x0d\n\x0d\n  promise[async_id_symbol] = newAsyncId();\x0d\n  promise[trigger_async_id_symbol] = triggerAsyncId;\x0d\n}\x0d\n\x0d\nfunction promiseInitHook(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerAsyncId = promise[trigger_async_id_symbol];\x0d\n  emitInitScript(asyncId\x2C 'PROMISE'\x2C triggerAsyncId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseInitHookWithDestroyTracking(promise\x2C parent) {\x0d\n  promiseInitHook(promise\x2C parent);\x0d\n  destroyTracking(promise\x2C parent);\x0d\n}\x0d\n\x0d\nconst destroyedSymbol = Symbol('destroyed');\x0d\n\x0d\nfunction destroyTracking(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const destroyed = { destroyed: false };\x0d\n  promise[destroyedSymbol] = destroyed;\x0d\n  registerDestroyHook(promise\x2C asyncId\x2C destroyed);\x0d\n}\x0d\n\x0d\nfunction promiseBeforeHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerId = promise[trigger_async_id_symbol];\x0d\n  emitBeforeScript(asyncId\x2C triggerId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseAfterHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  if (hasHooks(kAfter)) {\x0d\n    emitAfterNative(asyncId);\x0d\n  }\x0d\n  if (asyncId === executionAsyncId()) {\x0d\n    // This condition might not be true if async_hooks was enabled during\x0d\n    // the promise callback execution.\x0d\n    // Popping it off the stack can be skipped in that case\x2C because it is\x0d\n    // known that it would correspond to exactly one call with\x0d\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\x0d\n    popAsyncContext(asyncId);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseResolveHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  emitPromiseResolveNative(asyncId);\x0d\n}\x0d\n\x0d\nlet wantPromiseHook = false;\x0d\nfunction enableHooks() {\x0d\n  async_hook_fields[kCheck] += 1;\x0d\n\x0d\n  setCallbackTrampoline(callbackTrampoline);\x0d\n}\x0d\n\x0d\nlet stopPromiseHook;\x0d\nfunction updatePromiseHookMode() {\x0d\n  wantPromiseHook = true;\x0d\n  let initHook;\x0d\n  if (initHooksExist()) {\x0d\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\x0d\n      promiseInitHook;\x0d\n  } else if (destroyHooksExist()) {\x0d\n    initHook = destroyTracking;\x0d\n  }\x0d\n  if (stopPromiseHook) stopPromiseHook();\x0d\n  stopPromiseHook = promiseHooks.createHook({\x0d\n    init: initHook\x2C\x0d\n    before: promiseBeforeHook\x2C\x0d\n    after: promiseAfterHook\x2C\x0d\n    settled: promiseResolveHooksExist() ? promiseResolveHook : undefined\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction disableHooks() {\x0d\n  async_hook_fields[kCheck] -= 1;\x0d\n\x0d\n  wantPromiseHook = false;\x0d\n\x0d\n  setCallbackTrampoline();\x0d\n\x0d\n  // Delay the call to `disablePromiseHook()` because we might currently be\x0d\n  // between the `before` and `after` calls of a Promise.\x0d\n  enqueueMicrotask(disablePromiseHookIfNecessary);\x0d\n}\x0d\n\x0d\nfunction disablePromiseHookIfNecessary() {\x0d\n  if (!wantPromiseHook && stopPromiseHook) {\x0d\n    stopPromiseHook();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Internal Embedder API //\x0d\n\x0d\n// Increment the internal id counter and return the value. Important that the\x0d\n// counter increment first. Since it's done the same way in\x0d\n// Environment::new_async_uid()\x0d\nfunction newAsyncId() {\x0d\n  return ++async_id_fields[kAsyncIdCounter];\x0d\n}\x0d\n\x0d\nfunction getOrSetAsyncId(object) {\x0d\n  if (ObjectPrototypeHasOwnProperty(object\x2C async_id_symbol)) {\x0d\n    return object[async_id_symbol];\x0d\n  }\x0d\n\x0d\n  return object[async_id_symbol] = newAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\x0d\n// the user to safeguard this call and make sure it's zero'd out when the\x0d\n// constructor is complete.\x0d\nfunction getDefaultTriggerAsyncId() {\x0d\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  // If defaultTriggerAsyncId isn't set\x2C use the executionAsyncId\x0d\n  if (defaultTriggerAsyncId < 0)\x0d\n    return async_id_fields[kExecutionAsyncId];\x0d\n  return defaultTriggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearDefaultTriggerAsyncId() {\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets a default top level trigger ID to be used\x0d\n *\x0d\n * @template {Array<unknown>} T\x0d\n * @template {unknown} R\x0d\n * @param {number} triggerAsyncId\x0d\n * @param { (...T: args) => R } block\x0d\n * @param  {T} args\x0d\n * @returns {R}\x0d\n */\x0d\nfunction defaultTriggerAsyncIdScope(triggerAsyncId\x2C block\x2C ...args) {\x0d\n  if (triggerAsyncId === undefined)\x0d\n    return block.apply(null\x2C args);\x0d\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\x0d\n  // CHECK(triggerAsyncId > 0)\x0d\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\x0d\n\x0d\n  try {\x0d\n    return block.apply(null\x2C args);\x0d\n  } finally {\x0d\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction hasHooks(key) {\x0d\n  return async_hook_fields[key] > 0;\x0d\n}\x0d\n\x0d\nfunction enabledHooksExist() {\x0d\n  return hasHooks(kCheck);\x0d\n}\x0d\n\x0d\nfunction initHooksExist() {\x0d\n  return hasHooks(kInit);\x0d\n}\x0d\n\x0d\nfunction afterHooksExist() {\x0d\n  return hasHooks(kAfter);\x0d\n}\x0d\n\x0d\nfunction destroyHooksExist() {\x0d\n  return hasHooks(kDestroy);\x0d\n}\x0d\n\x0d\nfunction promiseResolveHooksExist() {\x0d\n  return hasHooks(kPromiseResolve);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitInitScript(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  // Short circuit all checks for the common case. Which is that no hooks have\x0d\n  // been set. Do this to remove performance impact for embedders (and core).\x0d\n  if (!hasHooks(kInit))\x0d\n    return;\x0d\n\x0d\n  if (triggerAsyncId === null) {\x0d\n    triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  }\x0d\n\x0d\n  emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitBeforeScript(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\x0d\n\x0d\n  if (hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitAfterScript(asyncId) {\x0d\n  if (hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  popAsyncContext(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitDestroyScript(asyncId) {\x0d\n  // Return early if there are no destroy callbacks\x2C or invalid asyncId.\x0d\n  if (!hasHooks(kDestroy) || asyncId <= 0)\x0d\n    return;\x0d\n  async_wrap.queueDestroyAsyncId(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction hasAsyncIdStack() {\x0d\n  return hasHooks(kStackLength);\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native push_async_ids() call.\x0d\nfunction pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  const offset = async_hook_fields[kStackLength];\x0d\n  execution_async_resources[offset] = resource;\x0d\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\x0d\n    return pushAsyncContext_(asyncId\x2C triggerAsyncId);\x0d\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\x0d\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\x0d\n  async_hook_fields[kStackLength]++;\x0d\n  async_id_fields[kExecutionAsyncId] = asyncId;\x0d\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native pop_async_ids() call.\x0d\nfunction popAsyncContext(asyncId) {\x0d\n  const stackLength = async_hook_fields[kStackLength];\x0d\n  if (stackLength === 0) return false;\x0d\n\x0d\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\x0d\n    // Do the same thing as the native code (i.e. crash hard).\x0d\n    return popAsyncContext_(asyncId);\x0d\n  }\x0d\n\x0d\n  const offset = stackLength - 1;\x0d\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\x0d\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\x0d\n  execution_async_resources.pop();\x0d\n  async_hook_fields[kStackLength] = offset;\x0d\n  return offset > 0;\x0d\n}\x0d\n\x0d\n\x0d\nfunction executionAsyncId() {\x0d\n  return async_id_fields[kExecutionAsyncId];\x0d\n}\x0d\n\x0d\nfunction triggerAsyncId() {\x0d\n  return async_id_fields[kTriggerAsyncId];\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  executionAsyncId\x2C\x0d\n  triggerAsyncId\x2C\x0d\n  // Private API\x0d\n  getHookArrays\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol\x2C trigger_async_id_symbol\x2C\x0d\n    init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\x0d\n    promise_resolve_symbol\x2C owner_symbol\x0d\n  }\x2C\x0d\n  constants: {\x0d\n    kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x0d\n  }\x2C\x0d\n  enableHooks\x2C\x0d\n  disableHooks\x2C\x0d\n  updatePromiseHookMode\x2C\x0d\n  clearDefaultTriggerAsyncId\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n  hasAsyncIdStack\x2C\x0d\n  executionAsyncResource\x2C\x0d\n  // Internal Embedder API\x0d\n  newAsyncId\x2C\x0d\n  getOrSetAsyncId\x2C\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  enabledHooksExist\x2C\x0d\n  initHooksExist\x2C\x0d\n  afterHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit: emitInitScript\x2C\x0d\n  emitBefore: emitBeforeScript\x2C\x0d\n  emitAfter: emitAfterScript\x2C\x0d\n  emitDestroy: emitDestroyScript\x2C\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  registerDestroyHook\x2C\x0d\n  useDomainTrampoline\x2C\x0d\n  nativeHooks: {\x0d\n    init: emitInitNative\x2C\x0d\n    before: emitBeforeNative\x2C\x0d\n    after: emitAfterNative\x2C\x0d\n    destroy: emitDestroyNative\x2C\x0d\n    promise_resolve: emitPromiseResolveNative\x0d\n  }\x2C\x0d\n  asyncWrap: {\x0d\n    Providers: async_wrap.Providers\x2C\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x24dc49d01ae,13,14929,14982,C0O14937C7O14962C16O14977C22O14979,,
code-creation,LazyCompile,10,1408315,0x24dc49d168e,35,getDefaultTriggerAsyncId node:internal/async_hooks:433:34,0x3eae9ab88d8,~
code-source-info,0x24dc49d168e,13,15404,15667,C0O15442C7O15458C9O15457C13O15553C14O15579C19O15589C26O15612C28O15611C31O15631C32O15635C34O15664,,
code-creation,LazyCompile,10,1408498,0x24dc49d179e,13,initHooksExist node:internal/async_hooks:479:24,0x3eae9ab8ac8,~
code-source-info,0x24dc49d179e,13,16671,16705,C0O16679C5O16695C8O16686C12O16702,,
code-creation,LazyCompile,10,1408610,0x24dc49d1886,16,hasHooks node:internal/async_hooks:471:18,0x3eae9ab8a28,~
code-source-info,0x24dc49d1886,13,16531,16579,C0O16542C7O16566C12O16572C15O16576,,
code-creation,LazyCompile,10,1408747,0x24dc49d1996,59,push node:internal/fixed_queue:99:7,0x12f5b0dfcd0,~
code-source-info,0x24dc49d1996,34,3783,4050,C0O3806C5O3811C10O3811C16O3973C23O3989C26O3985C32O3983C38O3966C42O4029C47O4034C52O4034C58O4049,,
code-creation,LazyCompile,10,1408874,0x24dc49d1ade,24,isFull node:internal/fixed_queue:71:9,0x12f5b0dfa60,~
code-source-info,0x24dc49d1ade,34,3209,3272,C0O3233C4O3237C10O3244C12O3242C16O3260C20O3251C23O3267,,
code-creation,LazyCompile,10,1408977,0x24dc49d1bee,37,push node:internal/fixed_queue:75:7,0x12f5b0dfac8,~
code-source-info,0x24dc49d1bee,34,3282,3368,C0O3301C5O3311C12O3316C16O3346C20O3350C26O3357C28O3355C31O3338C36O3367,,
code-creation,LazyCompile,10,1409169,0x24dc49d1d0e,30,onNewListener node:child_process:175:51,0x24dc49c8b90,~
code-source-info,0x24dc49d1d0e,99,5295,5384,C0O5309C2O5318C9O5340C14O5358C19O5366C24O5366C29O5383,,
code-creation,LazyCompile,10,1409509,0x24dc49d205e,455,initializePolicy node:internal/bootstrap/pre_execution:421:26,0x22cec1445e0,~
code-source-info,0x24dc49d205e
code-creation,LazyCompile,10,1409950,0x24dc49d242e,63,initializeClusterIPC node:internal/bootstrap/pre_execution:412:30,0x22cec144590,~
code-source-info,0x24dc49d242e,96,13124,13372,C0O13132C3O13144C10O13148C18O13163C23O13167C29O13206C35O13206C40O13239C45O13239C49O13330C52O13345C62O13371,,
code-creation,LazyCompile,10,1410118,0x24dc49d259e,27,initializeSourceMapsHandlers node:internal/bootstrap/pre_execution:516:38,0x22cec144720,~
code-source-info,0x24dc49d259e,96,17027,17180,C0O17073C6O17073C11O17043C16O17125C21O17154C26O17179,,
code-creation,Eval,10,1410716,0x24dc49d2ed6,5, node:internal/source_map/source_map_cache:1:1,0x24dc49d2b70,~
script-source,108,node:internal/source_map/source_map_cache,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction ObjectGetValueSafe(obj\x2C key) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\x0d\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'value') ? desc.value : undefined;\x0d\n}\x0d\n\x0d\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\x0d\nconst { Buffer } = require('buffer');\x0d\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst fs = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { IterableWeakMap } = require('internal/util/iterable_weak_map');\x0d\nconst {\x0d\n  normalizeReferrerURL\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { validateBoolean } = require('internal/validators');\x0d\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\x0d\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\x0d\n// be purged automatically:\x0d\nconst cjsSourceMapCache = new IterableWeakMap();\x0d\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst esmSourceMapCache = new SafeMap();\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\nlet SourceMap;\x0d\n\x0d\nlet sourceMapsEnabled;\x0d\nfunction getSourceMapsEnabled() {\x0d\n  if (sourceMapsEnabled === undefined) {\x0d\n    setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\x0d\n  }\x0d\n  return sourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction setSourceMapsEnabled(val) {\x0d\n  validateBoolean(val\x2C 'val');\x0d\n\x0d\n  const {\x0d\n    setSourceMapsEnabled\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  setSourceMapsEnabled(val);\x0d\n  if (val) {\x0d\n    const {\x0d\n      prepareStackTrace\x0d\n    } = require('internal/source_map/prepare_stack_trace');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  } else if (sourceMapsEnabled !== undefined) {\x0d\n    // Reset prepare stack trace callback only when disabling source maps.\x0d\n    const {\x0d\n      prepareStackTrace\x2C\x0d\n    } = require('internal/errors');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  }\x0d\n\x0d\n  sourceMapsEnabled = val;\x0d\n}\x0d\n\x0d\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n  try {\x0d\n    filename = normalizeReferrerURL(filename);\x0d\n  } catch (err) {\x0d\n    // This is most likely an [eval]-wrapper\x2C which is currently not\x0d\n    // supported.\x0d\n    debug(err);\x0d\n    return;\x0d\n  }\x0d\n  const match = StringPrototypeMatch(\x0d\n    content\x2C\x0d\n    /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/\x0d\n  );\x0d\n  if (match) {\x0d\n    const data = dataFromUrl(filename\x2C match.groups.sourceMappingURL);\x0d\n    const url = data ? null : match.groups.sourceMappingURL;\x0d\n    if (cjsModuleInstance) {\x0d\n      cjsSourceMapCache.set(cjsModuleInstance\x2C {\x0d\n        filename\x2C\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    } else {\x0d\n      // If there is no cjsModuleInstance assume we are in a\x0d\n      // "modules/esm" context.\x0d\n      esmSourceMapCache.set(filename\x2C {\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\x0d\n  try {\x0d\n    const url = new URL(sourceMappingURL);\x0d\n    switch (url.protocol) {\x0d\n      case 'data:':\x0d\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\x0d\n      default:\x0d\n        debug(`unknown protocol ${url.protocol}`);\x0d\n        return null;\x0d\n    }\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    // If no scheme is present\x2C we assume we are dealing with a file path.\x0d\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\x0d\n    return sourceMapFromFile(mapURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Cache the length of each line in the file that a source map was extracted\x0d\n// from. This allows translation from byte offset V8 coverage reports\x2C\x0d\n// to line/column offset Source Map V3.\x0d\nfunction lineLengths(content) {\x0d\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\x0d\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\x0d\n  // account in coverage calculations.\x0d\n  return ArrayPrototypeMap(StringPrototypeSplit(content\x2C /\\n|\\u2028|\\u2029/)\x2C (line) => {\x0d\n    return line.length;\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction sourceMapFromFile(mapURL) {\x0d\n  try {\x0d\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\x0d\n    const data = JSONParse(content);\x0d\n    return sourcesToAbsolute(mapURL\x2C data);\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// data:[<mediatype>][;base64]\x2C<data> see:\x0d\n// https://tools.ietf.org/html/rfc2397#section-2\x0d\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\x0d\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\x0d\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\x0d\n  const contentType = splitFormat[0];\x0d\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\x0d\n  if (contentType === 'application/json') {\x0d\n    const decodedData = base64 ?\x0d\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\x0d\n    try {\x0d\n      const parsedData = JSONParse(decodedData);\x0d\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\x0d\n    } catch (err) {\x0d\n      debug(err);\x0d\n      return null;\x0d\n    }\x0d\n  } else {\x0d\n    debug(`unknown content-type ${contentType}`);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\x0d\n// the sources are resolved relative to the SourceMap (like resolving script\x0d\n// src in a html document).\x0d\nfunction sourcesToAbsolute(baseURL\x2C data) {\x0d\n  data.sources = data.sources.map((source) => {\x0d\n    source = (data.sourceRoot || '') + source;\x0d\n    return new URL(source\x2C baseURL).href;\x0d\n  });\x0d\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\x0d\n  // be updated to noop.\x0d\n  data.sourceRoot = '';\x0d\n  return data;\x0d\n}\x0d\n\x0d\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\x0d\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\x0d\n// it important that they do not call out to any user-provided code\x2C including\x0d\n// built-in prototypes that might have been tampered with.\x0d\n\x0d\n// Get serialized representation of source-map cache\x2C this is used\x0d\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\x0d\nfunction sourceMapCacheToObject() {\x0d\n  const obj = ObjectCreate(null);\x0d\n\x0d\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\x0d\n    obj[k] = v;\x0d\n  }\x0d\n\x0d\n  appendCJSCache(obj);\x0d\n\x0d\n  if (ObjectKeys(obj).length === 0) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return obj;\x0d\n}\x0d\n\x0d\nfunction appendCJSCache(obj) {\x0d\n  for (const value of cjsSourceMapCache) {\x0d\n    obj[ObjectGetValueSafe(value\x2C 'filename')] = {\x0d\n      lineLengths: ObjectGetValueSafe(value\x2C 'lineLengths')\x2C\x0d\n      data: ObjectGetValueSafe(value\x2C 'data')\x2C\x0d\n      url: ObjectGetValueSafe(value\x2C 'url')\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction findSourceMap(sourceURL) {\x0d\n  if (!RegExpPrototypeTest(/^\\w+:\\/\\//\x2C sourceURL)) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  if (!SourceMap) {\x0d\n    SourceMap = require('internal/source_map/source_map').SourceMap;\x0d\n  }\x0d\n  let sourceMap = esmSourceMapCache.get(sourceURL);\x0d\n  if (sourceMap === undefined) {\x0d\n    for (const value of cjsSourceMapCache) {\x0d\n      const filename = ObjectGetValueSafe(value\x2C 'filename');\x0d\n      if (sourceURL === filename) {\x0d\n        sourceMap = {\x0d\n          data: ObjectGetValueSafe(value\x2C 'data')\x0d\n        };\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (sourceMap && sourceMap.data) {\x0d\n    return new SourceMap(sourceMap.data);\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  findSourceMap\x2C\x0d\n  getSourceMapsEnabled\x2C\x0d\n  setSourceMapsEnabled\x2C\x0d\n  maybeCacheSourceMap\x2C\x0d\n  sourceMapCacheToObject\x2C\x0d\n};\x0d\n
code-source-info,0x24dc49d2ed6,108,0,7881,C0O0C4O7881,,
code-creation,Function,10,1412240,0x24dc49d354e,435, node:internal/source_map/source_map_cache:1:1,0x24dc49d2e50,~
code-source-info,0x24dc49d354e,108,0,7881,C0O0C152O28C158O50C164O64C170O81C176O96C182O131C188O165C194O189C199O201C205O226C211O547C217O547C222O536C228O579C234O579C239O612C252O613C258O579C260O678C266O678C270O678C272O721C278O721C283O702C289O779C295O779C300O759C305O862C311O862C316O835C322O932C328O932C333O912C339O1172C341O1172C346O1172C348O1301C350O1301C355O1301C357O1363C363O1363C368O1325C374O1340C380O1355C386O1393C387O1393C389O1411C390O1411C392O7738C399O7760C405O7778C411O7803C417O7828C423O7852C429O7753C434O7880,,
tick,0x7ff7de2b11ca,1412946,0,0x0,0,0x22e326848e5,0x24dc49d3675,0x22e32684f03,0x22e326848e5,0x24dc49d25a4,0x22cec146514,0x22cec142065
code-creation,Eval,10,1413268,0x24dc49d458e,5, node:internal/util/iterable_weak_map:1:1,0x24dc49d4340,~
script-source,109,node:internal/util/iterable_weak_map,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectFreeze\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SymbolIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\n// This class is modified from the example code in the WeakRefs specification:\x0d\n// https://github.com/tc39/proposal-weakrefs\x0d\n// Licensed under ECMA's MIT-style license\x2C see:\x0d\n// https://github.com/tc39/ecma262/blob/HEAD/LICENSE.md\x0d\nclass IterableWeakMap {\x0d\n  #weakMap = new SafeWeakMap();\x0d\n  #refSet = new SafeSet();\x0d\n  #finalizationGroup = new SafeFinalizationRegistry(cleanup);\x0d\n\x0d\n  set(key\x2C value) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (entry) {\x0d\n      // If there's already an entry for the object represented by "key"\x2C\x0d\n      // the value can be updated without creating a new WeakRef:\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref: entry.ref });\x0d\n    } else {\x0d\n      const ref = new SafeWeakRef(key);\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref });\x0d\n      this.#refSet.add(ref);\x0d\n      this.#finalizationGroup.register(key\x2C {\x0d\n        set: this.#refSet\x2C\x0d\n        ref\x0d\n      }\x2C ref);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get(key) {\x0d\n    return this.#weakMap.get(key)?.value;\x0d\n  }\x0d\n\x0d\n  has(key) {\x0d\n    return this.#weakMap.has(key);\x0d\n  }\x0d\n\x0d\n  delete(key) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (!entry) {\x0d\n      return false;\x0d\n    }\x0d\n    this.#weakMap.delete(key);\x0d\n    this.#refSet.delete(entry.ref);\x0d\n    this.#finalizationGroup.unregister(entry.ref);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  [SymbolIterator]() {\x0d\n    const iterator = this.#refSet[SymbolIterator]();\x0d\n\x0d\n    const next = () => {\x0d\n      const result = iterator.next();\x0d\n      if (result.done) return result;\x0d\n      const key = result.value.deref();\x0d\n      if (key == null) return next();\x0d\n      const { value } = this.#weakMap.get(key);\x0d\n      return { done: false\x2C value };\x0d\n    };\x0d\n\x0d\n    return {\x0d\n      [SymbolIterator]() { return this; }\x2C\x0d\n      next\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction cleanup({ set\x2C ref }) {\x0d\n  set.delete(ref);\x0d\n}\x0d\n\x0d\nObjectFreeze(IterableWeakMap.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  IterableWeakMap\x2C\x0d\n};\x0d\n
code-source-info,0x24dc49d458e,109,0,2042,C0O0C4O2042,,
code-creation,Function,10,1413867,0x24dc49d4cee,196, node:internal/util/iterable_weak_map:1:1,0x24dc49d4508,~
code-source-info,0x24dc49d4cee,109,0,2042,C0O0C26O28C31O45C37O74C43O86C49O102C55O118C134O1448C168O1983C173O1954C177O1998C184O2020C190O2013C195O2041,,
code-creation,Function,10,1413982,0x24dc49d4e6e,75,<instance_members_initializer> node:internal/util/iterable_weak_map:17:3,0x24dc49d4818,~
code-source-info,0x24dc49d4e6e,109,415,534,C3O426C10O426C27O458C34O458C48O497C62O497C74O534,,
code-creation,Eval,10,1414881,0x24dc49d5aa6,5, node:internal/modules/cjs/helpers:1:1,0x24dc49d57f0,~
script-source,110,node:internal/modules/cjs/helpers,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x0d\n} = require('internal/errors').codes;\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\n\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst path = require('path');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\n// TODO: Use this set when resolving pkg#exports conditions in loader.js.\x0d\nconst cjsConditions = new SafeSet([\x0d\n  'require'\x2C\x0d\n  'node'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nfunction loadNativeModule(filename\x2C request) {\x0d\n  const mod = NativeModule.map.get(filename);\x0d\n  if (mod?.canBeRequiredByUsers) {\x0d\n    debug('load native module %s'\x2C request);\x0d\n    // compileForPublicLoader() throws if mod.canBeRequiredByUsers is false:\x0d\n    mod.compileForPublicLoader();\x0d\n    return mod;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Invoke with makeRequireFunction(module) where |module| is the Module object\x0d\n// to use as the context for the require() function.\x0d\n// Use redirects to set up a mapping from a policy and restrict dependencies\x0d\nconst urlToFileCache = new SafeMap();\x0d\nfunction makeRequireFunction(mod\x2C redirects) {\x0d\n  const Module = mod.constructor;\x0d\n\x0d\n  let require;\x0d\n  if (redirects) {\x0d\n    const id = mod.filename || mod.id;\x0d\n    const conditions = cjsConditions;\x0d\n    const { resolve\x2C reaction } = redirects;\x0d\n    require = function require(specifier) {\x0d\n      let missing = true;\x0d\n      const destination = resolve(specifier\x2C conditions);\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        if (destination.protocol === 'node:') {\x0d\n          const specifier = destination.pathname;\x0d\n          const mod = loadNativeModule(specifier\x2C href);\x0d\n          if (mod && mod.canBeRequiredByUsers) {\x0d\n            return mod.exports;\x0d\n          }\x0d\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\x0d\n        } else if (destination.protocol === 'file:') {\x0d\n          let filepath;\x0d\n          if (urlToFileCache.has(href)) {\x0d\n            filepath = urlToFileCache.get(href);\x0d\n          } else {\x0d\n            filepath = fileURLToPath(destination);\x0d\n            urlToFileCache.set(href\x2C filepath);\x0d\n          }\x0d\n          return mod.require(filepath);\x0d\n        }\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          id\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\x0d\n        ));\x0d\n      }\x0d\n      return mod.require(specifier);\x0d\n    };\x0d\n  } else {\x0d\n    require = function require(path) {\x0d\n      return mod.require(path);\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function resolve(request\x2C options) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\x0d\n  }\x0d\n\x0d\n  require.resolve = resolve;\x0d\n\x0d\n  function paths(request) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveLookupPaths(request\x2C mod);\x0d\n  }\x0d\n\x0d\n  resolve.paths = paths;\x0d\n\x0d\n  require.main = process.mainModule;\x0d\n\x0d\n  // Enable support to add extra extension types.\x0d\n  require.extensions = Module._extensions;\x0d\n\x0d\n  require.cache = Module._cache;\x0d\n\x0d\n  return require;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\x0d\n * because the buffer-to-string conversion in `fs.readFileSync()`\x0d\n * translates it to FEFF\x2C the UTF-16 BOM.\x0d\n */\x0d\nfunction stripBOM(content) {\x0d\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\x0d\n    content = StringPrototypeSlice(content\x2C 1);\x0d\n  }\x0d\n  return content;\x0d\n}\x0d\n\x0d\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\x0d\n  // Make built-in modules available directly (loaded lazily).\x0d\n  const Module = require('internal/modules/cjs/loader').Module;\x0d\n  const { builtinModules } = Module;\x0d\n\x0d\n  // To require built-in modules in user-land and ignore modules whose\x0d\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\x0d\n  // use `require()` directly.\x0d\n  const dummyModule = new Module(dummyModuleName);\x0d\n\x0d\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\x0d\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\x0d\n    // 'fs/promises') or ones that are already defined.\x0d\n    if (StringPrototypeStartsWith(name\x2C '_') ||\x0d\n        StringPrototypeIncludes(name\x2C '/') ||\x0d\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\x0d\n      return;\x0d\n    }\x0d\n    // Goals of this mechanism are:\x0d\n    // - Lazy loading of built-in modules\x0d\n    // - Having all built-in modules available as non-enumerable properties\x0d\n    // - Allowing the user to re-assign these variables as if there were no\x0d\n    //   pre-existing globals with the same name.\x0d\n\x0d\n    const setReal = (val) => {\x0d\n      // Deleting the property before re-assigning it disables the\x0d\n      // getter/setter mechanism.\x0d\n      delete object[name];\x0d\n      object[name] = val;\x0d\n    };\x0d\n\x0d\n    ObjectDefineProperty(object\x2C name\x2C {\x0d\n      get: () => {\x0d\n        const lib = dummyModule.require(name);\x0d\n\x0d\n        // Disable the current getter/setter and set up a new\x0d\n        // non-enumerable property.\x0d\n        delete object[name];\x0d\n        ObjectDefineProperty(object\x2C name\x2C {\x0d\n          get: () => lib\x2C\x0d\n          set: setReal\x2C\x0d\n          configurable: true\x2C\x0d\n          enumerable: false\x0d\n        });\x0d\n\x0d\n        return lib;\x0d\n      }\x2C\x0d\n      set: setReal\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} referrer\x0d\n * @returns {string}\x0d\n */\x0d\nfunction normalizeReferrerURL(referrer) {\x0d\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\x0d\n    return pathToFileURL(referrer).href;\x0d\n  }\x0d\n  return new URL(referrer).href;\x0d\n}\x0d\n\x0d\n// For error messages only - used to check if ESM syntax is in use.\x0d\nfunction hasEsmSyntax(code) {\x0d\n  debug('Checking for ESM syntax');\x0d\n  const parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\x0d\n  let root;\x0d\n  try {\x0d\n    root = parser.parse(code\x2C { sourceType: 'module'\x2C ecmaVersion: 'latest' });\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return ArrayPrototypeSome(root.body\x2C (stmt) =>\x0d\n    stmt.type === 'ExportDefaultDeclaration' ||\x0d\n    stmt.type === 'ExportNamedDeclaration' ||\x0d\n    stmt.type === 'ImportDeclaration' ||\x0d\n    stmt.type === 'ExportAllDeclaration');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addBuiltinLibsToObject\x2C\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n};\x0d\n
code-source-info,0x24dc49d5aa6,110,0,7046,C0O0C4O7046,,
code-creation,Function,10,1415925,0x24dc49d6026,536, node:internal/modules/cjs/helpers:1:1,0x24dc49d5a20,~
code-source-info,0x24dc49d6026,110,0,7046,C0O0C104O28C110O54C116O77C122O100C128O125C134O159C139O171C144O183C150O213C156O241C162O266C168O391C174O391C179O417C184O323C190O359C196O451C202O451C207O434C213O520C219O520C224O501C230O566C236O566C240O566C242O630C248O630C253O592C259O607C265O622C271O685C277O685C282O666C287O738C290O738C295O785C301O785C306O818C319O819C325O785C327O888C330O888C335O944C346O1077C353O1122C354O1122C410O1145C465O1077C470O1077C472O1721C474O1721C479O1721C481O6877C488O6899C494O6926C500O6944C506O6961C512O6982C518O7006C524O7031C530O6892C535O7045,,
code-creation,LazyCompile,10,1416568,0x24dc49d6c8e,27,SafeSet node:internal/per_context/primordials:373:16,0x3eae9a8a230,~
script-source,6,node:internal/per_context/primordials,'use strict';\x0d\n\x0d\n/* eslint-disable node-core/prefer-primordials */\x0d\n\x0d\n// This file subclasses and stores the JS builtins that come from the VM\x0d\n// so that Node.js's builtin modules do not need to later look these up from\x0d\n// the global proxy\x2C which can be mutated by users.\x0d\n\x0d\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\x0d\n// benchmark all changes made in performance-sensitive areas of the codebase.\x0d\n// See: https://github.com/nodejs/node/pull/38248\x0d\n\x0d\nconst {\x0d\n  defineProperty: ReflectDefineProperty\x2C\x0d\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ownKeys: ReflectOwnKeys\x2C\x0d\n} = Reflect;\x0d\n\x0d\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\x0d\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.call` after it may have been mutated by users.\x0d\nconst { apply\x2C bind\x2C call } = Function.prototype;\x0d\nconst uncurryThis = bind.bind(call);\x0d\nprimordials.uncurryThis = uncurryThis;\x0d\n\x0d\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\x0d\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.apply` after it may have been mutated by users.\x0d\nconst applyBind = bind.bind(apply);\x0d\nprimordials.applyBind = applyBind;\x0d\n\x0d\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\x0d\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\x0d\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\x0d\n// destructuring.\x0d\nconst varargsMethods = [\x0d\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\x0d\n  // on its own for arrays and array-likes with a truthy\x0d\n  // @@isConcatSpreadable symbol property.\x0d\n  'ArrayOf'\x2C\x0d\n  'ArrayPrototypePush'\x2C\x0d\n  'ArrayPrototypeUnshift'\x2C\x0d\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\x0d\n  // and 'FunctionPrototypeApply'.\x0d\n  'MathHypot'\x2C\x0d\n  'MathMax'\x2C\x0d\n  'MathMin'\x2C\x0d\n  'StringPrototypeConcat'\x2C\x0d\n  'TypedArrayOf'\x2C\x0d\n];\x0d\n\x0d\nfunction getNewKey(key) {\x0d\n  return typeof key === 'symbol' ?\x0d\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\x0d\n    `${key[0].toUpperCase()}${key.slice(1)}`;\x0d\n}\x0d\n\x0d\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\x0d\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\x0d\n    value: uncurryThis(get)\x2C\x0d\n    enumerable\x0d\n  });\x0d\n  if (set !== undefined) {\x0d\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\x0d\n      value: uncurryThis(set)\x2C\x0d\n      enumerable\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          // `src` is bound as the `this` so that the static `this` points\x0d\n          // to the object it was defined on\x2C\x0d\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\x0d\n          value: applyBind(desc.value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = value.bind(src);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPrototype(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = uncurryThis(value);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create copies of configurable value properties of the global object\x0d\n[\x0d\n  'Proxy'\x2C\x0d\n  'globalThis'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  primordials[name] = globalThis[name];\x0d\n});\x0d\n\x0d\n// Create copies of URI handling functions\x0d\n[\x0d\n  decodeURI\x2C\x0d\n  decodeURIComponent\x2C\x0d\n  encodeURI\x2C\x0d\n  encodeURIComponent\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of legacy functions\x0d\n[\x0d\n  escape\x2C\x0d\n  eval\x2C\x0d\n  unescape\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of the namespace objects\x0d\n[\x0d\n  'JSON'\x2C\x0d\n  'Math'\x2C\x0d\n  'Proxy'\x2C\x0d\n  'Reflect'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  copyPropsRenamed(globalThis[name]\x2C primordials\x2C name);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects\x0d\n[\x0d\n  'AggregateError'\x2C\x0d\n  'Array'\x2C\x0d\n  'ArrayBuffer'\x2C\x0d\n  'BigInt'\x2C\x0d\n  'BigInt64Array'\x2C\x0d\n  'BigUint64Array'\x2C\x0d\n  'Boolean'\x2C\x0d\n  'DataView'\x2C\x0d\n  'Date'\x2C\x0d\n  'Error'\x2C\x0d\n  'EvalError'\x2C\x0d\n  'FinalizationRegistry'\x2C\x0d\n  'Float32Array'\x2C\x0d\n  'Float64Array'\x2C\x0d\n  'Function'\x2C\x0d\n  'Int16Array'\x2C\x0d\n  'Int32Array'\x2C\x0d\n  'Int8Array'\x2C\x0d\n  'Map'\x2C\x0d\n  'Number'\x2C\x0d\n  'Object'\x2C\x0d\n  'RangeError'\x2C\x0d\n  'ReferenceError'\x2C\x0d\n  'RegExp'\x2C\x0d\n  'Set'\x2C\x0d\n  'String'\x2C\x0d\n  'Symbol'\x2C\x0d\n  'SyntaxError'\x2C\x0d\n  'TypeError'\x2C\x0d\n  'URIError'\x2C\x0d\n  'Uint16Array'\x2C\x0d\n  'Uint32Array'\x2C\x0d\n  'Uint8Array'\x2C\x0d\n  'Uint8ClampedArray'\x2C\x0d\n  'WeakMap'\x2C\x0d\n  'WeakRef'\x2C\x0d\n  'WeakSet'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamed(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects that require a valid `this` to call\x0d\n// static methods.\x0d\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\x0d\n[\x0d\n  'Promise'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of abstract intrinsic objects that are not directly exposed\x0d\n// on the global object.\x0d\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\x0d\n[\x0d\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\x0d\n  { name: 'ArrayIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n  { name: 'StringIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n].forEach(({ name\x2C original }) => {\x0d\n  primordials[name] = original;\x0d\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\x0d\n  // as they need a subclass constructor as the receiver:\x0d\n  copyPrototype(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n/* eslint-enable node-core/prefer-primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  FinalizationRegistry\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Map\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  Set\x2C\x0d\n  SymbolIterator\x2C\x0d\n  WeakMap\x2C\x0d\n  WeakRef\x2C\x0d\n  WeakSet\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Because these functions are used by `makeSafe`\x2C which is exposed\x0d\n// on the `primordials` object\x2C it's important to use const references\x0d\n// to the primordials that they use:\x0d\nconst createSafeIterator = (factory\x2C next) => {\x0d\n  class SafeIterator {\x0d\n    constructor(iterable) {\x0d\n      this._iterator = factory(iterable);\x0d\n    }\x0d\n    next() {\x0d\n      return next(this._iterator);\x0d\n    }\x0d\n    [SymbolIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x0d\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\x0d\n  ObjectFreeze(SafeIterator.prototype);\x0d\n  ObjectFreeze(SafeIterator);\x0d\n  return SafeIterator;\x0d\n};\x0d\n\x0d\nprimordials.SafeArrayIterator = createSafeIterator(\x0d\n  primordials.ArrayPrototypeSymbolIterator\x2C\x0d\n  primordials.ArrayIteratorPrototypeNext\x0d\n);\x0d\nprimordials.SafeStringIterator = createSafeIterator(\x0d\n  primordials.StringPrototypeSymbolIterator\x2C\x0d\n  primordials.StringIteratorPrototypeNext\x0d\n);\x0d\n\x0d\nconst copyProps = (src\x2C dest) => {\x0d\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\x0d\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\x0d\n      ReflectDefineProperty(\x0d\n        dest\x2C\x0d\n        key\x2C\x0d\n        ReflectGetOwnPropertyDescriptor(src\x2C key));\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n/**\x0d\n * @type {typeof primordials.makeSafe}\x0d\n */\x0d\nconst makeSafe = (unsafe\x2C safe) => {\x0d\n  if (SymbolIterator in unsafe.prototype) {\x0d\n    const dummy = new unsafe();\x0d\n    let next; // We can reuse the same `next` method.\x0d\n\x0d\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\x0d\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\x0d\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\x0d\n        if (\x0d\n          typeof desc.value === 'function' &&\x0d\n          desc.value.length === 0 &&\x0d\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\x0d\n        ) {\x0d\n          const createIterator = uncurryThis(desc.value);\x0d\n          next ??= uncurryThis(createIterator(dummy).next);\x0d\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\x0d\n          desc.value = function() {\x0d\n            return new SafeIterator(this);\x0d\n          };\x0d\n        }\x0d\n        ReflectDefineProperty(safe.prototype\x2C key\x2C desc);\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    copyProps(unsafe.prototype\x2C safe.prototype);\x0d\n  }\x0d\n  copyProps(unsafe\x2C safe);\x0d\n\x0d\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\x0d\n  ObjectFreeze(safe.prototype);\x0d\n  ObjectFreeze(safe);\x0d\n  return safe;\x0d\n};\x0d\nprimordials.makeSafe = makeSafe;\x0d\n\x0d\n// Subclass the constructors because we need to use their prototype\x0d\n// methods later.\x0d\n// Defining the `constructor` is necessary here to avoid the default\x0d\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\x0d\nprimordials.SafeMap = makeSafe(\x0d\n  Map\x2C\x0d\n  class SafeMap extends Map {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakMap = makeSafe(\x0d\n  WeakMap\x2C\x0d\n  class SafeWeakMap extends WeakMap {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeSet = makeSafe(\x0d\n  Set\x2C\x0d\n  class SafeSet extends Set {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakSet = makeSafe(\x0d\n  WeakSet\x2C\x0d\n  class SafeWeakSet extends WeakSet {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeFinalizationRegistry = makeSafe(\x0d\n  FinalizationRegistry\x2C\x0d\n  class SafeFinalizationRegistry extends FinalizationRegistry {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(cleanupCallback) { super(cleanupCallback); }\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakRef = makeSafe(\x0d\n  WeakRef\x2C\x0d\n  class SafeWeakRef extends WeakRef {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(target) { super(target); }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst SafePromise = makeSafe(\x0d\n  Promise\x2C\x0d\n  class SafePromise extends Promise {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(executor) { super(executor); }\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.PromisePrototypeCatch = (thisPromise\x2C onRejected) =>\x0d\n  PromisePrototypeThen(thisPromise\x2C undefined\x2C onRejected);\x0d\n\x0d\n/**\x0d\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\x0d\n * rejected). The resolved value cannot be modified from the callback.\x0d\n * Prefer using async functions when possible.\x0d\n * @param {Promise<any>} thisPromise\x0d\n * @param {() => void) | undefined | null} onFinally The callback to execute\x0d\n *        when the Promise is settled (fulfilled or rejected).\x0d\n * @returns {Promise} A Promise for the completion of the callback.\x0d\n */\x0d\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\x0d\n      .finally(onFinally)\x0d\n      .then(a\x2C b)\x0d\n  );\x0d\n\x0d\nprimordials.AsyncIteratorPrototype =\x0d\n  primordials.ReflectGetPrototypeOf(\x0d\n    primordials.ReflectGetPrototypeOf(\x0d\n      async function* () {}).prototype);\x0d\n\x0d\nObjectSetPrototypeOf(primordials\x2C null);\x0d\nObjectFreeze(primordials);\x0d\n
code-source-info,0x24dc49d6c8e,6,11034,11051,C3O11040C7O11046C11O11040C26O11050,,
code-creation,LazyCompile,10,1418615,0x24dc49d7b16,27,SafeMap node:internal/per_context/primordials:360:16,0x3eae9a8a0a8,~
code-source-info,0x24dc49d7b16,6,10694,10711,C3O10700C7O10706C11O10700C26O10710,,
code-creation,LazyCompile,10,1418859,0x24dc49d7c0e,16,IterableWeakMap node:internal/util/iterable_weak_map:16:1,0x24dc49d4610,~
code-source-info,0x24dc49d7c0e,109,388,388,C0O388C15O388,,
code-creation,LazyCompile,10,1418963,0x24dc49d7f96,27,SafeWeakMap node:internal/per_context/primordials:366:16,0x3eae9a8a168,~
code-source-info,0x24dc49d7f96,6,10871,10888,C3O10877C7O10883C11O10877C26O10887,,
code-creation,LazyCompile,10,1419066,0x24dc49d809e,27,SafeFinalizationRegistry node:internal/per_context/primordials:387:16,0x3eae9a8a3b8,~
code-source-info,0x24dc49d809e,6,11498,11543,C3O11518C7O11524C11O11518C26O11542,,
code-creation,LazyCompile,10,1419488,0x24dc49d891e,492,initializeDeprecations node:internal/bootstrap/pre_execution:306:32,0x22cec1444b0,~
code-source-info,0x24dc49d891e
code-creation,LazyCompile,10,1419945,0x24dc49d8ec6,53,initializeWASI node:internal/bootstrap/pre_execution:470:24,0x22cec144630,~
code-source-info,0x24dc49d8ec6,96,15273,15484,C0O15306C6O15306C11O15289C16O15373C21O15377C29O15377C35O15393C37O15425C43O15425C47O15418C52O15483,,
code-creation,LazyCompile,10,1420157,0x24dc49d90c6,66,initializeCJSLoader node:internal/bootstrap/pre_execution:477:29,0x22cec144680,~
code-source-info,0x24dc49d90c6,96,15516,15839,C0O15542C6O15542C11O15585C16O15590C20O15610C26O15649C31O15656C36O15656C40O15755C51O15777C56O15813C60O15770C65O15838,,
code-creation,Eval,10,1422902,0x24dc49db016,5, node:internal/modules/cjs/loader:1:1,0x24dc49da730,~
script-source,111,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypeUnshiftApply\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototype\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Proxy\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectSet\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Map used to store CJS parsing data.\x0d\nconst cjsParseCache = new SafeWeakMap();\x0d\n\x0d\n// Set first due to cycle with ESM loader functions.\x0d\nmodule.exports = {\x0d\n  wrapSafe\x2C Module\x2C toRealPath\x2C readPackageScope\x2C cjsParseCache\x2C\x0d\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\x0d\n};\x0d\n\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  maybeCacheSourceMap\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C isURLInstance } = require('internal/url');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst vm = require('vm');\x0d\nconst assert = require('internal/assert');\x0d\nconst fs = require('fs');\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst path = require('path');\x0d\nconst { sep } = path;\x0d\nconst { internalModuleStat } = internalBinding('fs');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst {\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\n// Whether any user-provided CJS modules had been loaded (executed).\x0d\n// Used for internal assertions.\x0d\nlet hasLoadedAnyUserCJSModule = false;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n    ERR_REQUIRE_ESM\x2C\x0d\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  }\x2C\x0d\n  setArrowMessage\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x0d\n} = require('internal/constants');\x0d\n\x0d\nconst {\x0d\n  isProxy\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { enrichCJSError } = require('internal/modules/esm/translators');\x0d\nconst { kEvaluated } = internalBinding('module_wrap');\x0d\nconst {\x0d\n  encodedSepRegEx\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n} = require('internal/modules/esm/resolve');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst relativeResolveCache = ObjectCreate(null);\x0d\n\x0d\nlet requireDepth = 0;\x0d\nlet statCache = null;\x0d\nlet isPreloading = false;\x0d\n\x0d\nfunction stat(filename) {\x0d\n  filename = path.toNamespacedPath(filename);\x0d\n  if (statCache !== null) {\x0d\n    const result = statCache.get(filename);\x0d\n    if (result !== undefined) return result;\x0d\n  }\x0d\n  const result = internalModuleStat(filename);\x0d\n  if (statCache !== null && result >= 0) {\x0d\n    // Only set cache when `internalModuleStat(filename)` succeeds.\x0d\n    statCache.set(filename\x2C result);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction updateChildren(parent\x2C child\x2C scan) {\x0d\n  const children = parent?.children;\x0d\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child)))\x0d\n    ArrayPrototypePush(children\x2C child);\x0d\n}\x0d\n\x0d\nconst moduleParentCache = new SafeWeakMap();\x0d\nfunction Module(id = ''\x2C parent) {\x0d\n  this.id = id;\x0d\n  this.path = path.dirname(id);\x0d\n  this.exports = {};\x0d\n  moduleParentCache.set(this\x2C parent);\x0d\n  updateChildren(parent\x2C this\x2C false);\x0d\n  this.filename = null;\x0d\n  this.loaded = false;\x0d\n  this.children = [];\x0d\n}\x0d\n\x0d\nconst builtinModules = [];\x0d\nfor (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n  if (mod.canBeRequiredByUsers) {\x0d\n    ArrayPrototypePush(builtinModules\x2C id);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectFreeze(builtinModules);\x0d\nModule.builtinModules = builtinModules;\x0d\n\x0d\nModule._cache = ObjectCreate(null);\x0d\nModule._pathCache = ObjectCreate(null);\x0d\nModule._extensions = ObjectCreate(null);\x0d\nlet modulePaths = [];\x0d\nModule.globalPaths = [];\x0d\n\x0d\nlet patched = false;\x0d\n\x0d\n// eslint-disable-next-line func-style\x0d\nlet wrap = function(script) {\x0d\n  return Module.wrapper[0] + script + Module.wrapper[1];\x0d\n};\x0d\n\x0d\nconst wrapper = [\x0d\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\x0d\n  '\\n});'\x2C\x0d\n];\x0d\n\x0d\nlet wrapperProxy = new Proxy(wrapper\x2C {\x0d\n  set(target\x2C property\x2C value\x2C receiver) {\x0d\n    patched = true;\x0d\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C property\x2C descriptor) {\x0d\n    patched = true;\x0d\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\x0d\n  get() {\x0d\n    return wrap;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrap = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\x0d\n  get() {\x0d\n    return wrapperProxy;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrapperProxy = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst isPreloadingDesc = { get() { return isPreloading; } };\x0d\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\nObjectDefineProperty(NativeModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\n\x0d\nfunction getModuleParent() {\x0d\n  return moduleParentCache.get(this);\x0d\n}\x0d\n\x0d\nfunction setModuleParent(value) {\x0d\n  moduleParentCache.set(this\x2C value);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\x0d\n  get: pendingDeprecation ? deprecate(\x0d\n    getModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : getModuleParent\x2C\x0d\n  set: pendingDeprecation ? deprecate(\x0d\n    setModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : setModuleParent\x2C\x0d\n});\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nModule._debug = deprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\x0d\n\x0d\n// Given a module name\x2C and a list of paths to test\x2C returns the first\x0d\n// matching file in the following precedence.\x0d\n//\x0d\n// require("a.<ext>")\x0d\n//   -> a.<ext>\x0d\n//\x0d\n// require("a")\x0d\n//   -> a\x0d\n//   -> a.<ext>\x0d\n//   -> a/index.<ext>\x0d\n\x0d\nconst packageJsonCache = new SafeMap();\x0d\n\x0d\nfunction readPackage(requestPath) {\x0d\n  const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n\x0d\n  const existing = packageJsonCache.get(jsonPath);\x0d\n  if (existing !== undefined) return existing;\x0d\n\x0d\n  const result = packageJsonReader.read(jsonPath);\x0d\n  const json = result.containsKeys === false ? '{}' : result.string;\x0d\n  if (json === undefined) {\x0d\n    packageJsonCache.set(jsonPath\x2C false);\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const parsed = JSONParse(json);\x0d\n    const filtered = {\x0d\n      name: parsed.name\x2C\x0d\n      main: parsed.main\x2C\x0d\n      exports: parsed.exports\x2C\x0d\n      imports: parsed.imports\x2C\x0d\n      type: parsed.type\x0d\n    };\x0d\n    packageJsonCache.set(jsonPath\x2C filtered);\x0d\n    return filtered;\x0d\n  } catch (e) {\x0d\n    e.path = jsonPath;\x0d\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction readPackageScope(checkPath) {\x0d\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\x0d\n  let separatorIndex;\x0d\n  do {\x0d\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\x0d\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\x0d\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules'))\x0d\n      return false;\x0d\n    const pjson = readPackage(checkPath + sep);\x0d\n    if (pjson) return {\x0d\n      data: pjson\x2C\x0d\n      path: checkPath\x2C\x0d\n    };\x0d\n  } while (separatorIndex > rootSeparatorIndex);\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\x0d\n  const pkg = readPackage(requestPath)?.main;\x0d\n\x0d\n  if (!pkg) {\x0d\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n  }\x0d\n\x0d\n  const filename = path.resolve(requestPath\x2C pkg);\x0d\n  let actual = tryFile(filename\x2C isMain) ||\x0d\n    tryExtensions(filename\x2C exts\x2C isMain) ||\x0d\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\x0d\n  if (actual === false) {\x0d\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n    if (!actual) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const err = new Error(\x0d\n        `Cannot find module '${filename}'. ` +\x0d\n        'Please verify that the package.json has a valid "main" entry'\x0d\n      );\x0d\n      err.code = 'MODULE_NOT_FOUND';\x0d\n      err.path = path.resolve(requestPath\x2C 'package.json');\x0d\n      err.requestPath = originalPath;\x0d\n      // TODO(BridgeAR): Add the requireStack as well.\x0d\n      throw err;\x0d\n    } else {\x0d\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n      process.emitWarning(\x0d\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\x0d\n          'Please either fix that or report it to the module author'\x2C\x0d\n        'DeprecationWarning'\x2C\x0d\n        'DEP0128'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  return actual;\x0d\n}\x0d\n\x0d\n// In order to minimize unnecessary lstat() calls\x2C\x0d\n// this cache is a list of known-real paths.\x0d\n// Set to an empty Map to reset.\x0d\nconst realpathCache = new SafeMap();\x0d\n\x0d\n// Check if the file exists and is not a directory\x0d\n// if using --preserve-symlinks and isMain is false\x2C\x0d\n// keep symlinks intact\x2C otherwise resolve to the\x0d\n// absolute realpath.\x0d\nfunction tryFile(requestPath\x2C isMain) {\x0d\n  const rc = stat(requestPath);\x0d\n  if (rc !== 0) return;\x0d\n  if (preserveSymlinks && !isMain) {\x0d\n    return path.resolve(requestPath);\x0d\n  }\x0d\n  return toRealPath(requestPath);\x0d\n}\x0d\n\x0d\nfunction toRealPath(requestPath) {\x0d\n  return fs.realpathSync(requestPath\x2C {\x0d\n    [internalFS.realpathCacheKey]: realpathCache\x0d\n  });\x0d\n}\x0d\n\x0d\n// Given a path\x2C check if the file exists with any of the set extensions\x0d\nfunction tryExtensions(p\x2C exts\x2C isMain) {\x0d\n  for (let i = 0; i < exts.length; i++) {\x0d\n    const filename = tryFile(p + exts[i]\x2C isMain);\x0d\n\x0d\n    if (filename) {\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n// Find the longest (possibly multi-dot) extension registered in\x0d\n// Module._extensions\x0d\nfunction findLongestRegisteredExtension(filename) {\x0d\n  const name = path.basename(filename);\x0d\n  let currentExtension;\x0d\n  let index;\x0d\n  let startIndex = 0;\x0d\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\x0d\n    startIndex = index + 1;\x0d\n    if (index === 0) continue; // Skip dotfiles like .gitignore\x0d\n    currentExtension = StringPrototypeSlice(name\x2C index);\x0d\n    if (Module._extensions[currentExtension]) return currentExtension;\x0d\n  }\x0d\n  return '.js';\x0d\n}\x0d\n\x0d\nfunction trySelfParentPath(parent) {\x0d\n  if (!parent) return false;\x0d\n\x0d\n  if (parent.filename) {\x0d\n    return parent.filename;\x0d\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\x0d\n    try {\x0d\n      return process.cwd() + path.sep;\x0d\n    } catch {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction trySelf(parentPath\x2C request) {\x0d\n  if (!parentPath) return false;\x0d\n\x0d\n  const { data: pkg\x2C path: pkgPath } = readPackageScope(parentPath) || {};\x0d\n  if (!pkg || pkg.exports === undefined) return false;\x0d\n  if (typeof pkg.name !== 'string') return false;\x0d\n\x0d\n  let expansion;\x0d\n  if (request === pkg.name) {\x0d\n    expansion = '.';\x0d\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\x0d\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\x0d\n  } else {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    return finalizeEsmResolution(packageExportsResolve(\x0d\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\x0d\n      pathToFileURL(parentPath)\x2C cjsConditions)\x2C request\x2C parentPath\x2C pkgPath);\x0d\n  } catch (e) {\x0d\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\n// This only applies to requests of a specific form:\x0d\n// 1. name/.*\x0d\n// 2. @scope/name/.*\x0d\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\x0d\nfunction resolveExports(nmPath\x2C request) {\x0d\n  // The implementation's behavior is meant to mirror resolution in ESM.\x0d\n  const { 1: name\x2C 2: expansion = '' } =\x0d\n    StringPrototypeMatch(request\x2C EXPORTS_PATTERN) || [];\x0d\n  if (!name)\x0d\n    return;\x0d\n  const pkgPath = path.resolve(nmPath\x2C name);\x0d\n  const pkg = readPackage(pkgPath);\x0d\n  if (pkg?.exports != null) {\x0d\n    try {\x0d\n      return finalizeEsmResolution(packageExportsResolve(\x0d\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\x0d\n        cjsConditions)\x2C request\x2C null\x2C pkgPath);\x0d\n    } catch (e) {\x0d\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst trailingSlashRegex = /(?:^|\\/)\\.?\\.$/;\x0d\nModule._findPath = function(request\x2C paths\x2C isMain) {\x0d\n  const absoluteRequest = path.isAbsolute(request);\x0d\n  if (absoluteRequest) {\x0d\n    paths = [''];\x0d\n  } else if (!paths || paths.length === 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\x0d\n  const entry = Module._pathCache[cacheKey];\x0d\n  if (entry)\x0d\n    return entry;\x0d\n\x0d\n  let exts;\x0d\n  let trailingSlash = request.length > 0 &&\x0d\n    StringPrototypeCharCodeAt(request\x2C request.length - 1) ===\x0d\n    CHAR_FORWARD_SLASH;\x0d\n  if (!trailingSlash) {\x0d\n    trailingSlash = RegExpPrototypeTest(trailingSlashRegex\x2C request);\x0d\n  }\x0d\n\x0d\n  // For each path\x0d\n  for (let i = 0; i < paths.length; i++) {\x0d\n    // Don't search further if path doesn't exist\x0d\n    const curPath = paths[i];\x0d\n    if (curPath && stat(curPath) < 1) continue;\x0d\n\x0d\n    if (!absoluteRequest) {\x0d\n      const exportsResolved = resolveExports(curPath\x2C request);\x0d\n      if (exportsResolved)\x0d\n        return exportsResolved;\x0d\n    }\x0d\n\x0d\n    const basePath = path.resolve(curPath\x2C request);\x0d\n    let filename;\x0d\n\x0d\n    const rc = stat(basePath);\x0d\n    if (!trailingSlash) {\x0d\n      if (rc === 0) {  // File.\x0d\n        if (!isMain) {\x0d\n          if (preserveSymlinks) {\x0d\n            filename = path.resolve(basePath);\x0d\n          } else {\x0d\n            filename = toRealPath(basePath);\x0d\n          }\x0d\n        } else if (preserveSymlinksMain) {\x0d\n          // For the main module\x2C we use the preserveSymlinksMain flag instead\x0d\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\x0d\n          // historically has not applied to the main module.  Most likely this\x0d\n          // was intended to keep .bin/ binaries working\x2C as following those\x0d\n          // symlinks is usually required for the imports in the corresponding\x0d\n          // files to resolve; that said\x2C in some use cases following symlinks\x0d\n          // causes bigger problems which is why the preserveSymlinksMain option\x0d\n          // is needed.\x0d\n          filename = path.resolve(basePath);\x0d\n        } else {\x0d\n          filename = toRealPath(basePath);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (!filename) {\x0d\n        // Try it with each of the extensions\x0d\n        if (exts === undefined)\x0d\n          exts = ObjectKeys(Module._extensions);\x0d\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!filename && rc === 1) {  // Directory.\x0d\n      // try it with each of the extensions at "index"\x0d\n      if (exts === undefined)\x0d\n        exts = ObjectKeys(Module._extensions);\x0d\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\x0d\n    }\x0d\n\x0d\n    if (filename) {\x0d\n      Module._pathCache[cacheKey] = filename;\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n};\x0d\n\x0d\n// 'node_modules' character codes reversed\x0d\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\x0d\nconst nmLen = nmChars.length;\x0d\nif (isWindows) {\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n\x0d\n    // return root node_modules when path is 'D:\\\\'.\x0d\n    // path.resolve will make sure from.length >=3 in Windows.\x0d\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\x0d\n          CHAR_BACKWARD_SLASH &&\x0d\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON)\x0d\n      return [from + 'node_modules'];\x0d\n\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      // The path segment separator check ('\\' and '/') was used to get\x0d\n      // node_modules path for every path segment.\x0d\n      // Use colon as an extra condition since we can get node_modules\x0d\n      // path for drive root like 'C:\\node_modules' and don't need to\x0d\n      // parse drive name.\x0d\n      if (code === CHAR_BACKWARD_SLASH ||\x0d\n          code === CHAR_FORWARD_SLASH ||\x0d\n          code === CHAR_COLON) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n} else { // posix\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\x0d\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\x0d\n    if (from === '/')\x0d\n      return ['/node_modules'];\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Append /node_modules to handle root paths.\x0d\n    ArrayPrototypePush(paths\x2C '/node_modules');\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n}\x0d\n\x0d\nModule._resolveLookupPaths = function(request\x2C parent) {\x0d\n  if (NativeModule.canBeRequiredByUsers(request)) {\x0d\n    debug('looking for %j in []'\x2C request);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // Check for node modules paths.\x0d\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\x0d\n      (request.length > 1 &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\x0d\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\x0d\n\x0d\n    let paths = modulePaths;\x0d\n    if (parent?.paths?.length) {\x0d\n      paths = ArrayPrototypeConcat(parent.paths\x2C paths);\x0d\n    }\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C paths);\x0d\n    return paths.length > 0 ? paths : null;\x0d\n  }\x0d\n\x0d\n  // In REPL\x2C parent.filename is null.\x0d\n  if (!parent || !parent.id || !parent.filename) {\x0d\n    // Make require('./path/to/foo') work - normally the path is taken\x0d\n    // from realpath(__filename) but in REPL there is no filename\x0d\n    const mainPaths = ['.'];\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\x0d\n    return mainPaths;\x0d\n  }\x0d\n\x0d\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\x0d\n\x0d\n  const parentDir = [path.dirname(parent.filename)];\x0d\n  debug('looking for %j'\x2C parentDir);\x0d\n  return parentDir;\x0d\n};\x0d\n\x0d\nfunction emitCircularRequireWarning(prop) {\x0d\n  process.emitWarning(\x0d\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\x0d\n    'inside circular dependency'\x0d\n  );\x0d\n}\x0d\n\x0d\n// A Proxy that can be used as the prototype of a module.exports object and\x0d\n// warns when non-existent properties are accessed.\x0d\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\x0d\n  get(target\x2C prop) {\x0d\n    // Allow __esModule access in any case because it is used in the output\x0d\n    // of transpiled code to determine whether something comes from an\x0d\n    // ES module\x2C and is not used as a regular key of `module.exports`.\x0d\n    if (prop in target || prop === '__esModule') return target[prop];\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n\x0d\n  getOwnPropertyDescriptor(target\x2C prop) {\x0d\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule')\x0d\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction getExportsForCircularRequire(module) {\x0d\n  if (module.exports &&\x0d\n      !isProxy(module.exports) &&\x0d\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\x0d\n      // Exclude transpiled ES6 modules / TypeScript code because those may\x0d\n      // employ unusual patterns for accessing 'module.exports'. That should\x0d\n      // be okay because ES6 modules have a different approach to circular\x0d\n      // dependencies anyway.\x0d\n      !module.exports.__esModule) {\x0d\n    // This is later unset once the module is done loading.\x0d\n    ObjectSetPrototypeOf(\x0d\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n}\x0d\n\x0d\n// Check the cache for the requested file.\x0d\n// 1. If a module already exists in the cache: return its exports object.\x0d\n// 2. If the module is native: call\x0d\n//    `NativeModule.prototype.compileForPublicLoader()` and return the exports.\x0d\n// 3. Otherwise\x2C create a new module for the file and save it to the cache.\x0d\n//    Then have it load  the file contents before returning its exports\x0d\n//    object.\x0d\nModule._load = function(request\x2C parent\x2C isMain) {\x0d\n  let relResolveCacheIdentifier;\x0d\n  if (parent) {\x0d\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\x0d\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\x0d\n    // caching is required to allow cache invalidation without changing the old\x0d\n    // cache key names.\x0d\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\x0d\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\x0d\n    if (filename !== undefined) {\x0d\n      const cachedModule = Module._cache[filename];\x0d\n      if (cachedModule !== undefined) {\x0d\n        updateChildren(parent\x2C cachedModule\x2C true);\x0d\n        if (!cachedModule.loaded)\x0d\n          return getExportsForCircularRequire(cachedModule);\x0d\n        return cachedModule.exports;\x0d\n      }\x0d\n      delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\x0d\n  if (StringPrototypeStartsWith(filename\x2C 'node:')) {\x0d\n    // Slice 'node:' prefix\x0d\n    const id = StringPrototypeSlice(filename\x2C 5);\x0d\n\x0d\n    const module = loadNativeModule(id\x2C request);\x0d\n    if (!module?.canBeRequiredByUsers) {\x0d\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(filename);\x0d\n    }\x0d\n\x0d\n    return module.exports;\x0d\n  }\x0d\n\x0d\n  const cachedModule = Module._cache[filename];\x0d\n  if (cachedModule !== undefined) {\x0d\n    updateChildren(parent\x2C cachedModule\x2C true);\x0d\n    if (!cachedModule.loaded) {\x0d\n      const parseCachedModule = cjsParseCache.get(cachedModule);\x0d\n      if (!parseCachedModule || parseCachedModule.loaded)\x0d\n        return getExportsForCircularRequire(cachedModule);\x0d\n      parseCachedModule.loaded = true;\x0d\n    } else {\x0d\n      return cachedModule.exports;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const mod = loadNativeModule(filename\x2C request);\x0d\n  if (mod?.canBeRequiredByUsers) return mod.exports;\x0d\n\x0d\n  // Don't call updateChildren()\x2C Module constructor already does.\x0d\n  const module = cachedModule || new Module(filename\x2C parent);\x0d\n\x0d\n  if (isMain) {\x0d\n    process.mainModule = module;\x0d\n    module.id = '.';\x0d\n  }\x0d\n\x0d\n  Module._cache[filename] = module;\x0d\n  if (parent !== undefined) {\x0d\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\x0d\n  }\x0d\n\x0d\n  let threw = true;\x0d\n  try {\x0d\n    module.load(filename);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw) {\x0d\n      delete Module._cache[filename];\x0d\n      if (parent !== undefined) {\x0d\n        delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n        const children = parent?.children;\x0d\n        if (ArrayIsArray(children)) {\x0d\n          const index = ArrayPrototypeIndexOf(children\x2C module);\x0d\n          if (index !== -1) {\x0d\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (module.exports &&\x0d\n               !isProxy(module.exports) &&\x0d\n               ObjectGetPrototypeOf(module.exports) ===\x0d\n                 CircularRequirePrototypeWarningProxy) {\x0d\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n};\x0d\n\x0d\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:') ||\x0d\n      NativeModule.canBeRequiredByUsers(request)) {\x0d\n    return request;\x0d\n  }\x0d\n\x0d\n  let paths;\x0d\n\x0d\n  if (typeof options === 'object' && options !== null) {\x0d\n    if (ArrayIsArray(options.paths)) {\x0d\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\x0d\n          StringPrototypeStartsWith(request\x2C '../') ||\x0d\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\x0d\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\x0d\n\x0d\n      if (isRelative) {\x0d\n        paths = options.paths;\x0d\n      } else {\x0d\n        const fakeParent = new Module(''\x2C null);\x0d\n\x0d\n        paths = [];\x0d\n\x0d\n        for (let i = 0; i < options.paths.length; i++) {\x0d\n          const path = options.paths[i];\x0d\n          fakeParent.paths = Module._nodeModulePaths(path);\x0d\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\x0d\n\x0d\n          for (let j = 0; j < lookupPaths.length; j++) {\x0d\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j]))\x0d\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (options.paths === undefined) {\x0d\n      paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\x0d\n    }\x0d\n  } else {\x0d\n    paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n  }\x0d\n\x0d\n  if (parent?.filename) {\x0d\n    if (request[0] === '#') {\x0d\n      const pkg = readPackageScope(parent.filename) || {};\x0d\n      if (pkg.data?.imports != null) {\x0d\n        try {\x0d\n          return finalizeEsmResolution(\x0d\n            packageImportsResolve(request\x2C pathToFileURL(parent.filename)\x2C\x0d\n                                  cjsConditions)\x2C request\x2C parent.filename\x2C\x0d\n            pkg.path);\x0d\n        } catch (e) {\x0d\n          if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n            throw createEsmNotFoundErr(request);\x0d\n          throw e;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Try module self resolution first\x0d\n  const parentPath = trySelfParentPath(parent);\x0d\n  const selfResolved = trySelf(parentPath\x2C request);\x0d\n  if (selfResolved) {\x0d\n    const cacheKey = request + '\\x00' +\x0d\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\x0d\n    Module._pathCache[cacheKey] = selfResolved;\x0d\n    return selfResolved;\x0d\n  }\x0d\n\x0d\n  // Look up the filename first\x2C since that's the cache key.\x0d\n  const filename = Module._findPath(request\x2C paths\x2C isMain\x2C false);\x0d\n  if (filename) return filename;\x0d\n  const requireStack = [];\x0d\n  for (let cursor = parent;\x0d\n    cursor;\x0d\n    cursor = moduleParentCache.get(cursor)) {\x0d\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\x0d\n  }\x0d\n  let message = `Cannot find module '${request}'`;\x0d\n  if (requireStack.length > 0) {\x0d\n    message = message + '\\nRequire stack:\\n- ' +\x0d\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\x0d\n  }\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  err.requireStack = requireStack;\x0d\n  throw err;\x0d\n};\x0d\n\x0d\nfunction finalizeEsmResolution(match\x2C request\x2C parentPath\x2C pkgPath) {\x0d\n  const { resolved\x2C exact } = match;\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\x0d\n  const filename = fileURLToPath(resolved);\x0d\n  let actual = tryFile(filename);\x0d\n  if (!exact && !actual) {\x0d\n    const exts = ObjectKeys(Module._extensions);\x0d\n    actual = tryExtensions(filename\x2C exts\x2C false) ||\x0d\n      tryPackage(filename\x2C exts\x2C false\x2C request);\x0d\n  }\x0d\n  if (actual)\x0d\n    return actual;\x0d\n  const err = createEsmNotFoundErr(filename\x2C\x0d\n                                   path.resolve(pkgPath\x2C 'package.json'));\x0d\n  throw err;\x0d\n}\x0d\n\x0d\nfunction createEsmNotFoundErr(request\x2C path) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(`Cannot find module '${request}'`);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  if (path)\x0d\n    err.path = path;\x0d\n  // TODO(BridgeAR): Add the requireStack as well.\x0d\n  return err;\x0d\n}\x0d\n\x0d\n// Given a file name\x2C pass it to the proper extension handler.\x0d\nModule.prototype.load = function(filename) {\x0d\n  debug('load %j for module %j'\x2C filename\x2C this.id);\x0d\n\x0d\n  assert(!this.loaded);\x0d\n  this.filename = filename;\x0d\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\x0d\n\x0d\n  const extension = findLongestRegisteredExtension(filename);\x0d\n  // allow .mjs to be overridden\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs'])\x0d\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\x0d\n\x0d\n  Module._extensions[extension](this\x2C filename);\x0d\n  this.loaded = true;\x0d\n\x0d\n  const esmLoader = asyncESM.esmLoader;\x0d\n  // Create module entry at load time to snapshot exports correctly\x0d\n  const exports = this.exports;\x0d\n  // Preemptively cache\x0d\n  if ((module?.module === undefined ||\x0d\n       module.module.getStatus() < kEvaluated) &&\x0d\n      !esmLoader.cjsCache.has(this))\x0d\n    esmLoader.cjsCache.set(this\x2C exports);\x0d\n};\x0d\n\x0d\n\x0d\n// Loads a module at the given file path. Returns that module's\x0d\n// `exports` property.\x0d\nModule.prototype.require = function(id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C this\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Resolved path to process.argv[1] will be lazily placed here\x0d\n// (needed for setting breakpoint when called with --inspect-brk)\x0d\nlet resolvedArgv;\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  if (patched) {\x0d\n    const wrapper = Module.wrap(content);\x0d\n    return vm.runInThisContext(wrapper\x2C {\x0d\n      filename\x2C\x0d\n      lineOffset: 0\x2C\x0d\n      displayErrors: true\x2C\x0d\n      importModuleDynamically: async (specifier\x2C _\x2C importAssertions) => {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C\x0d\n                             loader.getBaseURL(normalizeReferrerURL(filename))\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n  try {\x0d\n    return vm.compileFunction(content\x2C [\x0d\n      'exports'\x2C\x0d\n      'require'\x2C\x0d\n      'module'\x2C\x0d\n      '__filename'\x2C\x0d\n      '__dirname'\x2C\x0d\n    ]\x2C {\x0d\n      filename\x2C\x0d\n      importModuleDynamically(specifier\x2C _\x2C importAssertions) {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C\x0d\n                             loader.getBaseURL(normalizeReferrerURL(filename))\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  } catch (err) {\x0d\n    if (process.mainModule === cjsModuleInstance)\x0d\n      enrichCJSError(err\x2C content);\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Run the file contents in the correct scope or sandbox. Expose\x0d\n// the correct helper variables (require\x2C module\x2C exports) to\x0d\n// the file.\x0d\n// Returns exception\x2C if any.\x0d\nModule.prototype._compile = function(content\x2C filename) {\x0d\n  let moduleURL;\x0d\n  let redirects;\x0d\n  if (policy?.manifest) {\x0d\n    moduleURL = pathToFileURL(filename);\x0d\n    redirects = policy.manifest.getDependencyMapper(moduleURL);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  maybeCacheSourceMap(filename\x2C content\x2C this);\x0d\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\x0d\n\x0d\n  let inspectorWrapper = null;\x0d\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\x0d\n    if (!resolvedArgv) {\x0d\n      // We enter the repl if we're not given a filename argument.\x0d\n      if (process.argv[1]) {\x0d\n        try {\x0d\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\x0d\n        } catch {\x0d\n          // We only expect this codepath to be reached in the case of a\x0d\n          // preloaded module (it will fail earlier with the main entry)\x0d\n          assert(ArrayIsArray(getOptionValue('--require')));\x0d\n        }\x0d\n      } else {\x0d\n        resolvedArgv = 'repl';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Set breakpoint on module start\x0d\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\x0d\n      hasPausedEntry = true;\x0d\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n    }\x0d\n  }\x0d\n  const dirname = path.dirname(filename);\x0d\n  const require = makeRequireFunction(this\x2C redirects);\x0d\n  let result;\x0d\n  const exports = this.exports;\x0d\n  const thisValue = exports;\x0d\n  const module = this;\x0d\n  if (requireDepth === 0) statCache = new SafeMap();\x0d\n  if (inspectorWrapper) {\x0d\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\x0d\n                              require\x2C module\x2C filename\x2C dirname);\x0d\n  } else {\x0d\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\x0d\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\x0d\n  }\x0d\n  hasLoadedAnyUserCJSModule = true;\x0d\n  if (requireDepth === 0) statCache = null;\x0d\n  return result;\x0d\n};\x0d\n\x0d\n// Native extension for .js\x0d\nModule._extensions['.js'] = function(module\x2C filename) {\x0d\n  // If already analyzed the source\x2C then it will be cached.\x0d\n  const cached = cjsParseCache.get(module);\x0d\n  let content;\x0d\n  if (cached?.source) {\x0d\n    content = cached.source;\x0d\n    cached.source = undefined;\x0d\n  } else {\x0d\n    content = fs.readFileSync(filename\x2C 'utf8');\x0d\n  }\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\x0d\n    const pkg = readPackageScope(filename);\x0d\n    // Function require shouldn't be used in ES modules.\x0d\n    if (pkg?.data?.type === 'module') {\x0d\n      const parent = moduleParentCache.get(module);\x0d\n      const parentPath = parent?.filename;\x0d\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\x0d\n      const usesEsm = hasEsmSyntax(content);\x0d\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\x0d\n                                      packageJsonPath);\x0d\n      // Attempt to reconstruct the parent require frame.\x0d\n      if (Module._cache[parentPath]) {\x0d\n        let parentSource;\x0d\n        try {\x0d\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n        if (parentSource) {\x0d\n          const errLine = StringPrototypeSplit(\x0d\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\x0d\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\x0d\n          const { 1: line\x2C 2: col } =\x0d\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\x0d\n          if (line && col) {\x0d\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\x0d\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\x0d\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\x0d\n            setArrowMessage(err\x2C frame);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n  module._compile(content\x2C filename);\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .json\x0d\nModule._extensions['.json'] = function(module\x2C filename) {\x0d\n  const content = fs.readFileSync(filename\x2C 'utf8');\x0d\n\x0d\n  if (policy?.manifest) {\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    module.exports = JSONParse(stripBOM(content));\x0d\n  } catch (err) {\x0d\n    err.message = filename + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .node\x0d\nModule._extensions['.node'] = function(module\x2C filename) {\x0d\n  if (policy?.manifest) {\x0d\n    const content = fs.readFileSync(filename);\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n  // Be aware this doesn't use `content`\x0d\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\x0d\n};\x0d\n\x0d\nfunction createRequireFromPath(filename) {\x0d\n  // Allow a directory to be passed as the filename\x0d\n  const trailingSlash =\x0d\n    StringPrototypeEndsWith(filename\x2C '/') ||\x0d\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\x0d\n\x0d\n  const proxyPath = trailingSlash ?\x0d\n    path.join(filename\x2C 'noop.js') :\x0d\n    filename;\x0d\n\x0d\n  const m = new Module(proxyPath);\x0d\n  m.filename = proxyPath;\x0d\n\x0d\n  m.paths = Module._nodeModulePaths(m.path);\x0d\n  return makeRequireFunction(m\x2C null);\x0d\n}\x0d\n\x0d\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\x0d\n  'absolute path string';\x0d\n\x0d\nfunction createRequire(filename) {\x0d\n  let filepath;\x0d\n\x0d\n  if (isURLInstance(filename) ||\x0d\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\x0d\n    try {\x0d\n      filepath = fileURLToPath(filename);\x0d\n    } catch {\x0d\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\x0d\n                                      createRequireError);\x0d\n    }\x0d\n  } else if (typeof filename !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\x0d\n  } else {\x0d\n    filepath = filename;\x0d\n  }\x0d\n  return createRequireFromPath(filepath);\x0d\n}\x0d\n\x0d\nModule.createRequire = createRequire;\x0d\n\x0d\nModule._initPaths = function() {\x0d\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\x0d\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\x0d\n\x0d\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\x0d\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\x0d\n  const prefixDir = isWindows ?\x0d\n    path.resolve(process.execPath\x2C '..') :\x0d\n    path.resolve(process.execPath\x2C '..'\x2C '..');\x0d\n\x0d\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\x0d\n\x0d\n  if (homeDir) {\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\x0d\n  }\x0d\n\x0d\n  if (nodePath) {\x0d\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\x0d\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\x0d\n      Boolean\x0d\n    ));\x0d\n  }\x0d\n\x0d\n  modulePaths = paths;\x0d\n\x0d\n  // Clone as a shallow copy\x2C for introspection.\x0d\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\x0d\n};\x0d\n\x0d\nModule._preloadModules = function(requests) {\x0d\n  if (!ArrayIsArray(requests))\x0d\n    return;\x0d\n\x0d\n  isPreloading = true;\x0d\n\x0d\n  // Preloaded modules have a dummy parent module which is deemed to exist\x0d\n  // in the current working directory. This seeds the search path for\x0d\n  // preloaded modules.\x0d\n  const parent = new Module('internal/preload'\x2C null);\x0d\n  try {\x0d\n    parent.paths = Module._nodeModulePaths(process.cwd());\x0d\n  } catch (e) {\x0d\n    if (e.code !== 'ENOENT') {\x0d\n      isPreloading = false;\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n  for (let n = 0; n < requests.length; n++)\x0d\n    parent.require(requests[n]);\x0d\n  isPreloading = false;\x0d\n};\x0d\n\x0d\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\x0d\n  for (const mod of NativeModule.map.values()) {\x0d\n    if (mod.canBeRequiredByUsers) {\x0d\n      mod.syncExports();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\n// Backwards compatibility\x0d\nModule.Module = Module;\x0d\n
code-source-info,0x24dc49db016,111,0,41761,C0O0C4O41761,,
tick,0x7ff7dd850a90,1430270,1,0x7ff7dd90e150,3,0x7ff7de2559a0,0x22e32684e3b,0x22e326848e5,0x24dc49d90cc,0x22cec146526,0x22cec142065
code-creation,Function,10,1430315,0x24dc49dcdb6,2547, node:internal/modules/cjs/loader:1:1,0x24dc49daf90,~
code-source-info,0x24dc49dcdb
code-creation,Eval,10,1432134,0x24dc49e0d76,5, node:internal/modules/package_json_reader:1:1,0x24dc49e0bd0,~
script-source,112,node:internal/modules/package_json_reader,'use strict';\x0d\n\x0d\nconst { SafeMap } = primordials;\x0d\nconst { internalModuleReadJSON } = internalBinding('fs');\x0d\nconst { pathToFileURL } = require('url');\x0d\nconst { toNamespacedPath } = require('path');\x0d\n\x0d\nconst cache = new SafeMap();\x0d\n\x0d\nlet manifest;\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string} jsonPath\x0d\n */\x0d\nfunction read(jsonPath) {\x0d\n  if (cache.has(jsonPath)) {\x0d\n    return cache.get(jsonPath);\x0d\n  }\x0d\n\x0d\n  const { 0: string\x2C 1: containsKeys } = internalModuleReadJSON(\x0d\n    toNamespacedPath(jsonPath)\x0d\n  );\x0d\n  const result = { string\x2C containsKeys };\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (string !== undefined) {\x0d\n    if (manifest === undefined) {\x0d\n      manifest = getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').manifest :\x0d\n        null;\x0d\n    }\x0d\n    if (manifest !== null) {\x0d\n      const jsonURL = pathToFileURL(jsonPath);\x0d\n      manifest.assertIntegrity(jsonURL\x2C string);\x0d\n    }\x0d\n  }\x0d\n  cache.set(jsonPath\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = { read };\x0d\n
code-source-info,0x24dc49e0d76,112,0,1024,C0O0C4O1024,,
code-creation,Function,10,1432576,0x24dc49e0ec6,113, node:internal/modules/package_json_reader:1:1,0x24dc49e0cf0,~
code-source-info,0x24dc49e0ec6,112,0,1024,C0O0C29O25C34O86C37O86C42O59C48O136C54O136C59O118C65O182C71O182C76O161C82O216C84O216C89O216C91O238C92O238C94O996C101O1015C107O1011C112O1023,,
code-creation,Eval,10,1433112,0x24dc49e170e,5, node:internal/process/esm_loader:1:1,0x24dc49e1518,~
script-source,113,node:internal/process/esm_loader,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { ESMLoader } = require('internal/modules/esm/loader');\x0d\nconst {\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n} = require('internal/process/execution');\x0d\nconst { pathToFileURL } = require('internal/url');\x0d\nconst {\x0d\n  getModuleFromWrap\x2C\x0d\n} = require('internal/vm/module');\x0d\n\x0d\nexports.initializeImportMetaObject = function(wrap\x2C meta) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { initializeImportMeta } = callbackMap.get(wrap);\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      initializeImportMeta(meta\x2C getModuleFromWrap(wrap) || wrap);\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nexports.importModuleDynamicallyCallback =\x0d\nasync function importModuleDynamicallyCallback(wrap\x2C specifier\x2C assertions) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { importModuleDynamically } = callbackMap.get(wrap);\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      return importModuleDynamically(\x0d\n        specifier\x2C getModuleFromWrap(wrap) || wrap\x2C assertions);\x0d\n    }\x0d\n  }\x0d\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\x0d\n};\x0d\n\x0d\nconst esmLoader = new ESMLoader();\x0d\n\x0d\nexports.esmLoader = esmLoader;\x0d\n\x0d\n/**\x0d\n * Causes side-effects: user-defined loader hooks are added to esmLoader.\x0d\n * @returns {void}\x0d\n */\x0d\nasync function initializeLoader() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  // customLoaders CURRENTLY can be only 1 (a string)\x0d\n  // Once chaining is implemented\x2C it will be string[]\x0d\n  const customLoaders = getOptionValue('--experimental-loader');\x0d\n\x0d\n  if (!customLoaders.length) return;\x0d\n\x0d\n  const { emitExperimentalWarning } = require('internal/util');\x0d\n  emitExperimentalWarning('--experimental-loader');\x0d\n\x0d\n  let cwd;\x0d\n  try {\x0d\n    cwd = process.cwd() + '/';\x0d\n  } catch {\x0d\n    cwd = 'file:///';\x0d\n  }\x0d\n\x0d\n  // A separate loader instance is necessary to avoid cross-contamination\x0d\n  // between internal Node.js and userland. For example\x2C a module with internal\x0d\n  // state (such as a counter) should be independent.\x0d\n  const internalEsmLoader = new ESMLoader();\x0d\n\x0d\n  // Importation must be handled by internal loader to avoid poluting userland\x0d\n  const exports = await internalEsmLoader.import(\x0d\n    customLoaders\x2C\x0d\n    pathToFileURL(cwd).href\x2C\x0d\n    ObjectCreate(null)\x2C\x0d\n  );\x0d\n\x0d\n  // Hooks must then be added to external/public loader\x0d\n  // (so they're triggered in userland)\x0d\n  await esmLoader.addCustomLoaders(exports);\x0d\n}\x0d\n\x0d\nexports.loadESM = async function loadESM(callback) {\x0d\n  try {\x0d\n    await initializeLoader();\x0d\n    await callback(esmLoader);\x0d\n  } catch (err) {\x0d\n    if (hasUncaughtExceptionCaptureCallback()) {\x0d\n      process._fatalException(err);\x0d\n      return;\x0d\n    }\x0d\n    internalBinding('errors').triggerUncaughtException(\x0d\n      err\x2C\x0d\n      true /* fromPromise */\x0d\n    );\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x24dc49e170e,113,0,2982,C0O0C4O2982,,
code-creation,Function,10,1433762,0x24dc49e19ae,182, node:internal/process/esm_loader:1:1,0x24dc49e1688,~
code-source-info,0x24dc49e19ae,113,0,2982,C0O0C44O28C50O119C56O119C61O145C66O74C72O176C78O176C83O162C89O270C95O270C100O228C106O336C112O336C117O318C123O397C129O397C134O373C140O431C144O466C148O777C152O817C156O1300C159O1300C164O1300C166O1320C168O1338C172O2612C176O2628C181O2981,,
code-creation,Eval,10,1435308,0x24dc49e2cbe,5, node:internal/modules/esm/loader:1:1,0x24dc49e2830,~
script-source,114,node:internal/modules/esm/loader,'use strict';\x0d\n\x0d\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\x0d\nrequire('internal/modules/cjs/loader');\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst { MessageChannel } = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  ERR_INTERNAL_ASSERTION\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_VALUE\x2C\x0d\n  ERR_UNKNOWN_MODULE_FORMAT\x0d\n} = require('internal/errors').codes;\x0d\nconst { pathToFileURL\x2C isURLInstance\x2C URL } = require('internal/url');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst ModuleMap = require('internal/modules/esm/module_map');\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\n\x0d\nconst {\x0d\n  defaultResolve\x2C\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n} = require('internal/modules/esm/resolve');\x0d\nconst {\x0d\n  initializeImportMeta\x0d\n} = require('internal/modules/esm/initialize_import_meta');\x0d\nconst { defaultLoad } = require('internal/modules/esm/load');\x0d\nconst { translators } = require(\x0d\n  'internal/modules/esm/translators');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  fetchModule\x2C\x0d\n} = require('internal/modules/esm/fetch_module');\x0d\n\x0d\n/**\x0d\n * An ESMLoader instance is used as the main entry point for loading ES modules.\x0d\n * Currently\x2C this is a singleton -- there is only one used for loading\x0d\n * the main module and everything in its dependency graph.\x0d\n */\x0d\nclass ESMLoader {\x0d\n  /**\x0d\n   * Prior to ESM loading. These are called once before any modules are started.\x0d\n   * @private\x0d\n   * @property {Function[]} globalPreloaders First-in-first-out list of\x0d\n   * preload hooks.\x0d\n   */\x0d\n  #globalPreloaders = [];\x0d\n\x0d\n  /**\x0d\n   * Phase 2 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {Function[]} loaders First-in-first-out list of loader hooks.\x0d\n   */\x0d\n  #loaders = [\x0d\n    defaultLoad\x2C\x0d\n  ];\x0d\n\x0d\n  /**\x0d\n   * Phase 1 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {Function[]} resolvers First-in-first-out list of resolver hooks\x0d\n   */\x0d\n  #resolvers = [\x0d\n    defaultResolve\x2C\x0d\n  ];\x0d\n\x0d\n  #importMetaInitializer = initializeImportMeta;\x0d\n\x0d\n  /**\x0d\n   * Map of already-loaded CJS modules to use\x0d\n   */\x0d\n  cjsCache = new SafeWeakMap();\x0d\n\x0d\n  /**\x0d\n   * The index for assigning unique URLs to anonymous module evaluation\x0d\n   */\x0d\n  evalIndex = 0;\x0d\n\x0d\n  /**\x0d\n   * Registry of loaded modules\x2C akin to `require.cache`\x0d\n   */\x0d\n  moduleMap = new ModuleMap();\x0d\n\x0d\n  /**\x0d\n   * Methods which translate input code or other information into ES modules\x0d\n   */\x0d\n  translators = translators;\x0d\n\x0d\n  static pluckHooks({\x0d\n    globalPreload\x2C\x0d\n    resolve\x2C\x0d\n    load\x2C\x0d\n    // obsolete hooks:\x0d\n    dynamicInstantiate\x2C\x0d\n    getFormat\x2C\x0d\n    getGlobalPreloadCode\x2C\x0d\n    getSource\x2C\x0d\n    transformSource\x2C\x0d\n  }) {\x0d\n    const obsoleteHooks = [];\x0d\n    const acceptedHooks = ObjectCreate(null);\x0d\n\x0d\n    if (getGlobalPreloadCode) {\x0d\n      globalPreload ??= getGlobalPreloadCode;\x0d\n\x0d\n      process.emitWarning(\x0d\n        'Loader hook "getGlobalPreloadCode" has been renamed to "globalPreload"'\x0d\n      );\x0d\n    }\x0d\n    if (dynamicInstantiate) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'dynamicInstantiate'\x0d\n    );\x0d\n    if (getFormat) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getFormat'\x2C\x0d\n    );\x0d\n    if (getSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getSource'\x2C\x0d\n    );\x0d\n    if (transformSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'transformSource'\x2C\x0d\n    );\x0d\n\x0d\n    if (obsoleteHooks.length) process.emitWarning(\x0d\n      `Obsolete loader hook(s) supplied and will be ignored: ${\x0d\n        ArrayPrototypeJoin(obsoleteHooks\x2C '\x2C ')\x0d\n      }`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n    );\x0d\n\x0d\n    // Use .bind() to avoid giving access to the Loader instance when called.\x0d\n    if (globalPreload) {\x0d\n      acceptedHooks.globalPreloader =\x0d\n        FunctionPrototypeBind(globalPreload\x2C null);\x0d\n    }\x0d\n    if (resolve) {\x0d\n      acceptedHooks.resolver = FunctionPrototypeBind(resolve\x2C null);\x0d\n    }\x0d\n    if (load) {\x0d\n      acceptedHooks.loader = FunctionPrototypeBind(load\x2C null);\x0d\n    }\x0d\n\x0d\n    return acceptedHooks;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Collect custom/user-defined hook(s). After all hooks have been collected\x2C\x0d\n   * calls global preload hook(s).\x0d\n   * @param {object | object[]} customLoaders A list of exports from\x0d\n   * user-defined loaders (as returned by ESMLoader.import()).\x0d\n   */\x0d\n  async addCustomLoaders(\x0d\n    customLoaders = []\x2C\x0d\n  ) {\x0d\n    if (!ArrayIsArray(customLoaders)) customLoaders = [customLoaders];\x0d\n\x0d\n    for (let i = 0; i < customLoaders.length; i++) {\x0d\n      const exports = customLoaders[i];\x0d\n      const {\x0d\n        globalPreloader\x2C\x0d\n        resolver\x2C\x0d\n        loader\x2C\x0d\n      } = ESMLoader.pluckHooks(exports);\x0d\n\x0d\n      if (globalPreloader) ArrayPrototypePush(\x0d\n        this.#globalPreloaders\x2C\x0d\n        FunctionPrototypeBind(globalPreloader\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (resolver) ArrayPrototypePush(\x0d\n        this.#resolvers\x2C\x0d\n        FunctionPrototypeBind(resolver\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (loader) ArrayPrototypePush(\x0d\n        this.#loaders\x2C\x0d\n        FunctionPrototypeBind(loader\x2C null)\x2C // [1]\x0d\n      );\x0d\n    }\x0d\n\x0d\n    // [1] ensure hook function is not bound to ESMLoader instance\x0d\n\x0d\n    this.preload();\x0d\n  }\x0d\n\x0d\n  async eval(\x0d\n    source\x2C\x0d\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\x0d\n  ) {\x0d\n    const evalInstance = (url) => {\x0d\n      const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n      callbackMap.set(module\x2C {\x0d\n        importModuleDynamically: (specifier\x2C { url }\x2C importAssertions) => {\x0d\n          return this.import(specifier\x2C\x0d\n                             this.getBaseURL(url)\x2C\x0d\n                             importAssertions);\x0d\n        }\x0d\n      });\x0d\n\x0d\n      return module;\x0d\n    };\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C url\x2C undefined\x2C evalInstance\x2C false\x2C false);\x0d\n    this.moduleMap.set(url\x2C undefined\x2C job);\x0d\n    const { module } = await job.run();\x0d\n\x0d\n    return {\x0d\n      namespace: module.getNamespace()\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Returns the url to use for the resolution of a given cache key url\x0d\n   * These are not guaranteed to be the same.\x0d\n   *\x0d\n   * In WHATWG HTTP spec for ESM the cache key is the non-I/O bound\x0d\n   * synchronous resolution using only string operations\x0d\n   *   ~= resolveImportMap(new URL(specifier\x2C importerHREF))\x0d\n   *\x0d\n   * The url used for subsequent resolution is the response URL after\x0d\n   * all redirects have been resolved.\x0d\n   *\x0d\n   * https://example.com/foo redirecting to https://example.com/bar\x0d\n   * would have a cache key of https://example.com/foo and baseURL\x0d\n   * of https://example.com/bar\x0d\n   *\x0d\n   * MUST BE SYNCHRONOUS for import.meta initialization\x0d\n   * MUST BE CALLED AFTER receiving the url body due to I/O\x0d\n   * @param {string} url\x0d\n   * @returns {string}\x0d\n   */\x0d\n  getBaseURL(url) {\x0d\n    if (\x0d\n      StringPrototypeStartsWith(url\x2C 'http:') ||\x0d\n      StringPrototypeStartsWith(url\x2C 'https:')\x0d\n    ) {\x0d\n      // The request & response have already settled\x2C so they are in\x0d\n      // fetchModule's cache\x2C in which case\x2C fetchModule returns\x0d\n      // immediately and synchronously\x0d\n      url = fetchModule(new URL(url)\x2C { parentURL: url }).resolvedHREF;\x0d\n      // This should only occur if the module hasn't been fetched yet\x0d\n      if (typeof url !== 'string') {\x0d\n        throw new ERR_INTERNAL_ASSERTION(`Base url for module ${url} not loaded.`);\x0d\n      }\x0d\n    }\x0d\n    return url;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Get a (possibly still pending) module job from the cache\x2C\x0d\n   * or create one and return its Promise.\x0d\n   * @param {string} specifier The string after `from` in an `import` statement\x2C\x0d\n   *                           or the first parameter of an `import()`\x0d\n   *                           expression\x0d\n   * @param {string | undefined} parentURL The URL of the module importing this\x0d\n   *                                     one\x2C unless this is the Node.js entry\x0d\n   *                                     point.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  async getModuleJob(specifier\x2C parentURL\x2C importAssertions) {\x0d\n    let importAssertionsForResolve;\x0d\n    if (this.#loaders.length !== 1) {\x0d\n      // We can skip cloning if there are no user provided loaders because\x0d\n      // the Node.js default resolve hook does not use import assertions.\x0d\n      importAssertionsForResolve =\x0d\n        ObjectAssign(ObjectCreate(null)\x2C importAssertions);\x0d\n    }\x0d\n    const { format\x2C url } =\x0d\n      await this.resolve(specifier\x2C parentURL\x2C importAssertionsForResolve);\x0d\n\x0d\n    let job = this.moduleMap.get(url\x2C importAssertions.type);\x0d\n\x0d\n    // CommonJS will set functions for lazy job evaluation.\x0d\n    if (typeof job === 'function') {\x0d\n      this.moduleMap.set(url\x2C undefined\x2C job = job());\x0d\n    }\x0d\n\x0d\n    if (job === undefined) {\x0d\n      job = this.#createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format);\x0d\n    }\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Create and cache an object representing a loaded module.\x0d\n   * @param {string} url The absolute URL that was resolved for this module\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @param {string} [parentURL] The absolute URL of the module importing this\x0d\n   *                             one\x2C unless this is the Node.js entry point\x0d\n   * @param {string} [format] The format hint possibly returned by the\x0d\n   *                          `resolve` hook\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  #createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format) {\x0d\n    const moduleProvider = async (url\x2C isMain) => {\x0d\n      const {\x0d\n        format: finalFormat\x2C\x0d\n        source\x2C\x0d\n      } = await this.load(url\x2C {\x0d\n        format\x2C\x0d\n        importAssertions\x2C\x0d\n      });\x0d\n\x0d\n      const translator = translators.get(finalFormat);\x0d\n\x0d\n      if (!translator) {\x0d\n        throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat\x2C url);\x0d\n      }\x0d\n\x0d\n      return FunctionPrototypeCall(translator\x2C this\x2C url\x2C source\x2C isMain);\x0d\n    };\x0d\n\x0d\n    const inspectBrk = (\x0d\n      parentURL === undefined &&\x0d\n      getOptionValue('--inspect-brk')\x0d\n    );\x0d\n\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C\x0d\n      url\x2C\x0d\n      importAssertions\x2C\x0d\n      moduleProvider\x2C\x0d\n      parentURL === undefined\x2C\x0d\n      inspectBrk\x0d\n    );\x0d\n\x0d\n    this.moduleMap.set(url\x2C importAssertions.type\x2C job);\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * This method is usually called indirectly as part of the loading processes.\x0d\n   * Internally\x2C it is used directly to add loaders. Use directly with caution.\x0d\n   *\x0d\n   * This method must NOT be renamed: it functions as a dynamic import on a\x0d\n   * loader module.\x0d\n   *\x0d\n   * @param {string | string[]} specifiers Path(s) to the module.\x0d\n   * @param {string} parentURL Path of the parent importing the module.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<object | object[]>} A list of module export(s).\x0d\n   */\x0d\n  async import(specifiers\x2C parentURL\x2C importAssertions) {\x0d\n    const wasArr = ArrayIsArray(specifiers);\x0d\n    if (!wasArr) specifiers = [specifiers];\x0d\n\x0d\n    const count = specifiers.length;\x0d\n    const jobs = new Array(count);\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      jobs[i] = this.getModuleJob(specifiers[i]\x2C parentURL\x2C importAssertions)\x0d\n        .then((job) => job.run())\x0d\n        .then(({ module }) => module.getNamespace());\x0d\n    }\x0d\n\x0d\n    const namespaces = await PromiseAll(new SafeArrayIterator(jobs));\x0d\n\x0d\n    return wasArr ?\x0d\n      namespaces :\x0d\n      namespaces[0];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954\x0d\n   * @param {string} url The URL/path of the module to be loaded\x0d\n   * @param {object} context Metadata about the module\x0d\n   * @returns {object}\x0d\n   */\x0d\n  async load(url\x2C context = {}) {\x0d\n    const defaultLoader = this.#loaders[0];\x0d\n\x0d\n    const loader = this.#loaders.length === 1 ?\x0d\n      defaultLoader :\x0d\n      this.#loaders[1];\x0d\n    const loaded = await loader(url\x2C context\x2C defaultLoader);\x0d\n\x0d\n    if (typeof loaded !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader load'\x2C\x0d\n        loaded\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    } = loaded;\x0d\n\x0d\n    if (format == null) {\x0d\n      const dataUrl = RegExpPrototypeExec(\x0d\n        /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n\x0d\n      throw new ERR_UNKNOWN_MODULE_FORMAT(\x0d\n        dataUrl ? dataUrl[1] : format\x2C\x0d\n        url);\x0d\n    }\x0d\n\x0d\n    if (typeof format !== 'string') {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (\x0d\n      source != null &&\x0d\n      typeof source !== 'string' &&\x0d\n      !isAnyArrayBuffer(source) &&\x0d\n      !isArrayBufferView(source)\x0d\n    ) throw ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n      'string\x2C an ArrayBuffer\x2C or a TypedArray'\x2C\x0d\n      'loader load'\x2C\x0d\n      'source'\x2C\x0d\n      source\x0d\n    );\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  preload() {\x0d\n    const count = this.#globalPreloaders.length;\x0d\n    if (!count) return;\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      const channel = new MessageChannel();\x0d\n      const {\x0d\n        port1: insidePreload\x2C\x0d\n        port2: insideLoader\x2C\x0d\n      } = channel;\x0d\n\x0d\n      insidePreload.unref();\x0d\n      insideLoader.unref();\x0d\n\x0d\n      const preload = this.#globalPreloaders[i]({\x0d\n        port: insideLoader\x0d\n      });\x0d\n\x0d\n      if (preload == null) return;\x0d\n\x0d\n      if (typeof preload !== 'string') {\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'string'\x2C\x0d\n          'loader globalPreloadCode'\x2C\x0d\n          preload\x2C\x0d\n        );\x0d\n      }\x0d\n      const { compileFunction } = require('vm');\x0d\n      const preloadInit = compileFunction(\x0d\n        preload\x2C\x0d\n        ['getBuiltin'\x2C 'port'\x2C 'setImportMetaCallback']\x2C\x0d\n        {\x0d\n          filename: '<preload>'\x2C\x0d\n        }\x0d\n      );\x0d\n      const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n      // We only allow replacing the importMetaInitializer during preload\x2C\x0d\n      // after preload is finished\x2C we disable the ability to replace it\x0d\n      //\x0d\n      // This exposes accidentally setting the initializer too late by\x0d\n      // throwing an error.\x0d\n      let finished = false;\x0d\n      let replacedImportMetaInitializer = false;\x0d\n      let next = this.#importMetaInitializer;\x0d\n      try {\x0d\n        // Calls the compiled preload source text gotten from the hook\x0d\n        // Since the parameters are named we use positional parameters\x0d\n        // see compileFunction above to cross reference the names\x0d\n        FunctionPrototypeCall(\x0d\n          preloadInit\x2C\x0d\n          globalThis\x2C\x0d\n          // Param getBuiltin\x0d\n          (builtinName) => {\x0d\n            if (NativeModule.canBeRequiredByUsers(builtinName)) {\x0d\n              return require(builtinName);\x0d\n            }\x0d\n            throw new ERR_INVALID_ARG_VALUE('builtinName'\x2C builtinName);\x0d\n          }\x2C\x0d\n          // Param port\x0d\n          insidePreload\x2C\x0d\n          // Param setImportMetaCallback\x0d\n          (fn) => {\x0d\n            if (finished || typeof fn !== 'function') {\x0d\n              throw new ERR_INVALID_ARG_TYPE('fn'\x2C fn);\x0d\n            }\x0d\n            replacedImportMetaInitializer = true;\x0d\n            const parent = next;\x0d\n            next = (meta\x2C context) => {\x0d\n              return fn(meta\x2C context\x2C parent);\x0d\n            };\x0d\n          });\x0d\n      } finally {\x0d\n        finished = true;\x0d\n        if (replacedImportMetaInitializer) {\x0d\n          this.#importMetaInitializer = next;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  importMetaInitialize(meta\x2C context) {\x0d\n    this.#importMetaInitializer(meta\x2C context);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954.\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   *                                   be resolved.\x0d\n   * @param {string} [parentURL] The URL path of the module's parent.\x0d\n   * @param {ImportAssertions} [importAssertions] Assertions from the import\x0d\n   *                                              statement or expression.\x0d\n   * @returns {{ url: string }}\x0d\n   */\x0d\n  async resolve(\x0d\n    originalSpecifier\x2C\x0d\n    parentURL\x2C\x0d\n    importAssertions = ObjectCreate(null)\x0d\n  ) {\x0d\n    const isMain = parentURL === undefined;\x0d\n\x0d\n    if (\x0d\n      !isMain &&\x0d\n      typeof parentURL !== 'string' &&\x0d\n      !isURLInstance(parentURL)\x0d\n    ) throw new ERR_INVALID_ARG_TYPE(\x0d\n      'parentURL'\x2C\x0d\n      ['string'\x2C 'URL']\x2C\x0d\n      parentURL\x2C\x0d\n    );\x0d\n\x0d\n    const conditions = DEFAULT_CONDITIONS;\x0d\n\x0d\n    const defaultResolver = this.#resolvers[0];\x0d\n\x0d\n    const resolver = this.#resolvers.length === 1 ?\x0d\n      defaultResolver :\x0d\n      this.#resolvers[1];\x0d\n    const resolution = await resolver(\x0d\n      originalSpecifier\x2C\x0d\n      {\x0d\n        conditions\x2C\x0d\n        importAssertions\x2C\x0d\n        parentURL\x2C\x0d\n      }\x2C\x0d\n      defaultResolver\x2C\x0d\n    );\x0d\n\x0d\n    if (typeof resolution !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        resolution\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const { format\x2C url } = resolution;\x0d\n\x0d\n    if (\x0d\n      format != null &&\x0d\n      typeof format !== 'string'\x0d\n    ) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (typeof url !== 'string') { // non-strings can be coerced to a url string\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'url'\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    new URL(url); // Intentionally trigger error if `url` is invalid\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      url\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(ESMLoader.prototype\x2C null);\x0d\n\x0d\nexports.ESMLoader = ESMLoader;\x0d\n
code-source-info,0x24dc49e2cbe,114,0,18635,C0O0C4O18635,,
code-creation,Function,10,1438718,0x24dc49e358e,659, node:internal/modules/esm/loader:1:1,0x24dc49e2c38,~
code-source-info,0x24dc49e358e,114,0,18635,C0O0C122O82C128O82C132O136C138O146C144O163C150O186C156O209C162O235C168O261C174O278C180O295C185O320C191O335C197O359C203O381C209O397C215O427C221O485C227O485C232O466C238O706C244O706C249O732C254O530C260O557C266O582C272O608C278O646C284O675C290O787C296O787C301O749C307O764C313O779C319O869C325O869C330O824C336O845C342O920C348O920C352O920C354O983C360O983C364O983C366O1085C372O1085C377O1041C383O1060C389O1164C395O1164C400O1138C406O1245C412O1245C417O1229C423O1308C429O1308C434O1292C440O1385C446O1385C451O1366C457O1444C463O1444C468O1426C639O18582C646O18551C651O18603C653O18621C658O18634,,
code-creation,Function,10,1438922,0x24dc49e3a36,154,<instance_members_initializer> node:internal/modules/esm/loader:68:3,0x24dc49e30b0,~
code-source-info,0x24dc49e3a36,114,1944,2827,C3O1964C17O2126C28O2133C45O2315C56O2322C73O2374C88O2473C95O2473C109O2596C119O2688C126O2688C140O2816C153O2827,,
code-creation,Eval,10,1439527,0x24dc49e540e,5, node:internal/modules/esm/module_map:1:1,0x24dc49e5220,~
script-source,115,node:internal/modules/esm/module_map,'use strict';\x0d\n\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\nconst { kImplicitAssertType } = require('internal/modules/esm/assert');\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\n// Tracks the state of the loader-level module cache\x0d\nclass ModuleMap extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  get(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type];\x0d\n  }\x0d\n  set(url\x2C type = kImplicitAssertType\x2C job) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    if (job instanceof ModuleJob !== true &&\x0d\n        typeof job !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\x0d\n    }\x0d\n    debug(`Storing ${url} (${\x0d\n      type === kImplicitAssertType ? 'implicit type' : type\x0d\n    }) in ModuleMap`);\x0d\n    const cachedJobsForUrl = super.get(url) ?? ObjectCreate(null);\x0d\n    cachedJobsForUrl[type] = job;\x0d\n    return super.set(url\x2C cachedJobsForUrl);\x0d\n  }\x0d\n  has(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type] !== undefined;\x0d\n  }\x0d\n}\x0d\nmodule.exports = ModuleMap;\x0d\n
code-source-info,0x24dc49e540e,115,0,1487,C0O0C4O1487,,
code-creation,Function,10,1439788,0x24dc49e5846,175, node:internal/modules/esm/module_map:1:1,0x24dc49e5388,~
code-source-info,0x24dc49e5846,115,0,1487,C0O0C23O35C26O35C30O35C32O112C35O112C40O88C46O164C52O181C57O221C60O221C65O254C78O255C84O221C86O335C89O335C94O361C99O310C105O397C108O397C113O378C123O510C167O1458C169O1473C174O1486,,
code-creation,Eval,10,1440497,0x24dc49e62ee,5, node:internal/modules/esm/module_job:1:1,0x24dc49e5ff8,~
script-source,116,node:internal/modules/esm/module_job,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromisePrototypeCatch\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ModuleWrap } = internalBinding('module_wrap');\x0d\n\x0d\nconst { decorateErrorStack } = require('internal/util');\x0d\nconst {\x0d\n  getSourceMapsEnabled\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst assert = require('internal/assert');\x0d\nconst resolvedPromise = PromiseResolve();\x0d\n\x0d\nconst noop = FunctionPrototype;\x0d\n\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nconst CJSGlobalLike = [\x0d\n  'require'\x2C\x0d\n  'module'\x2C\x0d\n  'exports'\x2C\x0d\n  '__filename'\x2C\x0d\n  '__dirname'\x2C\x0d\n];\x0d\nconst isCommonJSGlobalLikeNotDefinedError = (errorMessage) =>\x0d\n  ArrayPrototypeSome(\x0d\n    CJSGlobalLike\x2C\x0d\n    (globalLike) => errorMessage === `${globalLike} is not defined`\x0d\n  );\x0d\n\x0d\n/* A ModuleJob tracks the loading of a single Module\x2C and the ModuleJobs of\x0d\n * its dependencies\x2C over time. */\x0d\nclass ModuleJob {\x0d\n  // `loader` is the Loader instance used for loading dependencies.\x0d\n  // `moduleProvider` is a function\x0d\n  constructor(loader\x2C url\x2C importAssertions = ObjectCreate(null)\x2C\x0d\n              moduleProvider\x2C isMain\x2C inspectBrk) {\x0d\n    this.loader = loader;\x0d\n    this.importAssertions = importAssertions;\x0d\n    this.isMain = isMain;\x0d\n    this.inspectBrk = inspectBrk;\x0d\n\x0d\n    this.module = undefined;\x0d\n    // Expose the promise to the ModuleWrap directly for linking below.\x0d\n    // `this.module` is also filled in below.\x0d\n    this.modulePromise = ReflectApply(moduleProvider\x2C loader\x2C [url\x2C isMain]);\x0d\n\x0d\n    // Wait for the ModuleWrap instance being linked with all dependencies.\x0d\n    const link = async () => {\x0d\n      this.module = await this.modulePromise;\x0d\n      assert(this.module instanceof ModuleWrap);\x0d\n\x0d\n      // Explicitly keeping track of dependency jobs is needed in order\x0d\n      // to flatten out the dependency graph below in `_instantiate()`\x2C\x0d\n      // so that circular dependencies can't cause a deadlock by two of\x0d\n      // these `link` callbacks depending on each other.\x0d\n      const dependencyJobs = [];\x0d\n      const promises = this.module.link(async (specifier\x2C assertions) => {\x0d\n        const baseURL = this.loader.getBaseURL(url);\x0d\n        const jobPromise = this.loader.getModuleJob(specifier\x2C baseURL\x2C assertions);\x0d\n        ArrayPrototypePush(dependencyJobs\x2C jobPromise);\x0d\n        const job = await jobPromise;\x0d\n        return job.modulePromise;\x0d\n      });\x0d\n\x0d\n      if (promises !== undefined)\x0d\n        await PromiseAll(new SafeArrayIterator(promises));\x0d\n\x0d\n      return PromiseAll(new SafeArrayIterator(dependencyJobs));\x0d\n    };\x0d\n    // Promise for the list of all dependencyJobs.\x0d\n    this.linked = link();\x0d\n    // This promise is awaited later anyway\x2C so silence\x0d\n    // 'unhandled rejection' warnings.\x0d\n    PromisePrototypeCatch(this.linked\x2C noop);\x0d\n\x0d\n    // instantiated == deep dependency jobs wrappers are instantiated\x2C\x0d\n    // and module wrapper is instantiated.\x0d\n    this.instantiated = undefined;\x0d\n  }\x0d\n\x0d\n  instantiate() {\x0d\n    if (this.instantiated === undefined) {\x0d\n      this.instantiated = this._instantiate();\x0d\n    }\x0d\n    return this.instantiated;\x0d\n  }\x0d\n\x0d\n  async _instantiate() {\x0d\n    const jobsInGraph = new SafeSet();\x0d\n    const addJobsToDependencyGraph = async (moduleJob) => {\x0d\n      if (jobsInGraph.has(moduleJob)) {\x0d\n        return;\x0d\n      }\x0d\n      jobsInGraph.add(moduleJob);\x0d\n      const dependencyJobs = await moduleJob.linked;\x0d\n      return PromiseAll(new SafeArrayIterator(\x0d\n        ArrayPrototypeMap(dependencyJobs\x2C addJobsToDependencyGraph)));\x0d\n    };\x0d\n    await addJobsToDependencyGraph(this);\x0d\n\x0d\n    try {\x0d\n      if (!hasPausedEntry && this.inspectBrk) {\x0d\n        hasPausedEntry = true;\x0d\n        const initWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n        initWrapper(this.module.instantiate\x2C this.module);\x0d\n      } else {\x0d\n        this.module.instantiate();\x0d\n      }\x0d\n    } catch (e) {\x0d\n      decorateErrorStack(e);\x0d\n      // TODO(@bcoe): Add source map support to exception that occurs as result\x0d\n      // of missing named export. This is currently not possible because\x0d\n      // stack trace originates in module_job\x2C not the file itself. A hidden\x0d\n      // symbol with filename could be set in node_errors.cc to facilitate this.\x0d\n      if (!getSourceMapsEnabled() &&\x0d\n          StringPrototypeIncludes(e.message\x2C\x0d\n                                  ' does not provide an export named')) {\x0d\n        const splitStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n        const parentFileUrl = StringPrototypeReplace(\x0d\n          splitStack[0]\x2C\x0d\n          /:\\d+$/\x2C\x0d\n          ''\x0d\n        );\x0d\n        const { 1: childSpecifier\x2C 2: name } = StringPrototypeMatch(\x0d\n          e.message\x2C\x0d\n          /module '(.*)' does not provide an export named '(.+)'/);\x0d\n        const { url: childFileURL } = await this.loader.resolve(\x0d\n          childSpecifier\x2C parentFileUrl\x2C\x0d\n        );\x0d\n        let format;\x0d\n        try {\x0d\n          // This might throw for non-CommonJS modules because we aren't passing\x0d\n          // in the import assertions and some formats require them; but we only\x0d\n          // care about CommonJS for the purposes of this error message.\x0d\n          ({ format } =\x0d\n            await this.loader.load(childFileURL));\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n\x0d\n        if (format === 'commonjs') {\x0d\n          const importStatement = splitStack[1];\x0d\n          // TODO(@ctavan): The original error stack only provides the single\x0d\n          // line which causes the error. For multi-line import statements we\x0d\n          // cannot generate an equivalent object destructuring assignment by\x0d\n          // just parsing the error stack.\x0d\n          const oneLineNamedImports = StringPrototypeMatch(importStatement\x2C /{.*}/);\x0d\n          const destructuringAssignment = oneLineNamedImports &&\x0d\n            StringPrototypeReplace(oneLineNamedImports\x2C /\\s+as\\s+/g\x2C ': ');\x0d\n          e.message = `Named export '${name}' not found. The requested module` +\x0d\n            ` '${childSpecifier}' is a CommonJS module\x2C which may not support` +\x0d\n            ' all module.exports as named exports.\\nCommonJS modules can ' +\x0d\n            'always be imported via the default export\x2C for example using:' +\x0d\n            `\\n\\nimport pkg from '${childSpecifier}';\\n${\x0d\n              destructuringAssignment ?\x0d\n                `const ${destructuringAssignment} = pkg;\\n` : ''}`;\x0d\n          const newStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n          newStack[3] = `SyntaxError: ${e.message}`;\x0d\n          e.stack = ArrayPrototypeJoin(newStack\x2C '\\n');\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n\x0d\n    for (const dependencyJob of jobsInGraph) {\x0d\n      // Calling `this.module.instantiate()` instantiates not only the\x0d\n      // ModuleWrap in this module\x2C but all modules in the graph.\x0d\n      dependencyJob.instantiated = resolvedPromise;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async run() {\x0d\n    await this.instantiate();\x0d\n    const timeout = -1;\x0d\n    const breakOnSigint = false;\x0d\n    try {\x0d\n      await this.module.evaluate(timeout\x2C breakOnSigint);\x0d\n    } catch (e) {\x0d\n      if (e?.name === 'ReferenceError' &&\x0d\n          isCommonJSGlobalLikeNotDefinedError(e.message)) {\x0d\n        e.message += ' in ES module scope';\x0d\n\x0d\n        if (StringPrototypeStartsWith(e.message\x2C 'require ')) {\x0d\n          e.message += '\x2C you can use import instead';\x0d\n        }\x0d\n\x0d\n        const packageConfig =\x0d\n          StringPrototypeStartsWith(this.module.url\x2C 'file://') &&\x0d\n            RegExpPrototypeTest(/\\.js(\\?[^#]*)?(#.*)?$/\x2C this.module.url) &&\x0d\n            require('internal/modules/esm/resolve')\x0d\n              .getPackageScopeConfig(this.module.url);\x0d\n        if (packageConfig.type === 'module') {\x0d\n          e.message +=\x0d\n            '\\nThis file is being treated as an ES module because it has a ' +\x0d\n            `'.js' file extension and '${packageConfig.pjsonPath}' contains ` +\x0d\n            '"type": "module". To treat it as a CommonJS script\x2C rename it ' +\x0d\n            'to use the \\'.cjs\\' file extension.';\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n    return { module: this.module };\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ModuleJob.prototype\x2C null);\x0d\nmodule.exports = ModuleJob;\x0d\n
code-source-info,0x24dc49e62ee,116,0,8465,C0O0C4O8465,,
code-creation,Function,10,1441755,0x24dc49e67e6,343, node:internal/modules/esm/module_job:1:1,0x24dc49e6268,~
code-source-info,0x24dc49e67e6,116,0,8465,C0O0C88O28C94O51C100O73C106O96C112O119C117O141C123O158C128O183C134O198C139O217C145O243C151O260C157O284C163O306C169O318C175O346C181O371C187O398C193O423C199O494C205O494C210O479C216O560C222O560C227O537C233O625C239O625C244O598C250O690C256O690C260O690C262O743C265O743C267O777C269O777C271O820C272O820C274O852C278O852C280O977C284O977C323O8417C330O8386C335O8436C337O8451C342O8464,,
code-creation,Eval,10,1442619,0x24dc49e843e,5, node:internal/modules/esm/assert:1:1,0x24dc49e8248,~
script-source,117,node:internal/modules/esm/assert,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectValues\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n} = primordials;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ERR_IMPORT_ASSERTION_TYPE_FAILED\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_MISSING\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\n// The HTML spec has an implied default type of `'javascript'`.\x0d\nconst kImplicitAssertType = 'javascript';\x0d\n\x0d\n/**\x0d\n * Define a map of module formats to import assertion types (the value of\x0d\n * `type` in `assert { type: 'json' }`).\x0d\n * @type {Map<string\x2C string>}\x0d\n */\x0d\nconst formatTypeMap = {\x0d\n  '__proto__': null\x2C\x0d\n  'builtin': kImplicitAssertType\x2C\x0d\n  'commonjs': kImplicitAssertType\x2C\x0d\n  'json': 'json'\x2C\x0d\n  'module': kImplicitAssertType\x2C\x0d\n  'wasm': kImplicitAssertType\x2C // It's unclear whether the HTML spec will require an assertion type or not for Wasm; see https://github.com/WebAssembly/esm-integration/issues/42\x0d\n};\x0d\n\x0d\n/**\x0d\n * The HTML spec disallows the default type to be explicitly specified\x0d\n * (for now); so `import './file.js'` is okay but\x0d\n * `import './file.js' assert { type: 'javascript' }` throws.\x0d\n * @type {Array<string\x2C string>}\x0d\n */\x0d\nconst supportedAssertionTypes = ArrayPrototypeFilter(\x0d\n  ObjectValues(formatTypeMap)\x2C\x0d\n  (type) => type !== kImplicitAssertType);\x0d\n\x0d\n\x0d\n/**\x0d\n * Test a module's import assertions.\x0d\n * @param {string} url The URL of the imported module\x2C for error reporting.\x0d\n * @param {string} format One of Node's supported translators\x0d\n * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n *                                                  module import.\x0d\n * @returns {true}\x0d\n * @throws {TypeError} If the format and assertion type are incompatible.\x0d\n */\x0d\nfunction validateAssertions(url\x2C format\x2C\x0d\n                            importAssertions = ObjectCreate(null)) {\x0d\n  const validType = formatTypeMap[format];\x0d\n\x0d\n  switch (validType) {\x0d\n    case undefined:\x0d\n      // Ignore assertions for module formats we don't recognize\x2C to allow new\x0d\n      // formats in the future.\x0d\n      return true;\x0d\n\x0d\n    case kImplicitAssertType:\x0d\n      // This format doesn't allow an import assertion type\x2C so the property\x0d\n      // must not be set on the import assertions object.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        return true;\x0d\n      }\x0d\n      return handleInvalidType(url\x2C importAssertions.type);\x0d\n\x0d\n    case importAssertions.type:\x0d\n      // The asserted type is the valid type for this format.\x0d\n      return true;\x0d\n\x0d\n    default:\x0d\n      // There is an expected type for this format\x2C but the value of\x0d\n      // `importAssertions.type` might not have been it.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        // `type` wasn't specified at all.\x0d\n        throw new ERR_IMPORT_ASSERTION_TYPE_MISSING(url\x2C validType);\x0d\n      }\x0d\n      handleInvalidType(url\x2C importAssertions.type);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Throw the correct error depending on what's wrong with the type assertion.\x0d\n * @param {string} url The resolved URL for the module to be imported\x0d\n * @param {string} type The value of the import assertion `type` property\x0d\n */\x0d\nfunction handleInvalidType(url\x2C type) {\x0d\n  // `type` might have not been a string.\x0d\n  validateString(type\x2C 'type');\x0d\n\x0d\n  // `type` might not have been one of the types we understand.\x0d\n  if (!ArrayPrototypeIncludes(supportedAssertionTypes\x2C type)) {\x0d\n    throw new ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED(type);\x0d\n  }\x0d\n\x0d\n  // `type` was the wrong value for this format.\x0d\n  throw new ERR_IMPORT_ASSERTION_TYPE_FAILED(url\x2C type);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kImplicitAssertType\x2C\x0d\n  validateAssertions\x2C\x0d\n};\x0d\n
code-source-info,0x24dc49e843e,117,0,3734,C0O0C4O3734,,
code-creation,Function,10,1443270,0x24dc49e8716,201, node:internal/modules/esm/assert:1:1,0x24dc49e83b8,~
code-source-info,0x24dc49e8716,117,0,3734,C0O0C46O28C51O53C57O80C63O97C68O114C74O191C77O191C82O172C88O356C91O356C96O382C101O237C107O274C113O312C119O486C121O486C123O684C130O722C136O758C142O811C148O843C154O684C156O1280C159O1305C169O1280C174O1280C176O3663C183O3685C189O3709C195O3678C200O3733,,
code-creation,LazyCompile,10,1443655,0x24dc49e8d26,9, node:internal/modules/esm/assert:43:3,0x24dc49e8510,~
code-source-info,0x24dc49e8d26,117,1337,1375,C0O1352C2O1356C4O1352C8O1375,,
tick,0x7ff7de84e4bd,1443868,0,0x0,3,0x7ff7dde840c0,0x7ff7de337ff7,0x24dc49e87bf,0x22e32684f03,0x22e326848e5,0x24dc49e5869,0x22e32684f03,0x22e326848e5,0x24dc49e36ea,0x22e32684f03,0x22e326848e5,0x24dc49e19fc,0x22e32684f03,0x22e326848e5,0x24dc49dd261,0x22e32684f03,0x22e326848e5,0x24dc49d90cc,0x22cec146526,0x22cec142065
code-creation,Eval,10,1446064,0x24dc49ea966,5, node:internal/modules/esm/resolve:1:1,0x24dc49ea1a8,~
script-source,118,node:internal/modules/esm/resolve,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  realpathSync\x2C\x0d\n  statSync\x2C\x0d\n  Stats\x2C\x0d\n} = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst { sep\x2C relative\x2C resolve } = require('path');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst typeFlag = getOptionValue('--input-type');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\nconst { URL\x2C pathToFileURL\x2C fileURLToPath } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n  ERR_INVALID_PACKAGE_TARGET\x2C\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\x0d\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\x0d\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\x0d\n\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\nconst DEFAULT_CONDITIONS = ObjectFreeze([\x0d\n  'node'\x2C\x0d\n  'import'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nconst DEFAULT_CONDITIONS_SET = new SafeSet(DEFAULT_CONDITIONS);\x0d\n\x0d\n/**\x0d\n * @typedef {string | string[] | Record<string\x2C unknown>} Exports\x0d\n * @typedef {'module' | 'commonjs'} PackageType\x0d\n * @typedef {{\x0d\n *   pjsonPath: string\x2C\x0d\n *   exports?: ExportConfig\x2C\x0d\n *   name?: string\x2C\x0d\n *   main?: string\x2C\x0d\n *   type?: PackageType\x2C\x0d\n * }} PackageConfig\x0d\n */\x0d\n\x0d\nconst emittedPackageWarnings = new SafeSet();\x0d\n\x0d\n/**\x0d\n * @param {string} match\x0d\n * @param {URL} pjsonUrl\x0d\n * @param {boolean} isExports\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitFolderMapDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated folder mapping "${match}" in the ${isExports ?\x0d\n      '"exports"' : '"imports"'} field module resolution of the package at ${\x0d\n      pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.\\n` +\x0d\n      `Update this package.json to use a subpath pattern like "${match}*".`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0148'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  if (!pendingDeprecation) return;\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ${\x0d\n      isExports ? '"exports"' : '"imports"'} field module resolution of the ` +\x0d\n      `package at ${pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` :\x0d\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0155'\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {string} main\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\x0d\n  const format = defaultGetFormatWithoutErrors(url);\x0d\n  if (format !== 'module')\x0d\n    return;\x0d\n  const path = fileURLToPath(url);\x0d\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\x0d\n  const basePath = fileURLToPath(base);\x0d\n  if (main)\x0d\n    process.emitWarning(\x0d\n      `Package ${pkgPath} has a "main" field set to ${JSONStringify(main)}\x2C ` +\x0d\n      `excluding the full filename and extension to the resolved file at "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\x0d\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\x0d\n      'deprecated for ES modules.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n  else\x0d\n    process.emitWarning(\x0d\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\x0d\n      } resolving the main entry point "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\x0d\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string[]} [conditions]\x0d\n * @returns {Set<string>}\x0d\n */\x0d\nfunction getConditionsSet(conditions) {\x0d\n  if (conditions !== undefined && conditions !== DEFAULT_CONDITIONS) {\x0d\n    if (!ArrayIsArray(conditions)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\x0d\n                                      'expected an array');\x0d\n    }\x0d\n    return new SafeSet(conditions);\x0d\n  }\x0d\n  return DEFAULT_CONDITIONS_SET;\x0d\n}\x0d\n\x0d\nconst realpathCache = new SafeMap();\x0d\nconst packageJSONCache = new SafeMap(); /* string -> PackageConfig */\x0d\n\x0d\n/**\x0d\n * @param {string | URL} path\x0d\n * @returns {import('fs').Stats}\x0d\n */\x0d\nconst tryStatSync =\x0d\n  (path) => statSync(path\x2C { throwIfNoEntry: false }) ?? new Stats();\x0d\n\x0d\n/**\x0d\n * @param {string} path\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageConfig(path\x2C specifier\x2C base) {\x0d\n  const existing = packageJSONCache.get(path);\x0d\n  if (existing !== undefined) {\x0d\n    return existing;\x0d\n  }\x0d\n  const source = packageJsonReader.read(path).string;\x0d\n  if (source === undefined) {\x0d\n    const packageConfig = {\x0d\n      pjsonPath: path\x2C\x0d\n      exists: false\x2C\x0d\n      main: undefined\x2C\x0d\n      name: undefined\x2C\x0d\n      type: 'none'\x2C\x0d\n      exports: undefined\x2C\x0d\n      imports: undefined\x2C\x0d\n    };\x0d\n    packageJSONCache.set(path\x2C packageConfig);\x0d\n    return packageConfig;\x0d\n  }\x0d\n\x0d\n  let packageJSON;\x0d\n  try {\x0d\n    packageJSON = JSONParse(source);\x0d\n  } catch (error) {\x0d\n    throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n      path\x2C\x0d\n      (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\x0d\n      error.message\x0d\n    );\x0d\n  }\x0d\n\x0d\n  let { imports\x2C main\x2C name\x2C type } = packageJSON;\x0d\n  const { exports } = packageJSON;\x0d\n  if (typeof imports !== 'object' || imports === null) imports = undefined;\x0d\n  if (typeof main !== 'string') main = undefined;\x0d\n  if (typeof name !== 'string') name = undefined;\x0d\n  // Ignore unknown types for forwards compatibility\x0d\n  if (type !== 'module' && type !== 'commonjs') type = 'none';\x0d\n\x0d\n  const packageConfig = {\x0d\n    pjsonPath: path\x2C\x0d\n    exists: true\x2C\x0d\n    main\x2C\x0d\n    name\x2C\x0d\n    type\x2C\x0d\n    exports\x2C\x0d\n    imports\x2C\x0d\n  };\x0d\n  packageJSONCache.set(path\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | string} resolved\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageScopeConfig(resolved) {\x0d\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\x0d\n  while (true) {\x0d\n    const packageJSONPath = packageJSONUrl.pathname;\x0d\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json'))\x0d\n      break;\x0d\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl)\x2C\x0d\n                                           resolved);\x0d\n    if (packageConfig.exists) return packageConfig;\x0d\n\x0d\n    const lastPackageJSONUrl = packageJSONUrl;\x0d\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\x0d\n\x0d\n    // Terminates at root where ../package.json equals ../../package.json\x0d\n    // (can't just check "/package.json" for Windows support).\x0d\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) break;\x0d\n  }\x0d\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  const packageConfig = {\x0d\n    pjsonPath: packageJSONPath\x2C\x0d\n    exists: false\x2C\x0d\n    main: undefined\x2C\x0d\n    name: undefined\x2C\x0d\n    type: 'none'\x2C\x0d\n    exports: undefined\x2C\x0d\n    imports: undefined\x2C\x0d\n  };\x0d\n  packageJSONCache.set(packageJSONPath\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string | URL} url\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction fileExists(url) {\x0d\n  return statSync(url\x2C { throwIfNoEntry: false })?.isFile() ?? false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Legacy CommonJS main resolution:\x0d\n * 1. let M = pkg_url + (json main field)\x0d\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\x0d\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\x0d\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\x0d\n * 5. NOT_FOUND\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\x0d\n  let guess;\x0d\n  if (packageConfig.main !== undefined) {\x0d\n    // Note: fs check redundances will be handled by Descriptor cache here.\x0d\n    if (fileExists(guess = new URL(`./${packageConfig.main}`\x2C\x0d\n                                   packageJSONUrl))) {\x0d\n      return guess;\x0d\n    } else if (fileExists(guess = new URL(`./${packageConfig.main}.js`\x2C\x0d\n                                          packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.js`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else guess = undefined;\x0d\n    if (guess) {\x0d\n      emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C\x0d\n                                 packageConfig.main);\x0d\n      return guess;\x0d\n    }\x0d\n    // Fallthrough.\x0d\n  }\x0d\n  if (fileExists(guess = new URL('./index.js'\x2C packageJSONUrl)));\x0d\n  // So fs.\x0d\n  else if (fileExists(guess = new URL('./index.json'\x2C packageJSONUrl)));\x0d\n  else if (fileExists(guess = new URL('./index.node'\x2C packageJSONUrl)));\x0d\n  else guess = undefined;\x0d\n  if (guess) {\x0d\n    emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\x0d\n    return guess;\x0d\n  }\x0d\n  // Not found.\x0d\n  throw new ERR_MODULE_NOT_FOUND(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensionsWithTryExactName(search) {\x0d\n  if (fileExists(search)) return search;\x0d\n  return resolveExtensions(search);\x0d\n}\x0d\n\x0d\nconst extensions = ['.js'\x2C '.json'\x2C '.node'\x2C '.mjs'];\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensions(search) {\x0d\n  for (let i = 0; i < extensions.length; i++) {\x0d\n    const extension = extensions[i];\x0d\n    const guess = new URL(`${search.pathname}${extension}`\x2C search);\x0d\n    if (fileExists(guess)) return guess;\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveDirectoryEntry(search) {\x0d\n  const dirPath = fileURLToPath(search);\x0d\n  const pkgJsonPath = resolve(dirPath\x2C 'package.json');\x0d\n  if (fileExists(pkgJsonPath)) {\x0d\n    const pkgJson = packageJsonReader.read(pkgJsonPath);\x0d\n    if (pkgJson.containsKeys) {\x0d\n      const { main } = JSONParse(pkgJson.string);\x0d\n      if (main != null) {\x0d\n        const mainUrl = pathToFileURL(resolve(dirPath\x2C main));\x0d\n        return resolveExtensionsWithTryExactName(mainUrl);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return resolveExtensions(new URL('index'\x2C search));\x0d\n}\x0d\n\x0d\nconst encodedSepRegEx = /%2F|%5C/i;\x0d\nlet experimentalSpecifierResolutionWarned = false;\x0d\n/**\x0d\n * @param {URL} resolved\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction finalizeResolution(resolved\x2C base\x2C preserveSymlinks) {\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved.pathname))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\x0d\n      fileURLToPath(base));\x0d\n\x0d\n  let path = fileURLToPath(resolved);\x0d\n  if (getOptionValue('--experimental-specifier-resolution') === 'node') {\x0d\n    if (!experimentalSpecifierResolutionWarned) {\x0d\n      process.emitWarning(\x0d\n        'The Node.js specifier resolution flag is experimental. It could change or be removed at any time.'\x2C\x0d\n        'ExperimentalWarning');\x0d\n      experimentalSpecifierResolutionWarned = true;\x0d\n    }\x0d\n\x0d\n    let file = resolveExtensionsWithTryExactName(resolved);\x0d\n\x0d\n    // Directory\x0d\n    if (file === undefined) {\x0d\n      file = StringPrototypeEndsWith(path\x2C '/') ?\x0d\n        (resolveDirectoryEntry(resolved) || resolved) : resolveDirectoryEntry(new URL(`${resolved}/`));\x0d\n\x0d\n      if (file === resolved) return file;\x0d\n\x0d\n      if (file === undefined) {\x0d\n        throw new ERR_MODULE_NOT_FOUND(\x0d\n          resolved.pathname\x2C fileURLToPath(base)\x2C 'module');\x0d\n      }\x0d\n    }\x0d\n\x0d\n    path = file;\x0d\n  }\x0d\n\x0d\n  const stats = tryStatSync(StringPrototypeEndsWith(path\x2C '/') ?\x0d\n    StringPrototypeSlice(path\x2C -1) : path);\x0d\n  if (stats.isDirectory()) {\x0d\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base));\x0d\n    err.url = String(resolved);\x0d\n    throw err;\x0d\n  } else if (!stats.isFile()) {\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  if (!preserveSymlinks) {\x0d\n    const real = realpathSync(path\x2C {\x0d\n      [internalFS.realpathCacheKey]: realpathCache\x0d\n    });\x0d\n    const { search\x2C hash } = resolved;\x0d\n    resolved =\x0d\n        pathToFileURL(real + (StringPrototypeEndsWith(path\x2C sep) ? '/' : ''));\x0d\n    resolved.search = search;\x0d\n    resolved.hash = hash;\x0d\n  }\x0d\n\x0d\n  return resolved;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwImportNotDefined(specifier\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_IMPORT_NOT_DEFINED(\x0d\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\x0d\n    fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwExportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_PATH_NOT_EXPORTED(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\x0d\n    base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {boolean} internal\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwInvalidSubpath(subpath\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  const reason = `request is not a valid subpath for the "${internal ?\x0d\n    'imports' : 'exports'}" resolution of ${fileURLToPath(packageJSONUrl)}`;\x0d\n  throw new ERR_INVALID_MODULE_SPECIFIER(subpath\x2C reason\x2C\x0d\n                                         base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nfunction throwInvalidPackageTarget(\x0d\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  if (typeof target === 'object' && target !== null) {\x0d\n    target = JSONStringify(target\x2C null\x2C '');\x0d\n  } else {\x0d\n    target = `${target}`;\x0d\n  }\x0d\n  throw new ERR_INVALID_PACKAGE_TARGET(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\x0d\n    internal\x2C base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nconst invalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\\\|\\/|$)/i;\x0d\nconst invalidPackageNameRegEx = /^\\.|%|\\\\/;\x0d\nconst patternRegEx = /\\*/g;\x0d\n\x0d\nfunction resolvePackageTargetString(\x0d\n  target\x2C subpath\x2C match\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C conditions) {\x0d\n\x0d\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (!StringPrototypeStartsWith(target\x2C './')) {\x0d\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\x0d\n        !StringPrototypeStartsWith(target\x2C '/')) {\x0d\n      let isURL = false;\x0d\n      try {\x0d\n        new URL(target);\x0d\n        isURL = true;\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      if (!isURL) {\x0d\n        const exportTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target + subpath;\x0d\n        return packageResolve(\x0d\n          exportTarget\x2C packageJSONUrl\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  const resolved = new URL(target\x2C packageJSONUrl);\x0d\n  const resolvedPath = resolved.pathname;\x0d\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\x0d\n\x0d\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (subpath === '') return resolved;\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C subpath))\x0d\n    throwInvalidSubpath(match + subpath\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (pattern) {\x0d\n    return new URL(\x0d\n      RegExpPrototypeSymbolReplace(\x0d\n        patternRegEx\x2C\x0d\n        resolved.href\x2C\x0d\n        () => subpath\x0d\n      )\x0d\n    );\x0d\n  }\x0d\n\x0d\n  return new URL(subpath\x2C resolved);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} key\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isArrayIndex(key) {\x0d\n  const keyNum = +key;\x0d\n  if (`${keyNum}` !== key) return false;\x0d\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\x0d\n}\x0d\n\x0d\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\x0d\n                              base\x2C pattern\x2C internal\x2C conditions) {\x0d\n  if (typeof target === 'string') {\x0d\n    return resolvePackageTargetString(\x0d\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\x0d\n      conditions);\x0d\n  } else if (ArrayIsArray(target)) {\x0d\n    if (target.length === 0) {\x0d\n      return null;\x0d\n    }\x0d\n\x0d\n    let lastException;\x0d\n    for (let i = 0; i < target.length; i++) {\x0d\n      const targetItem = target[i];\x0d\n      let resolveResult;\x0d\n      try {\x0d\n        resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\x0d\n          internal\x2C conditions);\x0d\n      } catch (e) {\x0d\n        lastException = e;\x0d\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET') {\x0d\n          continue;\x0d\n        }\x0d\n        throw e;\x0d\n      }\x0d\n      if (resolveResult === undefined) {\x0d\n        continue;\x0d\n      }\x0d\n      if (resolveResult === null) {\x0d\n        lastException = null;\x0d\n        continue;\x0d\n      }\x0d\n      return resolveResult;\x0d\n    }\x0d\n    if (lastException === undefined || lastException === null)\x0d\n      return lastException;\x0d\n    throw lastException;\x0d\n  } else if (typeof target === 'object' && target !== null) {\x0d\n    const keys = ObjectGetOwnPropertyNames(target);\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (isArrayIndex(key)) {\x0d\n        throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n          '"exports" cannot contain numeric property keys.');\x0d\n      }\x0d\n    }\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (key === 'default' || conditions.has(key)) {\x0d\n        const conditionalTarget = target[key];\x0d\n        const resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\x0d\n          pattern\x2C internal\x2C conditions);\x0d\n        if (resolveResult === undefined)\x0d\n          continue;\x0d\n        return resolveResult;\x0d\n      }\x0d\n    }\x0d\n    return undefined;\x0d\n  } else if (target === null) {\x0d\n    return null;\x0d\n  }\x0d\n  throwInvalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\x0d\n                            base);\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {Exports} exports\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\x0d\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\x0d\n  if (typeof exports !== 'object' || exports === null) return false;\x0d\n\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  let isConditionalSugar = false;\x0d\n  let i = 0;\x0d\n  for (let j = 0; j < keys.length; j++) {\x0d\n    const key = keys[j];\x0d\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\x0d\n    if (i++ === 0) {\x0d\n      isConditionalSugar = curIsConditionalSugar;\x0d\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\x0d\n      throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\x0d\n        ' The exports object must either be an object of package subpath keys' +\x0d\n        ' or an object of main entry condition name keys only.');\x0d\n    }\x0d\n  }\x0d\n  return isConditionalSugar;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string} packageSubpath\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageExportsResolve(\x0d\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\x0d\n  let exports = packageConfig.exports;\x0d\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base))\x0d\n    exports = { '.': exports };\x0d\n\x0d\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\x0d\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\x0d\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\x0d\n    const target = exports[packageSubpath];\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C conditions\x0d\n    );\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: true };\x0d\n  }\x0d\n\x0d\n  let bestMatch = '';\x0d\n  let bestMatchSubpath;\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n    if (patternIndex !== -1 &&\x0d\n        StringPrototypeStartsWith(packageSubpath\x2C\x0d\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\x0d\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\x0d\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\x0d\n                                            true\x2C base);\x0d\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n      if (packageSubpath.length >= key.length &&\x0d\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\x0d\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n        bestMatch = key;\x0d\n        bestMatchSubpath = StringPrototypeSlice(\x0d\n          packageSubpath\x2C patternIndex\x2C\x0d\n          packageSubpath.length - patternTrailer.length);\x0d\n      }\x0d\n    } else if (key[key.length - 1] === '/' &&\x0d\n      StringPrototypeStartsWith(packageSubpath\x2C key) &&\x0d\n      patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n      bestMatch = key;\x0d\n      bestMatchSubpath = StringPrototypeSlice(packageSubpath\x2C key.length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (bestMatch) {\x0d\n    const target = exports[bestMatch];\x0d\n    const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C\x0d\n      target\x2C\x0d\n      bestMatchSubpath\x2C\x0d\n      bestMatch\x2C\x0d\n      base\x2C\x0d\n      pattern\x2C\x0d\n      false\x2C\x0d\n      conditions);\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    if (!pattern) {\x0d\n      emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C true\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: pattern };\x0d\n  }\x0d\n\x0d\n  throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\nfunction patternKeyCompare(a\x2C b) {\x0d\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\x0d\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\x0d\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\x0d\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\x0d\n  if (baseLenA > baseLenB) return -1;\x0d\n  if (baseLenB > baseLenA) return 1;\x0d\n  if (aPatternIndex === -1) return 1;\x0d\n  if (bPatternIndex === -1) return -1;\x0d\n  if (a.length > b.length) return -1;\x0d\n  if (b.length > a.length) return 1;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} name\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\x0d\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/')) {\x0d\n    const reason = 'is not a valid internal imports specifier name';\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\x0d\n  }\x0d\n  let packageJSONUrl;\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    const imports = packageConfig.imports;\x0d\n    if (imports) {\x0d\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\x0d\n          !StringPrototypeIncludes(name\x2C '*') &&\x0d\n          !StringPrototypeEndsWith(name\x2C '/')) {\x0d\n        const resolved = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C conditions\x0d\n        );\x0d\n        if (resolved != null) {\x0d\n          return { resolved\x2C exact: true };\x0d\n        }\x0d\n      } else {\x0d\n        let bestMatch = '';\x0d\n        let bestMatchSubpath;\x0d\n        const keys = ObjectGetOwnPropertyNames(imports);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n          if (patternIndex !== -1 &&\x0d\n              StringPrototypeStartsWith(name\x2C\x0d\n                                        StringPrototypeSlice(key\x2C 0\x2C\x0d\n                                                             patternIndex))) {\x0d\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n            if (name.length >= key.length &&\x0d\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\x0d\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n              bestMatch = key;\x0d\n              bestMatchSubpath = StringPrototypeSlice(\x0d\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\x0d\n            }\x0d\n          } else if (key[key.length - 1] === '/' &&\x0d\n            StringPrototypeStartsWith(name\x2C key) &&\x0d\n            patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n            bestMatch = key;\x0d\n            bestMatchSubpath = StringPrototypeSlice(name\x2C key.length);\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (bestMatch) {\x0d\n          const target = imports[bestMatch];\x0d\n          const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n          const resolved = resolvePackageTarget(\x0d\n            packageJSONUrl\x2C target\x2C\x0d\n            bestMatchSubpath\x2C bestMatch\x2C\x0d\n            base\x2C pattern\x2C true\x2C\x0d\n            conditions);\x0d\n          if (resolved !== null) {\x0d\n            if (!pattern)\x0d\n              emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C false\x2C base);\x0d\n            return { resolved\x2C exact: pattern };\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  throwImportNotDefined(name\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @returns {PackageType}\x0d\n */\x0d\nfunction getPackageType(url) {\x0d\n  const packageConfig = getPackageScopeConfig(url);\x0d\n  return packageConfig.type;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {{ packageName: string\x2C packageSubpath: string\x2C isScoped: boolean }}\x0d\n */\x0d\nfunction parsePackageName(specifier\x2C base) {\x0d\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\x0d\n  let validPackageName = true;\x0d\n  let isScoped = false;\x0d\n  if (specifier[0] === '@') {\x0d\n    isScoped = true;\x0d\n    if (separatorIndex === -1 || specifier.length === 0) {\x0d\n      validPackageName = false;\x0d\n    } else {\x0d\n      separatorIndex = StringPrototypeIndexOf(\x0d\n        specifier\x2C '/'\x2C separatorIndex + 1);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const packageName = separatorIndex === -1 ?\x0d\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\x0d\n\x0d\n  // Package name cannot have leading . and cannot have percent-encoding or\x0d\n  // \\\\ separators.\x0d\n  if (RegExpPrototypeExec(invalidPackageNameRegEx\x2C packageName) !== null)\x0d\n    validPackageName = false;\x0d\n\x0d\n  if (!validPackageName) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\x0d\n  }\x0d\n\x0d\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\x0d\n    StringPrototypeSlice(specifier\x2C separatorIndex));\x0d\n\x0d\n  return { packageName\x2C packageSubpath\x2C isScoped };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageResolve(specifier\x2C base\x2C conditions) {\x0d\n  if (NativeModule.canBeRequiredByUsers(specifier))\x0d\n    return new URL('node:' + specifier);\x0d\n\x0d\n  const { packageName\x2C packageSubpath\x2C isScoped } =\x0d\n    parsePackageName(specifier\x2C base);\x0d\n\x0d\n  // ResolveSelf\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    if (packageConfig.name === packageName &&\x0d\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let packageJSONUrl =\x0d\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\x0d\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  let lastPath;\x0d\n  do {\x0d\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\x0d\n                                                  packageJSONPath.length - 13));\x0d\n    if (!stat.isDirectory()) {\x0d\n      lastPath = packageJSONPath;\x0d\n      packageJSONUrl = new URL((isScoped ?\x0d\n        '../../../../node_modules/' : '../../../node_modules/') +\x0d\n        packageName + '/package.json'\x2C packageJSONUrl);\x0d\n      packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Package match.\x0d\n    const packageConfig = getPackageConfig(packageJSONPath\x2C specifier\x2C base);\x0d\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n\x0d\n    if (packageSubpath === '.') {\x0d\n      return legacyMainResolve(\x0d\n        packageJSONUrl\x2C\x0d\n        packageConfig\x2C\x0d\n        base\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return new URL(packageSubpath\x2C packageJSONUrl);\x0d\n    // Cross-platform root check.\x0d\n  } while (packageJSONPath.length !== lastPath.length);\x0d\n\x0d\n  // eslint can't handle the above code.\x0d\n  // eslint-disable-next-line no-unreachable\x0d\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isBareSpecifier(specifier) {\x0d\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\x0d\n}\x0d\n\x0d\nfunction isRelativeSpecifier(specifier) {\x0d\n  if (specifier[0] === '.') {\x0d\n    if (specifier.length === 1 || specifier[1] === '/') return true;\x0d\n    if (specifier[1] === '.') {\x0d\n      if (specifier.length === 2 || specifier[2] === '/') return true;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\x0d\n  if (specifier === '') return false;\x0d\n  if (specifier[0] === '/') return true;\x0d\n  return isRelativeSpecifier(specifier);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction moduleResolve(specifier\x2C base\x2C conditions\x2C preserveSymlinks) {\x0d\n  const isRemote = base.protocol === 'http:' ||\x0d\n    base.protocol === 'https:';\x0d\n  // Order swapped from spec for minor perf gain.\x0d\n  // Ok since relative URLs cannot parse as URLs.\x0d\n  let resolved;\x0d\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n    resolved = new URL(specifier\x2C base);\x0d\n  } else if (!isRemote && specifier[0] === '#') {\x0d\n    ({ resolved } = packageImportsResolve(specifier\x2C base\x2C conditions));\x0d\n  } else {\x0d\n    try {\x0d\n      resolved = new URL(specifier);\x0d\n    } catch {\x0d\n      if (!isRemote) {\x0d\n        resolved = packageResolve(specifier\x2C base\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (resolved.protocol !== 'file:')\x0d\n    return resolved;\x0d\n  return finalizeResolution(resolved\x2C base\x2C preserveSymlinks);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Try to resolve an import as a CommonJS module\x0d\n * @param {string} specifier\x0d\n * @param {string} parentURL\x0d\n * @returns {boolean|string}\x0d\n */\x0d\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\x0d\n  try {\x0d\n    const parent = fileURLToPath(parentURL);\x0d\n    const tmpModule = new CJSModule(parent\x2C null);\x0d\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\x0d\n\x0d\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\x0d\n\x0d\n    // If it is a relative specifier return the relative path\x0d\n    // to the parent\x0d\n    if (isRelativeSpecifier(specifier)) {\x0d\n      found = relative(parent\x2C found);\x0d\n      // Add '.separator if the path does not start with '..separator'\x0d\n      // This should be a safe assumption because when loading\x0d\n      // esm modules there should be always a file specified so\x0d\n      // there should not be a specifier like '..' or '.'\x0d\n      if (!StringPrototypeStartsWith(found\x2C `..${sep}`)) {\x0d\n        found = `.${sep}${found}`;\x0d\n      }\x0d\n    } else if (isBareSpecifier(specifier)) {\x0d\n      // If it is a bare specifier return the relative path within the\x0d\n      // module\x0d\n      const pkg = StringPrototypeSplit(specifier\x2C '/')[0];\x0d\n      const index = StringPrototypeIndexOf(found\x2C pkg);\x0d\n      if (index !== -1) {\x0d\n        found = StringPrototypeSlice(found\x2C index);\x0d\n      }\x0d\n    }\x0d\n    // Normalize the path separator to give a valid suggestion\x0d\n    // on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      found = RegExpPrototypeSymbolReplace(new RegExp(`\\\\${sep}`\x2C 'g')\x2C\x0d\n                                           found\x2C '/');\x0d\n    }\x0d\n    return found;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// TODO(@JakobJingleheimer): de-dupe `specifier` & `parsed`\x0d\nfunction checkIfDisallowedImport(specifier\x2C parsed\x2C parsedParentURL) {\x0d\n  if (parsedParentURL) {\x0d\n    const parentURL = fileURLToPath(parsedParentURL?.href);\x0d\n\x0d\n    if (\x0d\n      parsedParentURL.protocol === 'http:' ||\x0d\n      parsedParentURL.protocol === 'https:'\x0d\n    ) {\x0d\n      if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n        // data: and blob: disallowed due to allowing file: access via\x0d\n        // indirection\x0d\n        if (parsed &&\x0d\n          parsed.protocol !== 'https:' &&\x0d\n          parsed.protocol !== 'http:'\x0d\n        ) {\x0d\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n            specifier\x2C\x0d\n            parentURL\x2C\x0d\n            'remote imports cannot import from a local location.'\x0d\n          );\x0d\n        }\x0d\n\x0d\n        return { url: parsed.href };\x0d\n      }\x0d\n      if (NativeModule.canBeRequiredByUsers(specifier)) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          specifier\x2C\x0d\n          parentURL\x2C\x0d\n          'remote imports cannot import from a local location.'\x0d\n        );\x0d\n      }\x0d\n\x0d\n      throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n        specifier\x2C\x0d\n        parentURL\x2C\x0d\n        'only relative and absolute specifiers are supported.'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLProtocol(url) {\x0d\n  if (url.protocol !== 'file:' && url.protocol !== 'data:' &&\x0d\n      url.protocol !== 'node:') {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(url);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports) {\x0d\n  if (\x0d\n    parsed &&\x0d\n    parsed.protocol !== 'file:' &&\x0d\n    parsed.protocol !== 'data:' &&\x0d\n    (\x0d\n      !experimentalNetworkImports ||\x0d\n      (\x0d\n        parsed.protocol !== 'https:' &&\x0d\n        parsed.protocol !== 'http:'\x0d\n      )\x0d\n    )\x0d\n  ) {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C ArrayPrototypeConcat(\x0d\n      'file'\x2C\x0d\n      'data'\x2C\x0d\n      experimentalNetworkImports ? ['https'\x2C 'http'] : []\x2C\x0d\n    ));\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function defaultResolve(specifier\x2C context = {}\x2C defaultResolveUnused) {\x0d\n  let { parentURL\x2C conditions } = context;\x0d\n  if (parentURL && policy?.manifest) {\x0d\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\x0d\n    if (redirects) {\x0d\n      const { resolve\x2C reaction } = redirects;\x0d\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\x0d\n      let missing = true;\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        return { url: href };\x0d\n      }\x0d\n      if (missing) {\x0d\n        // Prevent network requests from firing if resolution would be banned.\x0d\n        // Network requests can extract data by doing things like putting\x0d\n        // secrets in query params\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          parentURL\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsedParentURL;\x0d\n  if (parentURL) {\x0d\n    try {\x0d\n      parsedParentURL = new URL(parentURL);\x0d\n    } catch {\x0d\n      // Ignore exception\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsed;\x0d\n  try {\x0d\n    if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n      parsed = new URL(specifier\x2C parsedParentURL);\x0d\n    } else {\x0d\n      parsed = new URL(specifier);\x0d\n    }\x0d\n\x0d\n    if (parsed.protocol === 'data:' ||\x0d\n      (experimentalNetworkImports &&\x0d\n        (\x0d\n          parsed.protocol === 'https:' ||\x0d\n          parsed.protocol === 'http:'\x0d\n        )\x0d\n      )\x0d\n    ) {\x0d\n      return { url: parsed.href };\x0d\n    }\x0d\n  } catch {\x0d\n    // Ignore exception\x0d\n  }\x0d\n\x0d\n  // There are multiple deep branches that can either throw or return; instead\x0d\n  // of duplicating that deeply nested logic for the possible returns\x2C DRY and\x0d\n  // check for a return. This seems the least gnarly.\x0d\n  const maybeReturn = checkIfDisallowedImport(\x0d\n    specifier\x2C\x0d\n    parsed\x2C\x0d\n    parsedParentURL\x2C\x0d\n  );\x0d\n\x0d\n  if (maybeReturn) return maybeReturn;\x0d\n\x0d\n  // This must come after checkIfDisallowedImport\x0d\n  if (parsed && parsed.protocol === 'node:') return { url: specifier };\x0d\n\x0d\n  throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports);\x0d\n\x0d\n  const isMain = parentURL === undefined;\x0d\n  if (isMain) {\x0d\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\x0d\n\x0d\n    // This is the initial entry point to the program\x2C and --input-type has\x0d\n    // been passed as an option; but --input-type can only be used with\x0d\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\x0d\n    // input\x2C to avoid user confusion over how expansive the effect of the\x0d\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\x0d\n    // entry point\x2C etc.).\x0d\n    if (typeFlag) throw new ERR_INPUT_TYPE_NOT_ALLOWED();\x0d\n  }\x0d\n\x0d\n  conditions = getConditionsSet(conditions);\x0d\n  let url;\x0d\n  try {\x0d\n    url = moduleResolve(specifier\x2C parentURL\x2C conditions\x2C\x0d\n                        isMain ? preserveSymlinksMain : preserveSymlinks);\x0d\n  } catch (error) {\x0d\n    // Try to give the user a hint of what would have been the\x0d\n    // resolved CommonJS module\x0d\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\x0d\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\x0d\n        specifier = fileURLToPath(specifier);\x0d\n      }\x0d\n      const found = resolveAsCommonJS(specifier\x2C parentURL);\x0d\n      if (found) {\x0d\n        // Modify the stack and message string to include the hint\x0d\n        const lines = StringPrototypeSplit(error.stack\x2C '\\n');\x0d\n        const hint = `Did you mean to import ${found}?`;\x0d\n        error.stack =\x0d\n          ArrayPrototypeShift(lines) + '\\n' +\x0d\n          hint + '\\n' +\x0d\n          ArrayPrototypeJoin(lines\x2C '\\n');\x0d\n        error.message += `\\n${hint}`;\x0d\n      }\x0d\n    }\x0d\n    throw error;\x0d\n  }\x0d\n\x0d\n  throwIfUnsupportedURLProtocol(url);\x0d\n\x0d\n  return {\x0d\n    // Do NOT cast `url` to a string: that will work even when there are real\x0d\n    // problems\x2C silencing them\x0d\n    url: url.href\x2C\x0d\n    format: defaultGetFormatWithoutErrors(url\x2C context)\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n  defaultResolve\x2C\x0d\n  encodedSepRegEx\x2C\x0d\n  getPackageScopeConfig\x2C\x0d\n  getPackageType\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x2C\x0d\n};\x0d\n\x0d\n// cycle\x0d\nconst {\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n} = require('internal/modules/esm/get_format');\x0d\n\x0d\nif (policy) {\x0d\n  const $defaultResolve = defaultResolve;\x0d\n  module.exports.defaultResolve = async function defaultResolve(\x0d\n    specifier\x2C\x0d\n    context\x0d\n  ) {\x0d\n    const ret = await $defaultResolve(specifier\x2C context\x2C $defaultResolve);\x0d\n    // This is a preflight check to avoid data exfiltration by query params etc.\x0d\n    policy.manifest.mightAllow(ret.url\x2C () =>\x0d\n      new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n        context.parentURL\x2C\x0d\n        specifier\x2C\x0d\n        context.conditions\x0d\n      )\x0d\n    );\x0d\n    return ret;\x0d\n  };\x0d\n}\x0d\n
code-source-info,0x24dc49ea966,118,0,42310,C0O0C4O42310,,
code-creation,Function,10,1451934,0x24dc49eba96,1191, node:internal/modules/esm/resolve:1:1,0x24dc49ea8e0,~
code-source-info,0x24dc49eba
code-creation,Eval,10,1453122,0x24dc49ef556,5, node:internal/modules/esm/get_format:1:1,0x24dc49ef2d0,~
script-source,119,node:internal/modules/esm/get_format,'use strict';\x0d\nconst {\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\nconst { basename\x2C extname\x2C relative } = require('path');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\nconst {\x0d\n  extensionFormatMap\x2C\x0d\n  getLegacyExtensionFormat\x2C\x0d\n  mimeToFormat\x2C\x0d\n} = require('internal/modules/esm/formats');\x0d\n\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst experimentalSpecifierResolution =\x0d\n  getOptionValue('--experimental-specifier-resolution');\x0d\nconst { getPackageType\x2C getPackageScopeConfig } = require('internal/modules/esm/resolve');\x0d\nconst { URL\x2C fileURLToPath } = require('internal/url');\x0d\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\x0d\n\x0d\nconst protocolHandlers = ObjectAssign(ObjectCreate(null)\x2C {\x0d\n  'data:': getDataProtocolModuleFormat\x2C\x0d\n  'file:': getFileProtocolModuleFormat\x2C\x0d\n  'http:': getHttpProtocolModuleFormat\x2C\x0d\n  'https:': getHttpProtocolModuleFormat\x2C\x0d\n  'node:'() { return 'builtin'; }\x2C\x0d\n});\x0d\n\x0d\nfunction getDataProtocolModuleFormat(parsed) {\x0d\n  const { 1: mime } = RegExpPrototypeExec(\x0d\n    /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n    parsed.pathname\x2C\x0d\n  ) || [ null\x2C null\x2C null ];\x0d\n\x0d\n  return mimeToFormat(mime);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @param {boolean} ignoreErrors\x0d\n * @returns {string}\x0d\n */\x0d\nfunction getFileProtocolModuleFormat(url\x2C context\x2C ignoreErrors) {\x0d\n  const filepath = fileURLToPath(url);\x0d\n  const ext = extname(filepath);\x0d\n  if (ext === '.js') {\x0d\n    return getPackageType(url) === 'module' ? 'module' : 'commonjs';\x0d\n  }\x0d\n\x0d\n  const format = extensionFormatMap[ext];\x0d\n  if (format) return format;\x0d\n\x0d\n  if (experimentalSpecifierResolution !== 'node') {\x0d\n    // Explicit undefined return indicates load hook should rerun format check\x0d\n    if (ignoreErrors) return undefined;\x0d\n    let suggestion = '';\x0d\n    if (getPackageType(url) === 'module' && ext === '') {\x0d\n      const config = getPackageScopeConfig(url);\x0d\n      const fileBasename = basename(filepath);\x0d\n      const relativePath = StringPrototypeSlice(relative(config.pjsonPath\x2C filepath)\x2C 1);\x0d\n      suggestion = 'Loading extensionless files is not supported inside of ' +\x0d\n        '"type":"module" package.json contexts. The package.json file ' +\x0d\n        `${config.pjsonPath} caused this "type":"module" context. Try ` +\x0d\n        `changing ${filepath} to have a file extension. Note the "bin" ` +\x0d\n        'field of package.json can point to a file with an extension\x2C for example ' +\x0d\n        `{"type":"module"\x2C"bin":{"${fileBasename}":"${relativePath}.js"}}`;\x0d\n    }\x0d\n    throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C filepath\x2C suggestion);\x0d\n  }\x0d\n\x0d\n  return getLegacyExtensionFormat(ext) ?? null;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | undefined} only works when enabled\x0d\n */\x0d\nfunction getHttpProtocolModuleFormat(url\x2C context) {\x0d\n  if (experimentalNetworkImports) {\x0d\n    return PromisePrototypeThen(\x0d\n      PromiseResolve(fetchModule(url\x2C context))\x2C\x0d\n      (entry) => {\x0d\n        return mimeToFormat(entry.headers['content-type']);\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | URL['href']} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormatWithoutErrors(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  if (!ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol))\x0d\n    return null;\x0d\n  return protocolHandlers[parsed.protocol](parsed\x2C context\x2C true);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | URL['href']} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormat(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  return ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol) ?\x0d\n    protocolHandlers[parsed.protocol](parsed\x2C context\x2C false) :\x0d\n    null;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultGetFormat\x2C\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n  extensionFormatMap\x2C\x0d\n};\x0d\n
code-source-info,0x24dc49ef556,119,0,4260,C0O0C4O4260,,
code-creation,Function,10,1453778,0x24dc49ef9d6,368, node:internal/modules/esm/get_format:1:1,0x24dc49ef4d0,~
code-source-info,0x24dc49ef9d6,119,0,4260,C0O0C90O26C95O43C100O60C106O94C112O119C118O138C124O162C130O243C133O243C138O211C144O221C150O230C156O288C159O288C164O269C169O342C172O342C177O326C183O471C186O471C191O400C197O423C203O452C209O553C212O553C216O553C218O647C221O647C225O647C227O753C230O753C235O711C241O727C247O826C250O826C255O803C261O808C267O891C270O891C275O917C280O860C286O953C288O966C300O1000C306O1041C312O1082C318O1124C322O1156C330O953C335O953C337O4158C344O4180C350O4201C356O4235C362O4173C367O4259,,
code-creation,Eval,10,1454696,0x24dc49f0846,5, node:internal/modules/esm/fetch_module:1:1,0x24dc49f0580,~
script-source,120,node:internal/modules/esm/fetch_module,'use strict';\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  Buffer: {\x0d\n    concat: BufferConcat\x0d\n  }\x0d\n} = require('buffer');\x0d\nconst {\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n  ERR_NETWORK_IMPORT_BAD_RESPONSE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { URL } = require('internal/url');\x0d\nconst net = require('net');\x0d\n\x0d\n/**\x0d\n * @typedef CacheEntry\x0d\n * @property {Promise<string> | string} resolvedHREF\x0d\n * @property {Record<string\x2C string>} headers\x0d\n * @property {Promise<Buffer> | Buffer} body\x0d\n */\x0d\n\x0d\n/**\x0d\n * Only for GET requests\x2C other requests would need new Map\x0d\n * HTTP cache semantics keep diff caches\x0d\n *\x0d\n * Maps HREF to pending cache entry\x0d\n * @type {Map<string\x2C Promise<CacheEntry> | CacheEntry>}\x0d\n */\x0d\nconst cacheForGET = new SafeMap();\x0d\n\x0d\n// [1] The V8 snapshot doesn't like some C++ APIs to be loaded eagerly. Do it\x0d\n// lazily/at runtime and not top level of an internal module.\x0d\n\x0d\n// [2] Creating a new agent instead of using the gloabl agent improves\x0d\n// performance and precludes the agent becoming tainted.\x0d\n\x0d\nlet HTTPSAgent;\x0d\nfunction HTTPSGet(url\x2C opts) {\x0d\n  const https = require('https'); // [1]\x0d\n  HTTPSAgent ??= new https.Agent({ // [2]\x0d\n    keepAlive: true\x0d\n  });\x0d\n  return https.get(url\x2C {\x0d\n    agent: HTTPSAgent\x2C\x0d\n    ...opts\x0d\n  });\x0d\n}\x0d\n\x0d\nlet HTTPAgent;\x0d\nfunction HTTPGet(url\x2C opts) {\x0d\n  const http = require('http'); // [1]\x0d\n  HTTPAgent ??= new http.Agent({ // [2]\x0d\n    keepAlive: true\x0d\n  });\x0d\n  return http.get(url\x2C {\x0d\n    agent: HTTPAgent\x2C\x0d\n    ...opts\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction dnsLookup(name\x2C opts) {\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  dnsLookup = require('dns/promises').lookup;\x0d\n  return dnsLookup(name\x2C opts);\x0d\n}\x0d\n\x0d\nlet zlib;\x0d\nfunction createBrotliDecompress() {\x0d\n  zlib ??= require('zlib'); // [1]\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  createBrotliDecompress = zlib.createBrotliDecompress;\x0d\n  return createBrotliDecompress();\x0d\n}\x0d\n\x0d\nfunction createUnzip() {\x0d\n  zlib ??= require('zlib'); // [1]\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  createUnzip = zlib.createUnzip;\x0d\n  return createUnzip();\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} parsed\x0d\n * @returns {Promise<CacheEntry> | CacheEntry}\x0d\n */\x0d\nfunction fetchWithRedirects(parsed) {\x0d\n  const existing = cacheForGET.get(parsed.href);\x0d\n  if (existing) {\x0d\n    return existing;\x0d\n  }\x0d\n  const handler = parsed.protocol === 'http:' ? HTTPGet : HTTPSGet;\x0d\n  const result = new Promise((fulfill\x2C reject) => {\x0d\n    const req = handler(parsed\x2C {\x0d\n      headers: {\x0d\n        Accept: '*/*'\x0d\n      }\x0d\n    })\x0d\n    .on('error'\x2C reject)\x0d\n    .on('response'\x2C (res) => {\x0d\n      function dispose() {\x0d\n        req.destroy();\x0d\n        res.destroy();\x0d\n      }\x0d\n      if (res.statusCode >= 300 && res.statusCode <= 303) {\x0d\n        if (res.headers.location) {\x0d\n          dispose();\x0d\n          try {\x0d\n            const location = new URL(res.headers.location\x2C parsed);\x0d\n            if (location.protocol !== 'http:' &&\x0d\n              location.protocol !== 'https:') {\x0d\n              reject(new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n                res.headers.location\x2C\x0d\n                parsed.href\x2C\x0d\n                'cannot redirect to non-network location'));\x0d\n              return;\x0d\n            }\x0d\n            return PromisePrototypeThen(\x0d\n              PromiseResolve(fetchWithRedirects(location))\x2C\x0d\n              (entry) => {\x0d\n                cacheForGET.set(parsed.href\x2C entry);\x0d\n                fulfill(entry);\x0d\n              });\x0d\n          } catch (e) {\x0d\n            dispose();\x0d\n            reject(e);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      if (res.statusCode > 303 || res.statusCode < 200) {\x0d\n        dispose();\x0d\n        reject(\x0d\n          new ERR_NETWORK_IMPORT_BAD_RESPONSE(\x0d\n            parsed.href\x2C\x0d\n            'HTTP response returned status code of ' + res.statusCode));\x0d\n        return;\x0d\n      }\x0d\n      const { headers } = res;\x0d\n      const contentType = headers['content-type'];\x0d\n      if (!contentType) {\x0d\n        dispose();\x0d\n        reject(new ERR_NETWORK_IMPORT_BAD_RESPONSE(\x0d\n          parsed.href\x2C\x0d\n          'the \\'Content-Type\\' header is required'));\x0d\n        return;\x0d\n      }\x0d\n      /**\x0d\n       * @type {CacheEntry}\x0d\n       */\x0d\n      const entry = {\x0d\n        resolvedHREF: parsed.href\x2C\x0d\n        headers: {\x0d\n          'content-type': res.headers['content-type']\x0d\n        }\x2C\x0d\n        body: new Promise((f\x2C r) => {\x0d\n          const buffers = [];\x0d\n          let size = 0;\x0d\n          let bodyStream = res;\x0d\n          let onError;\x0d\n          if (res.headers['content-encoding'] === 'br') {\x0d\n            bodyStream = createBrotliDecompress();\x0d\n            onError = function onError(error) {\x0d\n              bodyStream.close();\x0d\n              dispose();\x0d\n              reject(error);\x0d\n              r(error);\x0d\n            };\x0d\n            res.on('error'\x2C onError);\x0d\n            res.pipe(bodyStream);\x0d\n          } else if (res.headers['content-encoding'] === 'gzip' ||\x0d\n            res.headers['content-encoding'] === 'deflate') {\x0d\n            bodyStream = createUnzip();\x0d\n            onError = function onError(error) {\x0d\n              bodyStream.close();\x0d\n              dispose();\x0d\n              reject(error);\x0d\n              r(error);\x0d\n            };\x0d\n            res.on('error'\x2C onError);\x0d\n            res.pipe(bodyStream);\x0d\n          } else {\x0d\n            onError = function onError(error) {\x0d\n              dispose();\x0d\n              reject(error);\x0d\n              r(error);\x0d\n            };\x0d\n          }\x0d\n          bodyStream.on('error'\x2C onError);\x0d\n          bodyStream.on('data'\x2C (d) => {\x0d\n            ArrayPrototypePush(buffers\x2C d);\x0d\n            size += d.length;\x0d\n          });\x0d\n          bodyStream.on('end'\x2C () => {\x0d\n            const body = entry.body = /** @type {Buffer} */(\x0d\n              BufferConcat(buffers\x2C size)\x0d\n            );\x0d\n            f(body);\x0d\n          });\x0d\n        })\x2C\x0d\n      };\x0d\n      cacheForGET.set(parsed.href\x2C entry);\x0d\n      fulfill(entry);\x0d\n    });\x0d\n  });\x0d\n  cacheForGET.set(parsed.href\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst allowList = new net.BlockList();\x0d\nallowList.addAddress('::1'\x2C 'ipv6');\x0d\nallowList.addRange('127.0.0.1'\x2C '127.255.255.255');\x0d\n\x0d\n/**\x0d\n * Returns if an address has local status by if it is going to a local\x0d\n * interface or is an address resolved by DNS to be a local interface\x0d\n * @param {string} hostname url.hostname to test\x0d\n * @returns {Promise<boolean>}\x0d\n */\x0d\nasync function isLocalAddress(hostname) {\x0d\n  try {\x0d\n    if (StringPrototypeStartsWith(hostname\x2C '[') &&\x0d\n        StringPrototypeEndsWith(hostname\x2C ']')) {\x0d\n      hostname = StringPrototypeSlice(hostname\x2C 1\x2C -1);\x0d\n    }\x0d\n    const addr = await dnsLookup(hostname\x2C { verbatim: true });\x0d\n    const ipv = addr.family === 4 ? 'ipv4' : 'ipv6';\x0d\n    return allowList.check(addr.address\x2C ipv);\x0d\n  } catch {\x0d\n    // If it errored\x2C the answer is no.\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Fetches a location with a shared cache following redirects.\x0d\n * Does not respect HTTP cache headers.\x0d\n *\x0d\n * This splits the header and body Promises so that things only needing\x0d\n * headers don't need to wait on the body.\x0d\n *\x0d\n * In cases where the request & response have already settled\x2C this returns the\x0d\n * cache value synchronously.\x0d\n *\x0d\n * @param {URL} parsed\x0d\n * @param {ESModuleContext} context\x0d\n * @returns {ReturnType<typeof fetchWithRedirects>}\x0d\n */\x0d\nfunction fetchModule(parsed\x2C { parentURL }) {\x0d\n  const { href } = parsed;\x0d\n  const existing = cacheForGET.get(href);\x0d\n  if (existing) {\x0d\n    return existing;\x0d\n  }\x0d\n  if (parsed.protocol === 'http:') {\x0d\n    return PromisePrototypeThen(isLocalAddress(parsed.hostname)\x2C (is) => {\x0d\n      if (is !== true) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          href\x2C\x0d\n          parentURL\x2C\x0d\n          'http can only be used to load local resources (use https instead).'\x0d\n        );\x0d\n      }\x0d\n      return fetchWithRedirects(parsed);\x0d\n    });\x0d\n  }\x0d\n  return fetchWithRedirects(parsed);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  fetchModule: fetchModule\x0d\n};\x0d\n
code-source-info,0x24dc49f0846,120,0,8052,C0O0C4O8052,,
code-creation,Function,10,1456043,0x24dc49f0cde,318, node:internal/modules/esm/fetch_module:1:1,0x24dc49f07c0,~
code-source-info,0x24dc49f0cde,120,0,8052,C0O0C104O26C110O49C116O61C122O86C128O105C133O117C139O145C145O170C151O273C157O273C162O273C167O250C173O376C179O376C184O402C189O304C195O338C201O427C207O427C212O419C218O465C224O465C229O899C231O899C236O899C238O1197C239O1197C241O1435C242O1435C244O1830C245O1830C247O6127C252O6119C257O6119C259O6141C262O6151C273O6151C279O6179C282O6189C293O6189C299O8000C306O8035C312O8015C317O8051,,
code-creation,LazyCompile,10,1456356,0x24dc49f19be,37,get BlockList node:net:1826:16,0x22cec16b7e8,~
code-source-info,0x24dc49f19be,101,50636,50728,C0O50646C14O50660C19O50689C26O50656C32O50706C36O50723,,
code-creation,Eval,10,1456759,0x24dc49f1e9e,5, node:internal/blocklist:1:1,0x24dc49f1cb8,~
script-source,121,node:internal/blocklist,'use strict';\x0d\n\x0d\nconst {\x0d\n  Boolean\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  BlockList: BlockListHandle\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  SocketAddress\x2C\x0d\n  kHandle: kSocketAddressHandle\x2C\x0d\n} = require('internal/socketaddress');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst { owner_symbol } = internalBinding('symbols');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { validateInt32\x2C validateString } = require('internal/validators');\x0d\n\x0d\nclass BlockList extends JSTransferable {\x0d\n  constructor() {\x0d\n    super();\x0d\n    this[kHandle] = new BlockListHandle();\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `BlockList ${inspect({\x0d\n      rules: this.rules\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  addAddress(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      address = new SocketAddress({\x0d\n        address\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    this[kHandle].addAddress(address[kSocketAddressHandle]);\x0d\n  }\x0d\n\x0d\n  addRange(start\x2C end\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(start)) {\x0d\n      validateString(start\x2C 'start');\x0d\n      validateString(family\x2C 'family');\x0d\n      start = new SocketAddress({\x0d\n        address: start\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    if (!SocketAddress.isSocketAddress(end)) {\x0d\n      validateString(end\x2C 'end');\x0d\n      validateString(family\x2C 'family');\x0d\n      end = new SocketAddress({\x0d\n        address: end\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    const ret = this[kHandle].addRange(\x0d\n      start[kSocketAddressHandle]\x2C\x0d\n      end[kSocketAddressHandle]);\x0d\n    if (ret === false)\x0d\n      throw new ERR_INVALID_ARG_VALUE('start'\x2C start\x2C 'must come before end');\x0d\n  }\x0d\n\x0d\n  addSubnet(network\x2C prefix\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(network)) {\x0d\n      validateString(network\x2C 'network');\x0d\n      validateString(family\x2C 'family');\x0d\n      network = new SocketAddress({\x0d\n        address: network\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    switch (network.family) {\x0d\n      case 'ipv4':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 32);\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 128);\x0d\n        break;\x0d\n    }\x0d\n    this[kHandle].addSubnet(network[kSocketAddressHandle]\x2C prefix);\x0d\n  }\x0d\n\x0d\n  check(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      try {\x0d\n        address = new SocketAddress({\x0d\n          address\x2C\x0d\n          family\x2C\x0d\n        });\x0d\n      } catch {\x0d\n        // Ignore the error. If it's not a valid address\x2C return false.\x0d\n        return false;\x0d\n      }\x0d\n    }\x0d\n    return Boolean(this[kHandle].check(address[kSocketAddressHandle]));\x0d\n  }\x0d\n\x0d\n  get rules() {\x0d\n    return this[kHandle].getRules();\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/blocklist:InternalBlockList'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalBlockList extends JSTransferable {\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n    if (handle !== undefined)\x0d\n      handle[owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalBlockList.prototype.constructor = BlockList.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalBlockList.prototype\x2C BlockList.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  BlockList\x2C\x0d\n  InternalBlockList\x2C\x0d\n};\x0d\n
code-source-info,0x24dc49f1e9e,121,0,4043,C0O0C4O4043,,
code-creation,Function,10,1457357,0x24dc49f28a6,359, node:internal/blocklist:1:1,0x24dc49f1e18,~
code-source-info,0x24dc49f28a6,121,0,4043,C0O0C35O28C41O40C46O65C51O137C54O137C59O115C65O218C68O218C73O203C78O312C81O312C86O258C92O285C98O410C101O410C106O361C111O380C116O391C121O477C124O477C129O465C135O530C138O530C142O530C144O575C147O575C152O558C158O645C161O645C166O671C171O617C177O724C180O724C185O690C191O705C197O783C204O929C241O3359C251O3528C278O3669C301O3850C306O3884C311O3894C315O3872C319O3947C324O3968C329O3908C334O3983C341O4005C347O4019C353O3998C358O4042,,
code-creation,Eval,10,1459015,0x24dc49f4176,5, node:internal/socketaddress:1:1,0x24dc49f3f80,~
script-source,122,node:internal/socketaddress,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  SocketAddress: _SocketAddress\x2C\x0d\n  AF_INET\x2C\x0d\n  AF_INET6\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  validatePort\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kDetail = Symbol('kDetail');\x0d\n\x0d\nclass SocketAddress extends JSTransferable {\x0d\n  static isSocketAddress(value) {\x0d\n    return value?.[kHandle] !== undefined;\x0d\n  }\x0d\n\x0d\n  constructor(options = {}) {\x0d\n    super();\x0d\n    validateObject(options\x2C 'options');\x0d\n    let { family = 'ipv4' } = options;\x0d\n    const {\x0d\n      address = (family === 'ipv4' ? '127.0.0.1' : '::')\x2C\x0d\n      port = 0\x2C\x0d\n      flowlabel = 0\x2C\x0d\n    } = options;\x0d\n\x0d\n    let type;\x0d\n    if (typeof family?.toLowerCase === 'function')\x0d\n      family = family.toLowerCase();\x0d\n    switch (family) {\x0d\n      case 'ipv4':\x0d\n        type = AF_INET;\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        type = AF_INET6;\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_INVALID_ARG_VALUE('options.family'\x2C options.family);\x0d\n    }\x0d\n\x0d\n    validateString(address\x2C 'options.address');\x0d\n    validatePort(port\x2C 'options.port');\x0d\n    validateUint32(flowlabel\x2C 'options.flowlabel'\x2C false);\x0d\n\x0d\n    this[kHandle] = new _SocketAddress(address\x2C port\x2C type\x2C flowlabel);\x0d\n    this[kDetail] = this[kHandle].detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  get address() {\x0d\n    return this[kDetail].address;\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    return this[kDetail].port;\x0d\n  }\x0d\n\x0d\n  get family() {\x0d\n    return this[kDetail].family === AF_INET ? 'ipv4' : 'ipv6';\x0d\n  }\x0d\n\x0d\n  get flowlabel() {\x0d\n    // The flow label can be changed internally.\x0d\n    return this[kHandle].flowlabel();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `SocketAddress ${inspect(this.toJSON()\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/socketaddress:InternalSocketAddress'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kDetail] = handle.detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return {\x0d\n      address: this.address\x2C\x0d\n      port: this.port\x2C\x0d\n      family: this.family\x2C\x0d\n      flowlabel: this.flowlabel\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalSocketAddress extends JSTransferable {\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalSocketAddress.prototype.constructor =\x0d\n  SocketAddress.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalSocketAddress.prototype\x2C SocketAddress.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  SocketAddress\x2C\x0d\n  InternalSocketAddress\x2C\x0d\n  kHandle\x2C\x0d\n};\x0d\n
code-source-info,0x24dc49f4176,122,0,3363,C0O0C4O3363,,
tick,0x7ff954e0d044,1461477,1,0x7ff7dd90e150,3,0x7ff7de2559a0,0x22e32684e3b,0x22e326848e5,0x24dc49f28f7,0x22e32684f03,0x22e326848e5,0x24dc49f19cc,0x24dc49f0dd5,0x22e32684f03,0x22e326848e5,0x24dc49efa82,0x22e32684f03,0x22e326848e5,0x24dc49ebf12,0x22e32684f03,0x22e326848e5,0x24dc49e3702,0x22e32684f03,0x22e326848e5,0x24dc49e19fc,0x22e32684f03,0x22e326848e5,0x24dc49dd261,0x22e32684f03,0x22e326848e5,0x24dc49d90cc,0x22cec146526,0x22cec142065
code-creation,Function,10,1461645,0x24dc49f4c9e,366, node:internal/socketaddress:1:1,0x24dc49f40f0,~
code-source-info,0x24dc49f4c9e,122,0,3363,C0O0C38O28C43O53C48O154C51O154C56O108C62O127C68O139C74O275C77O275C82O199C88O218C94O237C100O254C106O369C109O369C114O369C119O335C125O447C128O447C133O432C138O496C141O496C146O484C152O593C155O593C160O544C165O563C170O574C175O656C178O656C182O656C184O692C187O692C191O692C193O742C226O2171C236O2425C246O2602C279O3017C302O3135C307O3176C312O3186C316O3157C320O3243C325O3268C330O3200C335O3283C342O3305C348O3323C354O3349C360O3298C365O3362,,
code-creation,LazyCompile,10,1462902,0x24dc49f574e,72,BlockList node:internal/blocklist:40:14,0x24dc49f1ed0,~
code-source-info,0x24dc49f574e,121,814,922,C3O824C11O824C23O838C28O843C33O858C36O854C41O852C45O882C50O887C52O886C58O896C64O910C71O921,,
code-creation,LazyCompile,10,1463239,0x24dc49f5ef6,115,addAddress node:internal/blocklist:60:13,0x24dc49f1f70,~
code-source-info,0x24dc49f5ef6,121,1208,1529,C14O1242C19O1261C24O1261C31O1296C39O1296C44O1339C52O1339C57O1380C69O1419C75O1437C81O1390C87O1468C89O1473C91O1472C95O1482C102O1501C104O1500C108O1482C114O1528,,
code-creation,LazyCompile,10,1463406,0x24dc49f6076,20,isSocketAddress node:internal/socketaddress:43:25,0x24dc49f41f8,~
code-source-info,0x24dc49f6076,122,784,842,C0O799C9O814C11O813C18O823C19O837,,
code-creation,LazyCompile,10,1463665,0x24dc49f680e,323,SocketAddress node:internal/socketaddress:47:14,0x24dc49f41a8,~
code-source-info,0x24dc49f680e,122,859,1842,C7O859C13O881C21O881C33O895C41O895C46O942C58O991C69O1009C81O1050C89O1067C97O1111C99O1122C106O1139C117O1192C122O1192C127O1212C146O1259C151O1284C153O1320C158O1346C160O1378C168O1436C175O1384C180O1378C181O1459C189O1459C194O1508C202O1508C207O1549C220O1549C225O1611C230O1616C235O1631C252O1627C257O1625C261O1684C266O1689C274O1705C276O1704C280O1714C291O1739C296O1763C301O1789C306O1818C310O1714C315O1698C322O1841,,
code-creation,LazyCompile,10,1463933,0x24dc49f6b5e,99, node:internal/validators:154:3,0x3eae9abd020,~
code-source-info,0x24dc49f6b5e,15,4537,5108,C0O4596C4O4637C9O4673C14O4712C21O4748C26O4785C33O4821C38O4836C46O4884C50O4898C53O4898C67O4975C75O5042C91O5048C96O5042C98O5107,,
code-creation,LazyCompile,10,1464114,0x24dc49f6d0e,129,validatePort node:internal/validators:211:22,0x3eae9abd1f8,~
code-source-info,0x24dc49f6d0e,15,6624,6991,C24O6669C44O6767C47O6767C52O6792C58O6800C65O6817C70O6828C72O6834C75O6823C86O6856C92O6881C99O6891C101O6910C117O6916C122O6910C123O6972C125O6984C128O6988,,
code-creation,LazyCompile,10,1464273,0x24dc49f6f5e,149, node:internal/validators:101:40,0x3eae9abce20,~
code-source-info,0x24dc49f6f5e,15,2980,3505,C0O3012C3O3017C9O3041C15O3081C31O3087C36O3081C37O3148C42O3153C48O3186C64O3192C69O3186C70O3265C80O3319C90O3358C109O3325C114O3319C115O3397C120O3419C125O3433C141O3439C146O3433C148O3504,,
code-creation,LazyCompile,10,1464380,0x24dc49f70ee,9,isUint32 node:internal/validators:40:18,0x3eae9abccc0,~
code-source-info,0x24dc49f70ee,15,835,882,C0O848C2O872C5O861C8O879,,
code-creation,LazyCompile,10,1464657,0x24dc49f7326,229,addRange node:internal/blocklist:72:11,0x24dc49f1fc0,~
code-source-info,0x24dc49f7326,121,1543,2235,C17O1580C22O1599C27O1599C34O1632C42O1632C47O1671C55O1671C60O1712C72O1758C78O1774C84O1720C90O1805C95O1824C100O1824C107O1855C115O1855C120O1890C128O1890C133O1931C145O1975C151O1989C157O1937C163O2032C165O2037C167O2036C171O2046C178O2069C180O2068C186O2103C188O2102C192O2046C199O2132C200O2140C205O2158C221O2164C226O2158C228O2234,,
code-creation,Eval,10,1465045,0x24dc49f77a6,5, node:internal/modules/esm/formats:1:1,0x24dc49f7630,~
script-source,123,node:internal/modules/esm/formats,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExpPrototypeTest\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n\x0d\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\x0d\n\x0d\nconst extensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'module'\x2C\x0d\n  '.json': 'json'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n};\x0d\n\x0d\nconst legacyExtensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'commonjs'\x2C\x0d\n  '.json': 'commonjs'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n  '.node': 'commonjs'\x2C\x0d\n};\x0d\n\x0d\nif (experimentalWasmModules) {\x0d\n  extensionFormatMap['.wasm'] = legacyExtensionFormatMap['.wasm'] = 'wasm';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} mime\x0d\n * @returns {string | null}\x0d\n */\x0d\nfunction mimeToFormat(mime) {\x0d\n  if (\x0d\n    RegExpPrototypeTest(\x0d\n      /\\s*(text|application)\\/javascript\\s*(;\\s*charset=utf-?8\\s*)?/i\x2C\x0d\n      mime\x0d\n    )\x0d\n  ) return 'module';\x0d\n  if (mime === 'application/json') return 'json';\x0d\n  if (experimentalWasmModules && mime === 'application/wasm') return 'wasm';\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getLegacyExtensionFormat(ext) {\x0d\n  return legacyExtensionFormatMap[ext];\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  extensionFormatMap\x2C\x0d\n  getLegacyExtensionFormat\x2C\x0d\n  legacyExtensionFormatMap\x2C\x0d\n  mimeToFormat\x2C\x0d\n};\x0d\n
code-source-info,0x24dc49f77a6,123,0,1247,C0O0C4O1247,,
code-creation,Function,10,1465291,0x24dc49f7a5e,120, node:internal/modules/esm/formats:1:1,0x24dc49f7720,~
code-source-info,0x24dc49f7a5e,123,0,1247,C0O0C24O28C30O95C33O95C38O76C43O161C46O161C50O161C52O238C57O386C61O386C63O531C67O565C73O629C79O593C83O1125C90O1147C96O1170C102O1199C108O1228C114O1140C119O1246,,
code-creation,Eval,10,1465722,0x24dc49f80e6,5, node:internal/modules/esm/initialize_import_meta:1:1,0x24dc49f7f50,~
script-source,124,node:internal/modules/esm/initialize_import_meta,'use strict';\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst experimentalImportMetaResolve =\x0d\n  getOptionValue('--experimental-import-meta-resolve');\x0d\nconst {\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseReject\x2C\x0d\n} = primordials;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\n\x0d\nfunction createImportMetaResolve(defaultParentUrl) {\x0d\n  return async function resolve(specifier\x2C parentUrl = defaultParentUrl) {\x0d\n    return PromisePrototypeThen(\x0d\n      asyncESM.esmLoader.resolve(specifier\x2C parentUrl)\x2C\x0d\n      ({ url }) => url\x2C\x0d\n      (error) => (\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ?\x0d\n          error.url : PromiseReject(error))\x0d\n    );\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {object} meta\x0d\n * @param {{url: string}} context\x0d\n */\x0d\nfunction initializeImportMeta(meta\x2C context) {\x0d\n  let url = context.url;\x0d\n\x0d\n  // Alphabetical\x0d\n  if (experimentalImportMetaResolve) {\x0d\n    meta.resolve = createImportMetaResolve(url);\x0d\n  }\x0d\n\x0d\n  url = asyncESM.esmLoader.getBaseURL(url);\x0d\n\x0d\n  meta.url = url;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initializeImportMeta\x0d\n};\x0d\n
code-source-info,0x24dc49f80e6,124,0,1066,C0O0C4O1066,,
code-creation,Function,10,1465904,0x24dc49f82ae,90, node:internal/modules/esm/initialize_import_meta:1:1,0x24dc49f8060,~
code-source-info,0x24dc49f82ae,124,0,1066,C0O0C28O44C31O44C36O25C41O115C44O115C48O115C50O181C56O206C62O257C65O257C69O257C71O1018C78O1040C84O1033C89O1065,,
code-creation,Eval,10,1466143,0x24dc49f87c6,5, node:internal/modules/esm/load:1:1,0x24dc49f8650,~
script-source,125,node:internal/modules/esm/load,'use strict';\x0d\n\x0d\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\x0d\nconst { defaultGetSource } = require('internal/modules/esm/get_source');\x0d\nconst { validateAssertions } = require('internal/modules/esm/assert');\x0d\n\x0d\n/**\x0d\n * Node.js default load hook.\x0d\n * @param {string} url\x0d\n * @param {object} context\x0d\n * @returns {object}\x0d\n */\x0d\nasync function defaultLoad(url\x2C context) {\x0d\n  const { importAssertions } = context;\x0d\n  let {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  } = context;\x0d\n\x0d\n  if (format == null) {\x0d\n    format = await defaultGetFormat(url\x2C context);\x0d\n  }\x0d\n\x0d\n  validateAssertions(url\x2C format\x2C importAssertions);\x0d\n\x0d\n  if (\x0d\n    format === 'builtin' ||\x0d\n    format === 'commonjs'\x0d\n  ) {\x0d\n    source = null;\x0d\n  } else if (source == null) {\x0d\n    source = await defaultGetSource(url\x2C context);\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultLoad\x2C\x0d\n};\x0d\n
code-source-info,0x24dc49f87c6,125,0,903,C0O0C4O903,,
code-creation,Function,10,1466354,0x24dc49f890e,80, node:internal/modules/esm/load:1:1,0x24dc49f8740,~
code-source-info,0x24dc49f890e,125,0,903,C0O0C19O46C22O46C27O25C33O120C36O120C41O99C47O196C50O196C55O173C61O863C68O885C74O878C79O902,,
code-creation,Eval,10,1466723,0x24dc49f8f06,5, node:internal/modules/esm/get_source:1:1,0x24dc49f8d00,~
script-source,126,node:internal/modules/esm/get_source,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\n\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\n\x0d\nconst { Buffer: { from: BufferFrom } } = require('buffer');\x0d\n\x0d\nconst fs = require('internal/fs/promises').exports;\x0d\nconst { URL } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INVALID_URL\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst readFileAsync = fs.readFile;\x0d\n\x0d\nconst DATA_URL_PATTERN = /^[^/]+\\/[^\x2C;]+(?:[^\x2C]*?)(;base64)?\x2C([\\s\\S]*)$/;\x0d\n\x0d\nasync function defaultGetSource(url\x2C context\x2C defaultGetSource) {\x0d\n  const parsed = new URL(url);\x0d\n  let source;\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    source = await readFileAsync(parsed);\x0d\n  } else if (parsed.protocol === 'data:') {\x0d\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C parsed.pathname);\x0d\n    if (!match) {\x0d\n      throw new ERR_INVALID_URL(url);\x0d\n    }\x0d\n    const { 1: base64\x2C 2: body } = match;\x0d\n    source = BufferFrom(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\x0d\n  } else if (experimentalNetworkImports && (\x0d\n    parsed.protocol === 'https:' ||\x0d\n    parsed.protocol === 'http:'\x0d\n  )) {\x0d\n    const res = await fetchModule(parsed\x2C context);\x0d\n    source = await res.body;\x0d\n  } else {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C ArrayPrototypeConcat([\x0d\n      'file'\x2C\x0d\n      'data'\x2C\x0d\n      experimentalNetworkImports ? ['https'\x2C 'http'] : []\x2C\x0d\n    ]));\x0d\n  }\x0d\n  if (policy?.manifest) {\x0d\n    policy.manifest.assertIntegrity(parsed\x2C source);\x0d\n  }\x0d\n  return source;\x0d\n}\x0d\nexports.defaultGetSource = defaultGetSource;\x0d\n
code-source-info,0x24dc49f8f06,126,0,1929,C0O0C4O1929,,
code-creation,Function,10,1467038,0x24dc49f909e,212, node:internal/modules/esm/get_source:1:1,0x24dc49f8e80,~
code-source-info,0x24dc49f909e,126,0,1929,C0O0C46O28C52O53C58O77C64O143C67O143C72O124C77O197C80O197C85O181C91O313C94O313C103O358C110O313C112O443C115O443C119O443C121O537C124O537C129O537C134O520C140O570C143O570C148O601C153O628C156O628C161O620C167O722C170O722C175O748C180O665C186O685C192O782C196O779C198O820C202O820C204O1883C206O1908C211O1928,,
code-creation,Eval,10,1468890,0x24dc49fa466,5, node:internal/fs/promises:1:1,0x24dc49f9cb8,~
script-source,127,node:internal/fs/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Error\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectCreate\x2C\x0d\n  NumberIsSafeInteger\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafePromisePrototypeFinally\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  F_OK\x2C\x0d\n  O_SYMLINK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x0d\n} = internalBinding('constants').fs;\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst { rimrafPromises } = require('internal/fs/rimraf');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst { opendir } = require('internal/fs/dir');\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst { lazyDOMException\x2C promisify } = require('internal/util');\x0d\nconst { EventEmitterMixin } = require('internal/event_target');\x0d\nconst { watch } = require('internal/fs/watchers');\x0d\nconst { isIterable } = require('internal/streams/utils');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kFd = Symbol('kFd');\x0d\nconst kRefs = Symbol('kRefs');\x0d\nconst kClosePromise = Symbol('kClosePromise');\x0d\nconst kCloseResolve = Symbol('kCloseResolve');\x0d\nconst kCloseReject = Symbol('kCloseReject');\x0d\nconst kRef = Symbol('kRef');\x0d\nconst kUnref = Symbol('kUnref');\x0d\n\x0d\nconst { kUsePromises } = binding;\x0d\nconst {\x0d\n  JSTransferable\x2C kDeserialize\x2C kTransfer\x2C kTransferList\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst getDirectoryEntriesPromise = promisify(getDirents);\x0d\nconst validateRmOptionsPromise = promisify(validateRmOptions);\x0d\n\x0d\nlet cpPromises;\x0d\nfunction lazyLoadCpPromises() {\x0d\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\x0d\n}\x0d\n\x0d\n// Lazy loaded to avoid circular dependency.\x0d\nlet fsStreams;\x0d\nfunction lazyFsStreams() {\x0d\n  return fsStreams ??= require('internal/fs/streams');\x0d\n}\x0d\n\x0d\nclass FileHandle extends EventEmitterMixin(JSTransferable) {\x0d\n  /**\x0d\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\x0d\n   */\x0d\n  constructor(filehandle) {\x0d\n    super();\x0d\n    this[kHandle] = filehandle;\x0d\n    this[kFd] = filehandle ? filehandle.fd : -1;\x0d\n\x0d\n    this[kRefs] = 1;\x0d\n    this[kClosePromise] = null;\x0d\n  }\x0d\n\x0d\n  getAsyncId() {\x0d\n    return this[kHandle].getAsyncId();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this[kFd];\x0d\n  }\x0d\n\x0d\n  appendFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  chmod(mode) {\x0d\n    return fsCall(fchmod\x2C this\x2C mode);\x0d\n  }\x0d\n\x0d\n  chown(uid\x2C gid) {\x0d\n    return fsCall(fchown\x2C this\x2C uid\x2C gid);\x0d\n  }\x0d\n\x0d\n  datasync() {\x0d\n    return fsCall(fdatasync\x2C this);\x0d\n  }\x0d\n\x0d\n  sync() {\x0d\n    return fsCall(fsync\x2C this);\x0d\n  }\x0d\n\x0d\n  read(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(read\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  readv(buffers\x2C position) {\x0d\n    return fsCall(readv\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  readFile(options) {\x0d\n    return fsCall(readFile\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  stat(options) {\x0d\n    return fsCall(fstat\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  truncate(len = 0) {\x0d\n    return fsCall(ftruncate\x2C this\x2C len);\x0d\n  }\x0d\n\x0d\n  utimes(atime\x2C mtime) {\x0d\n    return fsCall(futimes\x2C this\x2C atime\x2C mtime);\x0d\n  }\x0d\n\x0d\n  write(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(write\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  writev(buffers\x2C position) {\x0d\n    return fsCall(writev\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  writeFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  close = () => {\x0d\n    if (this[kFd] === -1) {\x0d\n      return PromiseResolve();\x0d\n    }\x0d\n\x0d\n    if (this[kClosePromise]) {\x0d\n      return this[kClosePromise];\x0d\n    }\x0d\n\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        this[kHandle].close()\x2C\x0d\n        () => { this[kClosePromise] = undefined; }\x0d\n      );\x0d\n    } else {\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        new Promise((resolve\x2C reject) => {\x0d\n          this[kCloseResolve] = resolve;\x0d\n          this[kCloseReject] = reject;\x0d\n        })\x2C () => {\x0d\n          this[kClosePromise] = undefined;\x0d\n          this[kCloseReject] = undefined;\x0d\n          this[kCloseResolve] = undefined;\x0d\n        }\x0d\n      );\x0d\n    }\x0d\n\x0d\n    this.emit('close');\x0d\n    return this[kClosePromise];\x0d\n  };\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').ReadStream\x0d\n   * } ReadStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   end?: number;\x0d\n   *   highWaterMark?: number;\x0d\n   *   }} [options]\x0d\n   * @returns {ReadStream}\x0d\n   */\x0d\n  createReadStream(options = undefined) {\x0d\n    const { ReadStream } = lazyFsStreams();\x0d\n    return new ReadStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').WriteStream\x0d\n   * } WriteStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   }} [options]\x0d\n   * @returns {WriteStream}\x0d\n   */\x0d\n  createWriteStream(options = undefined) {\x0d\n    const { WriteStream } = lazyFsStreams();\x0d\n    return new WriteStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  [kTransfer]() {\x0d\n    if (this[kClosePromise] || this[kRefs] > 1) {\x0d\n      throw lazyDOMException('Cannot transfer FileHandle while in use'\x2C\x0d\n                             'DataCloneError');\x0d\n    }\x0d\n\x0d\n    const handle = this[kHandle];\x0d\n    this[kFd] = -1;\x0d\n    this[kHandle] = null;\x0d\n    this[kRefs] = 0;\x0d\n\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/fs/promises:FileHandle'\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kTransferList]() {\x0d\n    return [ this[kHandle] ];\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kFd] = handle.fd;\x0d\n  }\x0d\n\x0d\n  [kRef]() {\x0d\n    this[kRefs]++;\x0d\n  }\x0d\n\x0d\n  [kUnref]() {\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      PromisePrototypeThen(\x0d\n        this[kHandle].close()\x2C\x0d\n        this[kCloseResolve]\x2C\x0d\n        this[kCloseReject]\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function fsCall(fn\x2C handle\x2C ...args) {\x0d\n  assert(handle[kRefs] !== undefined\x2C\x0d\n         'handle must be an instance of FileHandle');\x0d\n\x0d\n  if (handle.fd === -1) {\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error('file closed');\x0d\n    err.code = 'EBADF';\x0d\n    err.syscall = fn.name;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    handle[kRef]();\x0d\n    return await fn(handle\x2C ...new SafeArrayIterator(args));\x0d\n  } finally {\x0d\n    handle[kUnref]();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal) {\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n}\x0d\n\x0d\nasync function writeFileHandle(filehandle\x2C data\x2C signal\x2C encoding) {\x0d\n  checkAborted(signal);\x0d\n  if (isCustomIterable(data)) {\x0d\n    for await (const buf of data) {\x0d\n      checkAborted(signal);\x0d\n      const toWrite =\x0d\n        isArrayBufferView(buf) ? buf : Buffer.from(buf\x2C encoding || 'utf8');\x0d\n      let remaining = toWrite.byteLength;\x0d\n      while (remaining > 0) {\x0d\n        const writeSize = MathMin(kWriteFileMaxChunkSize\x2C remaining);\x0d\n        const { bytesWritten } = await write(\x0d\n          filehandle\x2C toWrite\x2C toWrite.byteLength - remaining\x2C writeSize);\x0d\n        remaining -= bytesWritten;\x0d\n        checkAborted(signal);\x0d\n      }\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  data = new Uint8Array(data.buffer\x2C data.byteOffset\x2C data.byteLength);\x0d\n  let remaining = data.byteLength;\x0d\n  if (remaining === 0) return;\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    const { bytesWritten } =\x0d\n      await write(filehandle\x2C data\x2C 0\x2C\x0d\n                  MathMin(kWriteFileMaxChunkSize\x2C data.byteLength));\x0d\n    remaining -= bytesWritten;\x0d\n    data = new Uint8Array(\x0d\n      data.buffer\x2C\x0d\n      data.byteOffset + bytesWritten\x2C\x0d\n      data.byteLength - bytesWritten\x0d\n    );\x0d\n  } while (remaining > 0);\x0d\n}\x0d\n\x0d\nasync function readFileHandle(filehandle\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  const statFields = await binding.fstat(filehandle.fd\x2C false\x2C kUsePromises);\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  let size;\x0d\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\x0d\n    size = statFields[8/* size */];\x0d\n  } else {\x0d\n    size = 0;\x0d\n  }\x0d\n\x0d\n  if (size > kIoMaxLength)\x0d\n    throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n\x0d\n  let endOfFile = false;\x0d\n  let totalRead = 0;\x0d\n  const noSize = size === 0;\x0d\n  const buffers = [];\x0d\n  const fullBuffer = noSize ? undefined : Buffer.allocUnsafeSlow(size);\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    let buffer;\x0d\n    let offset;\x0d\n    let length;\x0d\n    if (noSize) {\x0d\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\x0d\n      offset = 0;\x0d\n      length = kReadFileUnknownBufferLength;\x0d\n    } else {\x0d\n      buffer = fullBuffer;\x0d\n      offset = totalRead;\x0d\n      length = MathMin(size - totalRead\x2C kReadFileBufferLength);\x0d\n    }\x0d\n\x0d\n    const bytesRead = (await binding.read(filehandle.fd\x2C buffer\x2C offset\x2C\x0d\n                                          length\x2C -1\x2C kUsePromises)) || 0;\x0d\n    totalRead += bytesRead;\x0d\n    endOfFile = bytesRead === 0 || totalRead === size;\x0d\n    if (noSize && bytesRead > 0) {\x0d\n      const isBufferFull = bytesRead === kReadFileUnknownBufferLength;\x0d\n      const chunkBuffer = isBufferFull ? buffer : buffer.slice(0\x2C bytesRead);\x0d\n      ArrayPrototypePush(buffers\x2C chunkBuffer);\x0d\n    }\x0d\n  } while (!endOfFile);\x0d\n\x0d\n  let result;\x0d\n  if (size > 0) {\x0d\n    result = totalRead === size ? fullBuffer : fullBuffer.slice(0\x2C totalRead);\x0d\n  } else {\x0d\n    result = buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C\x0d\n                                                               totalRead);\x0d\n  }\x0d\n\x0d\n  return options.encoding ? result.toString(options.encoding) : result;\x0d\n}\x0d\n\x0d\n// All of the functions are defined as async in order to ensure that errors\x0d\n// thrown cause promise rejections rather than being thrown synchronously.\x0d\nasync function access(path\x2C mode = F_OK) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  return binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function cp(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  return lazyLoadCpPromises()(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nasync function copyFile(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  return binding.copyFile(pathModule.toNamespacedPath(src)\x2C\x0d\n                          pathModule.toNamespacedPath(dest)\x2C\x0d\n                          mode\x2C\x0d\n                          kUsePromises);\x0d\n}\x0d\n\x0d\n// Note that unlike fs.open() which uses numeric file descriptors\x2C\x0d\n// fsPromises.open() uses the fs.FileHandle class.\x0d\nasync function open(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  return new FileHandle(\x0d\n    await binding.openFileHandle(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 flagsNumber\x2C mode\x2C kUsePromises));\x0d\n}\x0d\n\x0d\nasync function read(handle\x2C bufferOrOptions\x2C offset\x2C length\x2C position) {\x0d\n  let buffer = bufferOrOptions;\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    bufferOrOptions ??= ObjectCreate(null);\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x0d\n    } = bufferOrOptions);\x0d\n\x0d\n    validateBuffer(buffer);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0)\x0d\n    return { bytesRead: length\x2C buffer };\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (!NumberIsSafeInteger(position))\x0d\n    position = -1;\x0d\n\x0d\n  const bytesRead = (await binding.read(handle.fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                        position\x2C kUsePromises)) || 0;\x0d\n\x0d\n  return { bytesRead\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function readv(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesRead = (await binding.readBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                               kUsePromises)) || 0;\x0d\n  return { bytesRead\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function write(handle\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  if (buffer?.byteLength === 0)\x0d\n    return { bytesWritten: 0\x2C buffer };\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    const bytesWritten =\x0d\n      (await binding.writeBuffer(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                 length\x2C position\x2C kUsePromises)) || 0;\x0d\n    return { bytesWritten\x2C buffer };\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n  validateEncoding(buffer\x2C length);\x0d\n  const bytesWritten = (await binding.writeString(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                                  length\x2C kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function writev(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return { bytesWritten: 0\x2C buffers };\x0d\n  }\x0d\n\x0d\n  const bytesWritten = (await binding.writeBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                                   kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function rename(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                        pathModule.toNamespacedPath(newPath)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function truncate(path\x2C len = 0) {\x0d\n  const fd = await open(path\x2C 'r+');\x0d\n  return SafePromisePrototypeFinally(ftruncate(fd\x2C len)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function ftruncate(handle\x2C len = 0) {\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  return binding.ftruncate(handle.fd\x2C len\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function rm(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = await validateRmOptionsPromise(path\x2C options\x2C false);\x0d\n  return rimrafPromises(path\x2C options);\x0d\n}\x0d\n\x0d\nasync function rmdir(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = validateRmdirOptions(options);\x0d\n\x0d\n  if (options.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    const stats = await stat(path);\x0d\n    if (stats.isDirectory()) {\x0d\n      return rimrafPromises(path\x2C options);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return binding.rmdir(path\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fdatasync(handle) {\x0d\n  return binding.fdatasync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fsync(handle) {\x0d\n  return binding.fsync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdir(path\x2C options) {\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    options = { mode: options };\x0d\n  }\x0d\n  const {\x0d\n    recursive = false\x2C\x0d\n    mode = 0o777\x0d\n  } = options || {};\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  return binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                       parseFileMode(mode\x2C 'mode'\x2C 0o777)\x2C recursive\x2C\x0d\n                       kUsePromises);\x0d\n}\x0d\n\x0d\nasync function readdir(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                       options.encoding\x2C\x0d\n                                       !!options.withFileTypes\x2C\x0d\n                                       kUsePromises);\x0d\n  return options.withFileTypes ?\x0d\n    getDirectoryEntriesPromise(path\x2C result) :\x0d\n    result;\x0d\n}\x0d\n\x0d\nasync function readlink(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  return binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                          options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function symlink(target\x2C path\x2C type_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                         pathModule.toNamespacedPath(path)\x2C\x0d\n                         stringToSymlinkType(type)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fstat(handle\x2C options = { bigint: false }) {\x0d\n  const result = await binding.fstat(handle.fd\x2C options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function lstat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                     options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function stat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                    options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function link(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                      pathModule.toNamespacedPath(newPath)\x2C\x0d\n                      kUsePromises);\x0d\n}\x0d\n\x0d\nasync function unlink(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.unlink(pathModule.toNamespacedPath(path)\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchmod(handle\x2C mode) {\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.fchmod(handle.fd\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chmod(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lchmod(path\x2C mode) {\x0d\n  if (O_SYMLINK === undefined)\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\x0d\n\x0d\n  const fd = await open(path\x2C O_WRONLY | O_SYMLINK);\x0d\n  return SafePromisePrototypeFinally(fchmod(fd\x2C mode)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function lchown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.lchown(pathModule.toNamespacedPath(path)\x2C\x0d\n                        uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchown(handle\x2C uid\x2C gid) {\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.fchown(handle.fd\x2C uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.chown(pathModule.toNamespacedPath(path)\x2C\x0d\n                       uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function utimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                        toUnixTimestamp(atime)\x2C\x0d\n                        toUnixTimestamp(mtime)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function futimes(handle\x2C atime\x2C mtime) {\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  return binding.futimes(handle.fd\x2C atime\x2C mtime\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lutimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                         toUnixTimestamp(atime)\x2C\x0d\n                         toUnixTimestamp(mtime)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function realpath(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.realpath(path\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdtemp(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix);\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  return binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function writeFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  validateAbortSignal(options.signal);\x0d\n  if (path instanceof FileHandle)\x0d\n    return writeFileHandle(path\x2C data\x2C options.signal\x2C options.encoding);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C options.mode);\x0d\n  return SafePromisePrototypeFinally(\x0d\n    writeFileHandle(fd\x2C data\x2C options.signal\x2C options.encoding)\x2C fd.close);\x0d\n}\x0d\n\x0d\nfunction isCustomIterable(obj) {\x0d\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\x0d\n}\x0d\n\x0d\nasync function appendFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n  options = copyObject(options);\x0d\n  options.flag = options.flag || 'a';\x0d\n  return writeFile(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\nasync function readFile(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const flag = options.flag || 'r';\x0d\n\x0d\n  if (path instanceof FileHandle)\x0d\n    return readFileHandle(path\x2C options);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C 0o666);\x0d\n  return SafePromisePrototypeFinally(readFileHandle(fd\x2C options)\x2C fd.close);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  exports: {\x0d\n    access\x2C\x0d\n    copyFile\x2C\x0d\n    cp\x2C\x0d\n    open\x2C\x0d\n    opendir: promisify(opendir)\x2C\x0d\n    rename\x2C\x0d\n    truncate\x2C\x0d\n    rm\x2C\x0d\n    rmdir\x2C\x0d\n    mkdir\x2C\x0d\n    readdir\x2C\x0d\n    readlink\x2C\x0d\n    symlink\x2C\x0d\n    lstat\x2C\x0d\n    stat\x2C\x0d\n    link\x2C\x0d\n    unlink\x2C\x0d\n    chmod\x2C\x0d\n    lchmod\x2C\x0d\n    lchown\x2C\x0d\n    chown\x2C\x0d\n    utimes\x2C\x0d\n    lutimes\x2C\x0d\n    realpath\x2C\x0d\n    mkdtemp\x2C\x0d\n    writeFile\x2C\x0d\n    appendFile\x2C\x0d\n    readFile\x2C\x0d\n    watch\x2C\x0d\n  }\x2C\x0d\n\x0d\n  FileHandle\x2C\x0d\n  kRef\x2C\x0d\n  kUnref\x2C\x0d\n};\x0d\n
code-source-info,0x24dc49fa466,127,0,23678,C0O0C4O23678,,
code-creation,Function,10,1472804,0x24dc49fcba6,1672, node:internal/fs/promises:1:1,0x24dc49fa3e0,~
code-source-info,0x24dc49fcba
code-creation,Function,10,1473448,0x24dc49fd55e,27,<instance_members_initializer> node:internal/fs/promises:190:3,0x24dc49fba40,~
code-source-info,0x24dc49fd55e,127,4407,5236,C0O4407C12O4415C26O5236,,
new,MemoryChunk,0x24050b00000,262144
code-creation,Eval,10,1475181,0x24050b0114e,5, node:internal/fs/rimraf:1:1,0x24dc49ffca8,~
script-source,128,node:internal/fs/rimraf,// This file is a modified version of the rimraf module on npm. It has been\x0d\n// modified in the following ways:\x0d\n// - Use of the assert module has been replaced with core's error system.\x0d\n// - All code related to the glob dependency has been removed.\x0d\n// - Bring your own custom fs module is not currently supported.\x0d\n// - Some basic code cleanup.\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst fs = require('fs');\x0d\nconst {\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x0d\n} = fs;\x0d\nconst { sep } = require('path');\x0d\nconst { setTimeout } = require('timers');\x0d\nconst { sleep } = require('internal/util');\x0d\nconst notEmptyErrorCodes = new SafeSet(['ENOTEMPTY'\x2C 'EEXIST'\x2C 'EPERM']);\x0d\nconst retryErrorCodes = new SafeSet(\x0d\n  ['EBUSY'\x2C 'EMFILE'\x2C 'ENFILE'\x2C 'ENOTEMPTY'\x2C 'EPERM']);\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst epermHandler = isWindows ? fixWinEPERM : _rmdir;\x0d\nconst epermHandlerSync = isWindows ? fixWinEPERMSync : _rmdirSync;\x0d\nconst readdirEncoding = 'buffer';\x0d\nconst separator = Buffer.from(sep);\x0d\n\x0d\n\x0d\nfunction rimraf(path\x2C options\x2C callback) {\x0d\n  let retries = 0;\x0d\n\x0d\n  _rimraf(path\x2C options\x2C function CB(err) {\x0d\n    if (err) {\x0d\n      if (retryErrorCodes.has(err.code) && retries < options.maxRetries) {\x0d\n        retries++;\x0d\n        const delay = retries * options.retryDelay;\x0d\n        return setTimeout(_rimraf\x2C delay\x2C path\x2C options\x2C CB);\x0d\n      }\x0d\n\x0d\n      // The file is already gone.\x0d\n      if (err.code === 'ENOENT')\x0d\n        err = null;\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rimraf(path\x2C options\x2C callback) {\x0d\n  // SunOS lets the root user unlink directories. Use lstat here to make sure\x0d\n  // it's not a directory.\x0d\n  lstat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (err.code === 'ENOENT')\x0d\n        return callback(null);\x0d\n\x0d\n      // Windows can EPERM on stat.\x0d\n      if (isWindows && err.code === 'EPERM')\x0d\n        return fixWinEPERM(path\x2C options\x2C err\x2C callback);\x0d\n    } else if (stats.isDirectory()) {\x0d\n      return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n    }\x0d\n\x0d\n    unlink(path\x2C (err) => {\x0d\n      if (err) {\x0d\n        if (err.code === 'ENOENT')\x0d\n          return callback(null);\x0d\n        if (err.code === 'EISDIR')\x0d\n          return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n        if (err.code === 'EPERM') {\x0d\n          return epermHandler(path\x2C options\x2C err\x2C callback);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return callback(err);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERM(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  chmod(path\x2C 0o666\x2C (err) => {\x0d\n    if (err)\x0d\n      return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n    stat(path\x2C (err\x2C stats) => {\x0d\n      if (err)\x0d\n        return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n      if (stats.isDirectory())\x0d\n        _rmdir(path\x2C options\x2C originalErr\x2C callback);\x0d\n      else\x0d\n        unlink(path\x2C callback);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdir(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  rmdir(path\x2C (err) => {\x0d\n    if (err) {\x0d\n      if (notEmptyErrorCodes.has(err.code))\x0d\n        return _rmchildren(path\x2C options\x2C callback);\x0d\n      if (err.code === 'ENOTDIR')\x0d\n        return callback(originalErr);\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmchildren(path\x2C options\x2C callback) {\x0d\n  const pathBuf = Buffer.from(path);\x0d\n\x0d\n  readdir(pathBuf\x2C readdirEncoding\x2C (err\x2C files) => {\x0d\n    if (err)\x0d\n      return callback(err);\x0d\n\x0d\n    let numFiles = files.length;\x0d\n\x0d\n    if (numFiles === 0)\x0d\n      return rmdir(path\x2C callback);\x0d\n\x0d\n    let done = false;\x0d\n\x0d\n    ArrayPrototypeForEach(files\x2C (child) => {\x0d\n      const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n      rimraf(childPath\x2C options\x2C (err) => {\x0d\n        if (done)\x0d\n          return;\x0d\n\x0d\n        if (err) {\x0d\n          done = true;\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        numFiles--;\x0d\n        if (numFiles === 0)\x0d\n          rmdir(path\x2C callback);\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafPromises(path\x2C options) {\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    rimraf(path\x2C options\x2C (err) => {\x0d\n      if (err)\x0d\n        return reject(err);\x0d\n\x0d\n      resolve();\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafSync(path\x2C options) {\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = lstatSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    // Windows can EPERM on stat.\x0d\n    if (isWindows && err.code === 'EPERM')\x0d\n      fixWinEPERMSync(path\x2C options\x2C err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    // SunOS lets the root user unlink directories.\x0d\n    if (stats?.isDirectory())\x0d\n      _rmdirSync(path\x2C options\x2C null);\x0d\n    else\x0d\n      _unlinkSync(path\x2C options);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'EPERM')\x0d\n      return epermHandlerSync(path\x2C options\x2C err);\x0d\n    if (err.code !== 'EISDIR')\x0d\n      throw err;\x0d\n\x0d\n    _rmdirSync(path\x2C options\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _unlinkSync(path\x2C options) {\x0d\n  const tries = options.maxRetries + 1;\x0d\n\x0d\n  for (let i = 1; i <= tries; i++) {\x0d\n    try {\x0d\n      return unlinkSync(path);\x0d\n    } catch (err) {\x0d\n      // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n      // than zero\x2C and an error was encountered that warrants a retry.\x0d\n      if (retryErrorCodes.has(err.code) &&\x0d\n          i < tries &&\x0d\n          options.retryDelay > 0) {\x0d\n        sleep(i * options.retryDelay);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdirSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    rmdirSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'ENOTDIR')\x0d\n      throw originalErr;\x0d\n\x0d\n    if (notEmptyErrorCodes.has(err.code)) {\x0d\n      // Removing failed. Try removing all children and then retrying the\x0d\n      // original removal. Windows has a habit of not closing handles promptly\x0d\n      // when files are deleted\x2C resulting in spurious ENOTEMPTY failures. Work\x0d\n      // around that issue by retrying on Windows.\x0d\n      const pathBuf = Buffer.from(path);\x0d\n\x0d\n      ArrayPrototypeForEach(readdirSync(pathBuf\x2C readdirEncoding)\x2C (child) => {\x0d\n        const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n        rimrafSync(childPath\x2C options);\x0d\n      });\x0d\n\x0d\n      const tries = options.maxRetries + 1;\x0d\n\x0d\n      for (let i = 1; i <= tries; i++) {\x0d\n        try {\x0d\n          return fs.rmdirSync(path);\x0d\n        } catch (err) {\x0d\n          // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n          // than zero\x2C and an error was encountered that warrants a retry.\x0d\n          if (retryErrorCodes.has(err.code) &&\x0d\n              i < tries &&\x0d\n              options.retryDelay > 0) {\x0d\n            sleep(i * options.retryDelay);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERMSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    chmodSync(path\x2C 0o666);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = statSync(path\x2C { throwIfNoEntry: false });\x0d\n  } catch {\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  if (stats === undefined) return;\x0d\n\x0d\n  if (stats.isDirectory())\x0d\n    _rmdirSync(path\x2C options\x2C originalErr);\x0d\n  else\x0d\n    _unlinkSync(path\x2C options);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = { rimraf\x2C rimrafPromises\x2C rimrafSync };\x0d\n
code-source-info,0x24050b0114e,128,0,7392,C0O0C4O7392,,
code-creation,Function,10,1477455,0x24050b0174e,409, node:internal/fs/rimraf:1:1,0x24dc49fff88,~
code-source-info,0x24050b0174e,128,0,7392,C0O0C139O377C145O403C151O415C156O464C159O464C164O453C170O495C173O495C177O495C179O671C182O522C188O532C194O546C200O556C206O570C212O582C218O598C224O608C230O622C236O631C242O644C248O655C254O692C257O692C262O684C267O733C270O733C275O718C281O771C284O771C289O761C295O825C302O825C307O825C309O897C316O897C321O897C323O994C330O1003C333O986C335O1038C345O1038C347O1098C357O1098C359O1165C361O1165C363O1194C366O1201C371O1201C376O1194C378O7334C385O7353C391O7361C397O7377C403O7349C408O7391,,
tick,0x7ff7de83298b,1478213,1,0x7ff7dd90e150,3,0x7ff7de2559a0,0x22e32684e3b,0x22e326848e5,0x24dc49fce74,0x22e32684f03,0x22e326848e5,0x24dc49f912d,0x22e32684f03,0x22e326848e5,0x24dc49f8932,0x22e32684f03,0x22e326848e5,0x24dc49e372a,0x22e32684f03,0x22e326848e5,0x24dc49e19fc,0x22e32684f03,0x22e326848e5,0x24dc49dd261,0x22e32684f03,0x22e326848e5,0x24dc49d90cc,0x22cec146526,0x22cec142065
code-creation,LazyCompile,10,1478331,0x24050b025e6,188,from node:buffer:296:28,0xc194f76f90,~
script-source,24,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMin\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n  Uint8ArrayPrototype\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  byteLengthUtf8\x2C\x0d\n  compare: _compare\x2C\x0d\n  compareOffset\x2C\x0d\n  createFromString\x2C\x0d\n  fill: bindingFill\x2C\x0d\n  indexOfBuffer\x2C\x0d\n  indexOfNumber\x2C\x0d\n  indexOfString\x2C\x0d\n  swap16: _swap16\x2C\x0d\n  swap32: _swap32\x2C\x0d\n  swap64: _swap64\x2C\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  getOwnNonIndexProperties\x2C\x0d\n  propertyFilter: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  kIsEncodingSymbol\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  inspect: utilInspect\x0d\n} = require('internal/util/inspect');\x0d\nconst { encodings } = internalBinding('string_decoder');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_BUFFER_SIZE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n  hideStackFrames\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateNumber\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n// Provide validateInteger() but with kMaxLength as the default maximum value.\x0d\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\x0d\n  validateInteger(value\x2C name\x2C min\x2C max);\x0d\n\x0d\nconst {\x0d\n  FastBuffer\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  createUnsafeBuffer\x0d\n} = require('internal/buffer');\x0d\n\x0d\nconst {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n} = require('internal/blob');\x0d\n\x0d\nFastBuffer.prototype.constructor = Buffer;\x0d\nBuffer.prototype = FastBuffer.prototype;\x0d\naddBufferPrototypeMethods(Buffer.prototype);\x0d\n\x0d\nconst constants = ObjectDefineProperties({}\x2C {\x0d\n  MAX_LENGTH: {\x0d\n    value: kMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x2C\x0d\n  MAX_STRING_LENGTH: {\x0d\n    value: kStringMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.poolSize = 8 * 1024;\x0d\nlet poolSize\x2C poolOffset\x2C allocPool;\x0d\n\x0d\nconst encodingsMap = ObjectCreate(null);\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\nfunction createPool() {\x0d\n  poolSize = Buffer.poolSize;\x0d\n  allocPool = createUnsafeBuffer(poolSize).buffer;\x0d\n  markAsUntransferable(allocPool);\x0d\n  poolOffset = 0;\x0d\n}\x0d\ncreatePool();\x0d\n\x0d\nfunction alignPool() {\x0d\n  // Ensure aligned slices\x0d\n  if (poolOffset & 0x7) {\x0d\n    poolOffset |= 0x7;\x0d\n    poolOffset++;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet bufferWarningAlreadyEmitted = false;\x0d\nlet nodeModulesCheckCounter = 0;\x0d\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\x0d\n                      'issues. Please use the Buffer.alloc()\x2C ' +\x0d\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\x0d\n\x0d\nfunction showFlaggedDeprecation() {\x0d\n  if (bufferWarningAlreadyEmitted ||\x0d\n      ++nodeModulesCheckCounter > 10000 ||\x0d\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\x0d\n       isInsideNodeModules())) {\x0d\n    // We don't emit a warning\x2C because we either:\x0d\n    // - Already did so\x2C or\x0d\n    // - Already checked too many times whether a call is coming\x0d\n    //   from node_modules and want to stop slowing down things\x2C or\x0d\n    // - We aren't running with `--pending-deprecation` enabled\x2C\x0d\n    //   and the code is inside `node_modules`.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\x0d\n  bufferWarningAlreadyEmitted = true;\x0d\n}\x0d\n\x0d\nfunction toInteger(n\x2C defaultVal) {\x0d\n  n = +n;\x0d\n  if (!NumberIsNaN(n) &&\x0d\n      n >= NumberMIN_SAFE_INTEGER &&\x0d\n      n <= NumberMAX_SAFE_INTEGER) {\x0d\n    return ((n % 1) === 0 ? n : MathFloor(n));\x0d\n  }\x0d\n  return defaultVal;\x0d\n}\x0d\n\x0d\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (!isUint8Array(source))\x0d\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n  if (!isUint8Array(target))\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n\x0d\n  if (targetStart === undefined) {\x0d\n    targetStart = 0;\x0d\n  } else {\x0d\n    targetStart = toInteger(targetStart\x2C 0);\x0d\n    if (targetStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\x0d\n  }\x0d\n\x0d\n  if (sourceStart === undefined) {\x0d\n    sourceStart = 0;\x0d\n  } else {\x0d\n    sourceStart = toInteger(sourceStart\x2C 0);\x0d\n    if (sourceStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C '>= 0'\x2C sourceStart);\x0d\n  }\x0d\n\x0d\n  if (sourceEnd === undefined) {\x0d\n    sourceEnd = source.length;\x0d\n  } else {\x0d\n    sourceEnd = toInteger(sourceEnd\x2C 0);\x0d\n    if (sourceEnd < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\x0d\n  }\x0d\n\x0d\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\x0d\n    return 0;\x0d\n\x0d\n  if (sourceStart > source.length) {\x0d\n    throw new ERR_OUT_OF_RANGE('sourceStart'\x2C\x0d\n                               `<= ${source.length}`\x2C\x0d\n                               sourceStart);\x0d\n  }\x0d\n\x0d\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n}\x0d\n\x0d\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (sourceEnd - sourceStart > target.length - targetStart)\x0d\n    sourceEnd = sourceStart + target.length - targetStart;\x0d\n\x0d\n  let nb = sourceEnd - sourceStart;\x0d\n  const sourceLen = source.length - sourceStart;\x0d\n  if (nb > sourceLen)\x0d\n    nb = sourceLen;\x0d\n\x0d\n  if (sourceStart !== 0 || sourceEnd < source.length)\x0d\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\x0d\n\x0d\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\x0d\n\x0d\n  return nb;\x0d\n}\x0d\n\x0d\n/**\x0d\n * The Buffer() constructor is deprecated in documentation and should not be\x0d\n * used moving forward. Rather\x2C developers should use one of the three new\x0d\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\x0d\n * their specific needs. There is no runtime deprecation because of the extent\x0d\n * to which the Buffer constructor is used in the ecosystem currently -- a\x0d\n * runtime deprecation would introduce too much breakage at this time. It's not\x0d\n * likely that the Buffer constructors would ever actually be removed.\x0d\n * Deprecation Code: DEP0005\x0d\n */\x0d\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\x0d\n  showFlaggedDeprecation();\x0d\n  // Common case.\x0d\n  if (typeof arg === 'number') {\x0d\n    if (typeof encodingOrOffset === 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\x0d\n    }\x0d\n    return Buffer.alloc(arg);\x0d\n  }\x0d\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return FastBuffer; }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\x0d\n * if value is a number.\x0d\n * Buffer.from(str[\x2C encoding])\x0d\n * Buffer.from(array)\x0d\n * Buffer.from(buffer)\x0d\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\x0d\n */\x0d\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\x0d\n  if (typeof value === 'string')\x0d\n    return fromString(value\x2C encodingOrOffset);\x0d\n\x0d\n  if (typeof value === 'object' && value !== null) {\x0d\n    if (isAnyArrayBuffer(value))\x0d\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\x0d\n\x0d\n    const valueOf = value.valueOf && value.valueOf();\x0d\n    if (valueOf != null &&\x0d\n        valueOf !== value &&\x0d\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\x0d\n      return from(valueOf\x2C encodingOrOffset\x2C length);\x0d\n    }\x0d\n\x0d\n    const b = fromObject(value);\x0d\n    if (b)\x0d\n      return b;\x0d\n\x0d\n    if (typeof value[SymbolToPrimitive] === 'function') {\x0d\n      const primitive = value[SymbolToPrimitive]('string');\x0d\n      if (typeof primitive === 'string') {\x0d\n        return fromString(primitive\x2C encodingOrOffset);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'first argument'\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\x0d\n    value\x0d\n  );\x0d\n};\x0d\n\x0d\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\x0d\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\x0d\n// adding a `prototype` property and making the function a constructor.\x0d\n//\x0d\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\x0d\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\x0d\nconst of = (...items) => {\x0d\n  const newObj = createUnsafeBuffer(items.length);\x0d\n  for (let k = 0; k < items.length; k++)\x0d\n    newObj[k] = items[k];\x0d\n  return newObj;\x0d\n};\x0d\nBuffer.of = of;\x0d\n\x0d\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\x0d\n\x0d\n// The 'assertSize' method will remove itself from the callstack when an error\x0d\n// occurs. This is done simply to keep the internal details of the\x0d\n// implementation from bleeding out to users.\x0d\nconst assertSize = hideStackFrames((size) => {\x0d\n  validateNumber(size\x2C 'size');\x0d\n  if (!(size >= 0 && size <= kMaxLength)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size'\x2C size);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Creates a new filled Buffer instance.\x0d\n * alloc(size[\x2C fill[\x2C encoding]])\x0d\n */\x0d\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\x0d\n  assertSize(size);\x0d\n  if (fill !== undefined && fill !== 0 && size > 0) {\x0d\n    const buf = createUnsafeBuffer(size);\x0d\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\x0d\n  }\x0d\n  return new FastBuffer(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\x0d\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafe = function allocUnsafe(size) {\x0d\n  assertSize(size);\x0d\n  return allocate(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\x0d\n * Buffer instance that is not allocated off the pre-initialized pool.\x0d\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\x0d\n  assertSize(size);\x0d\n  return createUnsafeBuffer(size);\x0d\n};\x0d\n\x0d\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\x0d\n// buffer is returned.\x0d\nfunction SlowBuffer(length) {\x0d\n  assertSize(length);\x0d\n  return createUnsafeBuffer(length);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\x0d\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\x0d\n\x0d\nfunction allocate(size) {\x0d\n  if (size <= 0) {\x0d\n    return new FastBuffer();\x0d\n  }\x0d\n  if (size < (Buffer.poolSize >>> 1)) {\x0d\n    if (size > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\x0d\n    poolOffset += size;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nfunction fromStringFast(string\x2C ops) {\x0d\n  const length = ops.byteLength(string);\x0d\n\x0d\n  if (length >= (Buffer.poolSize >>> 1))\x0d\n    return createFromString(string\x2C ops.encodingVal);\x0d\n\x0d\n  if (length > (poolSize - poolOffset))\x0d\n    createPool();\x0d\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\x0d\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\x0d\n  if (actual !== length) {\x0d\n    // byteLength() may overestimate. That's a rare case\x2C though.\x0d\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\x0d\n  }\x0d\n  poolOffset += actual;\x0d\n  alignPool();\x0d\n  return b;\x0d\n}\x0d\n\x0d\nfunction fromString(string\x2C encoding) {\x0d\n  let ops;\x0d\n  if (typeof encoding !== 'string' || encoding.length === 0) {\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n    ops = encodingOps.utf8;\x0d\n    encoding = undefined;\x0d\n  } else {\x0d\n    ops = getEncodingOps(encoding);\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n  }\x0d\n  return fromStringFast(string\x2C ops);\x0d\n}\x0d\n\x0d\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\x0d\n  // Convert byteOffset to integer\x0d\n  if (byteOffset === undefined) {\x0d\n    byteOffset = 0;\x0d\n  } else {\x0d\n    byteOffset = +byteOffset;\x0d\n    if (NumberIsNaN(byteOffset))\x0d\n      byteOffset = 0;\x0d\n  }\x0d\n\x0d\n  const maxLength = obj.byteLength - byteOffset;\x0d\n\x0d\n  if (maxLength < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = maxLength;\x0d\n  } else {\x0d\n    // Convert length to non-negative integer.\x0d\n    length = +length;\x0d\n    if (length > 0) {\x0d\n      if (length > maxLength)\x0d\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n    } else {\x0d\n      length = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\x0d\n}\x0d\n\x0d\nfunction fromArrayLike(obj) {\x0d\n  if (obj.length <= 0)\x0d\n    return new FastBuffer();\x0d\n  if (obj.length < (Buffer.poolSize >>> 1)) {\x0d\n    if (obj.length > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\x0d\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\x0d\n    poolOffset += obj.length;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return new FastBuffer(obj);\x0d\n}\x0d\n\x0d\nfunction fromObject(obj) {\x0d\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\x0d\n    if (typeof obj.length !== 'number') {\x0d\n      return new FastBuffer();\x0d\n    }\x0d\n    return fromArrayLike(obj);\x0d\n  }\x0d\n\x0d\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\x0d\n    return fromArrayLike(obj.data);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Static methods\x0d\n\x0d\nBuffer.isBuffer = function isBuffer(b) {\x0d\n  return b instanceof Buffer;\x0d\n};\x0d\n\x0d\nBuffer.compare = function compare(buf1\x2C buf2) {\x0d\n  if (!isUint8Array(buf1)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\x0d\n  }\x0d\n\x0d\n  if (!isUint8Array(buf2)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\x0d\n  }\x0d\n\x0d\n  if (buf1 === buf2) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  return _compare(buf1\x2C buf2);\x0d\n};\x0d\n\x0d\nBuffer.isEncoding = function isEncoding(encoding) {\x0d\n  return typeof encoding === 'string' && encoding.length !== 0 &&\x0d\n         normalizeEncoding(encoding) !== undefined;\x0d\n};\x0d\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\x0d\n\x0d\nBuffer.concat = function concat(list\x2C length) {\x0d\n  validateArray(list\x2C 'list');\x0d\n\x0d\n  if (list.length === 0)\x0d\n    return new FastBuffer();\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = 0;\x0d\n    for (let i = 0; i < list.length; i++) {\x0d\n      if (list[i].length) {\x0d\n        length += list[i].length;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    validateOffset(length\x2C 'length');\x0d\n  }\x0d\n\x0d\n  const buffer = Buffer.allocUnsafe(length);\x0d\n  let pos = 0;\x0d\n  for (let i = 0; i < list.length; i++) {\x0d\n    const buf = list[i];\x0d\n    if (!isUint8Array(buf)) {\x0d\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\x0d\n      // Instead\x2C find the proper error code for this.\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\x0d\n    }\x0d\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\x0d\n  }\x0d\n\x0d\n  // Note: `length` is always equal to `buffer.length` at this point\x0d\n  if (pos < length) {\x0d\n    // Zero-fill the remaining bytes if the specified `length` was more than\x0d\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\x0d\n    // there were not initialized.\x0d\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\x0d\n  }\x0d\n\x0d\n  return buffer;\x0d\n};\x0d\n\x0d\nfunction base64ByteLength(str\x2C bytes) {\x0d\n  // Handle padding\x0d\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n\x0d\n  // Base64 ratio: 3/4\x0d\n  return (bytes * 3) >>> 2;\x0d\n}\x0d\n\x0d\nconst encodingOps = {\x0d\n  utf8: {\x0d\n    encoding: 'utf8'\x2C\x0d\n    encodingVal: encodingsMap.utf8\x2C\x0d\n    byteLength: byteLengthUtf8\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x0d\n  }\x2C\x0d\n  ucs2: {\x0d\n    encoding: 'ucs2'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  utf16le: {\x0d\n    encoding: 'utf16le'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  latin1: {\x0d\n    encoding: 'latin1'\x2C\x0d\n    encodingVal: encodingsMap.latin1\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x0d\n  }\x2C\x0d\n  ascii: {\x0d\n    encoding: 'ascii'\x2C\x0d\n    encodingVal: encodingsMap.ascii\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.ascii\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64: {\x0d\n    encoding: 'base64'\x2C\x0d\n    encodingVal: encodingsMap.base64\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64url: {\x0d\n    encoding: 'base64url'\x2C\x0d\n    encodingVal: encodingsMap.base64url\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) =>\x0d\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64url\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  hex: {\x0d\n    encoding: 'hex'\x2C\x0d\n    encodingVal: encodingsMap.hex\x2C\x0d\n    byteLength: (string) => string.length >>> 1\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.hex\x2C\x0d\n                    dir)\x0d\n  }\x0d\n};\x0d\nfunction getEncodingOps(encoding) {\x0d\n  encoding += '';\x0d\n  switch (encoding.length) {\x0d\n    case 4:\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 5:\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 7:\x0d\n      if (encoding === 'utf16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 8:\x0d\n      if (encoding === 'utf-16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 6:\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      break;\x0d\n    case 3:\x0d\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\x0d\n        return encodingOps.hex;\x0d\n      break;\x0d\n    case 9:\x0d\n      if (encoding === 'base64url' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'base64url')\x0d\n        return encodingOps.base64url;\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction byteLength(string\x2C encoding) {\x0d\n  if (typeof string !== 'string') {\x0d\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\x0d\n      return string.byteLength;\x0d\n    }\x0d\n\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const len = string.length;\x0d\n  const mustMatch = (arguments.length > 2 && arguments[2] === true);\x0d\n  if (!mustMatch && len === 0)\x0d\n    return 0;\x0d\n\x0d\n  if (!encoding)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n  return ops.byteLength(string);\x0d\n}\x0d\n\x0d\nBuffer.byteLength = byteLength;\x0d\n\x0d\n// For backwards compatibility.\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.buffer;\x0d\n  }\x0d\n});\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.byteOffset;\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.prototype.copy =\x0d\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n  };\x0d\n\x0d\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\x0d\n// property of a typed array.\x0d\n// This behaves neither like String nor Uint8Array in that we set start/end\x0d\n// to their upper/lower bounds if the value passed is out of range.\x0d\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\x0d\n  if (arguments.length === 0) {\x0d\n    return this.utf8Slice(0\x2C this.length);\x0d\n  }\x0d\n\x0d\n  const len = this.length;\x0d\n\x0d\n  if (start <= 0)\x0d\n    start = 0;\x0d\n  else if (start >= len)\x0d\n    return '';\x0d\n  else\x0d\n    start |= 0;\x0d\n\x0d\n  if (end === undefined || end > len)\x0d\n    end = len;\x0d\n  else\x0d\n    end |= 0;\x0d\n\x0d\n  if (end <= start)\x0d\n    return '';\x0d\n\x0d\n  if (encoding === undefined)\x0d\n    return this.utf8Slice(start\x2C end);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n\x0d\n  return ops.slice(this\x2C start\x2C end);\x0d\n};\x0d\n\x0d\nBuffer.prototype.equals = function equals(otherBuffer) {\x0d\n  if (!isUint8Array(otherBuffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\x0d\n  }\x0d\n\x0d\n  if (this === otherBuffer)\x0d\n    return true;\x0d\n\x0d\n  if (this.byteLength !== otherBuffer.byteLength)\x0d\n    return false;\x0d\n\x0d\n  return this.byteLength === 0 || _compare(this\x2C otherBuffer) === 0;\x0d\n};\x0d\n\x0d\nlet INSPECT_MAX_BYTES = 50;\x0d\n// Override how buffers are presented by util.inspect().\x0d\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\x0d\n  const max = INSPECT_MAX_BYTES;\x0d\n  const actualMax = MathMin(max\x2C this.length);\x0d\n  const remaining = this.length - max;\x0d\n  let str = StringPrototypeTrim(StringPrototypeReplace(\x0d\n    this.hexSlice(0\x2C actualMax)\x2C /(.{2})/g\x2C '$1 '));\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  // Inspect special properties as well\x2C if possible.\x0d\n  if (ctx) {\x0d\n    let extras = false;\x0d\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n    const obj = ObjectCreate(null);\x0d\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\x0d\n                          (key) => {\x0d\n                            extras = true;\x0d\n                            obj[key] = this[key];\x0d\n                          });\x0d\n    if (extras) {\x0d\n      if (this.length !== 0)\x0d\n        str += '\x2C ';\x0d\n      // '[Object: null prototype] {'.length === 26\x0d\n      // This is guarded with a test.\x0d\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\x0d\n        ...ctx\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        compact: true\x0d\n      })\x2C 27\x2C -2);\x0d\n    }\x0d\n  }\x0d\n  return `<${this.constructor.name} ${str}>`;\x0d\n};\x0d\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\x0d\n\x0d\nBuffer.prototype.compare = function compare(target\x2C\x0d\n                                            targetStart\x2C\x0d\n                                            targetEnd\x2C\x0d\n                                            sourceStart\x2C\x0d\n                                            sourceEnd) {\x0d\n  if (!isUint8Array(target)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n  }\x0d\n  if (arguments.length === 1)\x0d\n    return _compare(this\x2C target);\x0d\n\x0d\n  if (targetStart === undefined)\x0d\n    targetStart = 0;\x0d\n  else\x0d\n    validateOffset(targetStart\x2C 'targetStart');\x0d\n\x0d\n  if (targetEnd === undefined)\x0d\n    targetEnd = target.length;\x0d\n  else\x0d\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\x0d\n\x0d\n  if (sourceStart === undefined)\x0d\n    sourceStart = 0;\x0d\n  else\x0d\n    validateOffset(sourceStart\x2C 'sourceStart');\x0d\n\x0d\n  if (sourceEnd === undefined)\x0d\n    sourceEnd = this.length;\x0d\n  else\x0d\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\x0d\n\x0d\n  if (sourceStart >= sourceEnd)\x0d\n    return (targetStart >= targetEnd ? 0 : -1);\x0d\n  if (targetStart >= targetEnd)\x0d\n    return 1;\x0d\n\x0d\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\x0d\n                       sourceEnd);\x0d\n};\x0d\n\x0d\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\x0d\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\x0d\n//\x0d\n// Arguments:\x0d\n// - buffer - a Buffer to search\x0d\n// - val - a string\x2C Buffer\x2C or number\x0d\n// - byteOffset - an index into `buffer`; will be clamped to an int32\x0d\n// - encoding - an optional encoding\x2C relevant if val is a string\x0d\n// - dir - true for indexOf\x2C false for lastIndexOf\x0d\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (typeof byteOffset === 'string') {\x0d\n    encoding = byteOffset;\x0d\n    byteOffset = undefined;\x0d\n  } else if (byteOffset > 0x7fffffff) {\x0d\n    byteOffset = 0x7fffffff;\x0d\n  } else if (byteOffset < -0x80000000) {\x0d\n    byteOffset = -0x80000000;\x0d\n  }\x0d\n  // Coerce to Number. Values like null and [] become 0.\x0d\n  byteOffset = +byteOffset;\x0d\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\x0d\n  if (NumberIsNaN(byteOffset)) {\x0d\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\x0d\n  }\x0d\n  dir = !!dir;  // Cast to bool.\x0d\n\x0d\n  if (typeof val === 'number')\x0d\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\x0d\n\x0d\n  let ops;\x0d\n  if (encoding === undefined)\x0d\n    ops = encodingOps.utf8;\x0d\n  else\x0d\n    ops = getEncodingOps(encoding);\x0d\n\x0d\n  if (typeof val === 'string') {\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(val)) {\x0d\n    const encodingVal =\x0d\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\x0d\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x0d\n  );\x0d\n}\x0d\n\x0d\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\x0d\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\x0d\n};\x0d\n\x0d\n// Usage:\x0d\n//    buffer.fill(number[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\x0d\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\x0d\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n};\x0d\n\x0d\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\x0d\n  if (typeof value === 'string') {\x0d\n    if (offset === undefined || typeof offset === 'string') {\x0d\n      encoding = offset;\x0d\n      offset = 0;\x0d\n      end = buf.length;\x0d\n    } else if (typeof end === 'string') {\x0d\n      encoding = end;\x0d\n      end = buf.length;\x0d\n    }\x0d\n\x0d\n    const normalizedEncoding = normalizeEncoding(encoding);\x0d\n    if (normalizedEncoding === undefined) {\x0d\n      validateString(encoding\x2C 'encoding');\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (value.length === 0) {\x0d\n      // If value === '' default to zero.\x0d\n      value = 0;\x0d\n    } else if (value.length === 1) {\x0d\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\x0d\n      if (normalizedEncoding === 'utf8') {\x0d\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n        if (code < 128) {\x0d\n          value = code;\x0d\n        }\x0d\n      } else if (normalizedEncoding === 'latin1') {\x0d\n        value = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    encoding = undefined;\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n    end = buf.length;\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset');\x0d\n    // Invalid ranges are not set to a default\x2C so can range check early.\x0d\n    if (end === undefined) {\x0d\n      end = buf.length;\x0d\n    } else {\x0d\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\x0d\n    }\x0d\n    if (offset >= end)\x0d\n      return buf;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (typeof value === 'number') {\x0d\n    // OOB check\x0d\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\x0d\n    const fillLength = end - offset;\x0d\n    if (offset > end || fillLength + offset > byteLen)\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\x0d\n  } else {\x0d\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n    if (res < 0) {\x0d\n      if (res === -1)\x0d\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return buf;\x0d\n}\x0d\n\x0d\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\x0d\n  // Buffer#write(string);\x0d\n  if (offset === undefined) {\x0d\n    return this.utf8Write(string\x2C 0\x2C this.length);\x0d\n  }\x0d\n  // Buffer#write(string\x2C encoding)\x0d\n  if (length === undefined && typeof offset === 'string') {\x0d\n    encoding = offset;\x0d\n    length = this.length;\x0d\n    offset = 0;\x0d\n\x0d\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\x0d\n\x0d\n    const remaining = this.length - offset;\x0d\n\x0d\n    if (length === undefined) {\x0d\n      length = remaining;\x0d\n    } else if (typeof length === 'string') {\x0d\n      encoding = length;\x0d\n      length = remaining;\x0d\n    } else {\x0d\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\x0d\n      if (length > remaining)\x0d\n        length = remaining;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!encoding)\x0d\n    return this.utf8Write(string\x2C offset\x2C length);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  return ops.write(this\x2C string\x2C offset\x2C length);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toJSON = function toJSON() {\x0d\n  if (this.length > 0) {\x0d\n    const data = new Array(this.length);\x0d\n    for (let i = 0; i < this.length; ++i)\x0d\n      data[i] = this[i];\x0d\n    return { type: 'Buffer'\x2C data };\x0d\n  }\x0d\n  return { type: 'Buffer'\x2C data: [] };\x0d\n};\x0d\n\x0d\nfunction adjustOffset(offset\x2C length) {\x0d\n  // Use Math.trunc() to convert offset to an integer value that can be larger\x0d\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\x0d\n  offset = MathTrunc(offset);\x0d\n  if (offset === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (offset < 0) {\x0d\n    offset += length;\x0d\n    return offset > 0 ? offset : 0;\x0d\n  }\x0d\n  if (offset < length) {\x0d\n    return offset;\x0d\n  }\x0d\n  return NumberIsNaN(offset) ? 0 : length;\x0d\n}\x0d\n\x0d\nBuffer.prototype.subarray = function subarray(start\x2C end) {\x0d\n  const srcLength = this.length;\x0d\n  start = adjustOffset(start\x2C srcLength);\x0d\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\x0d\n  const newLength = end > start ? end - start : 0;\x0d\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\x0d\n};\x0d\n\x0d\nBuffer.prototype.slice = function slice(start\x2C end) {\x0d\n  return this.subarray(start\x2C end);\x0d\n};\x0d\n\x0d\nfunction swap(b\x2C n\x2C m) {\x0d\n  const i = b[n];\x0d\n  b[n] = b[m];\x0d\n  b[m] = i;\x0d\n}\x0d\n\x0d\nBuffer.prototype.swap16 = function swap16() {\x0d\n  // For Buffer.length < 128\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 2 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\x0d\n  if (len < 128) {\x0d\n    for (let i = 0; i < len; i += 2)\x0d\n      swap(this\x2C i\x2C i + 1);\x0d\n    return this;\x0d\n  }\x0d\n  return _swap16(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap32 = function swap32() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 4 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 4) {\x0d\n      swap(this\x2C i\x2C i + 3);\x0d\n      swap(this\x2C i + 1\x2C i + 2);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap32(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap64 = function swap64() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 8 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 8) {\x0d\n      swap(this\x2C i\x2C i + 7);\x0d\n      swap(this\x2C i + 1\x2C i + 6);\x0d\n      swap(this\x2C i + 2\x2C i + 5);\x0d\n      swap(this\x2C i + 3\x2C i + 4);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap64(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\x0d\n\x0d\nlet transcode;\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const {\x0d\n    icuErrName\x2C\x0d\n    transcode: _transcode\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\x0d\n  // Buffer instance.\x0d\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\x0d\n    if (!isUint8Array(source)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\x0d\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n    }\x0d\n    if (source.length === 0) return Buffer.alloc(0);\x0d\n\x0d\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\x0d\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\x0d\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\x0d\n    if (typeof result !== 'number')\x0d\n      return result;\x0d\n\x0d\n    const code = icuErrName(result);\x0d\n    const err = genericNodeError(\x0d\n      `Unable to transcode Buffer [${code}]`\x2C\x0d\n      { code: code\x2C errno: result }\x0d\n    );\x0d\n    throw err;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction btoa(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (input[n].charCodeAt(0) > 0xff)\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  const buf = Buffer.from(input\x2C 'latin1');\x0d\n  return buf.toString('base64');\x0d\n}\x0d\n\x0d\nconst kBase64Digits =\x0d\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\x0d\n\x0d\nfunction atob(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (!kBase64Digits.includes(input[n]))\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  return Buffer.from(input\x2C 'base64').toString('latin1');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n  Buffer\x2C\x0d\n  SlowBuffer\x2C\x0d\n  transcode\x2C\x0d\n  // Legacy\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n  btoa\x2C\x0d\n  atob\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  INSPECT_MAX_BYTES: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return INSPECT_MAX_BYTES; }\x2C\x0d\n    set(val) { INSPECT_MAX_BYTES = val; }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x24050b025e6,24,8735,9718,C3O8774C9O8810C12O8817C17O8853C18O8859C28O8915C33O8919C39O8951C51O8958C56O9007C57O9037C63O9054C68O9054C73O9070C78O9110C95O9203C104O9210C109O9250C110O9275C113O9275C118O9299C120O9313C122O9322C123O9330C125O9347C127O9346C134O9409C136O9415C138O9414C145O9433C151O9452C155O9498C158O9505C163O9545C164O9572C182O9578C187O9572,,
code-creation,LazyCompile,10,1485855,0x24050b05016,110,fromString node:buffer:432:20,0xc194f77378,~
code-source-info,0x24050b05016,24,12922,13371,C0O12950C2O12958C8O13003C14O13010C19O13035C25O13042C30O13056C35O13063C40O13080C41O13086C46O13104C51O13115C56O13154C59O13160C64O13191C66O13221C73O13227C78O13221C79O13279C85O13286C90O13300C95O13307C100O13324C101O13333C104O13340C109O13368,,
code-creation,LazyCompile,10,1486085,0x24050b051ce,177,fromStringFast node:buffer:413:24,0xc194f772d8,~
code-source-info,0x24050b051ce,24,12359,12899,C0O12397C5O12397C11O12422C14O12444C18O12453C21O12433C26O12466C31O12502C36O12473C41O12515C42O12521C44O12535C49O12546C51O12544C54O12532C59O12564C62O12564C65O12589C72O12604C77O12615C85O12589C91O12658C110O12658C116O12690C118O12701C123O12787C130O12806C135O12817C143O12791C149O12846C156O12860C162O12857C168O12871C171O12871C174O12887C176O12896,,
code-creation,LazyCompile,10,1486254,0x24050b053be,36,FastBuffer node:internal/buffer:958:14,0x12f5b0cbb00,~
code-source-info,0x24050b053be,25,27321,27412,C3O27365C7O27399C20O27365C35O27411,,
code-creation,LazyCompile,10,1486357,0x24050b054be,23,write node:buffer:593:12,0xc194f776e8,~
code-source-info,0x24050b054be,24,17151,17215,C0O17185C17O17185C22O17215,,
code-creation,LazyCompile,10,1486457,0x24050b055ae,42,alignPool node:buffer:159:19,0xc194f76d10,~
code-source-info,0x24050b055ae,24,4190,4300,C0O4226C4O4241C9O4255C19O4266C25O4279C34O4289C41O4299,,
code-creation,LazyCompile,10,1486870,0x24050b0596e,251,promisify node:internal/util:324:19,0xc194f461f8,~
code-source-info,0x24050b0596e,16,9168,10721,C0O9168C17O9232C25O9273C33O9297C38O9276C55O9335C68O9335C73O9380C80O9393C82O9392C87O9438C94O9447C96O9446C100O9481C110O9481C115O9535C126O9567C136O9609C143O9542C148O9676C149O9844C156O9853C158O9852C161O9844C163O10429C174O10454C180O10454C185O10429C190O10492C201O10517C211O10557C218O10492C223O10626C234O10671C240O10671C245O10633C250O10718,,
code-creation,LazyCompile,10,1487384,0x24050b05f1e,65,EventEmitterMixin node:internal/event_target:962:27,0x15057cde378,~
script-source,44,node:internal/event_target,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SafeWeakSet\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_EVENT_RECURSION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { validateObject\x2C validateString } = require('internal/validators');\x0d\n\x0d\nconst { customInspectSymbol\x2C kEnumerableProperty } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\x0d\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  kMaxEventTargetListeners\x2C\x0d\n  kMaxEventTargetListenersWarned\x2C\x0d\n} = EventEmitter;\x0d\n\x0d\nconst kEvents = Symbol('kEvents');\x0d\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\x0d\nconst kStop = Symbol('kStop');\x0d\nconst kTarget = Symbol('kTarget');\x0d\nconst kHandlers = Symbol('khandlers');\x0d\nconst kWeakHandler = Symbol('kWeak');\x0d\n\x0d\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\x0d\nconst kCreateEvent = Symbol('kCreateEvent');\x0d\nconst kNewListener = Symbol('kNewListener');\x0d\nconst kRemoveListener = Symbol('kRemoveListener');\x0d\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\x0d\nconst kTrustEvent = Symbol('kTrustEvent');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\n// TODO(joyeecheung): V8 snapshot does not support instance member\x0d\n// initializers for now:\x0d\n// https://bugs.chromium.org/p/v8/issues/detail?id=10704\x0d\nconst kType = Symbol('type');\x0d\nconst kDefaultPrevented = Symbol('defaultPrevented');\x0d\nconst kCancelable = Symbol('cancelable');\x0d\nconst kTimestamp = Symbol('timestamp');\x0d\nconst kBubbles = Symbol('bubbles');\x0d\nconst kComposed = Symbol('composed');\x0d\nconst kPropagationStopped = Symbol('propagationStopped');\x0d\n\x0d\nconst isTrustedSet = new SafeWeakSet();\x0d\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\x0d\n  get isTrusted() {\x0d\n    return isTrustedSet.has(this);\x0d\n  }\x0d\n}\x2C 'isTrusted').get;\x0d\n\x0d\nfunction isEvent(value) {\x0d\n  return typeof value?.[kType] === 'string';\x0d\n}\x0d\n\x0d\nclass Event {\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = null) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    validateObject(options\x2C 'options'\x2C {\x0d\n      allowArray: true\x2C allowFunction: true\x2C nullable: true\x2C\x0d\n    });\x0d\n    const { cancelable\x2C bubbles\x2C composed } = { ...options };\x0d\n    this[kCancelable] = !!cancelable;\x0d\n    this[kBubbles] = !!bubbles;\x0d\n    this[kComposed] = !!composed;\x0d\n    this[kType] = `${type}`;\x0d\n    this[kDefaultPrevented] = false;\x0d\n    this[kTimestamp] = now();\x0d\n    this[kPropagationStopped] = false;\x0d\n    if (options?.[kTrustEvent]) {\x0d\n      isTrustedSet.add(this);\x0d\n    }\x0d\n\x0d\n    // isTrusted is special (LegacyUnforgeable)\x0d\n    ObjectDefineProperty(this\x2C 'isTrusted'\x2C {\x0d\n      get: isTrusted\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: false\x0d\n    });\x0d\n    this[kTarget] = null;\x0d\n    this[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({\x0d\n      type: this[kType]\x2C\x0d\n      defaultPrevented: this[kDefaultPrevented]\x2C\x0d\n      cancelable: this[kCancelable]\x2C\x0d\n      timeStamp: this[kTimestamp]\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  stopImmediatePropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kStop] = true;\x0d\n  }\x0d\n\x0d\n  preventDefault() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kDefaultPrevented] = true;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get target() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get currentTarget() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get srcElement() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {string}\x0d\n   */\x0d\n  get type() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kType];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelable() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get defaultPrevented() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable] && this[kDefaultPrevented];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get timeStamp() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTimestamp];\x0d\n  }\x0d\n\x0d\n\x0d\n  // The following are non-op and unused properties/methods from Web API Event.\x0d\n  // These are not supported in Node.js and are provided purely for\x0d\n  // API completeness.\x0d\n  /**\x0d\n   * @returns {EventTarget[]}\x0d\n   */\x0d\n  composedPath() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get returnValue() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return !this.defaultPrevented;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get bubbles() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kBubbles];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get composed() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kComposed];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get eventPhase() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelBubble() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kPropagationStopped];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  set cancelBubble(value) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    if (value) {\x0d\n      this.stopPropagation();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stopPropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kPropagationStopped] = true;\x0d\n  }\x0d\n\x0d\n  static NONE = 0;\x0d\n  static CAPTURING_PHASE = 1;\x0d\n  static AT_TARGET = 2;\x0d\n  static BUBBLING_PHASE = 3;\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Event.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      writable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: 'Event'\x2C\x0d\n    }\x2C\x0d\n    stopImmediatePropagation: kEnumerableProperty\x2C\x0d\n    preventDefault: kEnumerableProperty\x2C\x0d\n    target: kEnumerableProperty\x2C\x0d\n    currentTarget: kEnumerableProperty\x2C\x0d\n    srcElement: kEnumerableProperty\x2C\x0d\n    type: kEnumerableProperty\x2C\x0d\n    cancelable: kEnumerableProperty\x2C\x0d\n    defaultPrevented: kEnumerableProperty\x2C\x0d\n    timeStamp: kEnumerableProperty\x2C\x0d\n    composedPath: kEnumerableProperty\x2C\x0d\n    returnValue: kEnumerableProperty\x2C\x0d\n    bubbles: kEnumerableProperty\x2C\x0d\n    composed: kEnumerableProperty\x2C\x0d\n    eventPhase: kEnumerableProperty\x2C\x0d\n    cancelBubble: kEnumerableProperty\x2C\x0d\n    stopPropagation: kEnumerableProperty\x2C\x0d\n  });\x0d\n\x0d\nclass NodeCustomEvent extends Event {\x0d\n  constructor(type\x2C options) {\x0d\n    super(type\x2C options);\x0d\n    if (options?.detail) {\x0d\n      this.detail = options.detail;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Weak listener cleanup\x0d\n// This has to be lazy for snapshots to work\x0d\nlet weakListenersState = null;\x0d\n// The resource needs to retain the callback so that it doesn't\x0d\n// get garbage collected now that it's weak.\x0d\nlet objectToWeakListenerMap = null;\x0d\nfunction weakListeners() {\x0d\n  weakListenersState ??= new SafeFinalizationRegistry(\x0d\n    (listener) => listener.remove()\x0d\n  );\x0d\n  objectToWeakListenerMap ??= new SafeWeakMap();\x0d\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\x0d\n}\x0d\n\x0d\n// The listeners for an EventTarget are maintained as a linked list.\x0d\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\x0d\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\x0d\n// use of capture or bubbling\x2C in order to be spec compliant we have to\x0d\n// take on the additional complexity of supporting it. Fortunately\x2C using\x0d\n// the linked list makes dispatching faster\x2C even if adding/removing is\x0d\n// slower.\x0d\nclass Listener {\x0d\n  constructor(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n              isNodeStyleListener\x2C weak) {\x0d\n    this.next = undefined;\x0d\n    if (previous !== undefined)\x0d\n      previous.next = this;\x0d\n    this.previous = previous;\x0d\n    this.listener = listener;\x0d\n    // TODO(benjamingr) these 4 can be 'flags' to save 3 slots\x0d\n    this.once = once;\x0d\n    this.capture = capture;\x0d\n    this.passive = passive;\x0d\n    this.isNodeStyleListener = isNodeStyleListener;\x0d\n    this.removed = false;\x0d\n    this.weak = Boolean(weak); // Don't retain the object\x0d\n\x0d\n    if (this.weak) {\x0d\n      this.callback = new SafeWeakRef(listener);\x0d\n      weakListeners().registry.register(listener\x2C this\x2C this);\x0d\n      // Make the retainer retain the listener in a WeakMap\x0d\n      weakListeners().map.set(weak\x2C listener);\x0d\n      this.listener = this.callback;\x0d\n    } else if (typeof listener === 'function') {\x0d\n      this.callback = listener;\x0d\n      this.listener = listener;\x0d\n    } else {\x0d\n      this.callback = FunctionPrototypeBind(listener.handleEvent\x2C listener);\x0d\n      this.listener = listener;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  same(listener\x2C capture) {\x0d\n    const myListener = this.weak ? this.listener.deref() : this.listener;\x0d\n    return myListener === listener && this.capture === capture;\x0d\n  }\x0d\n\x0d\n  remove() {\x0d\n    if (this.previous !== undefined)\x0d\n      this.previous.next = this.next;\x0d\n    if (this.next !== undefined)\x0d\n      this.next.previous = this.previous;\x0d\n    this.removed = true;\x0d\n    if (this.weak)\x0d\n      weakListeners().registry.unregister(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initEventTarget(self) {\x0d\n  self[kEvents] = new SafeMap();\x0d\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\x0d\n  self[kMaxEventTargetListenersWarned] = false;\x0d\n}\x0d\n\x0d\nclass EventTarget {\x0d\n  // Used in checking whether an object is an EventTarget. This is a well-known\x0d\n  // symbol as EventTarget may be used cross-realm.\x0d\n  // Ref: https://github.com/nodejs/node/pull/33661\x0d\n  static [kIsEventTarget] = true;\x0d\n\x0d\n  constructor() {\x0d\n    initEventTarget(this);\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\x0d\n    if (this[kMaxEventTargetListeners] > 0 &&\x0d\n        size > this[kMaxEventTargetListeners] &&\x0d\n        !this[kMaxEventTargetListenersWarned]) {\x0d\n      this[kMaxEventTargetListenersWarned] = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventTarget memory leak detected. ' +\x0d\n                          `${size} ${type} listeners ` +\x0d\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\x0d\n                          'events.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      w.count = size;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\x0d\n\x0d\n  /**\x0d\n   * @callback EventTargetCallback\x0d\n   * @param {Event} event\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @typedef {{ handleEvent: EventTargetCallback }} EventListener\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   *   once?: boolean\x2C\x0d\n   *   passive?: boolean\x2C\x0d\n   *   signal?: AbortSignal\x0d\n   * }} [options]\x0d\n   */\x0d\n  addEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n\x0d\n    // We validateOptions before the shouldAddListeners check because the spec\x0d\n    // requires us to hit getters.\x0d\n    const {\x0d\n      once\x2C\x0d\n      capture\x2C\x0d\n      passive\x2C\x0d\n      signal\x2C\x0d\n      isNodeStyleListener\x2C\x0d\n      weak\x2C\x0d\n    } = validateEventListenerOptions(options);\x0d\n\x0d\n    if (!shouldAddListener(listener)) {\x0d\n      // The DOM silently allows passing undefined as a second argument\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error(`addEventListener called with ${listener}` +\x0d\n                          ' which has no effect.');\x0d\n      w.name = 'AddEventListenerArgumentTypeWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      process.emitWarning(w);\x0d\n      return;\x0d\n    }\x0d\n    type = String(type);\x0d\n\x0d\n    if (signal) {\x0d\n      if (signal.aborted) {\x0d\n        return;\x0d\n      }\x0d\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\x0d\n      // not prevent the event target from GC.\x0d\n      signal.addEventListener('abort'\x2C () => {\x0d\n        this.removeEventListener(type\x2C listener\x2C options);\x0d\n      }\x2C { once: true\x2C [kWeakHandler]: this });\x0d\n    }\x0d\n\x0d\n    let root = this[kEvents].get(type);\x0d\n\x0d\n    if (root === undefined) {\x0d\n      root = { size: 1\x2C next: undefined };\x0d\n      // This is the first handler in our linked list.\x0d\n      new Listener(root\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                   isNodeStyleListener\x2C weak);\x0d\n      this[kNewListener](\x0d\n        root.size\x2C\x0d\n        type\x2C\x0d\n        listener\x2C\x0d\n        once\x2C\x0d\n        capture\x2C\x0d\n        passive\x2C\x0d\n        weak);\x0d\n      this[kEvents].set(type\x2C root);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let previous = root;\x0d\n\x0d\n    // We have to walk the linked list to see if we have a match\x0d\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\x0d\n      previous = handler;\x0d\n      handler = handler.next;\x0d\n    }\x0d\n\x0d\n    if (handler !== undefined) { // Duplicate! Ignore\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    new Listener(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                 isNodeStyleListener\x2C weak);\x0d\n    root.size++;\x0d\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  removeEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (!shouldAddListener(listener))\x0d\n      return;\x0d\n\x0d\n    type = String(type);\x0d\n    const capture = options?.capture === true;\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined)\x0d\n      return;\x0d\n\x0d\n    let handler = root.next;\x0d\n    while (handler !== undefined) {\x0d\n      if (handler.same(listener\x2C capture)) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        if (root.size === 0)\x0d\n          this[kEvents].delete(type);\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n        break;\x0d\n      }\x0d\n      handler = handler.next;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {Event} event\x0d\n   */\x0d\n  dispatchEvent(event) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n\x0d\n    if (!(event instanceof Event))\x0d\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\x0d\n\x0d\n    if (event[kIsBeingDispatched])\x0d\n      throw new ERR_EVENT_RECURSION(event.type);\x0d\n\x0d\n    this[kHybridDispatch](event\x2C event.type\x2C event);\x0d\n\x0d\n    return event.defaultPrevented !== true;\x0d\n  }\x0d\n\x0d\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\x0d\n    const createEvent = () => {\x0d\n      if (event === undefined) {\x0d\n        event = this[kCreateEvent](nodeValue\x2C type);\x0d\n        event[kTarget] = this;\x0d\n        event[kIsBeingDispatched] = true;\x0d\n      }\x0d\n      return event;\x0d\n    };\x0d\n    if (event !== undefined) {\x0d\n      event[kTarget] = this;\x0d\n      event[kIsBeingDispatched] = true;\x0d\n    }\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined) {\x0d\n      if (event !== undefined)\x0d\n        event[kIsBeingDispatched] = false;\x0d\n      return true;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let next;\x0d\n\x0d\n    while (handler !== undefined &&\x0d\n           (handler.passive || event?.[kStop] !== true)) {\x0d\n      // Cache the next item in case this iteration removes the current one\x0d\n      next = handler.next;\x0d\n\x0d\n      if (handler.removed) {\x0d\n        // Deal with the case an event is removed while event handlers are\x0d\n        // Being processed (removeEventListener called from a listener)\x0d\n        handler = next;\x0d\n        continue;\x0d\n      }\x0d\n      if (handler.once) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        const { listener\x2C capture } = handler;\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        let arg;\x0d\n        if (handler.isNodeStyleListener) {\x0d\n          arg = nodeValue;\x0d\n        } else {\x0d\n          arg = createEvent();\x0d\n        }\x0d\n        const callback = handler.weak ?\x0d\n          handler.callback.deref() : handler.callback;\x0d\n        let result;\x0d\n        if (callback) {\x0d\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\x0d\n          if (!handler.isNodeStyleListener) {\x0d\n            arg[kIsBeingDispatched] = false;\x0d\n          }\x0d\n        }\x0d\n        if (result !== undefined && result !== null)\x0d\n          addCatch(result);\x0d\n      } catch (err) {\x0d\n        emitUncaughtException(err);\x0d\n      }\x0d\n\x0d\n      handler = next;\x0d\n    }\x0d\n\x0d\n    if (event !== undefined)\x0d\n      event[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [kCreateEvent](nodeValue\x2C type) {\x0d\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\x0d\n  }\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({}\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(EventTarget.prototype\x2C {\x0d\n  addEventListener: kEnumerableProperty\x2C\x0d\n  removeEventListener: kEnumerableProperty\x2C\x0d\n  dispatchEvent: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'EventTarget'\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction initNodeEventTarget(self) {\x0d\n  initEventTarget(self);\x0d\n}\x0d\n\x0d\nclass NodeEventTarget extends EventTarget {\x0d\n  static [kIsNodeEventTarget] = true;\x0d\n  static defaultMaxListeners = 10;\x0d\n\x0d\n  constructor() {\x0d\n    super();\x0d\n    initNodeEventTarget(this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {number} n\x0d\n   */\x0d\n  setMaxListeners(n) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    EventEmitter.setMaxListeners(n\x2C this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {number}\x0d\n   */\x0d\n  getMaxListeners() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return this[kMaxEventTargetListeners];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {string[]}\x0d\n   */\x0d\n  eventNames() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return ArrayFrom(this[kEvents].keys());\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} [type]\x0d\n   * @returns {number}\x0d\n   */\x0d\n  listenerCount(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    const root = this[kEvents].get(String(type));\x0d\n    return root !== undefined ? root.size : 0;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  off(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeListener(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  on(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  addListener(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {any} arg\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  emit(type\x2C arg) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    validateString(type\x2C 'type');\x0d\n    const hadListeners = this.listenerCount(type) > 0;\x0d\n    this[kHybridDispatch](arg\x2C type);\x0d\n    return hadListeners;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  once(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C\x0d\n                          { once: true\x2C [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeAllListeners(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    if (type !== undefined) {\x0d\n      this[kEvents].delete(String(type));\x0d\n    } else {\x0d\n      this[kEvents].clear();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\x0d\n  setMaxListeners: kEnumerableProperty\x2C\x0d\n  getMaxListeners: kEnumerableProperty\x2C\x0d\n  eventNames: kEnumerableProperty\x2C\x0d\n  listenerCount: kEnumerableProperty\x2C\x0d\n  off: kEnumerableProperty\x2C\x0d\n  removeListener: kEnumerableProperty\x2C\x0d\n  on: kEnumerableProperty\x2C\x0d\n  addListener: kEnumerableProperty\x2C\x0d\n  once: kEnumerableProperty\x2C\x0d\n  emit: kEnumerableProperty\x2C\x0d\n  removeAllListeners: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n// EventTarget API\x0d\n\x0d\nfunction shouldAddListener(listener) {\x0d\n  if (typeof listener === 'function' ||\x0d\n      typeof listener?.handleEvent === 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (listener == null)\x0d\n    return false;\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\x0d\n}\x0d\n\x0d\nfunction validateEventListenerOptions(options) {\x0d\n  if (typeof options === 'boolean')\x0d\n    return { capture: options };\x0d\n\x0d\n  if (options === null)\x0d\n    return {};\x0d\n  validateObject(options\x2C 'options'\x2C {\x0d\n    allowArray: true\x2C allowFunction: true\x2C\x0d\n  });\x0d\n  return {\x0d\n    once: Boolean(options.once)\x2C\x0d\n    capture: Boolean(options.capture)\x2C\x0d\n    passive: Boolean(options.passive)\x2C\x0d\n    signal: options.signal\x2C\x0d\n    weak: options[kWeakHandler]\x2C\x0d\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\x0d\n  };\x0d\n}\x0d\n\x0d\n// Test whether the argument is an event object. This is far from a fool-proof\x0d\n// test\x2C for example this input will result in a false positive:\x0d\n// > isEventTarget({ constructor: EventTarget })\x0d\n// It stands in its current implementation as a compromise.\x0d\n// Ref: https://github.com/nodejs/node/pull/33661\x0d\nfunction isEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsEventTarget];\x0d\n}\x0d\n\x0d\nfunction isNodeEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsNodeEventTarget];\x0d\n}\x0d\n\x0d\nfunction addCatch(promise) {\x0d\n  const then = promise.then;\x0d\n  if (typeof then === 'function') {\x0d\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\x0d\n      // The callback is called with nextTick to avoid a follow-up\x0d\n      // rejection from this promise.\x0d\n      emitUncaughtException(err);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUncaughtException(err) {\x0d\n  process.nextTick(() => { throw err; });\x0d\n}\x0d\n\x0d\nfunction makeEventHandler(handler) {\x0d\n  // Event handlers are dispatched in the order they were first set\x0d\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\x0d\n  function eventHandler(...args) {\x0d\n    if (typeof eventHandler.handler !== 'function') {\x0d\n      return;\x0d\n    }\x0d\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\x0d\n  }\x0d\n  eventHandler.handler = handler;\x0d\n  return eventHandler;\x0d\n}\x0d\n\x0d\nfunction defineEventHandler(emitter\x2C name) {\x0d\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\x0d\n  ObjectDefineProperty(emitter\x2C `on${name}`\x2C {\x0d\n    get() {\x0d\n      return this[kHandlers]?.get(name)?.handler ?? null;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (!this[kHandlers]) {\x0d\n        this[kHandlers] = new SafeMap();\x0d\n      }\x0d\n      let wrappedHandler = this[kHandlers]?.get(name);\x0d\n      if (wrappedHandler) {\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size--;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kRemoveListener](size\x2C name\x2C wrappedHandler.handler\x2C false);\x0d\n        }\x0d\n        wrappedHandler.handler = value;\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size++;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kNewListener](size\x2C name\x2C value\x2C false\x2C false\x2C false\x2C false);\x0d\n        }\x0d\n      } else {\x0d\n        wrappedHandler = makeEventHandler(value);\x0d\n        this.addEventListener(name\x2C wrappedHandler);\x0d\n      }\x0d\n      this[kHandlers].set(name\x2C wrappedHandler);\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nconst EventEmitterMixin = (Superclass) => {\x0d\n  class MixedEventEmitter extends Superclass {\x0d\n    constructor(...args) {\x0d\n      args = new SafeArrayIterator(args);\x0d\n      super(...args);\x0d\n      FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n    }\x0d\n  }\x0d\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\x0d\n  delete protoProps.constructor;\x0d\n  ObjectDefineProperties(MixedEventEmitter.prototype\x2C protoProps);\x0d\n  return MixedEventEmitter;\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  Event\x2C\x0d\n  EventEmitterMixin\x2C\x0d\n  EventTarget\x2C\x0d\n  NodeEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n  initEventTarget\x2C\x0d\n  initNodeEventTarget\x2C\x0d\n  kCreateEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kEvents\x2C\x0d\n  kWeakHandler\x2C\x0d\n  isEventTarget\x2C\x0d\n};\x0d\n
code-source-info,0x24050b05f1e,44,26678,27112,C0O26731C23O26922C30O26954C33O26967C38O26922C43O26982C47O27016C52O27057C57O27016C62O27084C64O27109,,
tick,0x7ff954d9faa4,1493754,0,0x0,3,0x7ff7dde840c0,0x24dc49fd070,0x22e32684f03,0x22e326848e5,0x24dc49f912d,0x22e32684f03,0x22e326848e5,0x24dc49f8932,0x22e32684f03,0x22e326848e5,0x24dc49e372a,0x22e32684f03,0x22e326848e5,0x24dc49e19fc,0x22e32684f03,0x22e326848e5,0x24dc49dd261,0x22e32684f03,0x22e326848e5,0x24dc49d90cc,0x22cec146526,0x22cec142065
code-creation,Eval,10,1494831,0x24050b089de,5, node:internal/modules/esm/translators:1:1,0x24050b08578,~
script-source,129,node:internal/modules/esm/translators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  Boolean\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  SyntaxErrorPrototype\x2C\x0d\n  globalThis: { WebAssembly }\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet _TYPES = null;\x0d\nfunction lazyTypes() {\x0d\n  if (_TYPES !== null) return _TYPES;\x0d\n  return _TYPES = require('internal/util/types');\x0d\n}\x0d\n\x0d\nconst { readFileSync } = require('fs');\x0d\nconst { extname\x2C isAbsolute } = require('path');\x0d\nconst {\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst {\x0d\n  Module: CJSModule\x2C\x0d\n  cjsParseCache\x0d\n} = require('internal/modules/cjs/loader');\x0d\nconst internalURLModule = require('internal/url');\x0d\nconst createDynamicModule = require(\x0d\n  'internal/modules/esm/create_dynamic_module');\x0d\nconst { fileURLToPath\x2C URL } = require('url');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x0d\n} = require('internal/errors').codes;\x0d\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\x0d\nconst moduleWrap = internalBinding('module_wrap');\x0d\nconst { ModuleWrap } = moduleWrap;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { emitWarningSync } = require('internal/process/warning');\x0d\nconst { TextDecoder } = require('internal/encoding');\x0d\n\x0d\nlet cjsParse;\x0d\nasync function initCJSParse() {\x0d\n  if (typeof WebAssembly === 'undefined') {\x0d\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n  } else {\x0d\n    const { parse\x2C init } =\x0d\n        require('internal/deps/cjs-module-lexer/dist/lexer');\x0d\n    await init();\x0d\n    cjsParse = parse;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst translators = new SafeMap();\x0d\nexports.translators = translators;\x0d\nexports.enrichCJSError = enrichCJSError;\x0d\n\x0d\nlet DECODER = null;\x0d\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\x0d\n  if (allowString && typeof body === 'string') {\x0d\n    return;\x0d\n  }\x0d\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\x0d\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\x0d\n    return;\x0d\n  }\x0d\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\x0d\n    hookName\x2C\x0d\n    'source'\x2C\x0d\n    body\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringify(body) {\x0d\n  if (typeof body === 'string') return body;\x0d\n  assertBufferSource(body\x2C false\x2C 'transformSource');\x0d\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\x0d\n  return DECODER.decode(body);\x0d\n}\x0d\n\x0d\nfunction errPath(url) {\x0d\n  const parsed = new URL(url);\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    return fileURLToPath(parsed);\x0d\n  }\x0d\n  return url;\x0d\n}\x0d\n\x0d\nasync function importModuleDynamically(specifier\x2C { url }\x2C assertions) {\x0d\n  return asyncESM.esmLoader.import(specifier\x2C\x0d\n                                   asyncESM.esmLoader.getBaseURL(url)\x2C\x0d\n                                   assertions);\x0d\n}\x0d\n\x0d\n// Strategy for loading a standard JavaScript module.\x0d\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  source = stringify(source);\x0d\n  maybeCacheSourceMap(url\x2C source);\x0d\n  debug(`Translating StandardModule ${url}`);\x0d\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n  moduleWrap.callbackMap.set(module\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C {\x0d\n      url: wrap.url\x0d\n    })\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  });\x0d\n  return module;\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {Error | any} err\x0d\n * @param {string} [content] Content of the file\x2C if known.\x0d\n * @param {string} [filename] Useful only if `content` is unknown.\x0d\n */\x0d\nfunction enrichCJSError(err\x2C content\x2C filename) {\x0d\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\x0d\n      hasEsmSyntax(content || readFileSync(filename\x2C 'utf-8'))) {\x0d\n    // Emit the warning synchronously because we are in the middle of handling\x0d\n    // a SyntaxError that will throw and likely terminate the process before an\x0d\n    // asynchronous warning would be emitted.\x0d\n    emitWarningSync(\x0d\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\x0d\n      'the .mjs extension.'\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n// Strategy for loading a node-style CommonJS module\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst winSepRegEx = /\\//g;\x0d\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\x0d\n                                                            isMain) {\x0d\n  debug(`Translating CJSModule ${url}`);\x0d\n\x0d\n  let filename = internalURLModule.fileURLToPath(new URL(url));\x0d\n  if (isWindows)\x0d\n    filename = StringPrototypeReplace(filename\x2C winSepRegEx\x2C '\\\\');\x0d\n\x0d\n  if (!cjsParse) await initCJSParse();\x0d\n  const { module\x2C exportNames } = cjsPreparseModuleExports(filename);\x0d\n  const namesWithDefault = exportNames.has('default') ?\x0d\n    [...exportNames] : ['default'\x2C ...exportNames];\x0d\n\x0d\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\x0d\n    debug(`Loading CJSModule ${url}`);\x0d\n\x0d\n    let exports;\x0d\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\x0d\n      exports = asyncESM.esmLoader.cjsCache.get(module);\x0d\n      asyncESM.esmLoader.cjsCache.delete(module);\x0d\n    } else {\x0d\n      try {\x0d\n        exports = CJSModule._load(filename\x2C undefined\x2C isMain);\x0d\n      } catch (err) {\x0d\n        enrichCJSError(err\x2C undefined\x2C filename);\x0d\n        throw err;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    for (const exportName of exportNames) {\x0d\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\x0d\n          exportName === 'default')\x0d\n        continue;\x0d\n      // We might trigger a getter -> dont fail.\x0d\n      let value;\x0d\n      try {\x0d\n        value = exports[exportName];\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      this.setExport(exportName\x2C value);\x0d\n    }\x0d\n    this.setExport('default'\x2C exports);\x0d\n  });\x0d\n});\x0d\n\x0d\nfunction cjsPreparseModuleExports(filename) {\x0d\n  let module = CJSModule._cache[filename];\x0d\n  if (module) {\x0d\n    const cached = cjsParseCache.get(module);\x0d\n    if (cached)\x0d\n      return { module\x2C exportNames: cached.exportNames };\x0d\n  }\x0d\n  const loaded = Boolean(module);\x0d\n  if (!loaded) {\x0d\n    module = new CJSModule(filename);\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    CJSModule._cache[filename] = module;\x0d\n  }\x0d\n\x0d\n  let source;\x0d\n  try {\x0d\n    source = readFileSync(filename\x2C 'utf8');\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n\x0d\n  let exports\x2C reexports;\x0d\n  try {\x0d\n    ({ exports\x2C reexports } = cjsParse(source || ''));\x0d\n  } catch {\x0d\n    exports = [];\x0d\n    reexports = [];\x0d\n  }\x0d\n\x0d\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\x0d\n\x0d\n  // Set first for cycles.\x0d\n  cjsParseCache.set(module\x2C { source\x2C exportNames\x2C loaded });\x0d\n\x0d\n  if (reexports.length) {\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n  }\x0d\n  ArrayPrototypeForEach(reexports\x2C (reexport) => {\x0d\n    let resolved;\x0d\n    try {\x0d\n      resolved = CJSModule._resolveFilename(reexport\x2C module);\x0d\n    } catch {\x0d\n      return;\x0d\n    }\x0d\n    const ext = extname(resolved);\x0d\n    if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\x0d\n        isAbsolute(resolved)) {\x0d\n      const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved);\x0d\n      for (const name of reexportNames)\x0d\n        exportNames.add(name);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return { module\x2C exportNames };\x0d\n}\x0d\n\x0d\n// Strategy for loading a node builtin CommonJS module that isn't\x0d\n// through normal resolution\x0d\ntranslators.set('builtin'\x2C async function builtinStrategy(url) {\x0d\n  debug(`Translating BuiltinModule ${url}`);\x0d\n  // Slice 'node:' scheme\x0d\n  const id = StringPrototypeSlice(url\x2C 5);\x0d\n  const module = loadNativeModule(id\x2C url);\x0d\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\x0d\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\x0d\n  }\x0d\n  debug(`Loading BuiltinModule ${url}`);\x0d\n  return module.getESMFacade();\x0d\n});\x0d\n\x0d\n// Strategy for loading a JSON file\x0d\ntranslators.set('json'\x2C async function jsonStrategy(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing JSON modules');\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  debug(`Loading JSONModule ${url}`);\x0d\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\x0d\n    fileURLToPath(url) : null;\x0d\n  let modulePath;\x0d\n  let module;\x0d\n  if (pathname) {\x0d\n    modulePath = isWindows ?\x0d\n      StringPrototypeReplace(pathname\x2C winSepRegEx\x2C '\\\\') : pathname;\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  source = stringify(source);\x0d\n  if (pathname) {\x0d\n    // A require call could have been called on the same file during loading and\x0d\n    // that resolves synchronously. To make sure we always return the identical\x0d\n    // export\x2C we have to check again if the module already exists or not.\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const exports = JSONParse(stripBOM(source));\x0d\n    module = {\x0d\n      exports\x2C\x0d\n      loaded: true\x0d\n    };\x0d\n  } catch (err) {\x0d\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\x0d\n    // parse error instead of just manipulating the original error message.\x0d\n    // That would allow to add further properties and maybe additional\x0d\n    // debugging information.\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n  if (pathname) {\x0d\n    CJSModule._cache[modulePath] = module;\x0d\n  }\x0d\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n    debug(`Parsing JSONModule ${url}`);\x0d\n    this.setExport('default'\x2C module.exports);\x0d\n  });\x0d\n});\x0d\n\x0d\n// Strategy for loading a wasm module\x0d\ntranslators.set('wasm'\x2C async function(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing WebAssembly modules');\x0d\n\x0d\n  assertBufferSource(source\x2C false\x2C 'load');\x0d\n\x0d\n  debug(`Translating WASMModule ${url}`);\x0d\n\x0d\n  let compiled;\x0d\n  try {\x0d\n    compiled = await WebAssembly.compile(source);\x0d\n  } catch (err) {\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const imports =\x0d\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\x0d\n                        ({ module }) => module);\x0d\n  const exports =\x0d\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\x0d\n                      ({ name }) => name);\x0d\n\x0d\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\x0d\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\x0d\n    for (const expt of ObjectKeys(exports))\x0d\n      reflect.exports[expt].set(exports[expt]);\x0d\n  }).module;\x0d\n});\x0d\n
code-source-info,0x24050b089de,129,0,11128,C0O0C4O11128,,
code-creation,Function,10,1497437,0x24050b0917e,715, node:internal/modules/esm/translators:1:1,0x24050b08958,~
code-source-info,0x24050b0917e
code-creation,Eval,10,1498519,0x24050b0a686,5, node:internal/modules/esm/create_dynamic_module:1:1,0x24050b0a4b0,~
script-source,130,node:internal/modules/esm/create_dynamic_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nfunction createImport(impt\x2C index) {\x0d\n  const imptPath = JSONStringify(impt);\x0d\n  return `import * as $import_${index} from ${imptPath};\x0d\nimport.meta.imports[${imptPath}] = $import_${index};`;\x0d\n}\x0d\n\x0d\nfunction createExport(expt) {\x0d\n  const name = `${expt}`;\x0d\n  return `let $${name};\x0d\nexport { $${name} as ${name} };\x0d\nimport.meta.exports.${name} = {\x0d\n  get: () => $${name}\x2C\x0d\n  set: (v) => $${name} = v\x2C\x0d\n};`;\x0d\n}\x0d\n\x0d\nconst createDynamicModule = (imports\x2C exports\x2C url = ''\x2C evaluate) => {\x0d\n  debug('creating ESM facade for %s with exports: %j'\x2C url\x2C exports);\x0d\n  const source = `\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(imports\x2C createImport)\x2C '\\n')}\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(exports\x2C createExport)\x2C '\\n')}\x0d\nimport.meta.done();\x0d\n`;\x0d\n  const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n  const m = new ModuleWrap(`${url}`\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n\x0d\n  const readyfns = new SafeSet();\x0d\n  const reflect = {\x0d\n    exports: ObjectCreate(null)\x2C\x0d\n    onReady: (cb) => { readyfns.add(cb); }\x2C\x0d\n  };\x0d\n\x0d\n  if (imports.length)\x0d\n    reflect.imports = ObjectCreate(null);\x0d\n\x0d\n  callbackMap.set(m\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => {\x0d\n      meta.exports = reflect.exports;\x0d\n      if (reflect.imports)\x0d\n        meta.imports = reflect.imports;\x0d\n      meta.done = () => {\x0d\n        evaluate(reflect);\x0d\n        reflect.onReady = (cb) => cb(reflect);\x0d\n        for (const fn of readyfns) {\x0d\n          readyfns.delete(fn);\x0d\n          fn(reflect);\x0d\n        }\x0d\n      };\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  return {\x0d\n    module: m\x2C\x0d\n    reflect\x2C\x0d\n  };\x0d\n};\x0d\n\x0d\nmodule.exports = createDynamicModule;\x0d\n
code-source-info,0x24050b0a686,130,0,1828,C0O0C4O1828,,
code-creation,Function,10,1499150,0x24050b0a8ae,111, node:internal/modules/esm/create_dynamic_module:1:1,0x24050b0a600,~
code-source-info,0x24050b0a8ae,130,0,1828,C0O0C39O28C45O51C51O73C57O91C63O108C69O150C72O150C77O183C90O184C96O150C98O672C103O1789C105O1804C110O1827,,
code-creation,Eval,10,1500677,0x24050b0bb56,5, node:internal/vm/module:1:1,0x24050b0b610,~
script-source,131,node:internal/vm/module,'use strict';\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { isContext } = internalBinding('contextify');\x0d\nconst {\x0d\n  isModuleNamespaceObject\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\x0d\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\x0d\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\x0d\n  ERR_VM_MODULE_LINKING_ERRORED\x2C\x0d\n  ERR_VM_MODULE_NOT_MODULE\x2C\x0d\n  ERR_VM_MODULE_STATUS\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst binding = internalBinding('module_wrap');\x0d\nconst {\x0d\n  ModuleWrap\x2C\x0d\n  kUninstantiated\x2C\x0d\n  kInstantiating\x2C\x0d\n  kInstantiated\x2C\x0d\n  kEvaluating\x2C\x0d\n  kEvaluated\x2C\x0d\n  kErrored\x2C\x0d\n} = binding;\x0d\n\x0d\nconst STATUS_MAP = {\x0d\n  [kUninstantiated]: 'unlinked'\x2C\x0d\n  [kInstantiating]: 'linking'\x2C\x0d\n  [kInstantiated]: 'linked'\x2C\x0d\n  [kEvaluating]: 'evaluating'\x2C\x0d\n  [kEvaluated]: 'evaluated'\x2C\x0d\n  [kErrored]: 'errored'\x2C\x0d\n};\x0d\n\x0d\nlet globalModuleId = 0;\x0d\nconst defaultModuleName = 'vm:module';\x0d\nconst wrapToModuleMap = new SafeWeakMap();\x0d\n\x0d\nconst kWrap = Symbol('kWrap');\x0d\nconst kContext = Symbol('kContext');\x0d\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\x0d\nconst kLink = Symbol('kLink');\x0d\n\x0d\nclass Module {\x0d\n  constructor(options) {\x0d\n    emitExperimentalWarning('VM Modules');\x0d\n\x0d\n    if (new.target === Module) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new TypeError('Module is not a constructor');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      context\x2C\x0d\n      sourceText\x2C\x0d\n      syntheticExportNames\x2C\x0d\n      syntheticEvaluationSteps\x2C\x0d\n    } = options;\x0d\n\x0d\n    if (context !== undefined) {\x0d\n      validateObject(context\x2C 'context');\x0d\n      if (!isContext(context)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\x0d\n                                       context);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let { identifier } = options;\x0d\n    if (identifier !== undefined) {\x0d\n      validateString(identifier\x2C 'options.identifier');\x0d\n    } else if (context === undefined) {\x0d\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\x0d\n    } else if (context[kPerContextModuleId] !== undefined) {\x0d\n      const curId = context[kPerContextModuleId];\x0d\n      identifier = `${defaultModuleName}(${curId})`;\x0d\n      context[kPerContextModuleId] += 1;\x0d\n    } else {\x0d\n      identifier = `${defaultModuleName}(0)`;\x0d\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\x0d\n        value: 1\x2C\x0d\n        writable: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (sourceText !== undefined) {\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\x0d\n                                   options.lineOffset\x2C options.columnOffset\x2C\x0d\n                                   options.cachedData);\x0d\n\x0d\n      binding.callbackMap.set(this[kWrap]\x2C {\x0d\n        initializeImportMeta: options.initializeImportMeta\x2C\x0d\n        importModuleDynamically: options.importModuleDynamically ?\x0d\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\x0d\n          undefined\x2C\x0d\n      });\x0d\n    } else {\x0d\n      assert(syntheticEvaluationSteps);\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\x0d\n                                   syntheticExportNames\x2C\x0d\n                                   syntheticEvaluationSteps);\x0d\n    }\x0d\n\x0d\n    wrapToModuleMap.set(this[kWrap]\x2C this);\x0d\n\x0d\n    this[kContext] = context;\x0d\n  }\x0d\n\x0d\n  get identifier() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kWrap].url;\x0d\n  }\x0d\n\x0d\n  get context() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kContext];\x0d\n  }\x0d\n\x0d\n  get namespace() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\x0d\n    }\x0d\n    return this[kWrap].getNamespace();\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return STATUS_MAP[this[kWrap].getStatus()];\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be errored');\x0d\n    }\x0d\n    return this[kWrap].getError();\x0d\n  }\x0d\n\x0d\n  async link(linker) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateFunction(linker\x2C 'linker');\x0d\n    if (this.status === 'linked') {\x0d\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\x0d\n    }\x0d\n    if (this.status !== 'unlinked') {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\x0d\n    }\x0d\n    await this[kLink](linker);\x0d\n    this[kWrap].instantiate();\x0d\n  }\x0d\n\x0d\n  async evaluate(options = {}) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    let timeout = options.timeout;\x0d\n    if (timeout === undefined) {\x0d\n      timeout = -1;\x0d\n    } else {\x0d\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n    }\x0d\n    const { breakOnSigint = false } = options;\x0d\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n    const status = this[kWrap].getStatus();\x0d\n    if (status !== kInstantiated &&\x0d\n        status !== kEvaluated &&\x0d\n        status !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS(\x0d\n        'must be one of linked\x2C evaluated\x2C or errored'\x0d\n      );\x0d\n    }\x0d\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || Module;\x0d\n    const o = ObjectCreate({ constructor });\x0d\n    o.status = this.status;\x0d\n    o.identifier = this.identifier;\x0d\n    o.context = this.context;\x0d\n\x0d\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\x0d\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\x0d\n      value: constructor.name\x2C\x0d\n      configurable: true\x0d\n    });\x0d\n\x0d\n    // Lazy to avoid circular dependency\x0d\n    const { inspect } = require('internal/util/inspect');\x0d\n    return inspect(o\x2C { ...options\x2C customInspect: false });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\x0d\nconst kNoError = Symbol('kNoError');\x0d\n\x0d\nclass SourceTextModule extends Module {\x0d\n  #error = kNoError;\x0d\n  #statusOverride;\x0d\n\x0d\n  constructor(sourceText\x2C options = {}) {\x0d\n    validateString(sourceText\x2C 'sourceText');\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const {\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      cachedData\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n\x0d\n    if (initializeImportMeta !== undefined &&\x0d\n        typeof initializeImportMeta !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.initializeImportMeta'\x2C 'function'\x2C initializeImportMeta);\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined &&\x0d\n        typeof importModuleDynamically !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.importModuleDynamically'\x2C 'function'\x2C\x0d\n        importModuleDynamically);\x0d\n    }\x0d\n\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n\x0d\n    super({\x0d\n      sourceText\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      lineOffset\x2C\x0d\n      columnOffset\x2C\x0d\n      cachedData\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = async (linker) => {\x0d\n      this.#statusOverride = 'linking';\x0d\n\x0d\n      const promises = this[kWrap].link(async (identifier\x2C assert) => {\x0d\n        const module = await linker(identifier\x2C this\x2C { assert });\x0d\n        if (module[kWrap] === undefined) {\x0d\n          throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n        }\x0d\n        if (module.context !== this.context) {\x0d\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\x0d\n        }\x0d\n        if (module.status === 'errored') {\x0d\n          // TODO(devsnek): replace with ERR_VM_MODULE_LINK_FAILURE\x0d\n          // and error cause proposal.\x0d\n          throw new ERR_VM_MODULE_LINKING_ERRORED();\x0d\n        }\x0d\n        if (module.status === 'unlinked') {\x0d\n          await module[kLink](linker);\x0d\n        }\x0d\n        return module[kWrap];\x0d\n      });\x0d\n\x0d\n      try {\x0d\n        if (promises !== undefined) {\x0d\n          await PromiseAll(promises);\x0d\n        }\x0d\n      } catch (e) {\x0d\n        this.#error = e;\x0d\n        throw e;\x0d\n      } finally {\x0d\n        this.#statusOverride = undefined;\x0d\n      }\x0d\n    };\x0d\n\x0d\n    this[kDependencySpecifiers] = undefined;\x0d\n  }\x0d\n\x0d\n  get dependencySpecifiers() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kDependencySpecifiers] === undefined) {\x0d\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\x0d\n    }\x0d\n    return this[kDependencySpecifiers];\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return 'errored';\x0d\n    }\x0d\n    if (this.#statusOverride) {\x0d\n      return this.#statusOverride;\x0d\n    }\x0d\n    return super.status;\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return this.#error;\x0d\n    }\x0d\n    return super.error;\x0d\n  }\x0d\n\x0d\n  createCachedData() {\x0d\n    const { status } = this;\x0d\n    if (status === 'evaluating' ||\x0d\n        status === 'evaluated' ||\x0d\n        status === 'errored') {\x0d\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\x0d\n    }\x0d\n    return this[kWrap].createCachedData();\x0d\n  }\x0d\n}\x0d\n\x0d\nclass SyntheticModule extends Module {\x0d\n  constructor(exportNames\x2C evaluateCallback\x2C options = {}) {\x0d\n    if (!ArrayIsArray(exportNames) ||\x0d\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\x0d\n                                     'Array of unique strings'\x2C\x0d\n                                     exportNames);\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\x0d\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\x0d\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\x0d\n                                          name\x2C\x0d\n                                          'is duplicated');\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const { context\x2C identifier } = options;\x0d\n\x0d\n    super({\x0d\n      syntheticExportNames: exportNames\x2C\x0d\n      syntheticEvaluationSteps: evaluateCallback\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = () => this[kWrap].link(() => {\x0d\n      assert.fail('link callback should not be called');\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setExport(name\x2C value) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateString(name\x2C 'name');\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be linked');\x0d\n    }\x0d\n    this[kWrap].setExport(name\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\x0d\n  const importModuleDynamicallyWrapper = async (...args) => {\x0d\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\x0d\n    if (isModuleNamespaceObject(m)) {\x0d\n      return m;\x0d\n    }\x0d\n    if (!m || m[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (m.status === 'errored') {\x0d\n      throw m.error;\x0d\n    }\x0d\n    return m.namespace;\x0d\n  };\x0d\n  return importModuleDynamicallyWrapper;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Module\x2C\x0d\n  SourceTextModule\x2C\x0d\n  SyntheticModule\x2C\x0d\n  importModuleDynamicallyWrap\x2C\x0d\n  getModuleFromWrap: (wrap) => wrapToModuleMap.get(wrap)\x2C\x0d\n};\x0d\n
code-source-info,0x24050b0bb56,131,0,12768,C0O0C4O12768,,
code-creation,Function,10,1502975,0x24050b0cdb6,872, node:internal/vm/module:1:1,0x24050b0bad0,~
code-source-info,0x24050b0cdb
code-creation,Function,10,1503324,0x24050b0d2f6,30,<instance_members_initializer> node:internal/vm/module:256:3,0x24050b0c140,~
code-source-info,0x24050b0d2f6,131,7051,7088,C3O7060C29O7088,,
code-creation,LazyCompile,10,1503962,0x24050b0e6ee,30,ESMLoader node:internal/modules/esm/loader:61:1,0x24dc49e2d40,~
code-source-info,0x24050b0e6ee,114,1718,1718,C9O1718C29O1718,,
code-creation,LazyCompile,10,1504141,0x24050b0fba6,27,ModuleMap node:internal/modules/esm/module_map:17:14,0x24dc49e5490,~
code-source-info,0x24050b0fba6,115,534,551,C3O540C7O546C11O540C26O550,,
code-creation,LazyCompile,10,1504325,0x24050b0fe4e,13,desc.value node:internal/per_context/primordials:334:32,0x3eae9a8a000,~
code-source-info,0x24050b0fe4e,6,9964,10025,C0O9982C7O9989C12O10012,,
code-creation,LazyCompile,10,1504472,0x24050b0ff56,13,SafeIterator node:internal/per_context/primordials:279:16,0x3eae9a89a50,~
code-source-info,0x24050b0ff56,6,8198,8260,C0O8218C3O8235C7O8233C12O8259,,
code-creation,LazyCompile,10,1504625,0x24050b1008e,13,next node:internal/per_context/primordials:282:9,0x3eae9a89b18,~
code-source-info,0x24050b1008e,6,8270,8317,C0O8282C3O8299C8O8289C12O8310,,
code-creation,LazyCompile,10,1505231,0x24050b10706,28,getEmbedderOptions node:internal/options:32:28,0x2bf990bdac8,~
code-source-info,0x24050b10706,91,791,913,C0O799C6O828C11O846C17O844C23O887C27O910,,
code-creation,LazyCompile,10,1505662,0x24050b109ae,315,Module._initPaths node:internal/modules/cjs/loader:1233:29,0x24dc49dc298,~
code-source-info,0x24050b109ae
tick,0x7ff7de82ec22,1506544,0,0x0,3,0x7ff7dde840c0,0x24dc49d90ea,0x22cec146526,0x22cec142065
code-creation,Eval,10,1506600,0x24050b13906,5, node:internal/modules/run_main:1:1,0x24050b136e0,~
script-source,132,node:internal/modules/run_main,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n} = primordials;\x0d\nconst CJSLoader = require('internal/modules/cjs/loader');\x0d\nconst { Module\x2C toRealPath\x2C readPackageScope } = CJSLoader;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst path = require('path');\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nfunction resolveMainPath(main) {\x0d\n  // Note extension resolution for the main entry point can be deprecated in a\x0d\n  // future major.\x0d\n  // Module._findPath is monkey-patchable here.\x0d\n  let mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\x0d\n  if (!mainPath)\x0d\n    return;\x0d\n\x0d\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n  if (!preserveSymlinksMain)\x0d\n    mainPath = toRealPath(mainPath);\x0d\n\x0d\n  return mainPath;\x0d\n}\x0d\n\x0d\nfunction shouldUseESMLoader(mainPath) {\x0d\n  const userLoader = getOptionValue('--experimental-loader');\x0d\n  if (userLoader)\x0d\n    return true;\x0d\n  const esModuleSpecifierResolution =\x0d\n    getOptionValue('--experimental-specifier-resolution');\x0d\n  if (esModuleSpecifierResolution === 'node')\x0d\n    return true;\x0d\n  // Determine the module format of the main\x0d\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs'))\x0d\n    return true;\x0d\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs'))\x0d\n    return false;\x0d\n  const pkg = readPackageScope(mainPath);\x0d\n  return pkg && pkg.data.type === 'module';\x0d\n}\x0d\n\x0d\nfunction runMainESM(mainPath) {\x0d\n  const { loadESM } = require('internal/process/esm_loader');\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n\x0d\n  handleMainPromise(loadESM((esmLoader) => {\x0d\n    const main = path.isAbsolute(mainPath) ?\x0d\n      pathToFileURL(mainPath).href : mainPath;\x0d\n    return esmLoader.import(main\x2C undefined\x2C ObjectCreate(null));\x0d\n  }));\x0d\n}\x0d\n\x0d\nasync function handleMainPromise(promise) {\x0d\n  process.on('exit'\x2C handleProcessExit);\x0d\n  try {\x0d\n    return await promise;\x0d\n  } finally {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n  }\x0d\n}\x0d\n\x0d\n// For backwards compatibility\x2C we have to run a bunch of\x0d\n// monkey-patchable code that belongs to the CJS loader (exposed by\x0d\n// `require('module')`) even when the entry point is ESM.\x0d\nfunction executeUserEntryPoint(main = process.argv[1]) {\x0d\n  const resolvedMain = resolveMainPath(main);\x0d\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\x0d\n  if (useESMLoader) {\x0d\n    runMainESM(resolvedMain || main);\x0d\n  } else {\x0d\n    // Module._load is the monkey-patchable CJS module loader.\x0d\n    Module._load(main\x2C null\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  executeUserEntryPoint\x2C\x0d\n  handleMainPromise\x2C\x0d\n};\x0d\n
code-source-info,0x24050b13906,132,0,2621,C0O0C4O2621,,
code-creation,Function,10,1507131,0x24050b13bee,178, node:internal/modules/run_main:1:1,0x24050b13880,~
code-source-info,0x24050b13bee,132,0,2621,C0O0C66O28C72O45C78O107C84O107C89O156C95O164C101O176C107O236C113O236C118O217C124O279C130O279C134O279C136O332C142O332C147O308C153O2549C160O2571C166O2597C172O2564C177O2620,,
code-creation,LazyCompile,10,1507968,0x24050b1441e,163,initializeESMLoader node:internal/bootstrap/pre_execution:487:29,0x22cec1446d0,~
code-source-info,0x24050b1441e,96,15871,16986,C0O15955C6O15955C13O16004C16O16000C21O15998C25O16024C30O16028C34O16048C40O16077C41O16084C42O16189C48O16189C53O16103C58O16144C63O16236C69O16236C74O16440C79O16398C83O16511C88O16472C92O16681C100O16685C106O16804C112O16804C117O16752C122O16760C127O16778C132O16851C138O16851C143O16871C145O16881C149O16896C151O16916C155O16941C157O16960C162O16985,,
code-creation,LazyCompile,10,1508556,0x24050b14636,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32,0x24dc49db788,~
code-source-info,0x24050b14636,111,2379,2419,C0O2384C4O2417,,
code-creation,LazyCompile,10,1508847,0x24050b1471e,53,loadPreloadModules node:internal/bootstrap/pre_execution:530:28,0x22cec1447c0,~
code-source-info,0x24050b1471e,96,17478,17809,C0O17567C8O17567C13O17599C15O17636C21O17643C26O17724C32O17724C37O17724C42O17689C47O17769C52O17808,,
code-creation,LazyCompile,10,1509233,0x24050b14916,166,Module._preloadModules node:internal/modules/cjs/loader:1263:34,0x24dc49dc328,~
code-source-info,0x24050b14916,111,40910,41505,C0O40926C5O40931C11O40960C12O40967C13O40973C17O40986C23O41186C33O41186C42O41238C45O41260C53O41285C58O41285C63O41260C68O41251C85O41315C88O41321C95O41326C100O41349C106O41362C114O41378C116O41378C119O41415C121O41431C125O41420C130O41456C137O41472C141O41456C146O41440C151O41402C154O41481C158O41494C165O41504,,
code-creation,LazyCompile,10,1509512,0x24050b14b36,94,Module node:internal/modules/cjs/loader:172:16,0x24dc49db0e8,~
code-source-info,0x24050b14b36,111,5455,5701,C14O5478C16O5486C20O5495C22O5507C25O5512C30O5512C35O5505C39O5528C40O5541C44O5550C49O5568C54O5568C60O5590C71O5590C76O5630C77O5644C81O5655C82O5667C86O5679C88O5693C93O5700,,
code-creation,LazyCompile,10,1510174,0x24050b14d2e,449,dirname node:path:653:10,0x15057ccd768,~
code-source-info,0x24050b14d2e
code-creation,LazyCompile,10,1511024,0x24050b15136,45,updateChildren node:internal/modules/cjs/loader:165:24,0x24dc49db098,~
code-source-info,0x24050b15136,111,5213,5390,C0O5257C7O5263C15O5278C19O5296C23O5304C26O5304C33O5351C38O5351C44O5389,,
code-creation,LazyCompile,10,1511330,0x24050b15326,251,Module._nodeModulePaths node:internal/modules/cjs/loader:583:37,0x24dc49dbb38,~
code-source-info,0x24050b
code-creation,Function,11,1511775,0x22e32685160,2060,Module._nodeModulePaths node:internal/modules/cjs/loader:583:37,0x24dc49dbb38,^
code-source-info,0x22e32685160,111,17765,19316,,,
code-creation,Function,11,1511873,0x22e326859e0,432,getCLIOptionsFromBinding node:internal/options:18:34,0x2bf990bd848,^
code-source-info,0x22e326859e0,91,514,620,,,
code-creation,Function,11,1511935,0x22e32685c00,104,next node:internal/per_context/primordials:282:9,0x3eae9a89b18,^
code-source-info,0x22e32685c00,6,8270,8317,,,
code-creation,Function,11,1512002,0x22e32685ce0,252,SafeMap node:internal/per_context/primordials:360:16,0x3eae9a8a0a8,^
code-source-info,0x22e32685ce0,6,10694,10711,,,
code-creation,Function,11,1512080,0x22e32685e40,272,validateString node:internal/validators:118:24,0x3eae9abce70,^
code-source-info,0x22e32685e40,15,3534,3646,,,
code-creation,Function,11,1512164,0x22e32685fc0,412,isWindowsDeviceRoot node:path:60:29,0x15057ccd408,^
code-source-info,0x22e32685fc0,41,1991,2136,,,
code-creation,LazyCompile,10,1512424,0x24050b15aa6,127,Module.require node:internal/modules/cjs/loader:997:36,0x24dc49dbf28,~
code-source-info,0x24050b15aa6,111,32200,32503,C0O32210C8O32210C13O32239C15O32246C20O32261C36O32267C41O32261C42O32379C51O32391C60O32409C63O32423C76O32423C93O32480C102O32492C126O32502,,
code-creation,LazyCompile,10,1512898,0x24050b15d8e,619,Module._load node:internal/modules/cjs/loader:757:24,0x24dc49dbd88,~
code-source-info,0x24050b15d8e
code-creation,LazyCompile,10,1513390,0x24050b16226,89,logger node:internal/util/debuglog:95:18,0xc194f61f90,~
code-source-info,0x24050b16226,22,2963,3164,C0O2963C3O2996C24O3021C30O3038C34O3028C38O3043C39O3059C45O3076C51O3085C55O3066C60O3090C61O3107C65O3114C72O3127C77O3123C83O3114C88O3152,,
code-creation,LazyCompile,10,1513593,0x24050b16366,3, node:internal/per_context/primordials:285:21,0x3eae9a89bc0,~
code-source-info,0x24050b16366,6,8339,8370,C0O8351C2O8363,,
code-creation,LazyCompile,10,1513768,0x24050b1643e,140,debug node:internal/util/debuglog:76:15,0xc194f61ef0,~
code-source-info,0x24050b1643e,22,2432,2838,C0O2432C3O2452C6O2452C9O2563C16O2584C22O2571C30O2569C36O2604C42O2641C47O2644C50O2641C54O2670C75O2695C81O2712C85O2702C89O2717C90O2733C96O2750C102O2759C106O2740C111O2764C112O2781C116O2788C123O2801C128O2797C134O2788C139O2826,,
code-creation,LazyCompile,10,1513985,0x24050b165ee,41,init node:internal/util/debuglog:72:16,0xc194f61ea0,~
code-source-info,0x24050b165ee,22,2330,2416,C0O2340C10O2346C14O2344C16O2384C26O2394C33O2392C40O2415,,
code-creation,LazyCompile,10,1514106,0x24050b166de,2,testEnabled node:internal/util/debuglog:32:19,0x22cec1581b0,~
code-source-info,0x24050b166de,22,1004,1015,C0O1010C1O1015,,
code-creation,LazyCompile,10,1514297,0x24050b16876,116,debuglogImpl node:internal/util/debuglog:49:22,0xc194f61cf0,~
code-source-info,0x24050b16876,22,1499,2059,C0O1499C9O1519C18O1533C23O1561C34O1595C39O1603C43O1595C45O1615C55O1615C59O1648C71O1659C75O1664C83O1994C97O2012C99O2010C103O2033C112O2050C115O2056,,
code-creation,LazyCompile,10,1514462,0x24050b16a2e,10, node:internal/modules/cjs/loader:272:66,0x24dc49dba58,~
code-source-info,0x24050b16a2e,111,7980,8007,C0O7993C2O7999C9O8006,,
code-creation,LazyCompile,10,1514583,0x24050b16ade,2,noop node:internal/util/debuglog:47:14,0xc194f61ca0,~
code-source-info,0x24050b16ade,22,1465,1473,C1O1472,,
code-creation,LazyCompile,10,1515171,0x24050b16ede,812,Module._resolveFilename node:internal/modules/cjs/loader:848:35,0x24dc49dbe10,~
code-source-info,0x24050b16ede
code-creation,LazyCompile,10,1515613,0x24050b1749e,28,canBeRequiredByUsers node:internal/bootstrap/loaders:240:30,0x3eae9a8fb20,~
code-source-info,0x24050b1749e,9,7593,7692,C0O7617C5O7630C10O7634C15O7634C21O7648C23O7666C27O7687,,
code-creation,LazyCompile,10,1515878,0x24050b17756,327,Module._resolveLookupPaths node:internal/modules/cjs/loader:667:38,0x24dc49dbc58,~
code-source-info,0x24050b
code-creation,LazyCompile,10,1516261,0x24050b17a76,76,trySelfParentPath node:internal/modules/cjs/loader:427:27,0x24dc49db408,~
code-source-info,0x24050b17a76,111,12696,12971,C0O12710C4O12723C5O12736C6O12753C12O12784C16O12793C17O12815C24O12818C29O12841C36O12844C44O12888C47O12903C52O12903C59O12911C62O12916C66O12909C69O12920C72O12943C73O12956C75O12970,,
code-creation,LazyCompile,10,1516599,0x24050b17cb6,235,trySelf node:internal/modules/cjs/loader:441:17,0x24dc49db458,~
code-source-info,0x24050b17cb6,111,12991,13849,C0O13018C4O13035C5O13048C6O13091C9O13091C17O13068C22O13079C27O13130C31O13146C37O13169C38O13182C39O13201C47O13220C48O13233C49O13243C51O13277C55O13269C60O13290C65O13317C70O13363C82O13321C89O13380C94O13398C97O13432C102O13437C107O13398C112O13396C118O13463C119O13476C123O13498C128O13527C133O13557C138O13579C142O13557C149O13622C152O13622C159O13649C168O13527C183O13505C188O13695C200O13718C203O13724C210O13729C215O13764C222O13808C226O13770C231O13764C232O13833C234O13833,,
code-creation,LazyCompile,10,1517044,0x24050b17f6e,129,readPackageScope node:internal/modules/cjs/loader:321:26,0x24dc49db228,~
code-source-info,0x24050b17f6e,111,9239,9772,C0O9283C7O9317C10O9283C16O9330C18O9359C25O9414C28O9376C34O9425C47O9437C54O9494C61O9533C66O9537C70O9498C77O9563C78O9576C79O9596C84O9620C86O9618C90O9596C95O9631C97O9642C104O9664C110O9684C116O9702C117O9730C119O9730C124O9349C127O9756C128O9769,,
code-creation,LazyCompile,10,1517411,0x24050b182ce,234,readPackage node:internal/modules/cjs/loader:290:21,0x24dc49db1d8,~
code-source-info,0x24050b182ce,111,8391,9210,C0O8427C5O8432C13O8432C20O8492C25O8509C30O8509C36O8527C38O8555C40O8571C41O8592C46O8610C51O8610C57O8649C63O8662C72O8688C77O8699C79O8730C84O8747C91O8747C97O8774C98O8787C102O8824C107O8824C112O8863C117O8885C125O8911C133O8940C141O8972C149O9001C160O9019C165O9036C170O9036C176O9066C178O9082C190O9105C195O9112C199O9129C207O9158C213O9169C220O9180C224O9176C227O9139C231O9194C233O9194,,
code-creation,LazyCompile,10,1517708,0x24050b185d6,199,read node:internal/modules/package_json_reader:16:14,0x24dc49e0da8,~
code-source-info,0x24050b185d6,112,307,992,C0O323C5O333C10O333C17O355C22O368C27O368C32O382C33O432C40O461C43O461C48O432C53O404C59O415C66O512C73O514C79O522C86O568C92O568C97O549C102O600C106O633C112O670C115O681C127O732C132O766C142O679C148O805C154O853C159O853C164O885C169O894C174O894C180O943C185O949C190O949C196O975C198O989,,
code-creation,LazyCompile,10,1518125,0x24050b189f6,232,toNamespacedPath node:path:618:19,0x15057ccd6f8,~
code-source-info,0x24050b189f6,41,20086,21201,C0O20152C6O20189C12O20196C17O20210C19O20222C20O20251C25O20257C30O20257C36O20296C43O20303C48O20316C50O20328C51O20336C58O20340C66O20387C68O20383C73O20445C81O20449C89O20496C91O20492C96O20541C104O20541C110O20594C112O20607C114O20603C121O20638C123O20634C128O20738C133O20760C139O20760C148O20800C151O20833C156O20865C161O20865C167O20845C175O20919C181O20919C189O20966C191O20962C198O20987C204O20987C212O21034C214O21030C219O21137C224O21154C228O21169C229O21184C231O21196,,
code-creation,LazyCompile,10,1519103,0x24050b19106,436,Module._findPath node:internal/modules/cjs/loader:494:28,0x24dc49dbaa8,~
code-source-info,0x24050b
code-creation,LazyCompile,10,1519548,0x24050b194b6,109,isAbsolute node:path:402:13,0x15057ccd5d0,~
code-source-info,0x24050b194b6,41,13104,13523,C0O13118C8O13118C13O13170C18O13183C19O13191C24O13205C25O13218C26O13239C33O13239C39O13280C42O13287C50O13355C58O13369C66O13405C72O13405C80O13444C82O13440C92O13481C98O13481C104O13465C108O13518,,
code-creation,LazyCompile,10,1519954,0x24050b19746,85,stat node:internal/modules/cjs/loader:151:14,0x24dc49db048,~
code-source-info,0x24050b19746,111,4777,5186,C0O4793C5O4809C10O4809C17O4840C23O4886C28O4896C33O4896C39O4916C41O4942C43O4956C44O4980C49O4980C54O5013C61O5046C66O5128C71O5138C76O5138C82O5169C84O5183,,
code-creation,LazyCompile,10,1520313,0x24050b1989e,44,tryExtensions node:internal/modules/cjs/loader:400:23,0x24dc49db368,~
code-source-info,0x24050b1989e,111,11900,12093,C0O11936C2O11948C6O11941C11O11985C16O12001C19O11995C23O11985C29O12022C31O12045C33O12061C34O11957C39O11923C42O12077C43O12090,,
code-creation,LazyCompile,10,1520603,0x24050b199ce,50,tryFile node:internal/modules/cjs/loader:384:17,0x24dc49db2c8,~
code-source-info,0x24050b199ce,111,11460,11661,C0O11498C3O11498C8O11520C9O11527C14O11534C15O11541C16O11545C24O11570C26O11585C31O11597C36O11597C41O11618C42O11627C45O11634C49O11658,,
code-creation,LazyCompile,10,1521003,0x24050b19b16,42,toRealPath node:internal/modules/cjs/loader:393:20,0x24dc49db318,~
code-source-info,0x24050b19b16,111,11684,11800,C0O11703C5O11713C10O11726C17O11747C20O11758C28O11777C35O11713C41O11797,,
code-creation,LazyCompile,10,1522226,0x24050b19f2e,1042,realpathSync node:fs:2425:22,0x2bf990993f0,~
script-source,80,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\x0d\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// When using FSReqCallback\x2C make sure to create the object only *after* all\x0d\n// parameter validation has happened\x2C so that the objects are not kept in memory\x0d\n// in case they are created but never used due to an exception.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  BigIntPrototypeToString\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  S_IFIFO\x2C\x0d\n  S_IFLNK\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x2C\x0d\n  S_IFSOCK\x2C\x0d\n  F_OK\x2C\x0d\n  R_OK\x2C\x0d\n  W_OK\x2C\x0d\n  X_OK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  O_SYMLINK\x0d\n} = constants;\x0d\n\x0d\nconst pathModule = require('path');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\n// We need to get the statValues from the binding at the callsite since\x0d\n// it's re-initialized after deserialization.\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_FEATURE_UNAVAILABLE_ON_PLATFORM\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { FSReqCallback } = binding;\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst internalUtil = require('internal/util');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  Stats\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  realpathCacheKey\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n} = require('internal/fs/utils');\x0d\nconst {\x0d\n  Dir\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x0d\n} = require('internal/fs/dir');\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateCallback\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst watchers = require('internal/fs/watchers');\x0d\nconst ReadFileContext = require('internal/fs/read_file_context');\x0d\n\x0d\nlet truncateWarn = true;\x0d\nlet fs;\x0d\n\x0d\n// Lazy loaded\x0d\nlet cpFn;\x0d\nlet cpSyncFn;\x0d\nlet promises = null;\x0d\nlet ReadStream;\x0d\nlet WriteStream;\x0d\nlet rimraf;\x0d\nlet rimrafSync;\x0d\n\x0d\n// These have to be separate because of how graceful-fs happens to do it's\x0d\n// monkeypatching.\x0d\nlet FileReadStream;\x0d\nlet FileWriteStream;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst isOSX = process.platform === 'darwin';\x0d\n\x0d\n\x0d\nfunction showTruncateDeprecation() {\x0d\n  if (truncateWarn) {\x0d\n    process.emitWarning(\x0d\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\x0d\n      'fs.ftruncate with a file descriptor instead.'\x2C\x0d\n      'DeprecationWarning'\x2C 'DEP0081');\x0d\n    truncateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return cb;\x0d\n}\x0d\n\x0d\n// Ensure that callbacks run in the global context. Only use this function\x0d\n// for callbacks that are passed to the binding layer\x2C callbacks that are\x0d\n// invoked from JS already run in the proper scope.\x0d\nfunction makeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\x0d\n}\x0d\n\x0d\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\x0d\n// an optimization\x2C since the data passed back to the callback needs to be\x0d\n// transformed anyway.\x0d\nfunction makeStatsCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (err\x2C stats) => {\x0d\n    if (err) return cb(err);\x0d\n    cb(err\x2C getStatsFromBinding(stats));\x0d\n  };\x0d\n}\x0d\n\x0d\nconst isFd = isUint32;\x0d\n\x0d\nfunction isFileType(stats\x2C fileType) {\x0d\n  // Use stats array directly to avoid creating an fs.Stats instance just for\x0d\n  // our internal use.\x0d\n  let mode = stats[1];\x0d\n  if (typeof mode === 'bigint')\x0d\n    mode = Number(mode);\x0d\n  return (mode & S_IFMT) === fileType;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests a user's permissions for the file or directory\x0d\n * specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction access(path\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = F_OK;\x0d\n  }\x0d\n\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously tests a user's permissions for the file or\x0d\n * directory specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction accessSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(exists?: boolean) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction exists(path\x2C callback) {\x0d\n  maybeCallback(callback);\x0d\n\x0d\n  function suppressedCallback(err) {\x0d\n    callback(err ? false : true);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\x0d\n  } catch {\x0d\n    return callback(false);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(exists\x2C internalUtil.promisify.custom\x2C {\x0d\n  value: (path) => {\x0d\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\x0d\n  }\x0d\n});\x0d\n\x0d\n// fs.existsSync never throws\x2C it only returns true or false.\x0d\n// Since fs.existsSync never throws\x2C users have established\x0d\n// the expectation that passing invalid arguments to it\x2C even like\x0d\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\x0d\n// validation errors to users properly out of compatibility concerns.\x0d\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\x0d\n/**\x0d\n * Synchronously tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction existsSync(path) {\x0d\n  try {\x0d\n    path = getValidatedPath(path);\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n  const ctx = { path };\x0d\n  const nPath = pathModule.toNamespacedPath(path);\x0d\n  binding.access(nPath\x2C F_OK\x2C undefined\x2C ctx);\x0d\n\x0d\n  // In case of an invalid symlink\x2C `binding.access()` on win32\x0d\n  // will **not** return an error and is therefore not enough.\x0d\n  // Double check with `binding.stat()`.\x0d\n  if (isWindows && ctx.errno === undefined) {\x0d\n    binding.stat(nPath\x2C false\x2C undefined\x2C ctx);\x0d\n  }\x0d\n\x0d\n  return ctx.errno === undefined;\x0d\n}\x0d\n\x0d\nfunction readFileAfterOpen(err\x2C fd) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err) {\x0d\n    context.callback(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  context.fd = fd;\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = readFileAfterStat;\x0d\n  req.context = context;\x0d\n  binding.fstat(fd\x2C false\x2C req);\x0d\n}\x0d\n\x0d\nfunction readFileAfterStat(err\x2C stats) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err)\x0d\n    return context.close(err);\x0d\n\x0d\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n\x0d\n  if (size > kIoMaxLength) {\x0d\n    err = new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    return context.close(err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    if (size === 0) {\x0d\n      context.buffers = [];\x0d\n    } else {\x0d\n      context.buffer = Buffer.allocUnsafeSlow(size);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    return context.close(err);\x0d\n  }\x0d\n  context.read();\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    callback(new AbortError());\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   data?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readFile(path\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const context = new ReadFileContext(callback\x2C options.encoding);\x0d\n  context.isUserFd = isFd(path); // File descriptor ownership\x0d\n\x0d\n  if (options.signal) {\x0d\n    context.signal = options.signal;\x0d\n  }\x0d\n  if (context.isUserFd) {\x0d\n    process.nextTick(function tick(context) {\x0d\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\x0d\n    }\x2C context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.context = context;\x0d\n  req.oncomplete = readFileAfterOpen;\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               0o666\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\nfunction tryStatSync(fd\x2C isUserFd) {\x0d\n  const ctx = {};\x0d\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\x0d\n  if (ctx.errno !== undefined && !isUserFd) {\x0d\n    fs.closeSync(fd);\x0d\n    throw uvException(ctx);\x0d\n  }\x0d\n  return stats;\x0d\n}\x0d\n\x0d\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\x0d\n  let threw = true;\x0d\n  let buffer;\x0d\n  try {\x0d\n    if (size > kIoMaxLength) {\x0d\n      throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    }\x0d\n    buffer = Buffer.allocUnsafe(size);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\x0d\n  let threw = true;\x0d\n  let bytesRead;\x0d\n  try {\x0d\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return bytesRead;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readFileSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\x0d\n\x0d\n  const stats = tryStatSync(fd\x2C isUserFd);\x0d\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n  let pos = 0;\x0d\n  let buffer; // Single buffer with file data\x0d\n  let buffers; // List for when size is unknown\x0d\n\x0d\n  if (size === 0) {\x0d\n    buffers = [];\x0d\n  } else {\x0d\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\x0d\n  }\x0d\n\x0d\n  let bytesRead;\x0d\n\x0d\n  if (size !== 0) {\x0d\n    do {\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0 && pos < size);\x0d\n  } else {\x0d\n    do {\x0d\n      // The kernel lies about many files.\x0d\n      // Go ahead and try to read some bytes.\x0d\n      buffer = Buffer.allocUnsafe(8192);\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\x0d\n      if (bytesRead !== 0) {\x0d\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\x0d\n      }\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0);\x0d\n  }\x0d\n\x0d\n  if (!isUserFd)\x0d\n    fs.closeSync(fd);\x0d\n\x0d\n  if (size === 0) {\x0d\n    // Data was collected into the buffers list.\x0d\n    buffer = Buffer.concat(buffers\x2C pos);\x0d\n  } else if (pos < size) {\x0d\n    buffer = buffer.slice(0\x2C pos);\x0d\n  }\x0d\n\x0d\n  if (options.encoding) buffer = buffer.toString(options.encoding);\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction defaultCloseCallback(err) {\x0d\n  if (err != null) throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} [callback]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction close(fd\x2C callback = defaultCloseCallback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  if (callback !== defaultCloseCallback)\x0d\n    callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.close(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction closeSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.close(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   fd?: number\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction open(path\x2C flags\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  if (arguments.length < 3) {\x0d\n    callback = flags;\x0d\n    flags = 'r';\x0d\n    mode = 0o666;\x0d\n  } else if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0o666;\x0d\n  } else {\x0d\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  }\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               mode\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction openSync(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n                              flagsNumber\x2C mode\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {number} offset\x0d\n * @param {number} length\x0d\n * @param {number | bigint} position\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffer?: Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.read(fd\x2C options\x2C callback)\x0d\n    let options = ObjectCreate(null);\x0d\n    if (arguments.length < 3) {\x0d\n      // This is fs.read(fd\x2C callback)\x0d\n      // buffer will be the callback\x0d\n      callback = buffer;\x0d\n    } else {\x0d\n      // This is fs.read(fd\x2C {}\x2C callback)\x0d\n      // buffer will be the options object\x0d\n      // offset is the callback\x0d\n      options = buffer;\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n  callback = maybeCallback(callback);\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return process.nextTick(function tick() {\x0d\n      callback(null\x2C 0\x2C buffer);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  function wrapper(err\x2C bytesRead) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C bytesRead || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(read\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads the file from the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | bigint;\x0d\n *   }} [offset]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.readSync(fd\x2C buffer\x2C options)\x0d\n    const options = offset || ObjectCreate(null);\x0d\n\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  const ctx = {};\x0d\n  const result = binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor)\x0d\n * and writes to an array of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffers?: ArrayBufferView[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C read) {\x0d\n    callback(err\x2C read || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(readv\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads file from the\x0d\n * specified `fd` (file descriptor) and writes to an array\x0d\n * of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readvSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes `buffer` to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number;\x0d\n *   buffer?: Buffer | TypedArray | DataView\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C written || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    callback = maybeCallback(callback || position || length || offset);\x0d\n    if (offset == null || typeof offset === 'function') {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = wrapper;\x0d\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n\x0d\n  if (typeof position !== 'function') {\x0d\n    if (typeof offset === 'function') {\x0d\n      position = offset;\x0d\n      offset = null;\x0d\n    } else {\x0d\n      position = length;\x0d\n    }\x0d\n    length = 'utf8';\x0d\n  }\x0d\n\x0d\n  const str = String(buffer);\x0d\n  validateEncoding(str\x2C length);\x0d\n  callback = maybeCallback(position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(write\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously writes `buffer` to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writeSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  let result;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (position === undefined)\x0d\n      position = null;\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  } else {\x0d\n    validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n    validateEncoding(buffer\x2C length);\x0d\n\x0d\n    if (offset === undefined)\x0d\n      offset = null;\x0d\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes an array of `ArrayBufferView`s to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number\x2C\x0d\n *   buffers?: ArrayBufferView[]\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    callback(err\x2C written || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    process.nextTick(callback\x2C null\x2C 0\x2C buffers);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(writev\x2C internalUtil.customPromisifyArgs\x2C {\x0d\n  value: ['bytesWritten'\x2C 'buffer']\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\n/**\x0d\n * Synchronously writes an array of `ArrayBufferView`s\x0d\n * to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writevSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.writeBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rename(oldPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Synchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction renameSync(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const ctx = { path: oldPath\x2C dest: newPath };\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncate(path\x2C len\x2C callback) {\x0d\n  if (typeof path === 'number') {\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncate(path\x2C len\x2C callback);\x0d\n  }\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  } else if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = maybeCallback(callback);\x0d\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\x0d\n    if (er) return callback(er);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = function oncomplete(er) {\x0d\n      fs.close(fd\x2C (er2) => {\x0d\n        callback(aggregateTwoErrors(er2\x2C er));\x0d\n      });\x0d\n    };\x0d\n    binding.ftruncate(fd\x2C len\x2C req);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncateSync(path\x2C len) {\x0d\n  if (typeof path === 'number') {\x0d\n    // legacy\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncateSync(path\x2C len);\x0d\n  }\x0d\n  if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n  // Allow error to be thrown\x2C but still close fd.\x0d\n  const fd = fs.openSync(path\x2C 'r+');\x0d\n  let ret;\x0d\n\x0d\n  try {\x0d\n    ret = fs.ftruncateSync(fd\x2C len);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.ftruncate(fd\x2C len\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncateSync(fd\x2C len = 0) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  const ctx = {};\x0d\n  binding.ftruncate(fd\x2C len\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction lazyLoadCp() {\x0d\n  if (cpFn === undefined) {\x0d\n    ({ cpFn } = require('internal/fs/cp/cp'));\x0d\n    cpFn = require('util').callbackify(cpFn);\x0d\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction lazyLoadRimraf() {\x0d\n  if (rimraf === undefined)\x0d\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdir(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  callback = makeCallback(callback);\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    validateRmOptions(\x0d\n      path\x2C\x0d\n      { ...options\x2C force: false }\x2C\x0d\n      true\x2C\x0d\n      (err\x2C options) => {\x0d\n        if (err === false) {\x0d\n          const req = new FSReqCallback();\x0d\n          req.oncomplete = callback;\x0d\n          return binding.rmdir(path\x2C req);\x0d\n        }\x0d\n        if (err) {\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        lazyLoadRimraf();\x0d\n        rimraf(path\x2C options\x2C callback);\x0d\n      });\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = callback;\x0d\n    return binding.rmdir(path\x2C req);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdirSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\x0d\n    if (options !== false) {\x0d\n      lazyLoadRimraf();\x0d\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n    }\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n  }\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  return handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rm(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n    lazyLoadRimraf();\x0d\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n  options = validateRmOptionsSync(path\x2C options\x2C false);\x0d\n\x0d\n  lazyLoadRimraf();\x0d\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Forces all currently queued I/O operations associated\x0d\n * with the file to the operating system's synchronized\x0d\n * I/O completion state.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fdatasync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously forces all currently queued I/O operations\x0d\n * associated with the file to the operating\x0d\n * system's synchronized I/O completion state.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fdatasync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Requests for all data for the open file descriptor\x0d\n * to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fsync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously requests for all data for the open\x0d\n * file descriptor to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fsync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdir(path\x2C options\x2C callback) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @returns {string | void}\x0d\n */\x0d\nfunction mkdirSync(path\x2C options) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                               parseFileMode(mode\x2C 'mode')\x2C recursive\x2C\x0d\n                               undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  if (recursive) {\x0d\n    return result;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   files?: string[] | Buffer[] | Direct[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readdir(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  if (!options.withFileTypes) {\x0d\n    req.oncomplete = callback;\x0d\n  } else {\x0d\n    req.oncomplete = (err\x2C result) => {\x0d\n      if (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      getDirents(path\x2C result\x2C callback);\x0d\n    };\x0d\n  }\x0d\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\x0d\n                  !!options.withFileTypes\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 options.encoding\x2C !!options.withFileTypes\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return options.withFileTypes ? getDirents(path\x2C result) : result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invokes the callback with the `fs.Stats`\x0d\n * for the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  callback = makeStatsCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.fstat(fd\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Retrieves the `fs.Stats` for the symbolic link\x0d\n * referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously gets the stats of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction hasNoEntryError(ctx) {\x0d\n  if (ctx.errno) {\x0d\n    const uvErr = uvErrmapGet(ctx.errno);\x0d\n    return uvErr?.[0] === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  if (ctx.error) {\x0d\n    return ctx.error.code === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction fstatSync(fd\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = { fd };\x0d\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the symbolic link referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                              options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats`\x0d\n * for the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                             options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   linkString?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readlink(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readlinkSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const ctx = { path };\x0d\n  const result = binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                                  options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates the link called `path` pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type_]\x0d\n * @param {(err?: Error) => any} callback_\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  const callback = makeCallback(arguments[arguments.length - 1]);\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (isWindows && type === null) {\x0d\n    let absoluteTarget;\x0d\n    try {\x0d\n      // Symlinks targets can be relative to the newly created path.\x0d\n      // Calculate absolute file name of the symlink target\x2C and check\x0d\n      // if it is a directory. Ignore resolve error to keep symlink\x0d\n      // errors consistent between platforms if invalid path is\x0d\n      // provided.\x0d\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n    if (absoluteTarget !== undefined) {\x0d\n      stat(absoluteTarget\x2C (err\x2C stat) => {\x0d\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\x0d\n        const resolvedFlags = stringToSymlinkType(resolvedType);\x0d\n        const destination = preprocessSymlinkDestination(target\x2C\x0d\n                                                         resolvedType\x2C\x0d\n                                                         path);\x0d\n\x0d\n        const req = new FSReqCallback();\x0d\n        req.oncomplete = callback;\x0d\n        binding.symlink(destination\x2C\x0d\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\x0d\n\x0d\n  const flags = stringToSymlinkType(type);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates the link called `path`\x0d\n * pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlinkSync(target\x2C path\x2C type) {\x0d\n  type = (typeof type === 'string' ? type : null);\x0d\n  if (isWindows && type === null) {\x0d\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\x0d\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\x0d\n      type = 'dir';\x0d\n    }\x0d\n  }\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  const flags = stringToSymlinkType(type);\x0d\n\x0d\n  const ctx = { path: target\x2C dest: path };\x0d\n  binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                  pathModule.toNamespacedPath(path)\x2C flags\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction link(existingPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n               pathModule.toNamespacedPath(newPath)\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction linkSync(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const ctx = { path: existingPath\x2C dest: newPath };\x0d\n  const result = binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                              pathModule.toNamespacedPath(newPath)\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlink(path\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlinkSync(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmod(fd\x2C mode\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchmod(fd\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmodSync(fd\x2C mode) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  const ctx = {};\x0d\n  binding.fchmod(fd\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmod(path\x2C mode\x2C callback) {\x0d\n  callback = maybeCallback(callback);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n    // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n    // but still try to close\x2C and report closing errors if they occur.\x0d\n    fs.fchmod(fd\x2C mode\x2C (err) => {\x0d\n      fs.close(fd\x2C (err2) => {\x0d\n        callback(aggregateTwoErrors(err2\x2C err));\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmodSync(path\x2C mode) {\x0d\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\x0d\n\x0d\n  // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n  // but still try to close\x2C and report closing errors if they occur.\x0d\n  let ret;\x0d\n  try {\x0d\n    ret = fs.fchmodSync(fd\x2C mode);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmod(path\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmodSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchownSync(fd\x2C uid\x2C gid) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C\x0d\n                 toUnixTimestamp(mtime)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C toUnixTimestamp(mtime)\x2C\x0d\n                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by the supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by the\x0d\n * supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimesSync(fd\x2C atime\x2C mtime) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  const ctx = {};\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the access and modification times of\x0d\n * a file in the same way as `fs.utimes()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the access and modification\x0d\n * times of a file in the same way as `fs.utimesSync()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    const abortError = new AbortError();\x0d\n    if (isUserFd) {\x0d\n      callback(abortError);\x0d\n    } else {\x0d\n      fs.close(fd\x2C (err) => {\x0d\n        callback(aggregateTwoErrors(err\x2C abortError));\x0d\n      });\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\x0d\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\x0d\n    if (writeErr) {\x0d\n      if (isUserFd) {\x0d\n        callback(writeErr);\x0d\n      } else {\x0d\n        fs.close(fd\x2C (err) => {\x0d\n          callback(aggregateTwoErrors(err\x2C writeErr));\x0d\n        });\x0d\n      }\x0d\n    } else if (written === length) {\x0d\n      if (isUserFd) {\x0d\n        callback(null);\x0d\n      } else {\x0d\n        fs.close(fd\x2C callback);\x0d\n      }\x0d\n    } else {\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  if (isFd(path)) {\x0d\n    const isUserFd = true;\x0d\n    const signal = options.signal;\x0d\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\x0d\n    if (openErr) {\x0d\n      callback(openErr);\x0d\n    } else {\x0d\n      const isUserFd = false;\x0d\n      const signal = options.signal;\x0d\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\x0d\n\x0d\n  let offset = 0;\x0d\n  let length = data.byteLength;\x0d\n  try {\x0d\n    while (length > 0) {\x0d\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n    }\x0d\n  } finally {\x0d\n    if (!isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFileSync(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Watches for the changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {string | {\x0d\n *   persistent?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   encoding?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   eventType?: string\x2C\x0d\n *   filename?: string | Buffer\x0d\n *   ) => any} [listener]\x0d\n * @returns {watchers.FSWatcher}\x0d\n */\x0d\nfunction watch(filename\x2C options\x2C listener) {\x0d\n  if (typeof options === 'function') {\x0d\n    listener = options;\x0d\n  }\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  if (options.persistent === undefined) options.persistent = true;\x0d\n  if (options.recursive === undefined) options.recursive = false;\x0d\n  if (options.recursive && !(isOSX || isWindows))\x0d\n    throw new ERR_FEATURE_UNAVAILABLE_ON_PLATFORM('watch recursively');\x0d\n  const watcher = new watchers.FSWatcher();\x0d\n  watcher[watchers.kFSWatchStart](filename\x2C\x0d\n                                  options.persistent\x2C\x0d\n                                  options.recursive\x2C\x0d\n                                  options.encoding);\x0d\n\x0d\n  if (listener) {\x0d\n    watcher.addListener('change'\x2C listener);\x0d\n  }\x0d\n  if (options.signal) {\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(() => watcher.close());\x0d\n    } else {\x0d\n      const listener = () => watcher.close();\x0d\n      options.signal.addEventListener('abort'\x2C listener);\x0d\n      watcher.once('close'\x2C () => {\x0d\n        options.signal.removeEventListener('abort'\x2C listener);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return watcher;\x0d\n}\x0d\n\x0d\n\x0d\nconst statWatchers = new SafeMap();\x0d\n\x0d\n/**\x0d\n * Watches for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   persistent?: boolean;\x0d\n *   interval?: number;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   current?: Stats\x2C\x0d\n *   previous?: Stats\x0d\n *   ) => any} listener\x0d\n * @returns {watchers.StatWatcher}\x0d\n */\x0d\nfunction watchFile(filename\x2C options\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  let stat;\x0d\n\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    listener = options;\x0d\n    options = null;\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\x0d\n    // a little on the slow side but let's stick with it for now to keep\x0d\n    // behavioral changes to a minimum.\x0d\n    interval: 5007\x2C\x0d\n    persistent: true\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) {\x0d\n    stat = new watchers.StatWatcher(options.bigint);\x0d\n    stat[watchers.kFSStatWatcherStart](filename\x2C\x0d\n                                       options.persistent\x2C options.interval);\x0d\n    statWatchers.set(filename\x2C stat);\x0d\n  } else {\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\x0d\n  }\x0d\n\x0d\n  stat.addListener('change'\x2C listener);\x0d\n  return stat;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Stops watching for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {() => any} [listener]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unwatchFile(filename\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  const stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) return;\x0d\n\x0d\n  if (typeof listener === 'function') {\x0d\n    const beforeListenerCount = stat.listenerCount('change');\x0d\n    stat.removeListener('change'\x2C listener);\x0d\n    if (stat.listenerCount('change') < beforeListenerCount)\x0d\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\x0d\n  } else {\x0d\n    stat.removeAllListeners('change');\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\x0d\n  }\x0d\n\x0d\n  if (stat.listenerCount('change') === 0) {\x0d\n    stat.stop();\x0d\n    statWatchers.delete(filename);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nlet splitRoot;\x0d\nif (isWindows) {\x0d\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\x0d\n  // slash.\x0d\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    return RegExpPrototypeExec(splitRootRe\x2C str)[0];\x0d\n  };\x0d\n} else {\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    for (let i = 0; i < str.length; ++i) {\x0d\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\x0d\n        return StringPrototypeSlice(str\x2C 0\x2C i);\x0d\n    }\x0d\n    return str;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction encodeRealpathResult(result\x2C options) {\x0d\n  if (!options || !options.encoding || options.encoding === 'utf8')\x0d\n    return result;\x0d\n  const asBuffer = Buffer.from(result);\x0d\n  if (options.encoding === 'buffer') {\x0d\n    return asBuffer;\x0d\n  }\x0d\n  return asBuffer.toString(options.encoding);\x0d\n}\x0d\n\x0d\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\x0d\nlet nextPart;\x0d\nif (isWindows) {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    for (; i < p.length; ++i) {\x0d\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\x0d\n\x0d\n      // Check for a separator character\x0d\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\x0d\n        return i;\x0d\n    }\x0d\n    return -1;\x0d\n  };\x0d\n} else {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\x0d\n  };\x0d\n}\x0d\n\x0d\nconst emptyObj = ObjectCreate(null);\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string | null; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction realpathSync(p\x2C options) {\x0d\n  options = getOptions(options\x2C emptyObj);\x0d\n  p = toPathIfFileURL(p);\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const cache = options[realpathCacheKey];\x0d\n  const maybeCachedResult = cache?.get(p);\x0d\n  if (maybeCachedResult) {\x0d\n    return maybeCachedResult;\x0d\n  }\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n  const original = p;\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  // Skip over roots\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows) {\x0d\n    const ctx = { path: base };\x0d\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n    handleErrorFromBinding(ctx);\x0d\n    knownHard[base] = true;\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  // NB: p.length changes.\x0d\n  while (pos < p.length) {\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base] || cache?.get(base) === base) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        break;\x0d\n      }\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    let resolvedLink;\x0d\n    const maybeCachedResolved = cache?.get(base);\x0d\n    if (maybeCachedResolved) {\x0d\n      resolvedLink = maybeCachedResolved;\x0d\n    } else {\x0d\n      // Use stats array directly to avoid creating an fs.Stats instance just\x0d\n      // for our internal use.\x0d\n\x0d\n      const baseLong = pathModule.toNamespacedPath(base);\x0d\n      const ctx = { path: base };\x0d\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n\x0d\n      if (!isFileType(stats\x2C S_IFLNK)) {\x0d\n        knownHard[base] = true;\x0d\n        cache?.set(base\x2C base);\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // Read the link if it wasn't read before\x0d\n      // dev/ino always return 0 on windows\x2C so skip the check.\x0d\n      let linkTarget = null;\x0d\n      let id;\x0d\n      if (!isWindows) {\x0d\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\x0d\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\x0d\n        id = `${dev}:${ino}`;\x0d\n        if (seenLinks[id]) {\x0d\n          linkTarget = seenLinks[id];\x0d\n        }\x0d\n      }\x0d\n      if (linkTarget === null) {\x0d\n        const ctx = { path: base };\x0d\n        binding.stat(baseLong\x2C false\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n        linkTarget = binding.readlink(baseLong\x2C undefined\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n      }\x0d\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\x0d\n\x0d\n      cache?.set(base\x2C resolvedLink);\x0d\n      if (!isWindows) seenLinks[id] = linkTarget;\x0d\n    }\x0d\n\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n\x0d\n    // Skip over roots\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      const ctx = { path: base };\x0d\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n      knownHard[base] = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  cache?.set(original\x2C p);\x0d\n  return encodeRealpathResult(p\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nrealpathSync.native = (path\x2C options) => {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.realpath(path\x2C options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction realpath(p\x2C options\x2C callback) {\x0d\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  p = toPathIfFileURL(p);\x0d\n\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows && !knownHard[base]) {\x0d\n    fs.lstat(base\x2C (err\x2C stats) => {\x0d\n      if (err) return callback(err);\x0d\n      knownHard[base] = true;\x0d\n      LOOP();\x0d\n    });\x0d\n  } else {\x0d\n    process.nextTick(LOOP);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  function LOOP() {\x0d\n    // Stop if scanned past end of path\x0d\n    if (pos >= p.length) {\x0d\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n    }\x0d\n\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base]) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n      }\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\x0d\n  }\x0d\n\x0d\n  function gotStat(err\x2C stats) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    // If not a symlink\x2C skip to the next path part\x0d\n    if (!stats.isSymbolicLink()) {\x0d\n      knownHard[base] = true;\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    // Stat & read the link if not read before.\x0d\n    // Call `gotTarget()` as soon as the link target is known.\x0d\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\x0d\n    let id;\x0d\n    if (!isWindows) {\x0d\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\x0d\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\x0d\n      id = `${dev}:${ino}`;\x0d\n      if (seenLinks[id]) {\x0d\n        return gotTarget(null\x2C seenLinks[id]);\x0d\n      }\x0d\n    }\x0d\n    fs.stat(base\x2C (err) => {\x0d\n      if (err) return callback(err);\x0d\n\x0d\n      fs.readlink(base\x2C (err\x2C target) => {\x0d\n        if (!isWindows) seenLinks[id] = target;\x0d\n        gotTarget(err\x2C target);\x0d\n      });\x0d\n    });\x0d\n  }\x0d\n\x0d\n  function gotTarget(err\x2C target) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\x0d\n  }\x0d\n\x0d\n  function gotResolvedLink(resolvedLink) {\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      fs.lstat(base\x2C (err) => {\x0d\n        if (err) return callback(err);\x0d\n        knownHard[base] = true;\x0d\n        LOOP();\x0d\n      });\x0d\n    } else {\x0d\n      process.nextTick(LOOP);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nrealpath.native = (path\x2C options\x2C callback) => {\x0d\n  callback = makeCallback(callback || options);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  return binding.realpath(path\x2C options.encoding\x2C req);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   directory?: string\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdtemp(prefix\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string}\x0d\n */\x0d\nfunction mkdtempSync(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const path = `${prefix}XXXXXX`;\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdtemp(path\x2C options.encoding\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0;\x0d\n  }\x0d\n\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFileSync(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  const ctx = { path: src\x2C dest };  // non-prefixed\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cp(src\x2C dest\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpFn(src\x2C dest\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cpSync(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpSyncFn(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nfunction lazyLoadStreams() {\x0d\n  if (!ReadStream) {\x0d\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\x0d\n    FileReadStream = ReadStream;\x0d\n    FileWriteStream = WriteStream;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a readable stream with a default `highWaterMark`\x0d\n * of 64 kb.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   end?: number;\x0d\n *   highWaterMark?: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {ReadStream}\x0d\n */\x0d\nfunction createReadStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new ReadStream(path\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a write stream.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {WriteStream}\x0d\n */\x0d\nfunction createWriteStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new WriteStream(path\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = fs = {\x0d\n  appendFile\x2C\x0d\n  appendFileSync\x2C\x0d\n  access\x2C\x0d\n  accessSync\x2C\x0d\n  chown\x2C\x0d\n  chownSync\x2C\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  close\x2C\x0d\n  closeSync\x2C\x0d\n  copyFile\x2C\x0d\n  copyFileSync\x2C\x0d\n  cp\x2C\x0d\n  cpSync\x2C\x0d\n  createReadStream\x2C\x0d\n  createWriteStream\x2C\x0d\n  exists\x2C\x0d\n  existsSync\x2C\x0d\n  fchown\x2C\x0d\n  fchownSync\x2C\x0d\n  fchmod\x2C\x0d\n  fchmodSync\x2C\x0d\n  fdatasync\x2C\x0d\n  fdatasyncSync\x2C\x0d\n  fstat\x2C\x0d\n  fstatSync\x2C\x0d\n  fsync\x2C\x0d\n  fsyncSync\x2C\x0d\n  ftruncate\x2C\x0d\n  ftruncateSync\x2C\x0d\n  futimes\x2C\x0d\n  futimesSync\x2C\x0d\n  lchown\x2C\x0d\n  lchownSync\x2C\x0d\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\x0d\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\x0d\n  link\x2C\x0d\n  linkSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  lutimes\x2C\x0d\n  lutimesSync\x2C\x0d\n  mkdir\x2C\x0d\n  mkdirSync\x2C\x0d\n  mkdtemp\x2C\x0d\n  mkdtempSync\x2C\x0d\n  open\x2C\x0d\n  openSync\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  read\x2C\x0d\n  readSync\x2C\x0d\n  readv\x2C\x0d\n  readvSync\x2C\x0d\n  readFile\x2C\x0d\n  readFileSync\x2C\x0d\n  readlink\x2C\x0d\n  readlinkSync\x2C\x0d\n  realpath\x2C\x0d\n  realpathSync\x2C\x0d\n  rename\x2C\x0d\n  renameSync\x2C\x0d\n  rm\x2C\x0d\n  rmSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  symlink\x2C\x0d\n  symlinkSync\x2C\x0d\n  truncate\x2C\x0d\n  truncateSync\x2C\x0d\n  unwatchFile\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x2C\x0d\n  utimes\x2C\x0d\n  utimesSync\x2C\x0d\n  watch\x2C\x0d\n  watchFile\x2C\x0d\n  writeFile\x2C\x0d\n  writeFileSync\x2C\x0d\n  write\x2C\x0d\n  writeSync\x2C\x0d\n  writev\x2C\x0d\n  writevSync\x2C\x0d\n  Dir\x2C\x0d\n  Dirent\x2C\x0d\n  Stats\x2C\x0d\n\x0d\n  get ReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return ReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set ReadStream(val) {\x0d\n    ReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get WriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return WriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set WriteStream(val) {\x0d\n    WriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy names... these have to be separate because of how graceful-fs\x0d\n  // (and possibly other) modules monkey patch the values.\x0d\n  get FileReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileReadStream(val) {\x0d\n    FileReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get FileWriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileWriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileWriteStream(val) {\x0d\n    FileWriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // For tests\x0d\n  _toUnixTimestamp: toUnixTimestamp\x0d\n};\x0d\n\x0d\nObjectDefineProperties(fs\x2C {\x0d\n  F_OK: { enumerable: true\x2C value: F_OK || 0 }\x2C\x0d\n  R_OK: { enumerable: true\x2C value: R_OK || 0 }\x2C\x0d\n  W_OK: { enumerable: true\x2C value: W_OK || 0 }\x2C\x0d\n  X_OK: { enumerable: true\x2C value: X_OK || 0 }\x2C\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  promises: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      promises ??= require('internal/fs/promises').exports;\x0d\n      return promises;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x24050b19f2e
tick,0x7ff7de82f0cc,1539949,0,0x0,3,0x7ff7dde840c0,0x24050b19b39,0x24050b199fb,0x24050b198b5,0x24050b1925c,0x24050b1716f,0x24050b15e18,0x24050b15af2,0x24050b149a3,0x24050b1474d,0x22cec14654c,0x22cec142065
code-creation,LazyCompile,10,1541929,0x24050b20656,123,getOptions node:internal/fs/utils:315:20,0x2bf990a1c98,~
script-source,81,node:internal/fs/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  BigInt\x2C\x0d\n  Date\x2C\x0d\n  DateNow\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeIncludes\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_EISDIR\x2C\x0d\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x2C\x0d\n  isDate\x2C\x0d\n  isBigUint64Array\x0d\n} = require('internal/util/types');\x0d\nconst { once } = require('internal/util');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst kType = Symbol('type');\x0d\nconst kStats = Symbol('stats');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst {\x0d\n  fs: {\x0d\n    F_OK = 0\x2C\x0d\n    W_OK = 0\x2C\x0d\n    R_OK = 0\x2C\x0d\n    X_OK = 0\x2C\x0d\n    COPYFILE_EXCL\x2C\x0d\n    COPYFILE_FICLONE\x2C\x0d\n    COPYFILE_FICLONE_FORCE\x2C\x0d\n    O_APPEND\x2C\x0d\n    O_CREAT\x2C\x0d\n    O_EXCL\x2C\x0d\n    O_RDONLY\x2C\x0d\n    O_RDWR\x2C\x0d\n    O_SYNC\x2C\x0d\n    O_TRUNC\x2C\x0d\n    O_WRONLY\x2C\x0d\n    S_IFBLK\x2C\x0d\n    S_IFCHR\x2C\x0d\n    S_IFDIR\x2C\x0d\n    S_IFIFO\x2C\x0d\n    S_IFLNK\x2C\x0d\n    S_IFMT\x2C\x0d\n    S_IFREG\x2C\x0d\n    S_IFSOCK\x2C\x0d\n    UV_FS_SYMLINK_DIR\x2C\x0d\n    UV_FS_SYMLINK_JUNCTION\x2C\x0d\n    UV_DIRENT_UNKNOWN\x2C\x0d\n    UV_DIRENT_FILE\x2C\x0d\n    UV_DIRENT_DIR\x2C\x0d\n    UV_DIRENT_LINK\x2C\x0d\n    UV_DIRENT_FIFO\x2C\x0d\n    UV_DIRENT_SOCKET\x2C\x0d\n    UV_DIRENT_CHAR\x2C\x0d\n    UV_DIRENT_BLOCK\x0d\n  }\x2C\x0d\n  os: {\x0d\n    errno: {\x0d\n      EISDIR\x0d\n    }\x0d\n  }\x0d\n} = internalBinding('constants');\x0d\n\x0d\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\x0d\n// available on specific systems. They can be used in combination as well\x0d\n// (F_OK | R_OK | W_OK | X_OK).\x0d\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\x0d\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\x0d\n\x0d\nconst kDefaultCopyMode = 0;\x0d\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\x0d\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\x0d\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\x0d\nconst kMinimumCopyMode = MathMin(\x0d\n  kDefaultCopyMode\x2C\x0d\n  COPYFILE_EXCL\x2C\x0d\n  COPYFILE_FICLONE\x2C\x0d\n  COPYFILE_FICLONE_FORCE\x0d\n);\x0d\nconst kMaximumCopyMode = COPYFILE_EXCL |\x0d\n                         COPYFILE_FICLONE |\x0d\n                         COPYFILE_FICLONE_FORCE;\x0d\n\x0d\n// Most platforms don't allow reads or writes >= 2 GB.\x0d\n// See https://github.com/libuv/libuv/pull/1501.\x0d\nconst kIoMaxLength = 2 ** 31 - 1;\x0d\n\x0d\n// Use 64kb in case the file type is not a regular file and thus do not know the\x0d\n// actual file size. Increasing the value further results in more frequent over\x0d\n// allocation for small files and consumes CPU time and memory that should be\x0d\n// used else wise.\x0d\n// Use up to 512kb per read otherwise to partition reading big files to prevent\x0d\n// blocking other threads in case the available threads are all in use.\x0d\nconst kReadFileUnknownBufferLength = 64 * 1024;\x0d\nconst kReadFileBufferLength = 512 * 1024;\x0d\n\x0d\nconst kWriteFileMaxChunkSize = 512 * 1024;\x0d\n\x0d\nconst kMaxUserId = 2 ** 32 - 1;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nlet fs;\x0d\nfunction lazyLoadFs() {\x0d\n  if (!fs) {\x0d\n    fs = require('fs');\x0d\n  }\x0d\n  return fs;\x0d\n}\x0d\n\x0d\nfunction assertEncoding(encoding) {\x0d\n  if (encoding && !Buffer.isEncoding(encoding)) {\x0d\n    const reason = 'is invalid encoding';\x0d\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Dirent {\x0d\n  constructor(name\x2C type) {\x0d\n    this.name = name;\x0d\n    this[kType] = type;\x0d\n  }\x0d\n\x0d\n  isDirectory() {\x0d\n    return this[kType] === UV_DIRENT_DIR;\x0d\n  }\x0d\n\x0d\n  isFile() {\x0d\n    return this[kType] === UV_DIRENT_FILE;\x0d\n  }\x0d\n\x0d\n  isBlockDevice() {\x0d\n    return this[kType] === UV_DIRENT_BLOCK;\x0d\n  }\x0d\n\x0d\n  isCharacterDevice() {\x0d\n    return this[kType] === UV_DIRENT_CHAR;\x0d\n  }\x0d\n\x0d\n  isSymbolicLink() {\x0d\n    return this[kType] === UV_DIRENT_LINK;\x0d\n  }\x0d\n\x0d\n  isFIFO() {\x0d\n    return this[kType] === UV_DIRENT_FIFO;\x0d\n  }\x0d\n\x0d\n  isSocket() {\x0d\n    return this[kType] === UV_DIRENT_SOCKET;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DirentFromStats extends Dirent {\x0d\n  constructor(name\x2C stats) {\x0d\n    super(name\x2C null);\x0d\n    this[kStats] = stats;\x0d\n  }\x0d\n}\x0d\n\x0d\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\x0d\n  if (name === 'constructor') {\x0d\n    continue;\x0d\n  }\x0d\n  DirentFromStats.prototype[name] = function() {\x0d\n    return this[kStats][name]();\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction copyObject(source) {\x0d\n  const target = {};\x0d\n  for (const key in source)\x0d\n    target[key] = source[key];\x0d\n  return target;\x0d\n}\x0d\n\x0d\nconst bufferSep = Buffer.from(pathModule.sep);\x0d\n\x0d\nfunction join(path\x2C name) {\x0d\n  if ((typeof path === 'string' || isUint8Array(path)) &&\x0d\n      name === undefined) {\x0d\n    return path;\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && isUint8Array(name)) {\x0d\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\x0d\n    return Buffer.concat([pathBuffer\x2C name]);\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && typeof name === 'string') {\x0d\n    return pathModule.join(path\x2C name);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(path) && isUint8Array(name)) {\x0d\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\x0d\n}\x0d\n\x0d\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\x0d\n  let i;\x0d\n  if (typeof callback === 'function') {\x0d\n    const len = names.length;\x0d\n    let toFinish = 0;\x0d\n    callback = once(callback);\x0d\n    for (i = 0; i < len; i++) {\x0d\n      const type = types[i];\x0d\n      if (type === UV_DIRENT_UNKNOWN) {\x0d\n        const name = names[i];\x0d\n        const idx = i;\x0d\n        toFinish++;\x0d\n        let filepath;\x0d\n        try {\x0d\n          filepath = join(path\x2C name);\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n          if (err) {\x0d\n            callback(err);\x0d\n            return;\x0d\n          }\x0d\n          names[idx] = new DirentFromStats(name\x2C stats);\x0d\n          if (--toFinish === 0) {\x0d\n            callback(null\x2C names);\x0d\n          }\x0d\n        });\x0d\n      } else {\x0d\n        names[i] = new Dirent(names[i]\x2C types[i]);\x0d\n      }\x0d\n    }\x0d\n    if (toFinish === 0) {\x0d\n      callback(null\x2C names);\x0d\n    }\x0d\n  } else {\x0d\n    const len = names.length;\x0d\n    for (i = 0; i < len; i++) {\x0d\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\x0d\n    }\x0d\n    return names;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\x0d\n  if (typeof callback === 'function') {\x0d\n    if (type === UV_DIRENT_UNKNOWN) {\x0d\n      let filepath;\x0d\n      try {\x0d\n        filepath = join(path\x2C name);\x0d\n      } catch (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n        if (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        callback(null\x2C new DirentFromStats(name\x2C stats));\x0d\n      });\x0d\n    } else {\x0d\n      callback(null\x2C new Dirent(name\x2C type));\x0d\n    }\x0d\n  } else if (type === UV_DIRENT_UNKNOWN) {\x0d\n    const stats = lazyLoadFs().lstatSync(join(path\x2C name));\x0d\n    return new DirentFromStats(name\x2C stats);\x0d\n  } else {\x0d\n    return new Dirent(name\x2C type);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getOptions(options\x2C defaultOptions) {\x0d\n  if (options === null || options === undefined ||\x0d\n      typeof options === 'function') {\x0d\n    return defaultOptions;\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'string') {\x0d\n    defaultOptions = { ...defaultOptions };\x0d\n    defaultOptions.encoding = options;\x0d\n    options = defaultOptions;\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\x0d\n  }\x0d\n\x0d\n  if (options.encoding !== 'buffer')\x0d\n    assertEncoding(options.encoding);\x0d\n\x0d\n  if (options.signal !== undefined) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {InternalFSBinding.FSSyncContext} ctx\x0d\n */\x0d\nfunction handleErrorFromBinding(ctx) {\x0d\n  if (ctx.errno !== undefined) {  // libuv error numbers\x0d\n    const err = uvException(ctx);\x0d\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\x0d\n    throw err;\x0d\n  }\x0d\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\x0d\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\x0d\n    // usually caused by memory problems. We need to figure out proper error\x0d\n    // code(s) for this.\x0d\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\x0d\n    throw ctx.error;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check if the path contains null types if it is a string nor Uint8Array\x2C\x0d\n// otherwise return silently.\x0d\nconst nullCheck = hideStackFrames((path\x2C propName\x2C throwError = true) => {\x0d\n  const pathIsString = typeof path === 'string';\x0d\n  const pathIsUint8Array = isUint8Array(path);\x0d\n\x0d\n  // We can only perform meaningful checks on strings and Uint8Arrays.\x0d\n  if ((!pathIsString && !pathIsUint8Array) ||\x0d\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\x0d\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const err = new ERR_INVALID_ARG_VALUE(\x0d\n    propName\x2C\x0d\n    path\x2C\x0d\n    'must be a string or Uint8Array without null bytes'\x0d\n  );\x0d\n  if (throwError) {\x0d\n    throw err;\x0d\n  }\x0d\n  return err;\x0d\n});\x0d\n\x0d\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\x0d\n  if (!isWindows) {\x0d\n    // No preprocessing is needed on Unix.\x0d\n    return path;\x0d\n  }\x0d\n  path = '' + path;\x0d\n  if (type === 'junction') {\x0d\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\x0d\n    // A relative target is relative to the link's parent directory.\x0d\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  if (pathModule.isAbsolute(path)) {\x0d\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  // Windows symlinks don't tolerate forward slashes.\x0d\n  return StringPrototypeReplace(path\x2C /\\//g\x2C '\\\\');\x0d\n}\x0d\n\x0d\n// Constructor for file stats.\x0d\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                   ino\x2C size\x2C blocks) {\x0d\n  this.dev = dev;\x0d\n  this.mode = mode;\x0d\n  this.nlink = nlink;\x0d\n  this.uid = uid;\x0d\n  this.gid = gid;\x0d\n  this.rdev = rdev;\x0d\n  this.blksize = blksize;\x0d\n  this.ino = ino;\x0d\n  this.size = size;\x0d\n  this.blocks = blocks;\x0d\n}\x0d\n\x0d\nStatsBase.prototype.isDirectory = function() {\x0d\n  return this._checkModeProperty(S_IFDIR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFile = function() {\x0d\n  return this._checkModeProperty(S_IFREG);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isBlockDevice = function() {\x0d\n  return this._checkModeProperty(S_IFBLK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isCharacterDevice = function() {\x0d\n  return this._checkModeProperty(S_IFCHR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSymbolicLink = function() {\x0d\n  return this._checkModeProperty(S_IFLNK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFIFO = function() {\x0d\n  return this._checkModeProperty(S_IFIFO);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSocket = function() {\x0d\n  return this._checkModeProperty(S_IFSOCK);\x0d\n};\x0d\n\x0d\nconst kNsPerMsBigInt = 10n ** 6n;\x0d\nconst kNsPerSecBigInt = 10n ** 9n;\x0d\nconst kMsPerSec = 10 ** 3;\x0d\nconst kNsPerMs = 10 ** 6;\x0d\nfunction msFromTimeSpec(sec\x2C nsec) {\x0d\n  return sec * kMsPerSec + nsec / kNsPerMs;\x0d\n}\x0d\n\x0d\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\x0d\n  return sec * kNsPerSecBigInt + nsec;\x0d\n}\x0d\n\x0d\n// The Date constructor performs Math.floor() to the timestamp.\x0d\n// https://www.ecma-international.org/ecma-262/#sec-timeclip\x0d\n// Since there may be a precision loss when the timestamp is\x0d\n// converted to a floating point number\x2C we manually round\x0d\n// the timestamp here before passing it to Date().\x0d\n// Refs: https://github.com/nodejs/node/pull/12607\x0d\nfunction dateFromMs(ms) {\x0d\n  return new Date(Number(ms) + 0.5);\x0d\n}\x0d\n\x0d\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                     ino\x2C size\x2C blocks\x2C\x0d\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\x0d\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                                 ino\x2C size\x2C blocks]);\x0d\n\x0d\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\x0d\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\x0d\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\x0d\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\x0d\n  this.atimeNs = atimeNs;\x0d\n  this.mtimeNs = mtimeNs;\x0d\n  this.ctimeNs = ctimeNs;\x0d\n  this.birthtimeNs = birthtimeNs;\x0d\n  this.atime = dateFromMs(this.atimeMs);\x0d\n  this.mtime = dateFromMs(this.mtimeMs);\x0d\n  this.ctime = dateFromMs(this.ctimeMs);\x0d\n  this.birthtime = dateFromMs(this.birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\x0d\n\x0d\nBigIntStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\x0d\n};\x0d\n\x0d\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n               ino\x2C size\x2C blocks\x2C\x0d\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\x0d\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\x0d\n                        blksize\x2C ino\x2C size\x2C blocks);\x0d\n  this.atimeMs = atimeMs;\x0d\n  this.mtimeMs = mtimeMs;\x0d\n  this.ctimeMs = ctimeMs;\x0d\n  this.birthtimeMs = birthtimeMs;\x0d\n  this.atime = dateFromMs(atimeMs);\x0d\n  this.mtime = dateFromMs(mtimeMs);\x0d\n  this.ctime = dateFromMs(ctimeMs);\x0d\n  this.birthtime = dateFromMs(birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(Stats\x2C StatsBase);\x0d\n\x0d\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\x0d\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\x0d\nStats.prototype.isFile = StatsBase.prototype.isFile;\x0d\n\x0d\nStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & S_IFMT) === property;\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {Float64Array | BigUint64Array} stats\x0d\n * @param {number} offset\x0d\n * @returns {BigIntStats | Stats}\x0d\n */\x0d\nfunction getStatsFromBinding(stats\x2C offset = 0) {\x0d\n  if (isBigUint64Array(stats)) {\x0d\n    return new BigIntStats(\x0d\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n      stats[9 + offset]\x2C\x0d\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x0d\n    );\x0d\n  }\x0d\n  return new Stats(\x0d\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n    stats[9 + offset]\x2C\x0d\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringToFlags(flags\x2C name = 'flags') {\x0d\n  if (typeof flags === 'number') {\x0d\n    validateInt32(flags\x2C name);\x0d\n    return flags;\x0d\n  }\x0d\n\x0d\n  if (flags == null) {\x0d\n    return O_RDONLY;\x0d\n  }\x0d\n\x0d\n  switch (flags) {\x0d\n    case 'r' : return O_RDONLY;\x0d\n    case 'rs' : // Fall through.\x0d\n    case 'sr' : return O_RDONLY | O_SYNC;\x0d\n    case 'r+' : return O_RDWR;\x0d\n    case 'rs+' : // Fall through.\x0d\n    case 'sr+' : return O_RDWR | O_SYNC;\x0d\n\x0d\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\x0d\n    case 'wx' : // Fall through.\x0d\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\x0d\n\x0d\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\x0d\n    case 'wx+': // Fall through.\x0d\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\x0d\n\x0d\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\x0d\n    case 'ax' : // Fall through.\x0d\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\x0d\n    case 'as' : // Fall through.\x0d\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\x0d\n\x0d\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\x0d\n    case 'ax+': // Fall through.\x0d\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\x0d\n    case 'as+': // Fall through.\x0d\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\x0d\n}\x0d\n\x0d\nconst stringToSymlinkType = hideStackFrames((type) => {\x0d\n  let flags = 0;\x0d\n  if (typeof type === 'string') {\x0d\n    switch (type) {\x0d\n      case 'dir':\x0d\n        flags |= UV_FS_SYMLINK_DIR;\x0d\n        break;\x0d\n      case 'junction':\x0d\n        flags |= UV_FS_SYMLINK_JUNCTION;\x0d\n        break;\x0d\n      case 'file':\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\x0d\n    }\x0d\n  }\x0d\n  return flags;\x0d\n});\x0d\n\x0d\n// converts Date or number to a fractional UNIX timestamp\x0d\nfunction toUnixTimestamp(time\x2C name = 'time') {\x0d\n  // eslint-disable-next-line eqeqeq\x0d\n  if (typeof time === 'string' && +time == time) {\x0d\n    return +time;\x0d\n  }\x0d\n  if (NumberIsFinite(time)) {\x0d\n    if (time < 0) {\x0d\n      return DateNow() / 1000;\x0d\n    }\x0d\n    return time;\x0d\n  }\x0d\n  if (isDate(time)) {\x0d\n    // Convert to 123.456 UNIX timestamp\x0d\n    return DatePrototypeGetTime(time) / 1000;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\x0d\n}\x0d\n\x0d\nconst validateOffsetLengthRead = hideStackFrames(\x0d\n  (offset\x2C length\x2C bufferLength) => {\x0d\n    if (offset < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C '>= 0'\x2C offset);\x0d\n    }\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n    if (offset + length > bufferLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C\x0d\n                                 `<= ${bufferLength - offset}`\x2C length);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateOffsetLengthWrite = hideStackFrames(\x0d\n  (offset\x2C length\x2C byteLength) => {\x0d\n    if (offset > byteLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C `<= ${byteLength}`\x2C offset);\x0d\n    }\x0d\n\x0d\n    if (length > byteLength - offset) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C `<= ${byteLength - offset}`\x2C length);\x0d\n    }\x0d\n\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n\x0d\n    validateInt32(length\x2C 'length'\x2C 0);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\x0d\n  if (typeof path !== 'string' && !isUint8Array(path)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\x0d\n  }\x0d\n\x0d\n  const err = nullCheck(path\x2C propName\x2C false);\x0d\n\x0d\n  if (err !== undefined) {\x0d\n    throw err;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\x0d\n  const path = toPathIfFileURL(fileURLOrPath);\x0d\n  validatePath(path\x2C propName);\x0d\n  return path;\x0d\n});\x0d\n\x0d\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\x0d\n  if (ObjectIs(fd\x2C -0)) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(fd\x2C propName\x2C 0);\x0d\n\x0d\n  return fd;\x0d\n});\x0d\n\x0d\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\x0d\n  if (!ArrayIsArray(buffers))\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n\x0d\n  for (let i = 0; i < buffers.length; i++) {\x0d\n    if (!isArrayBufferView(buffers[i]))\x0d\n      throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n  }\x0d\n\x0d\n  return buffers;\x0d\n});\x0d\n\x0d\nlet nonPortableTemplateWarn = true;\x0d\n\x0d\nfunction warnOnNonPortableTemplate(template) {\x0d\n  // Template strings passed to the mkdtemp() family of functions should not\x0d\n  // end with 'X' because they are handled inconsistently across platforms.\x0d\n  if (nonPortableTemplateWarn && StringPrototypeEndsWith(template\x2C 'X')) {\x0d\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\x0d\n                        'For details see: https://nodejs.org/api/fs.html');\x0d\n    nonPortableTemplateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst defaultCpOptions = {\x0d\n  dereference: false\x2C\x0d\n  errorOnExist: false\x2C\x0d\n  filter: undefined\x2C\x0d\n  force: true\x2C\x0d\n  preserveTimestamps: false\x2C\x0d\n  recursive: false\x2C\x0d\n  verbatimSymlinks: false\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmOptions = {\x0d\n  recursive: false\x2C\x0d\n  force: false\x2C\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x0d\n};\x0d\n\x0d\nconst defaultRmdirOptions = {\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst validateCpOptions = hideStackFrames((options) => {\x0d\n  if (options === undefined)\x0d\n    return { ...defaultCpOptions };\x0d\n  validateObject(options\x2C 'options');\x0d\n  options = { ...defaultCpOptions\x2C ...options };\x0d\n  validateBoolean(options.dereference\x2C 'options.dereference');\x0d\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\x0d\n  validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  validateBoolean(options.verbatimSymlinks\x2C 'options.verbatimSymlinks');\x0d\n  if (options.dereference === true && options.verbatimSymlinks === true) {\x0d\n    throw new ERR_INCOMPATIBLE_OPTION_PAIR('dereference'\x2C 'verbatimSymlinks');\x0d\n  }\x0d\n  if (options.filter !== undefined) {\x0d\n    validateFunction(options.filter\x2C 'options.filter');\x0d\n  }\x0d\n  return options;\x0d\n});\x0d\n\x0d\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  lazyLoadFs().stat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (options.force && err.code === 'ENOENT') {\x0d\n        return cb(null\x2C options);\x0d\n      }\x0d\n      return cb(err\x2C options);\x0d\n    }\x0d\n\x0d\n    if (expectDir && !stats.isDirectory()) {\x0d\n      return cb(false);\x0d\n    }\x0d\n\x0d\n    if (stats.isDirectory() && !options.recursive) {\x0d\n      return cb(new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      }));\x0d\n    }\x0d\n    return cb(null\x2C options);\x0d\n  });\x0d\n});\x0d\n\x0d\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  if (!options.force || expectDir || !options.recursive) {\x0d\n    const isDirectory = lazyLoadFs()\x0d\n      .statSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\x0d\n\x0d\n    if (expectDir && !isDirectory) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    if (isDirectory && !options.recursive) {\x0d\n      throw new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n});\x0d\n\x0d\nlet recursiveRmdirWarned = process.noDeprecation;\x0d\nfunction emitRecursiveRmdirWarning() {\x0d\n  if (!recursiveRmdirWarned) {\x0d\n    process.emitWarning(\x0d\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\x0d\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0147'\x0d\n    );\x0d\n    recursiveRmdirWarned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateRmdirOptions = hideStackFrames(\x0d\n  (options\x2C defaults = defaultRmdirOptions) => {\x0d\n    if (options === undefined)\x0d\n      return defaults;\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    options = { ...defaults\x2C ...options };\x0d\n\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n    validateInt32(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\x0d\n    validateUint32(options.maxRetries\x2C 'options.maxRetries');\x0d\n\x0d\n    return options;\x0d\n  });\x0d\n\x0d\nconst getValidMode = hideStackFrames((mode\x2C type) => {\x0d\n  let min = kMinimumAccessMode;\x0d\n  let max = kMaximumAccessMode;\x0d\n  let def = F_OK;\x0d\n  if (type === 'copyFile') {\x0d\n    min = kMinimumCopyMode;\x0d\n    max = kMaximumCopyMode;\x0d\n    def = mode || kDefaultCopyMode;\x0d\n  } else {\x0d\n    assert(type === 'access');\x0d\n  }\x0d\n  if (mode == null) {\x0d\n    return def;\x0d\n  }\x0d\n  if (NumberIsInteger(mode) && mode >= min && mode <= max) {\x0d\n    return mode;\x0d\n  }\x0d\n  if (typeof mode !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('mode'\x2C 'integer'\x2C mode);\x0d\n  }\x0d\n  throw new ERR_OUT_OF_RANGE(\x0d\n    'mode'\x2C `an integer >= ${min} && <= ${max}`\x2C mode);\x0d\n});\x0d\n\x0d\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer === 'string') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    typeof buffer === 'object' &&\x0d\n    buffer !== null &&\x0d\n    typeof buffer.toString === 'function' &&\x0d\n    ObjectPrototypeHasOwnProperty(buffer\x2C 'toString')\x0d\n  ) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    name\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n    buffer\x0d\n  );\x0d\n});\x0d\n\x0d\nconst validatePosition = hideStackFrames((position\x2C name) => {\x0d\n  if (typeof position === 'number') {\x0d\n    validateInteger(position\x2C 'position');\x0d\n  } else if (typeof position === 'bigint') {\x0d\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\x0d\n      throw new ERR_OUT_OF_RANGE('position'\x2C\x0d\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\x0d\n                                 position);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('position'\x2C\x0d\n                                   ['integer'\x2C 'bigint']\x2C\x0d\n                                   position);\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  assertEncoding\x2C\x0d\n  BigIntStats\x2C  // for testing\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  Stats\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n};\x0d\n
code-source-info,0x24050b20656,81,7566,8210,C0O7597C14O7691C16O7713C17O7724C23O7764C29O7809C31O7833C35O7849C42O7885C48O7925C66O7931C71O7925C72O8021C79O8030C84O8049C87O8072C92O8049C96O8100C102O8129C107O8157C115O8129C120O8192C122O8207,,
tick,0x7ff7ddf35ad4,1546703,0,0x0,3,0x7ff7dde840c0,0x24050b19f3a,0x24050b19b39,0x24050b199fb,0x24050b198b5,0x24050b1925c,0x24050b1716f,0x24050b15e18,0x24050b15af2,0x24050b149a3,0x24050b1474d,0x22cec14654c,0x22cec142065
code-creation,LazyCompile,10,1546884,0x24050b225de,48,assertEncoding node:internal/fs/utils:152:24,0x2bf990a16a0,~
code-source-info,0x24050b225de,81,3712,3894,C0O3728C6O3745C9O3752C14O3752C21O3796C24O3824C40O3830C45O3824C47O3893,,
code-creation,LazyCompile,10,1547179,0x24050b226f6,20,toPathIfFileURL node:internal/url:1499:25,0x12f5b0f9258,~
script-source,39,node:internal/url,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Int8Array\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  encodeStr\x2C\x0d\n  hexTable\x2C\x0d\n  isHexTable\x0d\n} = require('internal/querystring');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  removeColors\x2C\x0d\n  toUSVString\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ARG_NOT_ITERABLE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FILE_URL_HOST\x2C\x0d\n    ERR_INVALID_FILE_URL_PATH\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_INVALID_TUPLE\x2C\x0d\n    ERR_INVALID_URL\x2C\x0d\n    ERR_INVALID_URL_SCHEME\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  CHAR_AMPERSAND\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_EQUAL\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_PERCENT\x2C\x0d\n  CHAR_PLUS\x0d\n} = require('internal/constants');\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst querystring = require('querystring');\x0d\n\x0d\nconst { platform } = process;\x0d\nconst isWindows = platform === 'win32';\x0d\n\x0d\nconst {\x0d\n  domainToASCII: _domainToASCII\x2C\x0d\n  domainToUnicode: _domainToUnicode\x2C\x0d\n  encodeAuth\x2C\x0d\n  parse\x2C\x0d\n  setURLConstructor\x2C\x0d\n  URL_FLAGS_CANNOT_BE_BASE\x2C\x0d\n  URL_FLAGS_HAS_FRAGMENT\x2C\x0d\n  URL_FLAGS_HAS_HOST\x2C\x0d\n  URL_FLAGS_HAS_PASSWORD\x2C\x0d\n  URL_FLAGS_HAS_PATH\x2C\x0d\n  URL_FLAGS_HAS_QUERY\x2C\x0d\n  URL_FLAGS_HAS_USERNAME\x2C\x0d\n  URL_FLAGS_IS_DEFAULT_SCHEME_PORT\x2C\x0d\n  URL_FLAGS_SPECIAL\x2C\x0d\n  kFragment\x2C\x0d\n  kHost\x2C\x0d\n  kHostname\x2C\x0d\n  kPathStart\x2C\x0d\n  kPort\x2C\x0d\n  kQuery\x2C\x0d\n  kSchemeStart\x0d\n} = internalBinding('url');\x0d\n\x0d\nconst {\x0d\n  storeDataObject\x2C\x0d\n  revokeDataObject\x2C\x0d\n} = internalBinding('blob');\x0d\n\x0d\nconst context = Symbol('context');\x0d\nconst cannotBeBase = Symbol('cannot-be-base');\x0d\nconst cannotHaveUsernamePasswordPort =\x0d\n    Symbol('cannot-have-username-password-port');\x0d\nconst special = Symbol('special');\x0d\nconst searchParams = Symbol('query');\x0d\nconst kFormat = Symbol('format');\x0d\n\x0d\nlet blob;\x0d\nlet cryptoRandom;\x0d\n\x0d\nfunction lazyBlob() {\x0d\n  blob ??= require('internal/blob');\x0d\n  return blob;\x0d\n}\x0d\n\x0d\nfunction lazyCryptoRandom() {\x0d\n  try {\x0d\n    cryptoRandom ??= require('internal/crypto/random');\x0d\n  } catch {\x0d\n    // If Node.js built without crypto support\x2C we'll fall\x0d\n    // through here and handle it later.\x0d\n  }\x0d\n  return cryptoRandom;\x0d\n}\x0d\n\x0d\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\x0d\nconst IteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf([][SymbolIterator]())\x0d\n);\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#concept-origin-opaque\x0d\nconst kOpaqueOrigin = 'null';\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#ascii-serialisation-of-an-origin\x0d\nfunction serializeTupleOrigin(scheme\x2C host\x2C port) {\x0d\n  return `${scheme}//${host}${port === null ? '' : `:${port}`}`;\x0d\n}\x0d\n\x0d\n// This class provides the internal state of a URL object. An instance of this\x0d\n// class is stored in every URL object and is accessed internally by setters\x0d\n// and getters. It roughly corresponds to the concept of a URL record in the\x0d\n// URL Standard\x2C with a few differences. It is also the object transported to\x0d\n// the C++ binding.\x0d\n// Refs: https://url.spec.whatwg.org/#concept-url\x0d\nclass URLContext {\x0d\n  constructor() {\x0d\n    this.flags = 0;\x0d\n    this.scheme = ':';\x0d\n    this.username = '';\x0d\n    this.password = '';\x0d\n    this.host = null;\x0d\n    this.port = null;\x0d\n    this.path = [];\x0d\n    this.query = null;\x0d\n    this.fragment = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction isURLSearchParams(self) {\x0d\n  return self && self[searchParams] && !self[searchParams][searchParams];\x0d\n}\x0d\n\x0d\nclass URLSearchParams {\x0d\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\x0d\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\x0d\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\x0d\n  // accordance with Web IDL spec.\x0d\n  constructor(init = undefined) {\x0d\n    if (init === null || init === undefined) {\x0d\n      this[searchParams] = [];\x0d\n    } else if (typeof init === 'object' || typeof init === 'function') {\x0d\n      const method = init[SymbolIterator];\x0d\n      if (method === this[SymbolIterator]) {\x0d\n        // While the spec does not have this branch\x2C we can use it as a\x0d\n        // shortcut to avoid having to go through the costly generic iterator.\x0d\n        const childParams = init[searchParams];\x0d\n        this[searchParams] = childParams.slice();\x0d\n      } else if (method !== null && method !== undefined) {\x0d\n        if (typeof method !== 'function') {\x0d\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\x0d\n        }\x0d\n\x0d\n        // Sequence<sequence<USVString>>\x0d\n        // Note: per spec we have to first exhaust the lists then process them\x0d\n        const pairs = [];\x0d\n        for (const pair of init) {\x0d\n          if ((typeof pair !== 'object' && typeof pair !== 'function') ||\x0d\n              pair === null ||\x0d\n              typeof pair[SymbolIterator] !== 'function') {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          const convertedPair = [];\x0d\n          for (const element of pair)\x0d\n            ArrayPrototypePush(convertedPair\x2C toUSVString(element));\x0d\n          ArrayPrototypePush(pairs\x2C convertedPair);\x0d\n        }\x0d\n\x0d\n        this[searchParams] = [];\x0d\n        for (const pair of pairs) {\x0d\n          if (pair.length !== 2) {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          ArrayPrototypePush(this[searchParams]\x2C pair[0]\x2C pair[1]);\x0d\n        }\x0d\n      } else {\x0d\n        // Record<USVString\x2C USVString>\x0d\n        // Need to use reflection APIs for full spec compliance.\x0d\n        this[searchParams] = [];\x0d\n        const keys = ReflectOwnKeys(init);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\x0d\n          if (desc !== undefined && desc.enumerable) {\x0d\n            const typedKey = toUSVString(key);\x0d\n            const typedValue = toUSVString(init[key]);\x0d\n            this[searchParams].push(typedKey\x2C typedValue);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      // USVString\x0d\n      init = toUSVString(init);\x0d\n      if (init[0] === '?') init = init.slice(1);\x0d\n      initSearchParams(this\x2C init);\x0d\n    }\x0d\n\x0d\n    // "associated url object"\x0d\n    this[context] = null;\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const separator = '\x2C ';\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const output = [];\x0d\n    for (let i = 0; i < list.length; i += 2)\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\x0d\n\x0d\n    const length = ArrayPrototypeReduce(\x0d\n      output\x2C\x0d\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\x0d\n      -separator.length\x0d\n    );\x0d\n    if (length > ctx.breakLength) {\x0d\n      return `${this.constructor.name} {\\n` +\x0d\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\x0d\n    } else if (output.length) {\x0d\n      return `${this.constructor.name} { ` +\x0d\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\x0d\n    }\x0d\n    return `${this.constructor.name} {}`;\x0d\n  }\x0d\n\x0d\n  append(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n    ArrayPrototypePush(this[searchParams]\x2C name\x2C value);\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  delete(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        list.splice(i\x2C 2);\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  get(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return list[i + 1];\x0d\n      }\x0d\n    }\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  getAll(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const values = [];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        values.push(list[i + 1]);\x0d\n      }\x0d\n    }\x0d\n    return values;\x0d\n  }\x0d\n\x0d\n  has(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return true;\x0d\n      }\x0d\n    }\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  set(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n\x0d\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\x0d\n    // the value of the first such name-value pair to `value` and remove the\x0d\n    // others.\x0d\n    let found = false;\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        if (!found) {\x0d\n          list[i + 1] = value;\x0d\n          found = true;\x0d\n          i += 2;\x0d\n        } else {\x0d\n          list.splice(i\x2C 2);\x0d\n        }\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\x0d\n    // is `value`\x2C to `list`.\x0d\n    if (!found) {\x0d\n      ArrayPrototypePush(list\x2C name\x2C value);\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  sort() {\x0d\n    const a = this[searchParams];\x0d\n    const len = a.length;\x0d\n\x0d\n    if (len <= 2) {\x0d\n      // Nothing needs to be done.\x0d\n    } else if (len < 100) {\x0d\n      // 100 is found through testing.\x0d\n      // Simple stable in-place insertion sort\x0d\n      // Derived from v8/src/js/array.js\x0d\n      for (let i = 2; i < len; i += 2) {\x0d\n        const curKey = a[i];\x0d\n        const curVal = a[i + 1];\x0d\n        let j;\x0d\n        for (j = i - 2; j >= 0; j -= 2) {\x0d\n          if (a[j] > curKey) {\x0d\n            a[j + 2] = a[j];\x0d\n            a[j + 3] = a[j + 1];\x0d\n          } else {\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n        a[j + 2] = curKey;\x0d\n        a[j + 3] = curVal;\x0d\n      }\x0d\n    } else {\x0d\n      // Bottom-up iterative stable merge sort\x0d\n      const lBuffer = new Array(len);\x0d\n      const rBuffer = new Array(len);\x0d\n      for (let step = 2; step < len; step *= 2) {\x0d\n        for (let start = 0; start < len - 2; start += 2 * step) {\x0d\n          const mid = start + step;\x0d\n          let end = mid + step;\x0d\n          end = end < len ? end : len;\x0d\n          if (mid > end)\x0d\n            continue;\x0d\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterators\x0d\n  // Define entries here rather than [Symbol.iterator] as the function name\x0d\n  // must be set to `entries`.\x0d\n  entries() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key+value');\x0d\n  }\x0d\n\x0d\n  forEach(callback\x2C thisArg = undefined) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    validateCallback(callback);\x0d\n\x0d\n    let list = this[searchParams];\x0d\n\x0d\n    let i = 0;\x0d\n    while (i < list.length) {\x0d\n      const key = list[i];\x0d\n      const value = list[i + 1];\x0d\n      callback.call(thisArg\x2C value\x2C key\x2C this);\x0d\n      // In case the URL object's `search` is updated\x0d\n      list = this[searchParams];\x0d\n      i += 2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable\x0d\n  keys() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key');\x0d\n  }\x0d\n\x0d\n  values() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'value');\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\x0d\n  toString() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return serializeParams(this[searchParams]);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URLSearchParams.prototype\x2C {\x0d\n  append: kEnumerableProperty\x2C\x0d\n  delete: kEnumerableProperty\x2C\x0d\n  get: kEnumerableProperty\x2C\x0d\n  getAll: kEnumerableProperty\x2C\x0d\n  has: kEnumerableProperty\x2C\x0d\n  set: kEnumerableProperty\x2C\x0d\n  sort: kEnumerableProperty\x2C\x0d\n  entries: kEnumerableProperty\x2C\x0d\n  forEach: kEnumerableProperty\x2C\x0d\n  keys: kEnumerableProperty\x2C\x0d\n  values: kEnumerableProperty\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URLSearchParams' }\x2C\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable-entries\x0d\n  [SymbolIterator]: {\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: URLSearchParams.prototype.entries\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction onParseComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                         host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n  if (!this[searchParams]) { // Invoked from URL constructor\x0d\n    this[searchParams] = new URLSearchParams();\x0d\n    this[searchParams][context] = this;\x0d\n  }\x0d\n  initSearchParams(this[searchParams]\x2C query);\x0d\n}\x0d\n\x0d\nfunction onParseError(input\x2C flags) {\x0d\n  throw new ERR_INVALID_URL(input);\x0d\n}\x0d\n\x0d\nfunction onParseProtocolComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_SPECIAL) !== 0) {\x0d\n    ctx.flags |= URL_FLAGS_SPECIAL;\x0d\n  } else {\x0d\n    ctx.flags &= ~URL_FLAGS_SPECIAL;\x0d\n  }\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostnameComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  } else {\x0d\n    ctx.host = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParsePortComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  ReflectApply(onParseHostnameComplete\x2C this\x2C arguments);\x0d\n  if (port !== null || ((flags & URL_FLAGS_IS_DEFAULT_SCHEME_PORT) !== 0))\x0d\n    ReflectApply(onParsePortComplete\x2C this\x2C arguments);\x0d\n}\x0d\n\x0d\nfunction onParsePathComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_PATH) !== 0) {\x0d\n    ctx.path = path;\x0d\n    ctx.flags |= URL_FLAGS_HAS_PATH;\x0d\n  } else {\x0d\n    ctx.path = [];\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_PATH;\x0d\n  }\x0d\n\x0d\n  // The C++ binding may set host to empty string.\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParseSearchComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                               host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].query = query;\x0d\n}\x0d\n\x0d\nfunction onParseHashComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].fragment = fragment;\x0d\n}\x0d\n\x0d\nclass URL {\x0d\n  constructor(input\x2C base = undefined) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    let base_context;\x0d\n    if (base !== undefined) {\x0d\n      base_context = new URL(base)[context];\x0d\n    }\x0d\n    this[context] = new URLContext();\x0d\n    parse(input\x2C -1\x2C base_context\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\x0d\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\x0d\n  }\x0d\n\x0d\n  get [special]() {\x0d\n    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;\x0d\n  }\x0d\n\x0d\n  get [cannotBeBase]() {\x0d\n    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;\x0d\n  }\x0d\n\x0d\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\x0d\n  get [cannotHaveUsernamePasswordPort]() {\x0d\n    const { host\x2C scheme } = this[context];\x0d\n    return ((host == null || host === '') ||\x0d\n            this[cannotBeBase] ||\x0d\n            scheme === 'file:');\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C opts) {\x0d\n    if (this == null ||\x0d\n        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    }\x0d\n\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || URL;\x0d\n    const obj = ObjectCreate({ constructor });\x0d\n\x0d\n    obj.href = this.href;\x0d\n    obj.origin = this.origin;\x0d\n    obj.protocol = this.protocol;\x0d\n    obj.username = this.username;\x0d\n    obj.password = this.password;\x0d\n    obj.host = this.host;\x0d\n    obj.hostname = this.hostname;\x0d\n    obj.port = this.port;\x0d\n    obj.pathname = this.pathname;\x0d\n    obj.search = this.search;\x0d\n    obj.searchParams = this.searchParams;\x0d\n    obj.hash = this.hash;\x0d\n\x0d\n    if (opts.showHidden) {\x0d\n      obj.cannotBeBase = this[cannotBeBase];\x0d\n      obj.special = this[special];\x0d\n      obj[context] = this[context];\x0d\n    }\x0d\n\x0d\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kFormat](options) {\x0d\n    if (options)\x0d\n      validateObject(options\x2C 'options');\x0d\n\x0d\n    options = {\x0d\n      fragment: true\x2C\x0d\n      unicode: false\x2C\x0d\n      search: true\x2C\x0d\n      auth: true\x2C\x0d\n      ...options\x0d\n    };\x0d\n    const ctx = this[context];\x0d\n    // https://url.spec.whatwg.org/#url-serializing\x0d\n    let ret = ctx.scheme;\x0d\n    if (ctx.host !== null) {\x0d\n      ret += '//';\x0d\n      const has_username = ctx.username !== '';\x0d\n      const has_password = ctx.password !== '';\x0d\n      if (options.auth && (has_username || has_password)) {\x0d\n        if (has_username)\x0d\n          ret += ctx.username;\x0d\n        if (has_password)\x0d\n          ret += `:${ctx.password}`;\x0d\n        ret += '@';\x0d\n      }\x0d\n      ret += options.unicode ?\x0d\n        domainToUnicode(ctx.host) : ctx.host;\x0d\n      if (ctx.port !== null)\x0d\n        ret += `:${ctx.port}`;\x0d\n    }\x0d\n    if (this[cannotBeBase]) {\x0d\n      ret += ctx.path[0];\x0d\n    } else {\x0d\n      if (ctx.host === null && ctx.path.length > 1 && ctx.path[0] === '') {\x0d\n        ret += '/.';\x0d\n      }\x0d\n      if (ctx.path.length) {\x0d\n        ret += '/' + ArrayPrototypeJoin(ctx.path\x2C '/');\x0d\n      }\x0d\n    }\x0d\n    if (options.search && ctx.query !== null)\x0d\n      ret += `?${ctx.query}`;\x0d\n    if (options.fragment && ctx.fragment !== null)\x0d\n      ret += `#${ctx.fragment}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  toString() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  get href() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  set href(input) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    parse(input\x2C -1\x2C undefined\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\x0d\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get origin() {\x0d\n    // Refs: https://url.spec.whatwg.org/#concept-url-origin\x0d\n    const ctx = this[context];\x0d\n    switch (ctx.scheme) {\x0d\n      case 'blob:':\x0d\n        if (ctx.path.length > 0) {\x0d\n          try {\x0d\n            return (new URL(ctx.path[0])).origin;\x0d\n          } catch {\x0d\n            // Fall through... do nothing\x0d\n          }\x0d\n        }\x0d\n        return kOpaqueOrigin;\x0d\n      case 'ftp:':\x0d\n      case 'http:':\x0d\n      case 'https:':\x0d\n      case 'ws:':\x0d\n      case 'wss:':\x0d\n        return serializeTupleOrigin(ctx.scheme\x2C ctx.host\x2C ctx.port);\x0d\n    }\x0d\n    return kOpaqueOrigin;\x0d\n  }\x0d\n\x0d\n  get protocol() {\x0d\n    return this[context].scheme;\x0d\n  }\x0d\n\x0d\n  set protocol(scheme) {\x0d\n    // toUSVString is not needed.\x0d\n    scheme = `${scheme}`;\x0d\n    if (scheme.length === 0)\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    parse(scheme\x2C kSchemeStart\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseProtocolComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get username() {\x0d\n    return this[context].username;\x0d\n  }\x0d\n\x0d\n  set username(username) {\x0d\n    // toUSVString is not needed.\x0d\n    username = `${username}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (username === '') {\x0d\n      ctx.username = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_USERNAME;\x0d\n      return;\x0d\n    }\x0d\n    ctx.username = encodeAuth(username);\x0d\n    ctx.flags |= URL_FLAGS_HAS_USERNAME;\x0d\n  }\x0d\n\x0d\n  get password() {\x0d\n    return this[context].password;\x0d\n  }\x0d\n\x0d\n  set password(password) {\x0d\n    // toUSVString is not needed.\x0d\n    password = `${password}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (password === '') {\x0d\n      ctx.password = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_PASSWORD;\x0d\n      return;\x0d\n    }\x0d\n    ctx.password = encodeAuth(password);\x0d\n    ctx.flags |= URL_FLAGS_HAS_PASSWORD;\x0d\n  }\x0d\n\x0d\n  get host() {\x0d\n    const ctx = this[context];\x0d\n    let ret = ctx.host || '';\x0d\n    if (ctx.port !== null)\x0d\n      ret += `:${ctx.port}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  set host(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHost\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHostComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get hostname() {\x0d\n    return this[context].host || '';\x0d\n  }\x0d\n\x0d\n  set hostname(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHostname\x2C null\x2C ctx\x2C onParseHostnameComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    const port = this[context].port;\x0d\n    return port === null ? '' : String(port);\x0d\n  }\x0d\n\x0d\n  set port(port) {\x0d\n    // toUSVString is not needed.\x0d\n    port = `${port}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (port === '') {\x0d\n      ctx.port = null;\x0d\n      return;\x0d\n    }\x0d\n    parse(port\x2C kPort\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParsePortComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get pathname() {\x0d\n    const ctx = this[context];\x0d\n    if (this[cannotBeBase])\x0d\n      return ctx.path[0];\x0d\n    if (ctx.path.length === 0)\x0d\n      return '';\x0d\n    return `/${ArrayPrototypeJoin(ctx.path\x2C '/')}`;\x0d\n  }\x0d\n\x0d\n  set pathname(path) {\x0d\n    // toUSVString is not needed.\x0d\n    path = `${path}`;\x0d\n    if (this[cannotBeBase])\x0d\n      return;\x0d\n    parse(path\x2C kPathStart\x2C null\x2C this[context]\x2C\x0d\n          onParsePathComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get search() {\x0d\n    const { query } = this[context];\x0d\n    if (query === null || query === '')\x0d\n      return '';\x0d\n    return `?${query}`;\x0d\n  }\x0d\n\x0d\n  set search(search) {\x0d\n    const ctx = this[context];\x0d\n    search = toUSVString(search);\x0d\n    if (search === '') {\x0d\n      ctx.query = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n    } else {\x0d\n      if (search[0] === '?') search = StringPrototypeSlice(search\x2C 1);\x0d\n      ctx.query = '';\x0d\n      ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n      if (search) {\x0d\n        parse(search\x2C kQuery\x2C null\x2C ctx\x2C\x0d\n              FunctionPrototypeBind(onParseSearchComplete\x2C this));\x0d\n      }\x0d\n    }\x0d\n    initSearchParams(this[searchParams]\x2C search);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get searchParams() {\x0d\n    return this[searchParams];\x0d\n  }\x0d\n\x0d\n  get hash() {\x0d\n    const { fragment } = this[context];\x0d\n    if (fragment === null || fragment === '')\x0d\n      return '';\x0d\n    return `#${fragment}`;\x0d\n  }\x0d\n\x0d\n  set hash(hash) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    hash = `${hash}`;\x0d\n    if (!hash) {\x0d\n      ctx.fragment = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_FRAGMENT;\x0d\n      return;\x0d\n    }\x0d\n    if (hash[0] === '#') hash = StringPrototypeSlice(hash\x2C 1);\x0d\n    ctx.fragment = '';\x0d\n    ctx.flags |= URL_FLAGS_HAS_FRAGMENT;\x0d\n    parse(hash\x2C kFragment\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHashComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  static createObjectURL(obj) {\x0d\n    const cryptoRandom = lazyCryptoRandom();\x0d\n    if (cryptoRandom === undefined)\x0d\n      throw new ERR_NO_CRYPTO();\x0d\n\x0d\n    // Yes\x2C lazy loading is annoying but because of circular\x0d\n    // references between the url\x2C internal/blob\x2C and buffer\x0d\n    // modules\x2C lazy loading here makes sure that things work.\x0d\n    const blob = lazyBlob();\x0d\n    if (!blob.isBlob(obj))\x0d\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\x0d\n\x0d\n    const id = cryptoRandom.randomUUID();\x0d\n\x0d\n    storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\x0d\n\x0d\n    return `blob:nodedata:${id}`;\x0d\n  }\x0d\n\x0d\n  static revokeObjectURL(url) {\x0d\n    url = `${url}`;\x0d\n    try {\x0d\n      const parsed = new URL(url);\x0d\n      const split = StringPrototypeSplit(parsed.pathname\x2C ':');\x0d\n      if (split.length === 2)\x0d\n        revokeDataObject(split[1]);\x0d\n    } catch {\x0d\n      // If there's an error\x2C it's ignored.\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URL.prototype\x2C {\x0d\n  [kFormat]: { configurable: false\x2C writable: false }\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URL' }\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  href: kEnumerableProperty\x2C\x0d\n  origin: kEnumerableProperty\x2C\x0d\n  protocol: kEnumerableProperty\x2C\x0d\n  username: kEnumerableProperty\x2C\x0d\n  password: kEnumerableProperty\x2C\x0d\n  host: kEnumerableProperty\x2C\x0d\n  hostname: kEnumerableProperty\x2C\x0d\n  port: kEnumerableProperty\x2C\x0d\n  pathname: kEnumerableProperty\x2C\x0d\n  search: kEnumerableProperty\x2C\x0d\n  searchParams: kEnumerableProperty\x2C\x0d\n  hash: kEnumerableProperty\x2C\x0d\n  toJSON: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nfunction update(url\x2C params) {\x0d\n  if (!url)\x0d\n    return;\x0d\n\x0d\n  const ctx = url[context];\x0d\n  const serializedParams = params.toString();\x0d\n  if (serializedParams) {\x0d\n    ctx.query = serializedParams;\x0d\n    ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n  } else {\x0d\n    ctx.query = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initSearchParams(url\x2C init) {\x0d\n  if (!init) {\x0d\n    url[searchParams] = [];\x0d\n    return;\x0d\n  }\x0d\n  url[searchParams] = parseParams(init);\x0d\n}\x0d\n\x0d\n// application/x-www-form-urlencoded parser\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\x0d\nfunction parseParams(qs) {\x0d\n  const out = [];\x0d\n  let pairStart = 0;\x0d\n  let lastPos = 0;\x0d\n  let seenSep = false;\x0d\n  let buf = '';\x0d\n  let encoded = false;\x0d\n  let encodeCheck = 0;\x0d\n  let i;\x0d\n  for (i = 0; i < qs.length; ++i) {\x0d\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\x0d\n\x0d\n    // Try matching key/value pair separator\x0d\n    if (code === CHAR_AMPERSAND) {\x0d\n      if (pairStart === i) {\x0d\n        // We saw an empty substring between pair separators\x0d\n        lastPos = pairStart = i + 1;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      // If `buf` is the key\x2C add an empty value.\x0d\n      if (!seenSep)\x0d\n        out.push('');\x0d\n\x0d\n      seenSep = false;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = pairStart = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Try matching key/value separator (e.g. '=') if we haven't already\x0d\n    if (!seenSep && code === CHAR_EQUAL) {\x0d\n      // Key/value separator match!\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      seenSep = true;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Handle + and percent decoding.\x0d\n    if (code === CHAR_PLUS) {\x0d\n      if (lastPos < i)\x0d\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n      buf += ' ';\x0d\n      lastPos = i + 1;\x0d\n    } else if (!encoded) {\x0d\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\x0d\n      // calls to string decoding functions\x0d\n      if (code === CHAR_PERCENT) {\x0d\n        encodeCheck = 1;\x0d\n      } else if (encodeCheck > 0) {\x0d\n        if (isHexTable[code] === 1) {\x0d\n          if (++encodeCheck === 3) {\x0d\n            encoded = true;\x0d\n          }\x0d\n        } else {\x0d\n          encodeCheck = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Deal with any leftover key or value data\x0d\n\x0d\n  // There is a trailing &. No more processing is needed.\x0d\n  if (pairStart === i)\x0d\n    return out;\x0d\n\x0d\n  if (lastPos < i)\x0d\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n  if (encoded)\x0d\n    buf = querystring.unescape(buf);\x0d\n  ArrayPrototypePush(out\x2C buf);\x0d\n\x0d\n  // If `buf` is the key\x2C add an empty value.\x0d\n  if (!seenSep)\x0d\n    ArrayPrototypePush(out\x2C '');\x0d\n\x0d\n  return out;\x0d\n}\x0d\n\x0d\n// Adapted from querystring's implementation.\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\x0d\nconst noEscape = new Int8Array([\x0d\n/*\x0d\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\x0d\n*/\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\x0d\n]);\x0d\n\x0d\n// Special version of hexTable that uses `+` for U+0020 SPACE.\x0d\nconst paramHexTable = hexTable.slice();\x0d\nparamHexTable[0x20] = '+';\x0d\n\x0d\n// application/x-www-form-urlencoded serializer\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\x0d\nfunction serializeParams(array) {\x0d\n  const len = array.length;\x0d\n  if (len === 0)\x0d\n    return '';\x0d\n\x0d\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\x0d\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\x0d\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\x0d\n\x0d\n  for (let i = 2; i < len; i += 2) {\x0d\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\x0d\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\x0d\n    output += `&${encodedParam}=${encodedValue}`;\x0d\n  }\x0d\n\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// Mainly to mitigate func-name-matching ESLint rule\x0d\nfunction defineIDLClass(proto\x2C classStr\x2C obj) {\x0d\n  // https://heycam.github.io/webidl/#dfn-class-string\x0d\n  ObjectDefineProperty(proto\x2C SymbolToStringTag\x2C {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: classStr\x0d\n  });\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-operations\x0d\n  for (const key of ObjectKeys(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n  for (const key of ObjectGetOwnPropertySymbols(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// for merge sort\x0d\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\x0d\n  const sizeLeft = mid - start;\x0d\n  const sizeRight = end - mid;\x0d\n  let l\x2C r\x2C o;\x0d\n\x0d\n  for (l = 0; l < sizeLeft; l++)\x0d\n    lBuffer[l] = out[start + l];\x0d\n  for (r = 0; r < sizeRight; r++)\x0d\n    rBuffer[r] = out[mid + r];\x0d\n\x0d\n  l = 0;\x0d\n  r = 0;\x0d\n  o = start;\x0d\n  while (l < sizeLeft && r < sizeRight) {\x0d\n    if (lBuffer[l] <= rBuffer[r]) {\x0d\n      out[o++] = lBuffer[l++];\x0d\n      out[o++] = lBuffer[l++];\x0d\n    } else {\x0d\n      out[o++] = rBuffer[r++];\x0d\n      out[o++] = rBuffer[r++];\x0d\n    }\x0d\n  }\x0d\n  while (l < sizeLeft)\x0d\n    out[o++] = lBuffer[l++];\x0d\n  while (r < sizeRight)\x0d\n    out[o++] = rBuffer[r++];\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-default-iterator-object\x0d\nfunction createSearchParamsIterator(target\x2C kind) {\x0d\n  const iterator = ObjectCreate(URLSearchParamsIteratorPrototype);\x0d\n  iterator[context] = {\x0d\n    target\x2C\x0d\n    kind\x2C\x0d\n    index: 0\x0d\n  };\x0d\n  return iterator;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\x0d\nconst URLSearchParamsIteratorPrototype = ObjectCreate(IteratorPrototype);\x0d\n\x0d\ndefineIDLClass(URLSearchParamsIteratorPrototype\x2C 'URLSearchParams Iterator'\x2C {\x0d\n  next() {\x0d\n    if (!this ||\x0d\n        ObjectGetPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const values = target[searchParams];\x0d\n    const len = values.length;\x0d\n    if (index >= len) {\x0d\n      return {\x0d\n        value: undefined\x2C\x0d\n        done: true\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const name = values[index];\x0d\n    const value = values[index + 1];\x0d\n    this[context].index = index + 2;\x0d\n\x0d\n    let result;\x0d\n    if (kind === 'key') {\x0d\n      result = name;\x0d\n    } else if (kind === 'value') {\x0d\n      result = value;\x0d\n    } else {\x0d\n      result = [name\x2C value];\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      value: result\x2C\x0d\n      done: false\x0d\n    };\x0d\n  }\x2C\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (this == null || this[context] == null || this[context].target == null)\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const output = ArrayPrototypeReduce(\x0d\n      ArrayPrototypeSlice(target[searchParams]\x2C index)\x2C\x0d\n      (prev\x2C cur\x2C i) => {\x0d\n        const key = i % 2 === 0;\x0d\n        if (kind === 'key' && key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'key+value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C [target[searchParams][index + i - 1]\x2C cur]);\x0d\n        }\x0d\n        return prev;\x0d\n      }\x2C\x0d\n      []\x0d\n    );\x0d\n    const breakLn = inspect(output\x2C innerOpts).includes('\\n');\x0d\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\x0d\n    let outputStr;\x0d\n    if (breakLn) {\x0d\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\x0d\n    } else {\x0d\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\x0d\n    }\x0d\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction domainToASCII(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToASCII(`${domain}`);\x0d\n}\x0d\n\x0d\nfunction domainToUnicode(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToUnicode(`${domain}`);\x0d\n}\x0d\n\x0d\n// Utility function that converts a URL object into an ordinary\x0d\n// options object as expected by the http.request and https.request\x0d\n// APIs.\x0d\nfunction urlToHttpOptions(url) {\x0d\n  const options = {\x0d\n    protocol: url.protocol\x2C\x0d\n    hostname: typeof url.hostname === 'string' &&\x0d\n              StringPrototypeStartsWith(url.hostname\x2C '[') ?\x0d\n      StringPrototypeSlice(url.hostname\x2C 1\x2C -1) :\x0d\n      url.hostname\x2C\x0d\n    hash: url.hash\x2C\x0d\n    search: url.search\x2C\x0d\n    pathname: url.pathname\x2C\x0d\n    path: `${url.pathname || ''}${url.search || ''}`\x2C\x0d\n    href: url.href\x0d\n  };\x0d\n  if (url.port !== '') {\x0d\n    options.port = Number(url.port);\x0d\n  }\x0d\n  if (url.username || url.password) {\x0d\n    options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\nconst forwardSlashRegEx = /\\//g;\x0d\n\x0d\nfunction getPathFromURLWin32(url) {\x0d\n  const hostname = url.hostname;\x0d\n  let pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\x0d\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded \\\\ or / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  pathname = pathname.replace(forwardSlashRegEx\x2C '\\\\');\x0d\n  pathname = decodeURIComponent(pathname);\x0d\n  if (hostname !== '') {\x0d\n    // If hostname is set\x2C then we have a UNC path\x0d\n    // Pass the hostname through domainToUnicode just in case\x0d\n    // it is an IDN using punycode encoding. We do not need to worry\x0d\n    // about percent encoding because the URL parser will have\x0d\n    // already taken care of that for us. Note that this only\x0d\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\x0d\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\x0d\n  }\x0d\n  // Otherwise\x2C it's a local path that requires a drive letter\x0d\n  const letter = pathname.codePointAt(1) | 0x20;\x0d\n  const sep = pathname[2];\x0d\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\x0d\n      (sep !== ':')) {\x0d\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\x0d\n  }\x0d\n  return pathname.slice(1);\x0d\n}\x0d\n\x0d\nfunction getPathFromURLPosix(url) {\x0d\n  if (url.hostname !== '') {\x0d\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\x0d\n  }\x0d\n  const pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if (pathname[n + 1] === '2' && third === 102) {\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return decodeURIComponent(pathname);\x0d\n}\x0d\n\x0d\nfunction fileURLToPath(path) {\x0d\n  if (typeof path === 'string')\x0d\n    path = new URL(path);\x0d\n  else if (!isURLInstance(path))\x0d\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\x0d\n  if (path.protocol !== 'file:')\x0d\n    throw new ERR_INVALID_URL_SCHEME('file');\x0d\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\x0d\n}\x0d\n\x0d\n// The following characters are percent-encoded when converting from file path\x0d\n// to URL:\x0d\n// - %: The percent character is the only character not encoded by the\x0d\n//        `pathname` setter.\x0d\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\x0d\n//      character but the `pathname` setters replaces it by a forward slash.\x0d\n// - LF: The newline character is stripped out by the `pathname` setter.\x0d\n//       (See whatwg/url#419)\x0d\n// - CR: The carriage return character is also stripped out by the `pathname`\x0d\n//       setter.\x0d\n// - TAB: The tab character is also stripped out by the `pathname` setter.\x0d\nconst percentRegEx = /%/g;\x0d\nconst backslashRegEx = /\\\\/g;\x0d\nconst newlineRegEx = /\\n/g;\x0d\nconst carriageReturnRegEx = /\\r/g;\x0d\nconst tabRegEx = /\\t/g;\x0d\n\x0d\nfunction encodePathChars(filepath) {\x0d\n  if (StringPrototypeIncludes(filepath\x2C '%'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C percentRegEx\x2C '%25');\x0d\n  // In posix\x2C backslash is a valid character in paths:\x0d\n  if (!isWindows && StringPrototypeIncludes(filepath\x2C '\\\\'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C backslashRegEx\x2C '%5C');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\n'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C newlineRegEx\x2C '%0A');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\r'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C carriageReturnRegEx\x2C '%0D');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\t'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C tabRegEx\x2C '%09');\x0d\n  return filepath;\x0d\n}\x0d\n\x0d\nfunction pathToFileURL(filepath) {\x0d\n  const outURL = new URL('file://');\x0d\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\x0d\n    // UNC path format: \\\\server\\share\\resource\x0d\n    const paths = StringPrototypeSplit(filepath\x2C '\\\\');\x0d\n    if (paths.length <= 3) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Missing UNC resource path'\x0d\n      );\x0d\n    }\x0d\n    const hostname = paths[2];\x0d\n    if (hostname.length === 0) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Empty UNC servername'\x0d\n      );\x0d\n    }\x0d\n    outURL.hostname = domainToASCII(hostname);\x0d\n    outURL.pathname = encodePathChars(\x0d\n      ArrayPrototypeJoin(ArrayPrototypeSlice(paths\x2C 3)\x2C '/'));\x0d\n  } else {\x0d\n    let resolved = path.resolve(filepath);\x0d\n    // path.resolve strips trailing slashes so we must add them back\x0d\n    const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\x0d\n                                                   filepath.length - 1);\x0d\n    if ((filePathLast === CHAR_FORWARD_SLASH ||\x0d\n         (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\x0d\n        resolved[resolved.length - 1] !== path.sep)\x0d\n      resolved += '/';\x0d\n    outURL.pathname = encodePathChars(resolved);\x0d\n  }\x0d\n  return outURL;\x0d\n}\x0d\n\x0d\nfunction isURLInstance(fileURLOrPath) {\x0d\n  return fileURLOrPath != null && fileURLOrPath.href && fileURLOrPath.origin;\x0d\n}\x0d\n\x0d\nfunction toPathIfFileURL(fileURLOrPath) {\x0d\n  if (!isURLInstance(fileURLOrPath))\x0d\n    return fileURLOrPath;\x0d\n  return fileURLToPath(fileURLOrPath);\x0d\n}\x0d\n\x0d\nfunction constructUrl(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                      host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = new URLContext();\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n\x0d\n  const url = ObjectCreate(URL.prototype);\x0d\n  url[context] = ctx;\x0d\n  const params = new URLSearchParams();\x0d\n  url[searchParams] = params;\x0d\n  params[context] = url;\x0d\n  initSearchParams(params\x2C query);\x0d\n  return url;\x0d\n}\x0d\nsetURLConstructor(constructUrl);\x0d\n\x0d\nmodule.exports = {\x0d\n  toUSVString\x2C\x0d\n  fileURLToPath\x2C\x0d\n  pathToFileURL\x2C\x0d\n  toPathIfFileURL\x2C\x0d\n  isURLInstance\x2C\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n  formatSymbol: kFormat\x2C\x0d\n  searchParamsSymbol: searchParams\x2C\x0d\n  encodeStr\x0d\n};\x0d\n
code-source-info,0x24050b226f6,39,43048,43173,C0O43069C3O43074C9O43109C11O43130C12O43134C15O43141C19O43170,,
tick,0x7ff7dd7b8b00,1555680,0,0x0,3,0x7ff7dde840c0,0x24050b19f47,0x24050b19b39,0x24050b199fb,0x24050b198b5,0x24050b1925c,0x24050b1716f,0x24050b15e18,0x24050b15af2,0x24050b149a3,0x24050b1474d,0x22cec14654c,0x22cec142065
code-creation,LazyCompile,10,1555814,0x24050b2583e,17,isURLInstance node:internal/url:1495:23,0x12f5b0f9208,~
code-source-info,0x24050b2583e,39,42921,43020,C0O42942C3O42963C6O42988C12O43010C16O43017,,
code-creation,LazyCompile,10,1556036,0x24050b2599e,81, node:internal/fs/utils:669:38,0x2bf990a26c0,~
code-source-info,0x24050b2599e,81,18865,19145,C14O18899C22O18932C25O18932C31O18959C36O18990C49O18965C54O18959C55O19058C68O19058C74O19097C76O19127C78O19127C80O19144,,
code-creation,LazyCompile,10,1556233,0x24050b25bae,110, node:internal/fs/utils:358:35,0x2bf990a1d38,~
code-source-info,0x24050b25bae,81,8960,9569,C16O9025C21O9079C26O9079C31O9176C37O9199C41O9228C45O9245C51O9245C60O9297C64O9318C69O9318C76O9364C77O9371C78O9394C94O9394C100O9513C104O9536C106O9536C107O9555C109O9566,,
code-creation,LazyCompile,10,1556418,0x24050b25d26,16,isUint8Array node:internal/util/types:13:22,0xc194f47418,~
script-source,17,node:internal/util/types,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction isTypedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\x0d\n}\x0d\n\x0d\nfunction isUint8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\x0d\n}\x0d\n\x0d\nfunction isUint8ClampedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\x0d\n}\x0d\n\x0d\nfunction isUint16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\x0d\n}\x0d\n\x0d\nfunction isUint32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\x0d\n}\x0d\n\x0d\nfunction isInt8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\x0d\n}\x0d\n\x0d\nfunction isInt16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\x0d\n}\x0d\n\x0d\nfunction isInt32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\x0d\n}\x0d\n\x0d\nfunction isBigInt64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\x0d\n}\x0d\n\x0d\nfunction isBigUint64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ...internalBinding('types')\x2C\x0d\n  isArrayBufferView: ArrayBufferIsView\x2C\x0d\n  isTypedArray\x2C\x0d\n  isUint8Array\x2C\x0d\n  isUint8ClampedArray\x2C\x0d\n  isUint16Array\x2C\x0d\n  isUint32Array\x2C\x0d\n  isInt8Array\x2C\x0d\n  isInt16Array\x2C\x0d\n  isInt32Array\x2C\x0d\n  isFloat32Array\x2C\x0d\n  isFloat64Array\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isBigUint64Array\x0d\n};\x0d\n\x0d\nlet isCryptoKey;\x0d\nlet isKeyObject;\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  isKeyObject: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isKeyObject) {\x0d\n        ({ isKeyObject } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isKeyObject(obj);\x0d\n    }\x0d\n  }\x2C\x0d\n  isCryptoKey: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isCryptoKey) {\x0d\n        ({ isCryptoKey } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isCryptoKey(obj);\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x24050b25d26,17,269,356,C0O282C5O289C12O336C15O353,,
code-creation,LazyCompile,10,1556987,0x24050b2618e,23,splitRoot node:fs:2375:33,0x2bf990992a8,~
code-source-info,0x24050b2618e,80,65400,65466,C0O65413C9O65440C12O65420C19O65457C22O65461,,
code-creation,LazyCompile,10,1557512,0x24050b26296,63,handleErrorFromBinding node:internal/fs/utils:341:32,0x2bf990a1ce8,~
code-source-info,0x24050b26296,81,8304,8815,C0O8323C6O8387C11O8387C16O8410C24O8410C29O8468C31O8468C32O8495C38O8727C43O8754C51O8727C56O8801C60O8791C62O8814,,
code-creation,LazyCompile,10,1557820,0x24050b2640e,53,nextPart node:fs:2401:31,0x2bf990993a0,~
code-source-info,0x24050b2640e,80,66157,66408,C0O66184C4O66180C9O66217C14O66217C20O66301C22O66312C24O66308C31O66342C33O66338C38O66371C40O66380C41O66194C47O66171C50O66393C52O66403,,
code-creation,LazyCompile,10,1559031,0x24050b2656e,34,isFileType node:fs:205:20,0x2bf99097010,~
code-source-info,0x24050b2656e,80,5489,5737,C0O5626C2O5631C6O5639C10O5674C15O5681C20O5698C22O5713C24O5711C30O5721C33O5734,,
code-creation,Function,11,1559939,0x22e326861c0,6232,resolve node:path:158:10,0x15057ccd510,^
code-source-info,0x22e326861c0,41,4875,9786,,,
code-creation,Function,11,1560062,0x22e32687a80,544,nextPart node:fs:2401:31,0x2bf990993a0,^
code-source-info,0x22e32687a80,80,66157,66408,,,
code-creation,LazyCompile,10,1561466,0x24050b27146,72,encodeRealpathResult node:fs:2388:30,0x2bf99099350,~
code-source-info,0x24050b27146,80,65746,66012,C0O65769C4O65794C10O65814C17O65823C22O65840C24O65854C25O65875C30O65882C35O65882C41O65911C48O65920C53O65941C55O65957C56O65982C61O65999C66O65982C71O66009,,
code-creation,LazyCompile,10,1561697,0x24050b272d6,62,loadNativeModule node:internal/modules/cjs/helpers:44:26,0x24dc49d5ad8,~
code-source-info,0x24050b272d6,110,1194,1482,C0O1231C5O1244C10O1248C15O1248C21O1266C26O1273C35O1304C43O1304C48O1432C53O1432C57O1463C59O1474C61O1481,,
code-creation,LazyCompile,10,1561952,0x24050b27c4e,246,Module.load node:internal/modules/cjs/loader:969:33,0x24dc49dbea0,~
code-source-info,0x24050b27c4e,111,31233,32069,C0O31249C8O31295C16O31249C21O31305C26O31318C32O31305C36O31330C38O31344C42O31359C45O31379C52O31396C55O31401C60O31401C66O31379C71O31370C75O31444C78O31444C83O31523C91O31527C101O31580C106O31591C112O31606C124O31612C129O31606C130O31654C133O31661C140O31672C144O31683C150O31704C151O31716C155O31747C160O31756C165O31860C170O31897C175O31908C187O31949C192O31956C197O31956C204O31970C206O31968C211O32003C216O32012C221O32012C228O32038C233O32047C238O32047C245O32068,,
code-creation,LazyCompile,10,1562394,0x24050b27efe,98,findLongestRegisteredExtension node:internal/modules/cjs/loader:413:40,0x24dc49db3b8,~
code-source-info,0x24050b27efe,111,12225,12666,C0O12254C5O12259C10O12259C16O12286C18O12311C20O12338C22O12407C36O12360C44O12407C49O12422C51O12441C55O12451C56O12461C61O12468C63O12516C68O12535C74O12575C77O12586C84O12597C89O12617C91O12641C92O12344C95O12650C97O12663,,
code-creation,LazyCompile,10,1562858,0x24050b280de,415,basename node:path:749:11,0x15057ccd7d0,~
code-source-info,0x24050b280de
code-creation,LazyCompile,10,1563355,0x24050b285fe,485,Module._extensions..js node:internal/modules/cjs/loader:1114:37,0x24dc49dc040,~
code-source-info,0x24050b285fe
code-creation,LazyCompile,10,1563829,0x24050b28a46,376,readFileSync node:fs:450:22,0x2bf990974c8,~
code-source-info,0x24050b28a
code-creation,LazyCompile,10,1564202,0x24050b28d66,30,isEncoding node:buffer:530:40,0xc194f775c0,~
code-source-info,0x24050b28d66,24,15337,15472,C0O15353C6O15401C12O15408C20O15427C23O15427C28O15455C29O15469,,
code-creation,LazyCompile,10,1564327,0x24050b28e6e,30,normalizeEncoding node:internal/util:160:27,0xc194f45d58,~
code-source-info,0x24050b28e6e,16,4365,4473,C0O4376C7O4399C14O4417C19O4430C21O4444C22O4448C25O4455C29O4470,,
code-creation,LazyCompile,10,1564504,0x24050b28fe6,113,openSync node:fs:576:18,0x2bf990976b0,~
code-source-info,0x24050b28fe6,80,14993,15383,C0O15018C5O15025C11O15072C16O15072C21O15097C37O15104C44O15157C51O15159C58O15185C63O15193C70O15198C73O15209C78O15209C95O15193C101O15334C106O15334C110O15366C112O15380,,
code-creation,LazyCompile,10,1564643,0x24050b29166,37, node:internal/fs/utils:681:42,0x2bf990a2710,~
code-source-info,0x24050b29166,81,19192,19331,C14O19248C19O19248C24O19283C29O19283C34O19316C36O19328,,
code-creation,LazyCompile,10,1564887,0x24050b2953e,515,stringToFlags node:internal/fs/utils:556:23,0x2bf990a2530,~
code-source-info,0x24050b2953e
code-creation,LazyCompile,10,1565402,0x24050b2992e,97,parseFileMode node:internal/validators:59:23,0x3eae9abcd10,~
code-source-info,0x24050b2992e,15,1545,1852,C0O1569C11O1587C17O1625C24O1650C27O1630C34O1677C41O1722C52O1683C57O1677C58O1745C66O1753C73O1789C89O1789C94O1836C96O1849,,
code-creation,LazyCompile,10,1565614,0x24050b29ac6,206, node:internal/validators:84:3,0x3eae9abcdd0,~
code-source-info,0x24050b29ac6,15,2338,2933,C36O2481C39O2486C45O2511C51O2553C67O2559C72O2553C73O2624C78O2629C84O2664C100O2670C105O2664C106O2735C116O2774C129O2787C142O2741C147O2735C148O2814C150O2824C157O2839C162O2855C172O2894C185O2907C198O2861C203O2855C205O2932,,
code-creation,LazyCompile,10,1565778,0x24050b29c8e,9,isInt32 node:internal/validators:36:17,0x3eae9abc7b0,~
code-source-info,0x24050b29c8e,15,769,814,C0O782C2O806C5O795C8O811,,
code-creation,LazyCompile,10,1566081,0x24050b29d96,66,tryStatSync node:fs:404:21,0x2bf990973d8,~
code-source-info,0x24050b29d96,80,10725,10943,C0O10757C2O10778C7O10786C22O10786C28O10831C36O10855C38O10872C43O10875C48O10875C53O10895C58O10901C62O10895C63O10927C65O10940,,
code-creation,LazyCompile,10,1566322,0x24050b29f0e,96,tryCreateBuffer node:fs:414:25,0x2bf99097428,~
code-source-info,0x24050b29f0e,80,10971,11271,C0O11009C2O11022C7O11044C9O11055C11O11053C16O11078C23O11084C28O11078C29O11129C34O11145C39O11145C45O11169C57O11175C58O11204C65O11218C67O11228C72O11231C77O11231C93O11254C95O11268,,
tick,0x7ff954e0d044,1566467,0,0x0,3,0x7ff7dde840c0,0x24050b28ac2,0x24050b2863a,0x24050b27cde,0x24050b15f27,0x24050b15af2,0x24050b149a3,0x24050b1474d,0x22cec14654c,0x22cec142065
code-creation,LazyCompile,10,1566552,0x24050b2a066,17,allocUnsafe node:buffer:373:42,0xc194f77138,~
code-source-info,0x24050b2a066,24,11277,11335,C0O11289C5O11289C9O11310C12O11317C16O11332,,
code-creation,LazyCompile,10,1566878,0x24050b2a16e,54, node:buffer:349:36,0xc194f77080,~
code-source-info,0x24050b2a16e,24,10551,10711,C0O10566C8O10566C13O10599C14O10610C21O10626C23O10623C28O10646C33O10678C46O10652C51O10646C53O10710,,
code-creation,LazyCompile,10,1567100,0x24050b2a296,30,validateNumber node:internal/validators:123:24,0x3eae9abcf10,~
code-source-info,0x24050b2a296,15,3673,3785,C0O3692C6O3728C22O3734C27O3728C29O3784,,
code-creation,LazyCompile,10,1567335,0x24050b2a3ae,119,allocate node:buffer:398:18,0xc194f77288,~
code-source-info,0x24050b2a3ae,24,12004,12332,C0O12016C1O12025C6O12038C11O12045C16O12062C17O12071C20O12090C24O12099C27O12080C32O12114C34O12126C39O12137C41O12135C44O12123C49O12157C52O12157C55O12186C62O12201C67O12212C75O12186C81O12236C88O12250C94O12247C100O12261C103O12261C106O12279C108O12288C109O12297C114O12304C118O12329,,
code-creation,LazyCompile,10,1567650,0x24050b2a56e,86,tryReadSync node:fs:429:21,0x2bf99097478,~
code-source-info,0x24050b2a56e,80,11295,11540,C0O11345C2O11358C7O11383C12O11398C29O11398C35O11435C47O11441C48O11470C55O11484C57O11494C62O11497C67O11497C83O11520C85O11537,,
code-creation,LazyCompile,10,1568212,0x24050b2a75e,258,readSync node:fs:684:18,0x2bf99097780,~
code-source-info,0x24050b2a75e,80,17835,18869,C0O17835C2O17879C7O17884C13O17909C18O17909C22O17952C29O17959C34O18036C40O18046C45O18046C50O18083C62O18102C68O18118C75O18129C80O18146C89O18191C94O18218C99O18247C112O18247C117O18295C124O18313C125O18324C130O18338C131O18347C132O18369C138O18380C143O18394C159O18400C164O18394C165O18526C170O18574C181O18526C186O18592C191O18619C195O18639C203O18639C208O18696C210O18718C215O18726C240O18726C246O18820C251O18820C255O18852C257O18866,,
code-creation,LazyCompile,10,1568531,0x24050b2a9ce,52, node:internal/fs/utils:687:40,0x2bf990a2760,~
code-source-info,0x24050b2a9ce,81,19376,19505,C14O19406C22O19410C29O19435C30O19444C31O19455C44O19455C49O19492C51O19502,,
code-creation,LazyCompile,10,1568691,0x24050b2ab3e,51, node:internal/validators:191:40,0x3eae9abd138,~
code-source-info,0x24050b2ab3e,15,5871,6107,C14O5905C19O5910C25O5944C30O5975C43O5950C48O5944C50O6106,,
code-creation,LazyCompile,10,1568865,0x24050b2ac96,151, node:internal/validators:73:3,0x3eae9abcd80,~
code-source-info,0x24050b2ac96,15,1900,2288,C12O1920C25O1950C32O1984C38O2022C54O2028C59O2022C60O2082C65O2087C71O2118C87O2124C92O2118C93O2178C95O2188C102O2203C107O2217C117O2256C130O2269C143O2223C148O2217C150O2287,,
code-creation,LazyCompile,10,1569052,0x24050b2ae9e,103, node:internal/fs/utils:637:3,0x2bf990a2620,~
code-source-info,0x24050b2ae9e,81,17950,18340,C0O17991C1O18002C6O18016C22O18022C27O18016C28O18082C29O18093C34O18107C50O18113C55O18107C56O18173C58O18184C64O18193C69O18218C82O18308C95O18224C100O18218C102O18339,,
code-creation,LazyCompile,10,1569246,0x24050b2b1a6,151, node:internal/fs/utils:892:42,0x2bf990a2a80,~
code-source-info,0x24050b2b1a6,81,25170,25742,C0O25195C6O25236C14O25236C21O25285C27O25326C32O25349C35O25344C37O25341C47O25375C53O25382C56O25369C61O25398C77O25482C80O25477C98O25502C104O25509C117O25404C122O25398C125O25586C143O25592C148O25586C150O25741,,
code-creation,LazyCompile,10,1569538,0x24050b2b35e,47,closeSync node:fs:526:19,0x2bf990975d8,~
code-source-info,0x24050b2b35e,80,13812,13940,C0O13822C5O13827C11O13864C13O13871C18O13879C31O13879C36O13909C41O13909C46O13939,,
code-creation,LazyCompile,10,1569825,0x24050b2b496,162,toString node:buffer:783:46,0xc194f78fc0,~
code-source-info,0x24050b2b496,24,24080,24672,C0O24080C2O24122C8O24129C13O24155C20O24173C25O24155C31O24181C32O24209C37O24222C38O24232C43O24243C48O24262C50O24272C55O24285C57O24295C58O24309C65O24326C71O24355C76O24367C83O24391C90O24406C92O24414C97O24429C99O24439C100O24445C104O24490C109O24490C115O24512C116O24530C119O24530C124O24559C126O24587C133O24593C138O24587C139O24645C156O24645C161O24669,,
code-creation,LazyCompile,10,1570268,0x24050b2b756,499,getEncodingOps node:buffer:679:24,0xc194f78e18,~
code-source-info,0x24050b2b
code-creation,LazyCompile,10,1570870,0x24050b2bb3e,12,slice node:buffer:594:12,0xc194f777e0,~
code-source-info,0x24050b2bb3e,24,17229,17275,C0O17254C5O17254C11O17275,,
code-creation,LazyCompile,10,1572207,0x24050b2c646,499,Module._compile node:internal/modules/cjs/loader:1059:37,0x24dc49dbfb0,~
code-source-info,0x24050b2c
code-creation,LazyCompile,10,1572772,0x24050b2cbae,224,maybeCacheSourceMap node:internal/source_map/source_map_cache:74:29,0x24dc49d2ff8,~
code-source-info,0x24050b2cbae,108,2312,3375,C0O2382C3O2382C7O2409C10O2423C15O2427C23O2447C25O2467C26O2474C30O2489C35O2500C44O2498C54O2645C64O2645C68O2662C69O2669C70O2692C75O2719C80O2692C86O2799C88O2830C91O2858C96O2865C101O2830C107O2901C112O2921C117O2928C122O2951C126O2983C131O3001C136O3005C143O3035C150O3067C160O3098C166O3113C170O3001C178O3244C183O3262C188O3266C196O3300C206O3331C212O3346C216O3262C223O3374,,
code-creation,LazyCompile,10,1572980,0x24050b2d606,31,getSourceMapsEnabled node:internal/source_map/source_map_cache:43:30,0x24dc49d2f58,~
code-source-info,0x24050b2d606,108,1460,1610,C0O1468C6O1512C11O1533C17O1533C22O1512C26O1582C30O1607,,
code-creation,LazyCompile,10,1573147,0x24050b2d77e,100,setSourceMapsEnabled node:internal/source_map/source_map_cache:50:30,0x24dc49d2fa8,~
code-source-info,0x24050b2d77e,108,1643,2280,C0O1654C8O1654C13O1764C19O1764C24O1701C29O1728C34O1794C38O1824C42O1882C48O1882C53O1855C58O1939C64O1998C70O2161C76O2161C81O2133C86O2194C90O2253C92O2271C99O2279,,
code-creation,LazyCompile,10,1573301,0x24050b2d8f6,30,validateBoolean node:internal/validators:139:25,0x3eae9abcfb0,~
code-source-info,0x24050b2d8f6,15,4199,4313,C0O4218C6O4255C22O4261C27O4255C29O4312,,
code-creation,LazyCompile,10,1573592,0x24050b2dcee,165,wrapSafe node:internal/modules/cjs/loader:1017:18,0x24dc49db638,~
code-source-info,0x24050b2dcee,111,32708,33836,C0O32708C9O32752C17O32788C22O32795C27O32795C33O32815C40O32825C45O32842C52O32860C56O32952C64O32825C70O33229C74O33249C81O33259C86O33275C98O33397C102O33414C113O33259C118O33705C130O33730C135O33742C142O33753C147O33783C157O33783C162O33818C164O33818,,
code-creation,LazyCompile,10,1574224,0x24050b2e4c6,472,compileFunction node:vm:308:25,0x2bf990b4570,~
script-source,88,node:vm,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Symbol\x2C\x0d\n  PromiseReject\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ContextifyScript\x2C\x0d\n  MicrotaskQueue\x2C\x0d\n  makeContext\x2C\x0d\n  isContext: _isContext\x2C\x0d\n  constants\x2C\x0d\n  compileFunction: _compileFunction\x2C\x0d\n  measureMemory: _measureMemory\x2C\x0d\n} = internalBinding('contextify');\x0d\nconst {\x0d\n  ERR_CONTEXT_NOT_INITIALIZED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  kVmBreakFirstLineSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n} = require('internal/util');\x0d\nconst kParsingContext = Symbol('script parsing context');\x0d\n\x0d\nclass Script extends ContextifyScript {\x0d\n  constructor(code\x2C options = {}) {\x0d\n    code = `${code}`;\x0d\n    if (typeof options === 'string') {\x0d\n      options = { filename: options };\x0d\n    } else {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      filename = 'evalmachine.<anonymous>'\x2C\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      cachedData\x2C\x0d\n      produceCachedData = false\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      [kParsingContext]: parsingContext\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateString(filename\x2C 'options.filename');\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n    validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n\x0d\n    // Calling `ReThrow()` on a native TryCatch does not generate a new\x0d\n    // abort-on-uncaught-exception check. A dummy try/catch in JS land\x0d\n    // protects against that.\x0d\n    try { // eslint-disable-line no-useless-catch\x0d\n      super(code\x2C\x0d\n            filename\x2C\x0d\n            lineOffset\x2C\x0d\n            columnOffset\x2C\x0d\n            cachedData\x2C\x0d\n            produceCachedData\x2C\x0d\n            parsingContext);\x0d\n    } catch (e) {\x0d\n      throw e; /* node-do-not-add-exception-line */\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      validateFunction(importModuleDynamically\x2C\x0d\n                       'options.importModuleDynamically');\x0d\n      const { importModuleDynamicallyWrap } =\x0d\n        require('internal/vm/module');\x0d\n      const { callbackMap } = internalBinding('module_wrap');\x0d\n      callbackMap.set(this\x2C {\x0d\n        importModuleDynamically:\x0d\n          importModuleDynamicallyWrap(importModuleDynamically)\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  runInThisContext(options) {\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(options);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInThisContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInThisContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInContext(contextifiedObject\x2C options) {\x0d\n    validateContext(contextifiedObject);\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(options);\x0d\n    ArrayPrototypeUnshift(args\x2C contextifiedObject);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInNewContext(contextObject\x2C options) {\x0d\n    const context = createContext(contextObject\x2C getContextOptions(options));\x0d\n    return this.runInContext(context\x2C options);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction validateContext(contextifiedObject) {\x0d\n  if (!isContext(contextifiedObject)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('contextifiedObject'\x2C 'vm.Context'\x2C\x0d\n                                   contextifiedObject);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getRunInContextArgs(options = {}) {\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  let timeout = options.timeout;\x0d\n  if (timeout === undefined) {\x0d\n    timeout = -1;\x0d\n  } else {\x0d\n    validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    displayErrors = true\x2C\x0d\n    breakOnSigint = false\x2C\x0d\n    [kVmBreakFirstLineSymbol]: breakFirstLine = false\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateBoolean(displayErrors\x2C 'options.displayErrors');\x0d\n  validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n\x0d\n  return {\x0d\n    breakOnSigint\x2C\x0d\n    args: [timeout\x2C displayErrors\x2C breakOnSigint\x2C breakFirstLine]\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction getContextOptions(options) {\x0d\n  if (!options)\x0d\n    return {};\x0d\n  const contextOptions = {\x0d\n    name: options.contextName\x2C\x0d\n    origin: options.contextOrigin\x2C\x0d\n    codeGeneration: undefined\x2C\x0d\n    microtaskMode: options.microtaskMode\x2C\x0d\n  };\x0d\n  if (contextOptions.name !== undefined)\x0d\n    validateString(contextOptions.name\x2C 'options.contextName');\x0d\n  if (contextOptions.origin !== undefined)\x0d\n    validateString(contextOptions.origin\x2C 'options.contextOrigin');\x0d\n  if (options.contextCodeGeneration !== undefined) {\x0d\n    validateObject(options.contextCodeGeneration\x2C\x0d\n                   'options.contextCodeGeneration');\x0d\n    const { strings\x2C wasm } = options.contextCodeGeneration;\x0d\n    if (strings !== undefined)\x0d\n      validateBoolean(strings\x2C 'options.contextCodeGeneration.strings');\x0d\n    if (wasm !== undefined)\x0d\n      validateBoolean(wasm\x2C 'options.contextCodeGeneration.wasm');\x0d\n    contextOptions.codeGeneration = { strings\x2C wasm };\x0d\n  }\x0d\n  if (options.microtaskMode !== undefined)\x0d\n    validateString(options.microtaskMode\x2C 'options.microtaskMode');\x0d\n  return contextOptions;\x0d\n}\x0d\n\x0d\nfunction isContext(object) {\x0d\n  validateObject(object\x2C 'object'\x2C { allowArray: true });\x0d\n\x0d\n  return _isContext(object);\x0d\n}\x0d\n\x0d\nlet defaultContextNameIndex = 1;\x0d\nfunction createContext(contextObject = {}\x2C options = {}) {\x0d\n  if (isContext(contextObject)) {\x0d\n    return contextObject;\x0d\n  }\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  const {\x0d\n    name = `VM Context ${defaultContextNameIndex++}`\x2C\x0d\n    origin\x2C\x0d\n    codeGeneration\x2C\x0d\n    microtaskMode\x0d\n  } = options;\x0d\n\x0d\n  validateString(name\x2C 'options.name');\x0d\n  if (origin !== undefined)\x0d\n    validateString(origin\x2C 'options.origin');\x0d\n  if (codeGeneration !== undefined)\x0d\n    validateObject(codeGeneration\x2C 'options.codeGeneration');\x0d\n\x0d\n  let strings = true;\x0d\n  let wasm = true;\x0d\n  if (codeGeneration !== undefined) {\x0d\n    ({ strings = true\x2C wasm = true } = codeGeneration);\x0d\n    validateBoolean(strings\x2C 'options.codeGeneration.strings');\x0d\n    validateBoolean(wasm\x2C 'options.codeGeneration.wasm');\x0d\n  }\x0d\n\x0d\n  let microtaskQueue = null;\x0d\n  if (microtaskMode !== undefined) {\x0d\n    validateOneOf(microtaskMode\x2C 'options.microtaskMode'\x2C\x0d\n                  ['afterEvaluate'\x2C undefined]);\x0d\n\x0d\n    if (microtaskMode === 'afterEvaluate')\x0d\n      microtaskQueue = new MicrotaskQueue();\x0d\n  }\x0d\n\x0d\n  makeContext(contextObject\x2C name\x2C origin\x2C strings\x2C wasm\x2C microtaskQueue);\x0d\n  return contextObject;\x0d\n}\x0d\n\x0d\nfunction createScript(code\x2C options) {\x0d\n  return new Script(code\x2C options);\x0d\n}\x0d\n\x0d\n// Remove all SIGINT listeners and re-attach them after the wrapped function\x0d\n// has executed\x2C so that caught SIGINT are handled by the listeners again.\x0d\nfunction sigintHandlersWrap(fn\x2C thisArg\x2C argsArray) {\x0d\n  const sigintListeners = process.rawListeners('SIGINT');\x0d\n\x0d\n  process.removeAllListeners('SIGINT');\x0d\n\x0d\n  try {\x0d\n    return ReflectApply(fn\x2C thisArg\x2C argsArray);\x0d\n  } finally {\x0d\n    // Add using the public methods so that the `newListener` handler of\x0d\n    // process can re-attach the listeners.\x0d\n    ArrayPrototypeForEach(sigintListeners\x2C (listener) => {\x0d\n      process.addListener('SIGINT'\x2C listener);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction runInContext(code\x2C contextifiedObject\x2C options) {\x0d\n  validateContext(contextifiedObject);\x0d\n  if (typeof options === 'string') {\x0d\n    options = {\x0d\n      filename: options\x2C\x0d\n      [kParsingContext]: contextifiedObject\x0d\n    };\x0d\n  } else {\x0d\n    options = { ...options\x2C [kParsingContext]: contextifiedObject };\x0d\n  }\x0d\n  return createScript(code\x2C options)\x0d\n    .runInContext(contextifiedObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInNewContext(code\x2C contextObject\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  contextObject = createContext(contextObject\x2C getContextOptions(options));\x0d\n  options = { ...options\x2C [kParsingContext]: contextObject };\x0d\n  return createScript(code\x2C options).runInNewContext(contextObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInThisContext(code\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  return createScript(code\x2C options).runInThisContext(options);\x0d\n}\x0d\n\x0d\nfunction compileFunction(code\x2C params\x2C options = {}) {\x0d\n  validateString(code\x2C 'code');\x0d\n  if (params !== undefined) {\x0d\n    validateArray(params\x2C 'params');\x0d\n    ArrayPrototypeForEach(params\x2C\x0d\n                          (param\x2C i) => validateString(param\x2C `params[${i}]`));\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    filename = ''\x2C\x0d\n    columnOffset = 0\x2C\x0d\n    lineOffset = 0\x2C\x0d\n    cachedData = undefined\x2C\x0d\n    produceCachedData = false\x2C\x0d\n    parsingContext = undefined\x2C\x0d\n    contextExtensions = []\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateString(filename\x2C 'options.filename');\x0d\n  validateUint32(columnOffset\x2C 'options.columnOffset');\x0d\n  validateUint32(lineOffset\x2C 'options.lineOffset');\x0d\n  if (cachedData !== undefined)\x0d\n    validateBuffer(cachedData\x2C 'options.cachedData');\x0d\n  validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n  if (parsingContext !== undefined) {\x0d\n    if (\x0d\n      typeof parsingContext !== 'object' ||\x0d\n      parsingContext === null ||\x0d\n      !isContext(parsingContext)\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.parsingContext'\x2C\x0d\n        'Context'\x2C\x0d\n        parsingContext\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  validateArray(contextExtensions\x2C 'options.contextExtensions');\x0d\n  ArrayPrototypeForEach(contextExtensions\x2C (extension\x2C i) => {\x0d\n    const name = `options.contextExtensions[${i}]`;\x0d\n    validateObject(extension\x2C name\x2C { nullable: true });\x0d\n  });\x0d\n\x0d\n  const result = _compileFunction(\x0d\n    code\x2C\x0d\n    filename\x2C\x0d\n    lineOffset\x2C\x0d\n    columnOffset\x2C\x0d\n    cachedData\x2C\x0d\n    produceCachedData\x2C\x0d\n    parsingContext\x2C\x0d\n    contextExtensions\x2C\x0d\n    params\x0d\n  );\x0d\n\x0d\n  if (produceCachedData) {\x0d\n    result.function.cachedDataProduced = result.cachedDataProduced;\x0d\n  }\x0d\n\x0d\n  if (result.cachedData) {\x0d\n    result.function.cachedData = result.cachedData;\x0d\n  }\x0d\n\x0d\n  if (importModuleDynamically !== undefined) {\x0d\n    validateFunction(importModuleDynamically\x2C\x0d\n                     'options.importModuleDynamically');\x0d\n    const { importModuleDynamicallyWrap } =\x0d\n      require('internal/vm/module');\x0d\n    const { callbackMap } = internalBinding('module_wrap');\x0d\n    const wrapped = importModuleDynamicallyWrap(importModuleDynamically);\x0d\n    const func = result.function;\x0d\n    callbackMap.set(result.cacheKey\x2C {\x0d\n      importModuleDynamically: (s\x2C _k\x2C i) => wrapped(s\x2C func\x2C i)\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  return result.function;\x0d\n}\x0d\n\x0d\nconst measureMemoryModes = {\x0d\n  summary: constants.measureMemory.mode.SUMMARY\x2C\x0d\n  detailed: constants.measureMemory.mode.DETAILED\x2C\x0d\n};\x0d\n\x0d\nconst measureMemoryExecutions = {\x0d\n  default: constants.measureMemory.execution.DEFAULT\x2C\x0d\n  eager: constants.measureMemory.execution.EAGER\x2C\x0d\n};\x0d\n\x0d\nfunction measureMemory(options = {}) {\x0d\n  emitExperimentalWarning('vm.measureMemory');\x0d\n  validateObject(options\x2C 'options');\x0d\n  const { mode = 'summary'\x2C execution = 'default' } = options;\x0d\n  validateOneOf(mode\x2C 'options.mode'\x2C ['summary'\x2C 'detailed']);\x0d\n  validateOneOf(execution\x2C 'options.execution'\x2C ['default'\x2C 'eager']);\x0d\n  const result = _measureMemory(measureMemoryModes[mode]\x2C\x0d\n                                measureMemoryExecutions[execution]);\x0d\n  if (result === undefined) {\x0d\n    return PromiseReject(new ERR_CONTEXT_NOT_INITIALIZED());\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Script\x2C\x0d\n  createContext\x2C\x0d\n  createScript\x2C\x0d\n  runInContext\x2C\x0d\n  runInNewContext\x2C\x0d\n  runInThisContext\x2C\x0d\n  isContext\x2C\x0d\n  compileFunction\x2C\x0d\n  measureMemory\x2C\x0d\n};\x0d\n\x0d\n// The vm module is patched to include vm.Module\x2C vm.SourceTextModule\x0d\n// and vm.SyntheticModule in the pre-execution phase when\x0d\n// --experimental-vm-modules is on.\x0d\n
code-source-info,0x24050b2e4c
code-creation,LazyCompile,10,1577015,0x24050b2f68e,95, node:internal/validators:168:39,0x3eae9abd070,~
code-source-info,0x24050b2f68e,15,5152,5438,C16O5189C21O5194C27O5222C43O5228C48O5222C49O5294C56O5301C61O5336C66O5359C71O5377C87O5383C92O5377C94O5437,,
code-creation,LazyCompile,10,1577171,0x24050b2f7ee,27, node:vm:313:27,0x24050b2e198,~
code-source-info,0x24050b2f7ee,88,10064,10115,C0O10078C10O10110C21O10078C26O10115,,
code-creation,Eval,10,1577343,0x24050b2fa66,5, C:\\Users\\jerso\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\no-cluster.js:1:1,0x24050b2f920,~
script-source,133,C:\\Users\\jerso\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\no-cluster.js,const cluster = require('cluster')\n\ncluster.on('fork'\x2C () => {\n  throw new Error('0x does not support clustering.')\n})\n
code-source-info,0x24050b2fa66,133,0,119,C0O0C4O119,,
code-creation,Function,10,1577464,0x24050b2fb4e,29, C:\\Users\\jerso\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\no-cluster.js:1:1,0x24050b2f9e0,~
code-source-info,0x24050b2fb4e,133,0,119,C0O16C3O16C8O44C21O44C28O118,,
code-creation,LazyCompile,10,1577782,0x24050b2fdc6,19,importModuleDynamicallyWrap node:internal/vm/module:435:37,0x24050b0bb88,~
code-source-info,0x24050b2fdc6,131,12139,12597,C0O12139C13O12209C18O12594,,
code-creation,LazyCompile,10,1578127,0x24050b30f9e,159,makeRequireFunction node:internal/modules/cjs/helpers:58:29,0x24dc49d5b28,~
code-source-info,0x24050b30f9e,110,1765,3805,C0O1765C22O1802C25O1806C29O1802C31O1828C33O1840C53O1873C58O1877C69O1893C73O1873C75O1921C81O1921C83O1949C89O1958C95O1987C104O3182C109O3423C111O3439C115O3586C117O3600C121O3614C126O3637C130O3627C134O3705C137O3733C141O3724C145O3751C148O3774C152O3765C156O3787C158O3802,,
code-creation,LazyCompile,10,1578538,0x24050b311ee,14,require node:internal/modules/cjs/helpers:101:31,0x24050b30e70,~
code-source-info,0x24050b311ee,110,3208,3256,C0O3224C3O3235C8O3235C13O3249,,
code-creation,LazyCompile,10,1578694,0x24050b3132e,10, node:internal/modules/cjs/helpers:29:66,0x24dc49d5cf8,~
code-source-info,0x24050b3132e,110,838,865,C0O851C2O857C9O864,,
code-creation,LazyCompile,10,1578882,0x24050b314a6,129,compileForPublicLoader node:internal/bootstrap/loaders:246:25,0x3eae9a8fb98,~
code-source-info,0x24050b314a6,9,7789,8477,C0O7809C6O7956C16O7999C33O7962C38O7956C39O8038C44O8038C48O8081C54O8273C61O8304C69O8273C75O8329C80O8347C90O8363C93O8379C98O8363C102O8345C106O8406C111O8406C115O8432C120O8432C124O8464C128O8472,,
code-creation,Eval,10,1579084,0x24050b31806,5, node:cluster:1:1,0x24050b316c0,~
script-source,134,node:cluster,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst childOrPrimary = 'NODE_UNIQUE_ID' in process.env ? 'child' : 'primary';\x0d\nmodule.exports = require(`internal/cluster/${childOrPrimary}`);\x0d\n
code-source-info,0x24050b31806,134,0,1316,C0O0C4O1316,,
code-creation,Function,10,1579423,0x24050b318ae,39, node:cluster:1:1,0x24050b31780,~
code-source-info,0x24050b318ae,134,0,1316,C0O1195C3O1223C7O1212C19O1251C24O1296C29O1268C33O1266C38O1315,,
code-creation,Eval,10,1580596,0x24050b3246e,5, node:internal/cluster/primary:1:1,0x24050b320e8,~
script-source,135,node:internal/cluster/primary,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectValues\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst { fork } = require('child_process');\x0d\nconst path = require('path');\x0d\nconst EventEmitter = require('events');\x0d\nconst RoundRobinHandle = require('internal/cluster/round_robin_handle');\x0d\nconst SharedHandle = require('internal/cluster/shared_handle');\x0d\nconst Worker = require('internal/cluster/worker');\x0d\nconst { internal\x2C sendHelper } = require('internal/cluster/utils');\x0d\nconst cluster = new EventEmitter();\x0d\nconst intercom = new EventEmitter();\x0d\nconst SCHED_NONE = 1;\x0d\nconst SCHED_RR = 2;\x0d\nconst minPort = 1024;\x0d\nconst maxPort = 65535;\x0d\nconst { validatePort } = require('internal/validators');\x0d\n\x0d\nmodule.exports = cluster;\x0d\n\x0d\nconst handles = new SafeMap();\x0d\ncluster.isWorker = false;\x0d\ncluster.isMaster = true; // Deprecated alias. Must be same as isPrimary.\x0d\ncluster.isPrimary = true;\x0d\ncluster.Worker = Worker;\x0d\ncluster.workers = {};\x0d\ncluster.settings = {};\x0d\ncluster.SCHED_NONE = SCHED_NONE;  // Leave it to the operating system.\x0d\ncluster.SCHED_RR = SCHED_RR;      // Primary distributes connections.\x0d\n\x0d\nlet ids = 0;\x0d\nlet debugPortOffset = 1;\x0d\nlet initialized = false;\x0d\n\x0d\n// XXX(bnoordhuis) Fold cluster.schedulingPolicy into cluster.settings?\x0d\nlet schedulingPolicy = process.env.NODE_CLUSTER_SCHED_POLICY;\x0d\nif (schedulingPolicy === 'rr')\x0d\n  schedulingPolicy = SCHED_RR;\x0d\nelse if (schedulingPolicy === 'none')\x0d\n  schedulingPolicy = SCHED_NONE;\x0d\nelse if (process.platform === 'win32') {\x0d\n  // Round-robin doesn't perform well on\x0d\n  // Windows due to the way IOCP is wired up.\x0d\n  schedulingPolicy = SCHED_NONE;\x0d\n} else\x0d\n  schedulingPolicy = SCHED_RR;\x0d\n\x0d\ncluster.schedulingPolicy = schedulingPolicy;\x0d\n\x0d\ncluster.setupPrimary = function(options) {\x0d\n  const settings = {\x0d\n    args: ArrayPrototypeSlice(process.argv\x2C 2)\x2C\x0d\n    exec: process.argv[1]\x2C\x0d\n    execArgv: process.execArgv\x2C\x0d\n    silent: false\x2C\x0d\n    ...cluster.settings\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Tell V8 to write profile data for each process to a separate file.\x0d\n  // Without --logfile=v8-%p.log\x2C everything ends up in a single\x2C unusable\x0d\n  // file. (Unusable because what V8 logs are memory addresses and each\x0d\n  // process has its own memory mappings.)\x0d\n  if (ArrayPrototypeSome(settings.execArgv\x2C\x0d\n                         (s) => StringPrototypeStartsWith(s\x2C '--prof')) &&\x0d\n      !ArrayPrototypeSome(settings.execArgv\x2C\x0d\n                          (s) => StringPrototypeStartsWith(s\x2C '--logfile='))) {\x0d\n    settings.execArgv = [...settings.execArgv\x2C '--logfile=v8-%p.log'];\x0d\n  }\x0d\n\x0d\n  cluster.settings = settings;\x0d\n\x0d\n  if (initialized === true)\x0d\n    return process.nextTick(setupSettingsNT\x2C settings);\x0d\n\x0d\n  initialized = true;\x0d\n  schedulingPolicy = cluster.schedulingPolicy;  // Freeze policy.\x0d\n  assert(schedulingPolicy === SCHED_NONE || schedulingPolicy === SCHED_RR\x2C\x0d\n         `Bad cluster.schedulingPolicy: ${schedulingPolicy}`);\x0d\n\x0d\n  process.nextTick(setupSettingsNT\x2C settings);\x0d\n\x0d\n  process.on('internalMessage'\x2C (message) => {\x0d\n    if (message.cmd !== 'NODE_DEBUG_ENABLED')\x0d\n      return;\x0d\n\x0d\n    for (const worker of ObjectValues(cluster.workers)) {\x0d\n      if (worker.state === 'online' || worker.state === 'listening') {\x0d\n        process._debugProcess(worker.process.pid);\x0d\n      } else {\x0d\n        worker.once('online'\x2C function() {\x0d\n          process._debugProcess(this.process.pid);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n// Deprecated alias must be same as setupPrimary\x0d\ncluster.setupMaster = cluster.setupPrimary;\x0d\n\x0d\nfunction setupSettingsNT(settings) {\x0d\n  cluster.emit('setup'\x2C settings);\x0d\n}\x0d\n\x0d\nfunction createWorkerProcess(id\x2C env) {\x0d\n  const workerEnv = { ...process.env\x2C ...env\x2C NODE_UNIQUE_ID: `${id}` };\x0d\n  const execArgv = [...cluster.settings.execArgv];\x0d\n  const debugArgRegex = /--inspect(?:-brk|-port)?|--debug-port/;\x0d\n  const nodeOptions = process.env.NODE_OPTIONS || '';\x0d\n\x0d\n  if (ArrayPrototypeSome(execArgv\x2C\x0d\n                         (arg) => RegExpPrototypeTest(debugArgRegex\x2C arg)) ||\x0d\n      RegExpPrototypeTest(debugArgRegex\x2C nodeOptions)) {\x0d\n    let inspectPort;\x0d\n    if ('inspectPort' in cluster.settings) {\x0d\n      if (typeof cluster.settings.inspectPort === 'function')\x0d\n        inspectPort = cluster.settings.inspectPort();\x0d\n      else\x0d\n        inspectPort = cluster.settings.inspectPort;\x0d\n\x0d\n      validatePort(inspectPort);\x0d\n    } else {\x0d\n      inspectPort = process.debugPort + debugPortOffset;\x0d\n      if (inspectPort > maxPort)\x0d\n        inspectPort = inspectPort - maxPort + minPort - 1;\x0d\n      debugPortOffset++;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(execArgv\x2C `--inspect-port=${inspectPort}`);\x0d\n  }\x0d\n\x0d\n  return fork(cluster.settings.exec\x2C cluster.settings.args\x2C {\x0d\n    cwd: cluster.settings.cwd\x2C\x0d\n    env: workerEnv\x2C\x0d\n    serialization: cluster.settings.serialization\x2C\x0d\n    silent: cluster.settings.silent\x2C\x0d\n    windowsHide: cluster.settings.windowsHide\x2C\x0d\n    execArgv: execArgv\x2C\x0d\n    stdio: cluster.settings.stdio\x2C\x0d\n    gid: cluster.settings.gid\x2C\x0d\n    uid: cluster.settings.uid\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction removeWorker(worker) {\x0d\n  assert(worker);\x0d\n  delete cluster.workers[worker.id];\x0d\n\x0d\n  if (ObjectKeys(cluster.workers).length === 0) {\x0d\n    assert(handles.size === 0\x2C 'Resource leak detected.');\x0d\n    intercom.emit('disconnect');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeHandlesForWorker(worker) {\x0d\n  assert(worker);\x0d\n\x0d\n  handles.forEach((handle\x2C key) => {\x0d\n    if (handle.remove(worker))\x0d\n      handles.delete(key);\x0d\n  });\x0d\n}\x0d\n\x0d\ncluster.fork = function(env) {\x0d\n  cluster.setupPrimary();\x0d\n  const id = ++ids;\x0d\n  const workerProcess = createWorkerProcess(id\x2C env);\x0d\n  const worker = new Worker({\x0d\n    id: id\x2C\x0d\n    process: workerProcess\x0d\n  });\x0d\n\x0d\n  worker.on('message'\x2C function(message\x2C handle) {\x0d\n    cluster.emit('message'\x2C this\x2C message\x2C handle);\x0d\n  });\x0d\n\x0d\n  worker.process.once('exit'\x2C (exitCode\x2C signalCode) => {\x0d\n    /*\x0d\n     * Remove the worker from the workers list only\x0d\n     * if it has disconnected\x2C otherwise we might\x0d\n     * still want to access it.\x0d\n     */\x0d\n    if (!worker.isConnected()) {\x0d\n      removeHandlesForWorker(worker);\x0d\n      removeWorker(worker);\x0d\n    }\x0d\n\x0d\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\x0d\n    worker.state = 'dead';\x0d\n    worker.emit('exit'\x2C exitCode\x2C signalCode);\x0d\n    cluster.emit('exit'\x2C worker\x2C exitCode\x2C signalCode);\x0d\n  });\x0d\n\x0d\n  worker.process.once('disconnect'\x2C () => {\x0d\n    /*\x0d\n     * Now is a good time to remove the handles\x0d\n     * associated with this worker because it is\x0d\n     * not connected to the primary anymore.\x0d\n     */\x0d\n    removeHandlesForWorker(worker);\x0d\n\x0d\n    /*\x0d\n     * Remove the worker from the workers list only\x0d\n     * if its process has exited. Otherwise\x2C we might\x0d\n     * still want to access it.\x0d\n     */\x0d\n    if (worker.isDead())\x0d\n      removeWorker(worker);\x0d\n\x0d\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\x0d\n    worker.state = 'disconnected';\x0d\n    worker.emit('disconnect');\x0d\n    cluster.emit('disconnect'\x2C worker);\x0d\n  });\x0d\n\x0d\n  worker.process.on('internalMessage'\x2C internal(worker\x2C onmessage));\x0d\n  process.nextTick(emitForkNT\x2C worker);\x0d\n  cluster.workers[worker.id] = worker;\x0d\n  return worker;\x0d\n};\x0d\n\x0d\nfunction emitForkNT(worker) {\x0d\n  cluster.emit('fork'\x2C worker);\x0d\n}\x0d\n\x0d\ncluster.disconnect = function(cb) {\x0d\n  const workers = ObjectKeys(cluster.workers);\x0d\n\x0d\n  if (workers.length === 0) {\x0d\n    process.nextTick(() => intercom.emit('disconnect'));\x0d\n  } else {\x0d\n    for (const worker of ObjectValues(cluster.workers)) {\x0d\n      if (worker.isConnected()) {\x0d\n        worker.disconnect();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof cb === 'function')\x0d\n    intercom.once('disconnect'\x2C cb);\x0d\n};\x0d\n\x0d\nconst methodMessageMapping = {\x0d\n  close\x2C\x0d\n  exitedAfterDisconnect\x2C\x0d\n  listening\x2C\x0d\n  online\x2C\x0d\n  queryServer\x2C\x0d\n};\x0d\n\x0d\nfunction onmessage(message\x2C handle) {\x0d\n  const worker = this;\x0d\n\x0d\n  const fn = methodMessageMapping[message.act];\x0d\n\x0d\n  if (typeof fn === 'function')\x0d\n    fn(worker\x2C message);\x0d\n}\x0d\n\x0d\nfunction online(worker) {\x0d\n  worker.state = 'online';\x0d\n  worker.emit('online');\x0d\n  cluster.emit('online'\x2C worker);\x0d\n}\x0d\n\x0d\nfunction exitedAfterDisconnect(worker\x2C message) {\x0d\n  worker.exitedAfterDisconnect = true;\x0d\n  send(worker\x2C { ack: message.seq });\x0d\n}\x0d\n\x0d\nfunction queryServer(worker\x2C message) {\x0d\n  // Stop processing if worker already disconnecting\x0d\n  if (worker.exitedAfterDisconnect)\x0d\n    return;\x0d\n\x0d\n  const key = `${message.address}:${message.port}:${message.addressType}:` +\x0d\n              `${message.fd}:${message.index}`;\x0d\n  let handle = handles.get(key);\x0d\n\x0d\n  if (handle === undefined) {\x0d\n    let address = message.address;\x0d\n\x0d\n    // Find shortest path for unix sockets because of the ~100 byte limit\x0d\n    if (message.port < 0 && typeof address === 'string' &&\x0d\n        process.platform !== 'win32') {\x0d\n\x0d\n      address = path.relative(process.cwd()\x2C address);\x0d\n\x0d\n      if (message.address.length < address.length)\x0d\n        address = message.address;\x0d\n    }\x0d\n\x0d\n    // UDP is exempt from round-robin connection balancing for what should\x0d\n    // be obvious reasons: it's connectionless. There is nothing to send to\x0d\n    // the workers except raw datagrams and that's pointless.\x0d\n    if (schedulingPolicy !== SCHED_RR ||\x0d\n        message.addressType === 'udp4' ||\x0d\n        message.addressType === 'udp6') {\x0d\n      handle = new SharedHandle(key\x2C address\x2C message);\x0d\n    } else {\x0d\n      handle = new RoundRobinHandle(key\x2C address\x2C message);\x0d\n    }\x0d\n\x0d\n    handles.set(key\x2C handle);\x0d\n  }\x0d\n\x0d\n  if (!handle.data)\x0d\n    handle.data = message.data;\x0d\n\x0d\n  // Set custom server data\x0d\n  handle.add(worker\x2C (errno\x2C reply\x2C handle) => {\x0d\n    const { data } = handles.get(key);\x0d\n\x0d\n    if (errno)\x0d\n      handles.delete(key);  // Gives other workers a chance to retry.\x0d\n\x0d\n    send(worker\x2C {\x0d\n      errno\x2C\x0d\n      key\x2C\x0d\n      ack: message.seq\x2C\x0d\n      data\x2C\x0d\n      ...reply\x0d\n    }\x2C handle);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction listening(worker\x2C message) {\x0d\n  const info = {\x0d\n    addressType: message.addressType\x2C\x0d\n    address: message.address\x2C\x0d\n    port: message.port\x2C\x0d\n    fd: message.fd\x0d\n  };\x0d\n\x0d\n  worker.state = 'listening';\x0d\n  worker.emit('listening'\x2C info);\x0d\n  cluster.emit('listening'\x2C worker\x2C info);\x0d\n}\x0d\n\x0d\n// Server in worker is closing\x2C remove from list. The handle may have been\x0d\n// removed by a prior call to removeHandlesForWorker() so guard against that.\x0d\nfunction close(worker\x2C message) {\x0d\n  const key = message.key;\x0d\n  const handle = handles.get(key);\x0d\n\x0d\n  if (handle && handle.remove(worker))\x0d\n    handles.delete(key);\x0d\n}\x0d\n\x0d\nfunction send(worker\x2C message\x2C handle\x2C cb) {\x0d\n  return sendHelper(worker.process\x2C message\x2C handle\x2C cb);\x0d\n}\x0d\n\x0d\n// Extend generic Worker with methods specific to the primary process.\x0d\nWorker.prototype.disconnect = function() {\x0d\n  this.exitedAfterDisconnect = true;\x0d\n  send(this\x2C { act: 'disconnect' });\x0d\n  removeHandlesForWorker(this);\x0d\n  removeWorker(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nWorker.prototype.destroy = function(signo) {\x0d\n  const proc = this.process;\x0d\n\x0d\n  signo = signo || 'SIGTERM';\x0d\n\x0d\n  if (this.isConnected()) {\x0d\n    this.once('disconnect'\x2C () => proc.kill(signo));\x0d\n    this.disconnect();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  proc.kill(signo);\x0d\n};\x0d\n
code-source-info,0x24050b3246e,135,0,11181,C0O0C4O11181,,
tick,0x7ff7dd850a52,1583326,1,0x7ff7dd90e150,3,0x7ff7de2559a0,0x22e32684e3b,0x22e326848e5,0x24050b318cb,0x22e32684f03,0x24050b314d2,0x24050b2730b,0x24050b15ebe,0x24050b15af2,0x24050b311f6,0x24050b2fb51,0x24050b2c811,0x24050b287db,0x24050b27cde,0x24050b15f27,0x24050b15af2,0x24050b149a3,0x24050b1474d,0x22cec14654c,0x22cec142065
code-creation,Function,10,1583463,0x24050b32e36,640, node:internal/cluster/primary:1:1,0x24050b323e8,~
code-source-info,0x24050b32e
code-creation,Eval,10,1584618,0x24050b3447e,5, node:internal/cluster/round_robin_handle:1:1,0x24050b34268,~
script-source,136,node:internal/cluster/round_robin_handle,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  Boolean\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst net = require('net');\x0d\nconst { sendHelper } = require('internal/cluster/utils');\x0d\nconst { append\x2C init\x2C isEmpty\x2C peek\x2C remove } = require('internal/linkedlist');\x0d\nconst { constants } = internalBinding('tcp_wrap');\x0d\n\x0d\nmodule.exports = RoundRobinHandle;\x0d\n\x0d\nfunction RoundRobinHandle(key\x2C address\x2C { port\x2C fd\x2C flags\x2C backlog }) {\x0d\n  this.key = key;\x0d\n  this.all = new SafeMap();\x0d\n  this.free = new SafeMap();\x0d\n  this.handles = init(ObjectCreate(null));\x0d\n  this.handle = null;\x0d\n  this.server = net.createServer(assert.fail);\x0d\n\x0d\n  if (fd >= 0)\x0d\n    this.server.listen({ fd\x2C backlog });\x0d\n  else if (port >= 0) {\x0d\n    this.server.listen({\x0d\n      port\x2C\x0d\n      host: address\x2C\x0d\n      // Currently\x2C net module only supports `ipv6Only` option in `flags`.\x0d\n      ipv6Only: Boolean(flags & constants.UV_TCP_IPV6ONLY)\x2C\x0d\n      backlog\x2C\x0d\n    });\x0d\n  } else\x0d\n    this.server.listen(address\x2C backlog);  // UNIX socket path.\x0d\n\x0d\n  this.server.once('listening'\x2C () => {\x0d\n    this.handle = this.server._handle;\x0d\n    this.handle.onconnection = (err\x2C handle) => this.distribute(err\x2C handle);\x0d\n    this.server._handle = null;\x0d\n    this.server = null;\x0d\n  });\x0d\n}\x0d\n\x0d\nRoundRobinHandle.prototype.add = function(worker\x2C send) {\x0d\n  assert(this.all.has(worker.id) === false);\x0d\n  this.all.set(worker.id\x2C worker);\x0d\n\x0d\n  const done = () => {\x0d\n    if (this.handle.getsockname) {\x0d\n      const out = {};\x0d\n      this.handle.getsockname(out);\x0d\n      // TODO(bnoordhuis) Check err.\x0d\n      send(null\x2C { sockname: out }\x2C null);\x0d\n    } else {\x0d\n      send(null\x2C null\x2C null);  // UNIX socket.\x0d\n    }\x0d\n\x0d\n    this.handoff(worker);  // In case there are connections pending.\x0d\n  };\x0d\n\x0d\n  if (this.server === null)\x0d\n    return done();\x0d\n\x0d\n  // Still busy binding.\x0d\n  this.server.once('listening'\x2C done);\x0d\n  this.server.once('error'\x2C (err) => {\x0d\n    send(err.errno\x2C null);\x0d\n  });\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.remove = function(worker) {\x0d\n  const existed = this.all.delete(worker.id);\x0d\n\x0d\n  if (!existed)\x0d\n    return false;\x0d\n\x0d\n  this.free.delete(worker.id);\x0d\n\x0d\n  if (this.all.size !== 0)\x0d\n    return false;\x0d\n\x0d\n  while (!isEmpty(this.handles)) {\x0d\n    const handle = peek(this.handles);\x0d\n    handle.close();\x0d\n    remove(handle);\x0d\n  }\x0d\n\x0d\n  this.handle.close();\x0d\n  this.handle = null;\x0d\n  return true;\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.distribute = function(err\x2C handle) {\x0d\n  append(this.handles\x2C handle);\x0d\n  // eslint-disable-next-line node-core/no-array-destructuring\x0d\n  const [ workerEntry ] = this.free; // this.free is a SafeMap\x0d\n\x0d\n  if (ArrayIsArray(workerEntry)) {\x0d\n    const { 0: workerId\x2C 1: worker } = workerEntry;\x0d\n    this.free.delete(workerId);\x0d\n    this.handoff(worker);\x0d\n  }\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.handoff = function(worker) {\x0d\n  if (!this.all.has(worker.id)) {\x0d\n    return;  // Worker is closing (or has closed) the server.\x0d\n  }\x0d\n\x0d\n  const handle = peek(this.handles);\x0d\n\x0d\n  if (handle === null) {\x0d\n    this.free.set(worker.id\x2C worker);  // Add to ready queue again.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  remove(handle);\x0d\n\x0d\n  const message = { act: 'newconn'\x2C key: this.key };\x0d\n\x0d\n  sendHelper(worker.process\x2C message\x2C handle\x2C (reply) => {\x0d\n    if (reply.accepted)\x0d\n      handle.close();\x0d\n    else\x0d\n      this.distribute(0\x2C handle);  // Worker is shutting down. Send to another.\x0d\n\x0d\n    this.handoff(worker);\x0d\n  });\x0d\n};\x0d\n
code-source-info,0x24050b3447e,136,0,3423,C0O0C4O3423,,
code-creation,Function,10,1585635,0x24050b34846,217, node:internal/cluster/round_robin_handle:1:1,0x24050b343f8,~
code-source-info,0x24050b34846,136,0,3423,C0O0C49O28C55O45C61O57C67O74C73O119C76O119C80O119C82O160C85O160C89O160C91O200C94O200C99O185C105O284C108O284C113O244C119O252C125O258C131O267C137O273C143O339C146O339C151O325C157O371C159O386C163O1307C172O1321C176O1999C185O2016C189O2419C198O2440C202O2807C211O2825C216O3422,,
code-creation,Eval,10,1586214,0x24050b35166,5, node:internal/cluster/utils:1:1,0x24050b34ff0,~
script-source,137,node:internal/cluster/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ReflectApply\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = {\x0d\n  sendHelper\x2C\x0d\n  internal\x0d\n};\x0d\n\x0d\nconst callbacks = new SafeMap();\x0d\nlet seq = 0;\x0d\n\x0d\nfunction sendHelper(proc\x2C message\x2C handle\x2C cb) {\x0d\n  if (!proc.connected)\x0d\n    return false;\x0d\n\x0d\n  // Mark message as internal. See INTERNAL_PREFIX\x0d\n  // in lib/internal/child_process.js\x0d\n  message = { cmd: 'NODE_CLUSTER'\x2C ...message\x2C seq };\x0d\n\x0d\n  if (typeof cb === 'function')\x0d\n    callbacks.set(seq\x2C cb);\x0d\n\x0d\n  seq += 1;\x0d\n  return proc.send(message\x2C handle);\x0d\n}\x0d\n\x0d\n// Returns an internalMessage listener that hands off normal messages\x0d\n// to the callback but intercepts and redirects ACK messages.\x0d\nfunction internal(worker\x2C cb) {\x0d\n  return function onInternalMessage(message\x2C handle) {\x0d\n    if (message.cmd !== 'NODE_CLUSTER')\x0d\n      return;\x0d\n\x0d\n    let fn = cb;\x0d\n\x0d\n    if (message.ack !== undefined) {\x0d\n      const callback = callbacks.get(message.ack);\x0d\n\x0d\n      if (callback !== undefined) {\x0d\n        fn = callback;\x0d\n        callbacks.delete(message.ack);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    ReflectApply(fn\x2C worker\x2C arguments);\x0d\n  };\x0d\n}\x0d\n
code-source-info,0x24050b35166,137,0,1104,C0O0C4O1104,,
code-creation,Function,10,1586678,0x24050b35326,72, node:internal/cluster/utils:1:1,0x24050b350e0,~
code-source-info,0x24050b35326,137,0,1104,C0O0C24O28C30O45C35O75C42O97C48O112C54O90C58O146C60O146C65O146C67O172C68O172C71O1103,,
code-creation,Eval,10,1587184,0x24050b35936,5, node:internal/cluster/shared_handle:1:1,0x24050b357b0,~
script-source,138,node:internal/cluster/shared_handle,'use strict';\x0d\nconst { SafeMap } = primordials;\x0d\nconst assert = require('internal/assert');\x0d\nconst dgram = require('internal/dgram');\x0d\nconst net = require('net');\x0d\n\x0d\nmodule.exports = SharedHandle;\x0d\n\x0d\nfunction SharedHandle(key\x2C address\x2C { port\x2C addressType\x2C fd\x2C flags }) {\x0d\n  this.key = key;\x0d\n  this.workers = new SafeMap();\x0d\n  this.handle = null;\x0d\n  this.errno = 0;\x0d\n\x0d\n  let rval;\x0d\n  if (addressType === 'udp4' || addressType === 'udp6')\x0d\n    rval = dgram._createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n  else\x0d\n    rval = net._createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n  if (typeof rval === 'number')\x0d\n    this.errno = rval;\x0d\n  else\x0d\n    this.handle = rval;\x0d\n}\x0d\n\x0d\nSharedHandle.prototype.add = function(worker\x2C send) {\x0d\n  assert(!this.workers.has(worker.id));\x0d\n  this.workers.set(worker.id\x2C worker);\x0d\n  send(this.errno\x2C null\x2C this.handle);\x0d\n};\x0d\n\x0d\nSharedHandle.prototype.remove = function(worker) {\x0d\n  if (!this.workers.has(worker.id))\x0d\n    return false;\x0d\n\x0d\n  this.workers.delete(worker.id);\x0d\n\x0d\n  if (this.workers.size !== 0)\x0d\n    return false;\x0d\n\x0d\n  this.handle.close();\x0d\n  this.handle = null;\x0d\n  return true;\x0d\n};\x0d\n
code-source-info,0x24050b35936,138,0,1147,C0O0C4O1147,,
code-creation,Function,10,1587553,0x24050b35b6e,89, node:internal/cluster/shared_handle:1:1,0x24050b358b0,~
code-source-info,0x24050b35b6e,138,0,1147,C0O0C22O23C28O64C31O64C35O64C37O107C40O107C44O107C46O147C49O147C53O147C55O166C57O181C61O711C70O725C74O893C83O910C88O1146,,
code-creation,Eval,10,1588020,0x24050b36156,5, node:internal/cluster/worker:1:1,0x24050b35fe0,~
script-source,139,node:internal/cluster/worker,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\nmodule.exports = Worker;\x0d\n\x0d\n// Common Worker implementation shared between the cluster primary and workers.\x0d\nfunction Worker(options) {\x0d\n  if (!(this instanceof Worker))\x0d\n    return new Worker(options);\x0d\n\x0d\n  ReflectApply(EventEmitter\x2C this\x2C []);\x0d\n\x0d\n  if (options === null || typeof options !== 'object')\x0d\n    options = {};\x0d\n\x0d\n  this.exitedAfterDisconnect = undefined;\x0d\n\x0d\n  this.state = options.state || 'none';\x0d\n  this.id = options.id | 0;\x0d\n\x0d\n  if (options.process) {\x0d\n    this.process = options.process;\x0d\n    this.process.on('error'\x2C (code\x2C signal) =>\x0d\n      this.emit('error'\x2C code\x2C signal)\x0d\n    );\x0d\n    this.process.on('message'\x2C (message\x2C handle) =>\x0d\n      this.emit('message'\x2C message\x2C handle)\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Worker.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Worker\x2C EventEmitter);\x0d\n\x0d\nWorker.prototype.kill = function() {\x0d\n  ReflectApply(this.destroy\x2C this\x2C arguments);\x0d\n};\x0d\n\x0d\nWorker.prototype.send = function() {\x0d\n  return ReflectApply(this.process.send\x2C this.process\x2C arguments);\x0d\n};\x0d\n\x0d\nWorker.prototype.isDead = function() {\x0d\n  return this.process.exitCode != null || this.process.signalCode != null;\x0d\n};\x0d\n\x0d\nWorker.prototype.isConnected = function() {\x0d\n  return this.process.connected;\x0d\n};\x0d\n
code-source-info,0x24050b36156,139,0,1370,C0O0C4O1370,,
code-creation,Function,10,1588347,0x24050b364be,141, node:internal/cluster/worker:1:1,0x24050b360d0,~
code-source-info,0x24050b364be,139,0,1370,C0O0C17O28C22O53C28O109C31O109C35O109C37O131C39O146C43O849C46O877C54O901C59O849C64O914C70O914C75O961C78O968C87O983C91O1053C94O1060C103O1075C107O1165C110O1172C119O1189C123O1287C126O1294C135O1316C140O1369,,
code-creation,LazyCompile,10,1588989,0x24050b36c56,151,getESMFacade node:internal/bootstrap/loaders:264:15,0x3eae9a8fc10,~
code-source-info,0x24050b36c56,9,8495,9141,C0O8495C8O8514C14O8534C18O8541C19O8570C29O8570C34O8555C39O8619C42O8632C51O8664C53O8664C55O8695C62O8720C67O8695C72O8738C82O8738C87O8787C89O8840C102O8801C107O8799C111O9052C116O9059C121O9059C125O9084C130O9091C140O9091C146O9129C150O9136,,
code-creation,LazyCompile,10,1589321,0x24050b3703e,40, node:internal/bootstrap/loaders:273:15,0x24050b36b50,~
code-source-info,0x24050b3703e,9,8868,8976,C0O8882C5O8895C10O8895C14O8924C24O8945C27O8958C32O8924C39O8975,,
code-creation,LazyCompile,10,1589469,0x24050b37196,89,syncExports node:internal/bootstrap/loaders:287:14,0x3eae9a8fc80,~
code-source-info,0x24050b37196,9,9454,9797,C0O9483C5O9509C11O9539C13O9552C17O9544C22O9595C24O9600C28O9614C30O9629C35O9644C37O9668C42O9675C51O9728C54O9740C59O9766C67O9728C73O9675C79O9561C84O9526C88O9796,,
code-creation,LazyCompile,10,1589642,0x24050b372fe,35,getOwn node:internal/bootstrap/loaders:180:16,0x3eae9a8f918,~
code-source-info,0x24050b372fe,9,5677,5835,C0O5714C5O5721C14O5776C26O5776C34O5832,,
code-creation,RegExp,3,1590177,0x22e32687d00,1532,(?:^|\\/)\\.?\\.$
code-creation,RegExp,3,1590760,0x22e32688360,1592,^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*
code-creation,Function,11,1592098,0x22e32688a00,3380,dirname node:path:653:10,0x15057ccd768,^
code-source-info,0x22e32688a00,41,21280,23908,,,
code-creation,Function,11,1592283,0x22e326897a0,1936,toNamespacedPath node:path:618:19,0x15057ccd6f8,^
code-source-info,0x22e326897a0,41,20086,21201,,,
code-creation,Function,11,1592467,0x22e32689fa0,320,isFileType node:fs:205:20,0x2bf99097010,^
code-source-info,0x22e32689fa0,80,5489,5737,,,
code-creation,Function,11,1592657,0x22e3268a140,304,getOwn node:internal/bootstrap/loaders:180:16,0x3eae9a8f918,^
code-source-info,0x22e3268a140,9,5677,5835,,,
code-creation,Function,11,1592850,0x22e3268a2e0,672,syncExports node:internal/bootstrap/loaders:287:14,0x3eae9a8fc80,^
code-source-info,0x22e3268a2e0,9,9454,9797,,,
code-creation,Eval,10,1593915,0x24050b37fce,5, C:\\Users\\jerso\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js:1:1,0x24050b37e28,~
script-source,140,C:\\Users\\jerso\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js,'use strict'\nconst net = require('net')\n\nlet isWorker = false\ntry {\n  // Skip redirecting stdout in Worker threads.\n  isWorker = !require('worker_threads').isMainThread\n} catch (e) {}\n\nif (!isWorker) {\n  const socket = new net.Socket({\n    fd: 3\x2C\n    readable: false\x2C\n    writable: true\n  })\n  Object.defineProperty(process\x2C 'stdout'\x2C {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get: () => socket\n  })\n  Object.defineProperty(process.stdout\x2C 'fd'\x2C {\n    value: socket._handle.fd\n  })\n}\n
code-source-info,0x24050b37fce,140,0,494,C0O0C4O494,,
code-creation,Function,10,1594187,0x24050b38276,157, C:\\Users\\jerso\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js:1:1,0x24050b37f48,~
code-source-info,0x24050b38276,140,0,494,C0O25C3O25C8O56C13O118C16O130C21O155C30O127C42O185C53O227C65O219C70O219C72O294C76O301C81O316C93O392C101O301C106O412C110O419C115O434C119O442C135O476C140O484C148O419C156O493,,
code-creation,LazyCompile,10,1594666,0x24050b38746,37,get SocketAddress node:net:1830:20,0x22cec16b860,~
code-source-info,0x24050b38746,101,50750,50858,C0O50760C14O50778C19O50811C26O50774C32O50832C36O50853,,
code-creation,Eval,10,1595009,0x24050b38b06,5, node:worker_threads:1:1,0x24050b389c0,~
script-source,141,node:worker_threads,'use strict';\x0d\n\x0d\nconst {\x0d\n  isMainThread\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  resourceLimits\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n  threadId\x2C\x0d\n  Worker\x0d\n} = require('internal/worker');\x0d\n\x0d\nconst {\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  BroadcastChannel\x2C\x0d\n} = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  markAsUntransferable\x2C\x0d\n} = require('internal/buffer');\x0d\n\x0d\nmodule.exports = {\x0d\n  isMainThread\x2C\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  resourceLimits\x2C\x0d\n  threadId\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  Worker\x2C\x0d\n  parentPort: null\x2C\x0d\n  workerData: null\x2C\x0d\n  BroadcastChannel\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n};\x0d\n
code-source-info,0x24050b38b06,141,0,727,C0O0C4O727,,
code-creation,Function,10,1595407,0x24050b38d16,180, node:worker_threads:1:1,0x24050b38a80,~
code-source-info,0x24050b38d16,141,0,727,C0O149C3O149C8O28C13O45C18O59C23O78C28O101C33O124C38O137C43O303C46O303C51O191C56O207C61O226C66O255C71O280C76O375C79O375C84O348C89O406C96O428C102O445C108O461C114O480C120O505C126O534C132O559C138O578C144O591C150O605C156O658C162O679C168O702C174O421C179O726,,
code-creation,Eval,10,1597036,0x24050b39c9e,5, node:internal/worker:1:1,0x24050b396c0,~
script-source,142,node:internal/worker,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  Float64Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  JSONStringify\x2C\x0d\n  MathMax\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectEntries\x2C\x0d\n  Promise\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  Uint32Array\x2C\x0d\n  globalThis: { Atomics\x2C SharedArrayBuffer }\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst assert = require('internal/assert');\x0d\nconst path = require('path');\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst errorCodes = require('internal/errors').codes;\x0d\nconst {\x0d\n  ERR_WORKER_NOT_RUNNING\x2C\x0d\n  ERR_WORKER_PATH\x2C\x0d\n  ERR_WORKER_UNSERIALIZABLE_ERROR\x2C\x0d\n  ERR_WORKER_INVALID_EXEC_ARGV\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = errorCodes;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst workerIo = require('internal/worker/io');\x0d\nconst {\x0d\n  drainMessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  messageTypes\x2C\x0d\n  kPort\x2C\x0d\n  kIncrementsPortRef\x2C\x0d\n  kWaitingStreams\x2C\x0d\n  kStdioWantsMoreDataCallback\x2C\x0d\n  setupPortReferencing\x2C\x0d\n  ReadableWorkerStdio\x2C\x0d\n  WritableWorkerStdio\x0d\n} = workerIo;\x0d\nconst { deserializeError } = require('internal/error_serdes');\x0d\nconst { fileURLToPath\x2C isURLInstance\x2C pathToFileURL } = require('internal/url');\x0d\nconst { validateArray } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ownsProcessState\x2C\x0d\n  isMainThread\x2C\x0d\n  resourceLimits: resourceLimitsRaw\x2C\x0d\n  threadId\x2C\x0d\n  Worker: WorkerImpl\x2C\x0d\n  kMaxYoungGenerationSizeMb\x2C\x0d\n  kMaxOldGenerationSizeMb\x2C\x0d\n  kCodeRangeSizeMb\x2C\x0d\n  kStackSizeMb\x2C\x0d\n  kTotalResourceLimitCount\x0d\n} = internalBinding('worker');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kPublicPort = Symbol('kPublicPort');\x0d\nconst kDispose = Symbol('kDispose');\x0d\nconst kOnExit = Symbol('kOnExit');\x0d\nconst kOnMessage = Symbol('kOnMessage');\x0d\nconst kOnCouldNotSerializeErr = Symbol('kOnCouldNotSerializeErr');\x0d\nconst kOnErrorMessage = Symbol('kOnErrorMessage');\x0d\nconst kParentSideStdio = Symbol('kParentSideStdio');\x0d\nconst kLoopStartTime = Symbol('kLoopStartTime');\x0d\nconst kIsOnline = Symbol('kIsOnline');\x0d\n\x0d\nconst SHARE_ENV = SymbolFor('nodejs.worker_threads.SHARE_ENV');\x0d\nlet debug = require('internal/util/debuglog').debuglog('worker'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nlet cwdCounter;\x0d\n\x0d\nconst environmentData = new SafeMap();\x0d\n\x0d\nif (isMainThread) {\x0d\n  cwdCounter = new Uint32Array(new SharedArrayBuffer(4));\x0d\n  const originalChdir = process.chdir;\x0d\n  process.chdir = function(path) {\x0d\n    Atomics.add(cwdCounter\x2C 0\x2C 1);\x0d\n    originalChdir(path);\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction setEnvironmentData(key\x2C value) {\x0d\n  if (value === undefined)\x0d\n    environmentData.delete(key);\x0d\n  else\x0d\n    environmentData.set(key\x2C value);\x0d\n}\x0d\n\x0d\nfunction getEnvironmentData(key) {\x0d\n  return environmentData.get(key);\x0d\n}\x0d\n\x0d\nfunction assignEnvironmentData(data) {\x0d\n  if (data === undefined) return;\x0d\n  data.forEach((value\x2C key) => {\x0d\n    environmentData.set(key\x2C value);\x0d\n  });\x0d\n}\x0d\n\x0d\nclass Worker extends EventEmitter {\x0d\n  constructor(filename\x2C options = {}) {\x0d\n    super();\x0d\n    debug(`[${threadId}] create new worker`\x2C filename\x2C options);\x0d\n    if (options.execArgv)\x0d\n      validateArray(options.execArgv\x2C 'options.execArgv');\x0d\n\x0d\n    let argv;\x0d\n    if (options.argv) {\x0d\n      validateArray(options.argv\x2C 'options.argv');\x0d\n      argv = ArrayPrototypeMap(options.argv\x2C String);\x0d\n    }\x0d\n\x0d\n    let url\x2C doEval;\x0d\n    if (options.eval) {\x0d\n      if (typeof filename !== 'string') {\x0d\n        throw new ERR_INVALID_ARG_VALUE(\x0d\n          'options.eval'\x2C\x0d\n          options.eval\x2C\x0d\n          'must be false when \\'filename\\' is not a string'\x0d\n        );\x0d\n      }\x0d\n      url = null;\x0d\n      doEval = 'classic';\x0d\n    } else if (isURLInstance(filename) && filename.protocol === 'data:') {\x0d\n      url = null;\x0d\n      doEval = 'module';\x0d\n      filename = `import ${JSONStringify(`${filename}`)}`;\x0d\n    } else {\x0d\n      doEval = false;\x0d\n      if (isURLInstance(filename)) {\x0d\n        url = filename;\x0d\n        filename = fileURLToPath(filename);\x0d\n      } else if (typeof filename !== 'string') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          'filename'\x2C\x0d\n          ['string'\x2C 'URL']\x2C\x0d\n          filename\x0d\n        );\x0d\n      } else if (path.isAbsolute(filename) ||\x0d\n                 RegExpPrototypeTest(/^\\.\\.?[\\\\/]/\x2C filename)) {\x0d\n        filename = path.resolve(filename);\x0d\n        url = pathToFileURL(filename);\x0d\n      } else {\x0d\n        throw new ERR_WORKER_PATH(filename);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let env;\x0d\n    if (typeof options.env === 'object' && options.env !== null) {\x0d\n      env = ObjectCreate(null);\x0d\n      ArrayPrototypeForEach(\x0d\n        ObjectEntries(options.env)\x2C\x0d\n        ({ 0: key\x2C 1: value }) => { env[key] = `${value}`; }\x0d\n      );\x0d\n    } else if (options.env == null) {\x0d\n      env = process.env;\x0d\n    } else if (options.env !== SHARE_ENV) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.env'\x2C\x0d\n        ['object'\x2C 'undefined'\x2C 'null'\x2C 'worker_threads.SHARE_ENV']\x2C\x0d\n        options.env);\x0d\n    }\x0d\n\x0d\n    // Set up the C++ handle for the worker\x2C as well as some internal wiring.\x0d\n    this[kHandle] = new WorkerImpl(url\x2C\x0d\n                                   env === process.env ? null : env\x2C\x0d\n                                   options.execArgv\x2C\x0d\n                                   parseResourceLimits(options.resourceLimits)\x2C\x0d\n                                   !!(options.trackUnmanagedFds ?? true));\x0d\n    if (this[kHandle].invalidExecArgv) {\x0d\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(this[kHandle].invalidExecArgv);\x0d\n    }\x0d\n    if (this[kHandle].invalidNodeOptions) {\x0d\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(\x0d\n        this[kHandle].invalidNodeOptions\x2C 'invalid NODE_OPTIONS env variable');\x0d\n    }\x0d\n    this[kHandle].onexit = (code\x2C customErr\x2C customErrReason) => {\x0d\n      this[kOnExit](code\x2C customErr\x2C customErrReason);\x0d\n    };\x0d\n    this[kPort] = this[kHandle].messagePort;\x0d\n    this[kPort].on('message'\x2C (data) => this[kOnMessage](data));\x0d\n    this[kPort].start();\x0d\n    this[kPort].unref();\x0d\n    this[kPort][kWaitingStreams] = 0;\x0d\n    debug(`[${threadId}] created Worker with ID ${this.threadId}`);\x0d\n\x0d\n    let stdin = null;\x0d\n    if (options.stdin)\x0d\n      stdin = new WritableWorkerStdio(this[kPort]\x2C 'stdin');\x0d\n    const stdout = new ReadableWorkerStdio(this[kPort]\x2C 'stdout');\x0d\n    if (!options.stdout) {\x0d\n      stdout[kIncrementsPortRef] = false;\x0d\n      pipeWithoutWarning(stdout\x2C process.stdout);\x0d\n    }\x0d\n    const stderr = new ReadableWorkerStdio(this[kPort]\x2C 'stderr');\x0d\n    if (!options.stderr) {\x0d\n      stderr[kIncrementsPortRef] = false;\x0d\n      pipeWithoutWarning(stderr\x2C process.stderr);\x0d\n    }\x0d\n\x0d\n    this[kParentSideStdio] = { stdin\x2C stdout\x2C stderr };\x0d\n\x0d\n    const { port1\x2C port2 } = new MessageChannel();\x0d\n    const transferList = [port2];\x0d\n    // If transferList is provided.\x0d\n    if (options.transferList)\x0d\n      ArrayPrototypePush(transferList\x2C\x0d\n                         ...new SafeArrayIterator(options.transferList));\x0d\n\x0d\n    this[kPublicPort] = port1;\x0d\n    ArrayPrototypeForEach(['message'\x2C 'messageerror']\x2C (event) => {\x0d\n      this[kPublicPort].on(event\x2C (message) => this.emit(event\x2C message));\x0d\n    });\x0d\n    setupPortReferencing(this[kPublicPort]\x2C this\x2C 'message');\x0d\n    this[kPort].postMessage({\x0d\n      argv\x2C\x0d\n      type: messageTypes.LOAD_SCRIPT\x2C\x0d\n      filename\x2C\x0d\n      doEval\x2C\x0d\n      cwdCounter: cwdCounter || workerIo.sharedCwdCounter\x2C\x0d\n      workerData: options.workerData\x2C\x0d\n      environmentData\x2C\x0d\n      publicPort: port2\x2C\x0d\n      manifestURL: getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').url :\x0d\n        null\x2C\x0d\n      manifestSrc: getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').src :\x0d\n        null\x2C\x0d\n      hasStdin: !!options.stdin\x0d\n    }\x2C transferList);\x0d\n    // Use this to cache the Worker's loopStart value once available.\x0d\n    this[kLoopStartTime] = -1;\x0d\n    this[kIsOnline] = false;\x0d\n    this.performance = {\x0d\n      eventLoopUtilization: FunctionPrototypeBind(eventLoopUtilization\x2C this)\x2C\x0d\n    };\x0d\n    // Actually start the new thread now that everything is in place.\x0d\n    this[kHandle].startThread();\x0d\n\x0d\n    process.nextTick(() => process.emit('worker'\x2C this));\x0d\n  }\x0d\n\x0d\n  [kOnExit](code\x2C customErr\x2C customErrReason) {\x0d\n    debug(`[${threadId}] hears end event for Worker ${this.threadId}`);\x0d\n    drainMessagePort(this[kPublicPort]);\x0d\n    drainMessagePort(this[kPort]);\x0d\n    this.removeAllListeners('message');\x0d\n    this.removeAllListeners('messageerrors');\x0d\n    this[kPublicPort].unref();\x0d\n    this[kPort].unref();\x0d\n    this[kDispose]();\x0d\n    if (customErr) {\x0d\n      debug(`[${threadId}] failing with custom error ${customErr} \\\x0d\n        and with reason ${customErrReason}`);\x0d\n      this.emit('error'\x2C new errorCodes[customErr](customErrReason));\x0d\n    }\x0d\n    this.emit('exit'\x2C code);\x0d\n    this.removeAllListeners();\x0d\n  }\x0d\n\x0d\n  [kOnCouldNotSerializeErr]() {\x0d\n    this.emit('error'\x2C new ERR_WORKER_UNSERIALIZABLE_ERROR());\x0d\n  }\x0d\n\x0d\n  [kOnErrorMessage](serialized) {\x0d\n    // This is what is called for uncaught exceptions.\x0d\n    const error = deserializeError(serialized);\x0d\n    this.emit('error'\x2C error);\x0d\n  }\x0d\n\x0d\n  [kOnMessage](message) {\x0d\n    switch (message.type) {\x0d\n      case messageTypes.UP_AND_RUNNING:\x0d\n        this[kIsOnline] = true;\x0d\n        return this.emit('online');\x0d\n      case messageTypes.COULD_NOT_SERIALIZE_ERROR:\x0d\n        return this[kOnCouldNotSerializeErr]();\x0d\n      case messageTypes.ERROR_MESSAGE:\x0d\n        return this[kOnErrorMessage](message.error);\x0d\n      case messageTypes.STDIO_PAYLOAD:\x0d\n      {\x0d\n        const { stream\x2C chunks } = message;\x0d\n        const readable = this[kParentSideStdio][stream];\x0d\n        ArrayPrototypeForEach(chunks\x2C ({ chunk\x2C encoding }) => {\x0d\n          readable.push(chunk\x2C encoding);\x0d\n        });\x0d\n        return;\x0d\n      }\x0d\n      case messageTypes.STDIO_WANTS_MORE_DATA:\x0d\n      {\x0d\n        const { stream } = message;\x0d\n        return this[kParentSideStdio][stream][kStdioWantsMoreDataCallback]();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    assert.fail(`Unknown worker message type ${message.type}`);\x0d\n  }\x0d\n\x0d\n  [kDispose]() {\x0d\n    this[kHandle].onexit = null;\x0d\n    this[kHandle] = null;\x0d\n    this[kPort] = null;\x0d\n    this[kPublicPort] = null;\x0d\n\x0d\n    const { stdout\x2C stderr } = this[kParentSideStdio];\x0d\n\x0d\n    if (!stdout.readableEnded) {\x0d\n      debug(`[${threadId}] explicitly closes stdout for ${this.threadId}`);\x0d\n      stdout.push(null);\x0d\n    }\x0d\n    if (!stderr.readableEnded) {\x0d\n      debug(`[${threadId}] explicitly closes stderr for ${this.threadId}`);\x0d\n      stderr.push(null);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  postMessage(...args) {\x0d\n    if (this[kPublicPort] === null) return;\x0d\n\x0d\n    ReflectApply(this[kPublicPort].postMessage\x2C this[kPublicPort]\x2C args);\x0d\n  }\x0d\n\x0d\n  terminate(callback) {\x0d\n    debug(`[${threadId}] terminates Worker with ID ${this.threadId}`);\x0d\n\x0d\n    this.ref();\x0d\n\x0d\n    if (typeof callback === 'function') {\x0d\n      process.emitWarning(\x0d\n        'Passing a callback to worker.terminate() is deprecated. ' +\x0d\n        'It returns a Promise instead.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0132');\x0d\n      if (this[kHandle] === null) return PromiseResolve();\x0d\n      this.once('exit'\x2C (exitCode) => callback(null\x2C exitCode));\x0d\n    }\x0d\n\x0d\n    if (this[kHandle] === null) return PromiseResolve();\x0d\n\x0d\n    this[kHandle].stopThread();\x0d\n\x0d\n    // Do not use events.once() here\x2C because the 'exit' event will always be\x0d\n    // emitted regardless of any errors\x2C and the point is to only resolve\x0d\n    // once the thread has actually stopped.\x0d\n    return new Promise((resolve) => {\x0d\n      this.once('exit'\x2C resolve);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    if (this[kHandle] === null) return;\x0d\n\x0d\n    this[kHandle].ref();\x0d\n    this[kPublicPort].ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    if (this[kHandle] === null) return;\x0d\n\x0d\n    this[kHandle].unref();\x0d\n    this[kPublicPort].unref();\x0d\n  }\x0d\n\x0d\n  get threadId() {\x0d\n    if (this[kHandle] === null) return -1;\x0d\n\x0d\n    return this[kHandle].threadId;\x0d\n  }\x0d\n\x0d\n  get stdin() {\x0d\n    return this[kParentSideStdio].stdin;\x0d\n  }\x0d\n\x0d\n  get stdout() {\x0d\n    return this[kParentSideStdio].stdout;\x0d\n  }\x0d\n\x0d\n  get stderr() {\x0d\n    return this[kParentSideStdio].stderr;\x0d\n  }\x0d\n\x0d\n  get resourceLimits() {\x0d\n    if (this[kHandle] === null) return {};\x0d\n\x0d\n    return makeResourceLimits(this[kHandle].getResourceLimits());\x0d\n  }\x0d\n\x0d\n  getHeapSnapshot() {\x0d\n    const heapSnapshotTaker = this[kHandle] && this[kHandle].takeHeapSnapshot();\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      if (!heapSnapshotTaker) return reject(new ERR_WORKER_NOT_RUNNING());\x0d\n      heapSnapshotTaker.ondone = (handle) => {\x0d\n        const { HeapSnapshotStream } = require('internal/heap_utils');\x0d\n        resolve(new HeapSnapshotStream(handle));\x0d\n      };\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction pipeWithoutWarning(source\x2C dest) {\x0d\n  const sourceMaxListeners = source._maxListeners;\x0d\n  const destMaxListeners = dest._maxListeners;\x0d\n  source.setMaxListeners(Infinity);\x0d\n  dest.setMaxListeners(Infinity);\x0d\n\x0d\n  source.pipe(dest);\x0d\n\x0d\n  source._maxListeners = sourceMaxListeners;\x0d\n  dest._maxListeners = destMaxListeners;\x0d\n}\x0d\n\x0d\nconst resourceLimitsArray = new Float64Array(kTotalResourceLimitCount);\x0d\nfunction parseResourceLimits(obj) {\x0d\n  const ret = resourceLimitsArray;\x0d\n  TypedArrayPrototypeFill(ret\x2C -1);\x0d\n  if (typeof obj !== 'object' || obj === null) return ret;\x0d\n\x0d\n  if (typeof obj.maxOldGenerationSizeMb === 'number')\x0d\n    ret[kMaxOldGenerationSizeMb] = MathMax(obj.maxOldGenerationSizeMb\x2C 2);\x0d\n  if (typeof obj.maxYoungGenerationSizeMb === 'number')\x0d\n    ret[kMaxYoungGenerationSizeMb] = obj.maxYoungGenerationSizeMb;\x0d\n  if (typeof obj.codeRangeSizeMb === 'number')\x0d\n    ret[kCodeRangeSizeMb] = obj.codeRangeSizeMb;\x0d\n  if (typeof obj.stackSizeMb === 'number')\x0d\n    ret[kStackSizeMb] = obj.stackSizeMb;\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction makeResourceLimits(float64arr) {\x0d\n  return {\x0d\n    maxYoungGenerationSizeMb: float64arr[kMaxYoungGenerationSizeMb]\x2C\x0d\n    maxOldGenerationSizeMb: float64arr[kMaxOldGenerationSizeMb]\x2C\x0d\n    codeRangeSizeMb: float64arr[kCodeRangeSizeMb]\x2C\x0d\n    stackSizeMb: float64arr[kStackSizeMb]\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction eventLoopUtilization(util1\x2C util2) {\x0d\n  // TODO(trevnorris): Works to solve the thread-safe read/write issue of\x0d\n  // loopTime\x2C but has the drawback that it can't be set until the event loop\x0d\n  // has had a chance to turn. So it will be impossible to read the ELU of\x0d\n  // a worker thread immediately after it's been created.\x0d\n  if (!this[kIsOnline] || !this[kHandle]) {\x0d\n    return { idle: 0\x2C active: 0\x2C utilization: 0 };\x0d\n  }\x0d\n\x0d\n  // Cache loopStart\x2C since it's only written to once.\x0d\n  if (this[kLoopStartTime] === -1) {\x0d\n    this[kLoopStartTime] = this[kHandle].loopStartTime();\x0d\n    if (this[kLoopStartTime] === -1)\x0d\n      return { idle: 0\x2C active: 0\x2C utilization: 0 };\x0d\n  }\x0d\n\x0d\n  if (util2) {\x0d\n    const idle = util1.idle - util2.idle;\x0d\n    const active = util1.active - util2.active;\x0d\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\x0d\n  }\x0d\n\x0d\n  const idle = this[kHandle].loopIdleTime();\x0d\n\x0d\n  // Using performance.now() here is fine since it's always the time from\x0d\n  // the beginning of the process\x2C and is why it needs to be offset by the\x0d\n  // loopStart time (which is also calculated from the beginning of the\x0d\n  // process).\x0d\n  const active = now() - this[kLoopStartTime] - idle;\x0d\n\x0d\n  if (!util1) {\x0d\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\x0d\n  }\x0d\n\x0d\n  const idle_delta = idle - util1.idle;\x0d\n  const active_delta = active - util1.active;\x0d\n  const utilization = active_delta / (idle_delta + active_delta);\x0d\n  return { idle: idle_delta\x2C active: active_delta\x2C utilization };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ownsProcessState\x2C\x0d\n  isMainThread\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  resourceLimits:\x0d\n    !isMainThread ? makeResourceLimits(resourceLimitsRaw) : {}\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n  assignEnvironmentData\x2C\x0d\n  threadId\x2C\x0d\n  Worker\x2C\x0d\n};\x0d\n
code-source-info,0x24050b39c9e,142,0,15857,C0O0C4O15857,,
code-creation,Function,10,1600427,0x24050b3afee,1185, node:internal/worker:1:1,0x24050b39c18,~
code-source-info,0x24050b3afee,142,0,15857,C0O0C244O28C250O54C256O76C262O99C267O116C273O142C279O160C285O172C291O189C297O207C303O219C309O238C315O255C321O279C327O301C332O313C338O324C343O335C348O349C354O377C365O407C371O416C376O479C384O479C389O514C397O514C401O514C403O556C411O556C415O556C417O590C425O590C431O582C437O644C445O644C451O670C455O644C457O859C461O690C467O717C473O737C479O773C485O806C491O831C497O899C505O899C511O880C517O948C525O948C529O948C531O1207C535O991C541O1012C547O1031C553O1048C559O1058C565O1081C571O1101C577O1133C583O1158C589O1182C595O1247C603O1247C609O1226C615O1338C623O1338C629O1290C635O1305C641O1320C647O1390C655O1390C661O1372C667O1674C671O1674C677O1436C682O1457C687O1490C692O1512C698O1533C704O1548C710O1578C716O1606C722O1627C728O1644C733O1720C737O1720C741O1720C743O1760C747O1760C751O1760C753O1801C757O1801C761O1801C763O1838C767O1838C771O1838C773O1877C777O1877C781O1877C783O1932C787O1932C791O1932C793O1992C797O1992C801O1992C803O2045C807O2045C811O2045C813O2097C817O2097C821O2097C823O2142C827O2142C831O2142C833O2184C837O2184C841O2184C843O2243C851O2243C857O2276C873O2277C879O2243C881O2333C882O2333C884O2372C886O2372C891O2372C893O2390C904O2413C910O2442C919O2426C924O2424C928O2494C934O2502C938O2494C940O2512C950O2526C956O3032C966O8230C976O8884C986O8988C996O9167C1006O10092C1092O13086C1094O13086C1099O13086C1101O15601C1109O15623C1115O15644C1121O15661C1130O15697C1136O15712C1149O15759C1155O15782C1161O15805C1167O15831C1173O15844C1179O15616C1184O15856,,
tick,0x7ff7de85e100,1600890,1,0x7ff7dd90e150,3,0x7ff7de2559a0,0x22e32684e3b,0x22e326848e5,0x24050b38d19,0x22e32684f03,0x24050b314d2,0x24050b2730b,0x24050b15ebe,0x24050b15af2,0x24050b311f6,0x24050b38286,0x24050b2c811,0x24050b287db,0x24050b27cde,0x24050b15f27,0x24050b15af2,0x24050b149a3,0x24050b1474d,0x22cec14654c,0x22cec142065
code-creation,Eval,10,1601567,0x24050b3cf36,5, node:internal/error_serdes:1:1,0x24050b3cc70,~
script-source,143,node:internal/error_serdes,'use strict';\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Error\x2C\x0d\n  EvalError\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeToString\x2C\x0d\n  RangeError\x2C\x0d\n  ReferenceError\x2C\x0d\n  SafeSet\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  SyntaxError\x2C\x0d\n  TypeError\x2C\x0d\n  URIError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kSerializedError = 0;\x0d\nconst kSerializedObject = 1;\x0d\nconst kInspectedError = 2;\x0d\n\x0d\nconst errors = {\x0d\n  Error\x2C TypeError\x2C RangeError\x2C URIError\x2C SyntaxError\x2C ReferenceError\x2C EvalError\x0d\n};\x0d\nconst errorConstructorNames = new SafeSet(ObjectKeys(errors));\x0d\n\x0d\nfunction TryGetAllProperties(object\x2C target = object) {\x0d\n  const all = ObjectCreate(null);\x0d\n  if (object === null)\x0d\n    return all;\x0d\n  ObjectAssign(all\x2C\x0d\n               TryGetAllProperties(ObjectGetPrototypeOf(object)\x2C target));\x0d\n  const keys = ObjectGetOwnPropertyNames(object);\x0d\n  ArrayPrototypeForEach(keys\x2C (key) => {\x0d\n    let descriptor;\x0d\n    try {\x0d\n      descriptor = ObjectGetOwnPropertyDescriptor(object\x2C key);\x0d\n    } catch { return; }\x0d\n    const getter = descriptor.get;\x0d\n    if (getter && key !== '__proto__') {\x0d\n      try {\x0d\n        descriptor.value = FunctionPrototypeCall(getter\x2C target);\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n    }\x0d\n    if ('value' in descriptor && typeof descriptor.value !== 'function') {\x0d\n      delete descriptor.get;\x0d\n      delete descriptor.set;\x0d\n      all[key] = descriptor;\x0d\n    }\x0d\n  });\x0d\n  return all;\x0d\n}\x0d\n\x0d\nfunction GetConstructors(object) {\x0d\n  const constructors = [];\x0d\n\x0d\n  for (let current = object;\x0d\n    current !== null;\x0d\n    current = ObjectGetPrototypeOf(current)) {\x0d\n    const desc = ObjectGetOwnPropertyDescriptor(current\x2C 'constructor');\x0d\n    if (desc && desc.value) {\x0d\n      ObjectDefineProperty(constructors\x2C constructors.length\x2C {\x0d\n        value: desc.value\x2C enumerable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return constructors;\x0d\n}\x0d\n\x0d\nfunction GetName(object) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(object\x2C 'name');\x0d\n  return desc && desc.value;\x0d\n}\x0d\n\x0d\nlet internalUtilInspect;\x0d\nfunction inspect(...args) {\x0d\n  if (!internalUtilInspect) {\x0d\n    internalUtilInspect = require('internal/util/inspect');\x0d\n  }\x0d\n  return internalUtilInspect.inspect(...args);\x0d\n}\x0d\n\x0d\nlet serialize;\x0d\nfunction serializeError(error) {\x0d\n  if (!serialize) serialize = require('v8').serialize;\x0d\n  try {\x0d\n    if (typeof error === 'object' &&\x0d\n        ObjectPrototypeToString(error) === '[object Error]') {\x0d\n      const constructors = GetConstructors(error);\x0d\n      for (let i = 0; i < constructors.length; i++) {\x0d\n        const name = GetName(constructors[i]);\x0d\n        if (errorConstructorNames.has(name)) {\x0d\n          const serialized = serialize({\x0d\n            constructor: name\x2C\x0d\n            properties: TryGetAllProperties(error)\x0d\n          });\x0d\n          return Buffer.concat([Buffer.from([kSerializedError])\x2C serialized]);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  try {\x0d\n    const serialized = serialize(error);\x0d\n    return Buffer.concat([Buffer.from([kSerializedObject])\x2C serialized]);\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  return Buffer.concat([Buffer.from([kInspectedError])\x2C\x0d\n                        Buffer.from(inspect(error)\x2C 'utf8')]);\x0d\n}\x0d\n\x0d\nlet deserialize;\x0d\nfunction deserializeError(error) {\x0d\n  if (!deserialize) deserialize = require('v8').deserialize;\x0d\n  switch (error[0]) {\x0d\n    case kSerializedError: {\x0d\n      const { constructor\x2C properties } = deserialize(error.subarray(1));\x0d\n      const ctor = errors[constructor];\x0d\n      ObjectDefineProperty(properties\x2C SymbolToStringTag\x2C {\x0d\n        value: { value: 'Error'\x2C configurable: true }\x2C\x0d\n        enumerable: true\x0d\n      });\x0d\n      return ObjectCreate(ctor.prototype\x2C properties);\x0d\n    }\x0d\n    case kSerializedObject:\x0d\n      return deserialize(error.subarray(1));\x0d\n    case kInspectedError: {\x0d\n      const buf = Buffer.from(error.buffer\x2C\x0d\n                              error.byteOffset + 1\x2C\x0d\n                              error.byteLength - 1);\x0d\n      return buf.toString('utf8');\x0d\n    }\x0d\n  }\x0d\n  require('assert').fail('This should not happen');\x0d\n}\x0d\n\x0d\nmodule.exports = { serializeError\x2C deserializeError };\x0d\n
code-source-info,0x24050b3cf36,143,0,4324,C0O0C4O4324,,
code-creation,Function,10,1602328,0x24050b3d356,335, node:internal/error_serdes:1:1,0x24050b3ceb0,~
code-source-info,0x24050b3d356,143,0,4324,C0O0C100O32C106O32C111O49C115O32C117O70C123O96C128O106C133O120C139O146C145O163C151O180C157O205C163O240C169O270C175O295C180O310C186O338C191O353C196O372C201O384C207O406C212O422C217O436C222O492C223O492C225O522C227O522C229O550C231O550C233O571C240O576C246O583C252O594C258O606C264O616C270O629C276O645C282O571C284O690C287O702C294O690C299O690C301O2171C302O2171C304O2376C305O2376C307O3408C308O3408C310O4268C317O4287C323O4303C329O4283C334O4323,,
code-creation,LazyCompile,10,1603835,0x24050b3e876,914,Socket node:net:285:16,0x22cec169728,~
code-source-info,0x24050b3e
code-creation,LazyCompile,10,1604717,0x24050b3ef46,109,Duplex node:internal/streams/duplex:52:16,0x15057cf7fb0,~
script-source,55,node:internal/streams/duplex,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// a duplex stream is just a stream that is both readable and writable.\x0d\n// Since JS doesn't have multiple prototype inheritance\x2C this class\x0d\n// prototypically inherits from Readable\x2C and then parasitically from\x0d\n// Writable.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Duplex;\x0d\n\x0d\nconst Readable = require('internal/streams/readable');\x0d\nconst Writable = require('internal/streams/writable');\x0d\n\x0d\nObjectSetPrototypeOf(Duplex.prototype\x2C Readable.prototype);\x0d\nObjectSetPrototypeOf(Duplex\x2C Readable);\x0d\n\x0d\n{\x0d\n  // Allow the keys array to be GC'ed.\x0d\n  for (const method of ObjectKeys(Writable.prototype)) {\x0d\n    if (!Duplex.prototype[method])\x0d\n      Duplex.prototype[method] = Writable.prototype[method];\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Duplex(options) {\x0d\n  if (!(this instanceof Duplex))\x0d\n    return new Duplex(options);\x0d\n\x0d\n  Readable.call(this\x2C options);\x0d\n  Writable.call(this\x2C options);\x0d\n  this.allowHalfOpen = true;\x0d\n\x0d\n  if (options) {\x0d\n    if (options.readable === false)\x0d\n      this.readable = false;\x0d\n\x0d\n    if (options.writable === false)\x0d\n      this.writable = false;\x0d\n\x0d\n    if (options.allowHalfOpen === false) {\x0d\n      this.allowHalfOpen = false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Duplex.prototype\x2C {\x0d\n  writable:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writable')\x2C\x0d\n  writableHighWaterMark:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableHighWaterMark')\x2C\x0d\n  writableObjectMode:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableObjectMode')\x2C\x0d\n  writableBuffer:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableBuffer')\x2C\x0d\n  writableLength:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableLength')\x2C\x0d\n  writableFinished:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableFinished')\x2C\x0d\n  writableCorked:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableCorked')\x2C\x0d\n  writableEnded:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableEnded')\x2C\x0d\n  writableNeedDrain:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableNeedDrain')\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    get() {\x0d\n      if (this._readableState === undefined ||\x0d\n        this._writableState === undefined) {\x0d\n        return false;\x0d\n      }\x0d\n      return this._readableState.destroyed && this._writableState.destroyed;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // Backward compatibility\x2C the user is explicitly\x0d\n      // managing destroyed.\x0d\n      if (this._readableState && this._writableState) {\x0d\n        this._readableState.destroyed = value;\x0d\n        this._writableState.destroyed = value;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nlet duplexify;\x0d\n\x0d\nDuplex.from = function(body) {\x0d\n  if (!duplexify) {\x0d\n    duplexify = require('internal/streams/duplexify');\x0d\n  }\x0d\n  return duplexify(body\x2C 'body');\x0d\n};\x0d\n
code-source-info,0x24050b3ef46,55,2002,2430,C0O2017C2O2028C7O2053C12O2060C17O2080C18O2086C23O2095C28O2095C34O2119C39O2128C44O2128C50O2152C51O2171C55O2184C59O2216C65O2225C70O2243C71O2257C75O2285C81O2294C86O2312C87O2326C91O2354C97O2368C102O2388C103O2407C108O2429,,
new,MemoryChunk,0x4aa59c0000,262144
code-creation,LazyCompile,10,1605850,0x24050b3f5ee,220,Readable node:internal/streams/readable:181:18,0x1945c70c230,~
script-source,56,node:internal/streams/readable,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  Symbol\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Readable;\x0d\nReadable.ReadableState = ReadableState;\x0d\n\x0d\nconst EE = require('events');\x0d\nconst { Stream\x2C prependListener } = require('internal/streams/legacy');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  addAbortSignalNoValidate\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst BufferList = require('internal/streams/buffer_list');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\nconst {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n} = require('internal/streams/state');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_STREAM_PUSH_AFTER_EOF\x2C\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateObject } = require('internal/validators');\x0d\n\x0d\nconst kPaused = Symbol('kPaused');\x0d\n\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst from = require('internal/streams/from');\x0d\n\x0d\nObjectSetPrototypeOf(Readable.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(Readable\x2C Stream);\x0d\nconst nop = () => {};\x0d\n\x0d\nconst { errorOrDestroy } = destroyImpl;\x0d\n\x0d\nfunction ReadableState(options\x2C stream\x2C isDuplex) {\x0d\n  // Duplex streams are both readable and writable\x2C but share\x0d\n  // the same options object.\x0d\n  // However\x2C some cases require setting options to different\x0d\n  // values for the readable and the writable sides of the duplex stream.\x0d\n  // These options can be provided separately as readableXXX and writableXXX.\x0d\n  if (typeof isDuplex !== 'boolean')\x0d\n    isDuplex = stream instanceof Stream.Duplex;\x0d\n\x0d\n  // Object stream flag. Used to make read(n) ignore n and to\x0d\n  // make all the buffer merging and length checks go away.\x0d\n  this.objectMode = !!(options && options.objectMode);\x0d\n\x0d\n  if (isDuplex)\x0d\n    this.objectMode = this.objectMode ||\x0d\n      !!(options && options.readableObjectMode);\x0d\n\x0d\n  // The point at which it stops calling _read() to fill the buffer\x0d\n  // Note: 0 is a valid value\x2C means "don't call _read preemptively ever"\x0d\n  this.highWaterMark = options ?\x0d\n    getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C isDuplex) :\x0d\n    getDefaultHighWaterMark(false);\x0d\n\x0d\n  // A linked list is used to store data chunks instead of an array because the\x0d\n  // linked list can remove elements from the beginning faster than\x0d\n  // array.shift().\x0d\n  this.buffer = new BufferList();\x0d\n  this.length = 0;\x0d\n  this.pipes = [];\x0d\n  this.flowing = null;\x0d\n  this.ended = false;\x0d\n  this.endEmitted = false;\x0d\n  this.reading = false;\x0d\n\x0d\n  // Stream is still being constructed and cannot be\x0d\n  // destroyed until construction finished or failed.\x0d\n  // Async construction is opt in\x2C therefore we start as\x0d\n  // constructed.\x0d\n  this.constructed = true;\x0d\n\x0d\n  // A flag to be able to tell if the event 'readable'/'data' is emitted\x0d\n  // immediately\x2C or on a later tick.  We set this to true at first\x2C because\x0d\n  // any actions that shouldn't happen until "later" should generally also\x0d\n  // not happen before the first read call.\x0d\n  this.sync = true;\x0d\n\x0d\n  // Whenever we return null\x2C then we set a flag to say\x0d\n  // that we're awaiting a 'readable' event emission.\x0d\n  this.needReadable = false;\x0d\n  this.emittedReadable = false;\x0d\n  this.readableListening = false;\x0d\n  this.resumeScheduled = false;\x0d\n  this[kPaused] = null;\x0d\n\x0d\n  // True if the error was already emitted and should not be thrown again.\x0d\n  this.errorEmitted = false;\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  this.emitClose = !options || options.emitClose !== false;\x0d\n\x0d\n  // Should .destroy() be called after 'end' (and potentially 'finish').\x0d\n  this.autoDestroy = !options || options.autoDestroy !== false;\x0d\n\x0d\n  // Has it been destroyed.\x0d\n  this.destroyed = false;\x0d\n\x0d\n  // Indicates whether the stream has errored. When true no further\x0d\n  // _read calls\x2C 'data' or 'readable' events should occur. This is needed\x0d\n  // since when autoDestroy is disabled we need a way to tell whether the\x0d\n  // stream has failed.\x0d\n  this.errored = null;\x0d\n\x0d\n  // Indicates whether the stream has finished destroying.\x0d\n  this.closed = false;\x0d\n\x0d\n  // True if close has been emitted or would have been emitted\x0d\n  // depending on emitClose.\x0d\n  this.closeEmitted = false;\x0d\n\x0d\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\x0d\n  // encoding is 'binary' so we have to make this configurable.\x0d\n  // Everything else in the universe uses 'utf8'\x2C though.\x0d\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\x0d\n\x0d\n  // Ref the piped dest which we need a drain event on it\x0d\n  // type: null | Writable | Set<Writable>.\x0d\n  this.awaitDrainWriters = null;\x0d\n  this.multiAwaitDrain = false;\x0d\n\x0d\n  // If true\x2C a maybeReadMore has been scheduled.\x0d\n  this.readingMore = false;\x0d\n\x0d\n  this.dataEmitted = false;\x0d\n\x0d\n  this.decoder = null;\x0d\n  this.encoding = null;\x0d\n  if (options && options.encoding) {\x0d\n    this.decoder = new StringDecoder(options.encoding);\x0d\n    this.encoding = options.encoding;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction Readable(options) {\x0d\n  if (!(this instanceof Readable))\x0d\n    return new Readable(options);\x0d\n\x0d\n  // Checking for a Stream.Duplex instance is faster here instead of inside\x0d\n  // the ReadableState constructor\x2C at least with V8 6.5.\x0d\n  const isDuplex = this instanceof Stream.Duplex;\x0d\n\x0d\n  this._readableState = new ReadableState(options\x2C this\x2C isDuplex);\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.read === 'function')\x0d\n      this._read = options.read;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n    if (options.signal && !isDuplex)\x0d\n      addAbortSignalNoValidate(options.signal\x2C this);\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  destroyImpl.construct(this\x2C () => {\x0d\n    if (this._readableState.needReadable) {\x0d\n      maybeReadMore(this\x2C this._readableState);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nReadable.prototype.destroy = destroyImpl.destroy;\x0d\nReadable.prototype._undestroy = destroyImpl.undestroy;\x0d\nReadable.prototype._destroy = function(err\x2C cb) {\x0d\n  cb(err);\x0d\n};\x0d\n\x0d\nReadable.prototype[EE.captureRejectionSymbol] = function(err) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n\x0d\n// Manually shove something into the read() buffer.\x0d\n// This returns true if the highWaterMark has not been hit yet\x2C\x0d\n// similar to how Writable.write() returns true if you should\x0d\n// write() some more.\x0d\nReadable.prototype.push = function(chunk\x2C encoding) {\x0d\n  return readableAddChunk(this\x2C chunk\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\n// Unshift should *always* be something directly out of read().\x0d\nReadable.prototype.unshift = function(chunk\x2C encoding) {\x0d\n  return readableAddChunk(this\x2C chunk\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nfunction readableAddChunk(stream\x2C chunk\x2C encoding\x2C addToFront) {\x0d\n  debug('readableAddChunk'\x2C chunk);\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  let err;\x0d\n  if (!state.objectMode) {\x0d\n    if (typeof chunk === 'string') {\x0d\n      encoding = encoding || state.defaultEncoding;\x0d\n      if (state.encoding !== encoding) {\x0d\n        if (addToFront && state.encoding) {\x0d\n          // When unshifting\x2C if state.encoding is set\x2C we have to save\x0d\n          // the string in the BufferList with the state encoding.\x0d\n          chunk = Buffer.from(chunk\x2C encoding).toString(state.encoding);\x0d\n        } else {\x0d\n          chunk = Buffer.from(chunk\x2C encoding);\x0d\n          encoding = '';\x0d\n        }\x0d\n      }\x0d\n    } else if (chunk instanceof Buffer) {\x0d\n      encoding = '';\x0d\n    } else if (Stream._isUint8Array(chunk)) {\x0d\n      chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n      encoding = '';\x0d\n    } else if (chunk != null) {\x0d\n      err = new ERR_INVALID_ARG_TYPE(\x0d\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    errorOrDestroy(stream\x2C err);\x0d\n  } else if (chunk === null) {\x0d\n    state.reading = false;\x0d\n    onEofChunk(stream\x2C state);\x0d\n  } else if (state.objectMode || (chunk && chunk.length > 0)) {\x0d\n    if (addToFront) {\x0d\n      if (state.endEmitted)\x0d\n        errorOrDestroy(stream\x2C new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());\x0d\n      else\x0d\n        addChunk(stream\x2C state\x2C chunk\x2C true);\x0d\n    } else if (state.ended) {\x0d\n      errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\x0d\n    } else if (state.destroyed || state.errored) {\x0d\n      return false;\x0d\n    } else {\x0d\n      state.reading = false;\x0d\n      if (state.decoder && !encoding) {\x0d\n        chunk = state.decoder.write(chunk);\x0d\n        if (state.objectMode || chunk.length !== 0)\x0d\n          addChunk(stream\x2C state\x2C chunk\x2C false);\x0d\n        else\x0d\n          maybeReadMore(stream\x2C state);\x0d\n      } else {\x0d\n        addChunk(stream\x2C state\x2C chunk\x2C false);\x0d\n      }\x0d\n    }\x0d\n  } else if (!addToFront) {\x0d\n    state.reading = false;\x0d\n    maybeReadMore(stream\x2C state);\x0d\n  }\x0d\n\x0d\n  // We can push more data if we are below the highWaterMark.\x0d\n  // Also\x2C if we have no data yet\x2C we can stand some more bytes.\x0d\n  // This is to work around cases where hwm=0\x2C such as the repl.\x0d\n  return !state.ended &&\x0d\n    (state.length < state.highWaterMark || state.length === 0);\x0d\n}\x0d\n\x0d\nfunction addChunk(stream\x2C state\x2C chunk\x2C addToFront) {\x0d\n  if (state.flowing && state.length === 0 && !state.sync &&\x0d\n      stream.listenerCount('data') > 0) {\x0d\n    // Use the guard to avoid creating `Set()` repeatedly\x0d\n    // when we have multiple pipes.\x0d\n    if (state.multiAwaitDrain) {\x0d\n      state.awaitDrainWriters.clear();\x0d\n    } else {\x0d\n      state.awaitDrainWriters = null;\x0d\n    }\x0d\n    state.dataEmitted = true;\x0d\n    stream.emit('data'\x2C chunk);\x0d\n  } else {\x0d\n    // Update the buffer info.\x0d\n    state.length += state.objectMode ? 1 : chunk.length;\x0d\n    if (addToFront)\x0d\n      state.buffer.unshift(chunk);\x0d\n    else\x0d\n      state.buffer.push(chunk);\x0d\n\x0d\n    if (state.needReadable)\x0d\n      emitReadable(stream);\x0d\n  }\x0d\n  maybeReadMore(stream\x2C state);\x0d\n}\x0d\n\x0d\nReadable.prototype.isPaused = function() {\x0d\n  const state = this._readableState;\x0d\n  return state[kPaused] === true || state.flowing === false;\x0d\n};\x0d\n\x0d\n// Backwards compatibility.\x0d\nReadable.prototype.setEncoding = function(enc) {\x0d\n  const decoder = new StringDecoder(enc);\x0d\n  this._readableState.decoder = decoder;\x0d\n  // If setEncoding(null)\x2C decoder.encoding equals utf8.\x0d\n  this._readableState.encoding = this._readableState.decoder.encoding;\x0d\n\x0d\n  const buffer = this._readableState.buffer;\x0d\n  // Iterate over current buffer to convert already stored Buffers:\x0d\n  let content = '';\x0d\n  for (const data of buffer) {\x0d\n    content += decoder.write(data);\x0d\n  }\x0d\n  buffer.clear();\x0d\n  if (content !== '')\x0d\n    buffer.push(content);\x0d\n  this._readableState.length = content.length;\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Don't raise the hwm > 1GB.\x0d\nconst MAX_HWM = 0x40000000;\x0d\nfunction computeNewHighWaterMark(n) {\x0d\n  if (n >= MAX_HWM) {\x0d\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\x0d\n    n = MAX_HWM;\x0d\n  } else {\x0d\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\x0d\n    // tiny amounts.\x0d\n    n--;\x0d\n    n |= n >>> 1;\x0d\n    n |= n >>> 2;\x0d\n    n |= n >>> 4;\x0d\n    n |= n >>> 8;\x0d\n    n |= n >>> 16;\x0d\n    n++;\x0d\n  }\x0d\n  return n;\x0d\n}\x0d\n\x0d\n// This function is designed to be inlinable\x2C so please take care when making\x0d\n// changes to the function body.\x0d\nfunction howMuchToRead(n\x2C state) {\x0d\n  if (n <= 0 || (state.length === 0 && state.ended))\x0d\n    return 0;\x0d\n  if (state.objectMode)\x0d\n    return 1;\x0d\n  if (NumberIsNaN(n)) {\x0d\n    // Only flow one buffer at a time.\x0d\n    if (state.flowing && state.length)\x0d\n      return state.buffer.first().length;\x0d\n    return state.length;\x0d\n  }\x0d\n  if (n <= state.length)\x0d\n    return n;\x0d\n  return state.ended ? state.length : 0;\x0d\n}\x0d\n\x0d\n// You can override either this method\x2C or the async _read(n) below.\x0d\nReadable.prototype.read = function(n) {\x0d\n  debug('read'\x2C n);\x0d\n  // Same as parseInt(undefined\x2C 10)\x2C however V8 7.3 performance regressed\x0d\n  // in this scenario\x2C so we are doing it manually.\x0d\n  if (n === undefined) {\x0d\n    n = NaN;\x0d\n  } else if (!NumberIsInteger(n)) {\x0d\n    n = NumberParseInt(n\x2C 10);\x0d\n  }\x0d\n  const state = this._readableState;\x0d\n  const nOrig = n;\x0d\n\x0d\n  // If we're asking for more than the current hwm\x2C then raise the hwm.\x0d\n  if (n > state.highWaterMark)\x0d\n    state.highWaterMark = computeNewHighWaterMark(n);\x0d\n\x0d\n  if (n !== 0)\x0d\n    state.emittedReadable = false;\x0d\n\x0d\n  // If we're doing read(0) to trigger a readable event\x2C but we\x0d\n  // already have a bunch of data in the buffer\x2C then just trigger\x0d\n  // the 'readable' event and move on.\x0d\n  if (n === 0 &&\x0d\n      state.needReadable &&\x0d\n      ((state.highWaterMark !== 0 ?\x0d\n        state.length >= state.highWaterMark :\x0d\n        state.length > 0) ||\x0d\n       state.ended)) {\x0d\n    debug('read: emitReadable'\x2C state.length\x2C state.ended);\x0d\n    if (state.length === 0 && state.ended)\x0d\n      endReadable(this);\x0d\n    else\x0d\n      emitReadable(this);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  n = howMuchToRead(n\x2C state);\x0d\n\x0d\n  // If we've ended\x2C and we're now clear\x2C then finish it up.\x0d\n  if (n === 0 && state.ended) {\x0d\n    if (state.length === 0)\x0d\n      endReadable(this);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // All the actual chunk generation logic needs to be\x0d\n  // *below* the call to _read.  The reason is that in certain\x0d\n  // synthetic stream cases\x2C such as passthrough streams\x2C _read\x0d\n  // may be a completely synchronous operation which may change\x0d\n  // the state of the read buffer\x2C providing enough data when\x0d\n  // before there was *not* enough.\x0d\n  //\x0d\n  // So\x2C the steps are:\x0d\n  // 1. Figure out what the state of things will be after we do\x0d\n  // a read from the buffer.\x0d\n  //\x0d\n  // 2. If that resulting state will trigger a _read\x2C then call _read.\x0d\n  // Note that this may be asynchronous\x2C or synchronous.  Yes\x2C it is\x0d\n  // deeply ugly to write APIs this way\x2C but that still doesn't mean\x0d\n  // that the Readable class should behave improperly\x2C as streams are\x0d\n  // designed to be sync/async agnostic.\x0d\n  // Take note if the _read call is sync or async (ie\x2C if the read call\x0d\n  // has returned yet)\x2C so that we know whether or not it's safe to emit\x0d\n  // 'readable' etc.\x0d\n  //\x0d\n  // 3. Actually pull the requested chunks out of the buffer and return.\x0d\n\x0d\n  // if we need a readable event\x2C then we need to do some reading.\x0d\n  let doRead = state.needReadable;\x0d\n  debug('need readable'\x2C doRead);\x0d\n\x0d\n  // If we currently have less than the highWaterMark\x2C then also read some.\x0d\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\x0d\n    doRead = true;\x0d\n    debug('length less than watermark'\x2C doRead);\x0d\n  }\x0d\n\x0d\n  // However\x2C if we've ended\x2C then there's no point\x2C if we're already\x0d\n  // reading\x2C then it's unnecessary\x2C if we're constructing we have to wait\x2C\x0d\n  // and if we're destroyed or errored\x2C then it's not allowed\x2C\x0d\n  if (state.ended || state.reading || state.destroyed || state.errored ||\x0d\n      !state.constructed) {\x0d\n    doRead = false;\x0d\n    debug('reading\x2C ended or constructing'\x2C doRead);\x0d\n  } else if (doRead) {\x0d\n    debug('do read');\x0d\n    state.reading = true;\x0d\n    state.sync = true;\x0d\n    // If the length is currently zero\x2C then we *need* a readable event.\x0d\n    if (state.length === 0)\x0d\n      state.needReadable = true;\x0d\n\x0d\n    // Call internal read method\x0d\n    this._read(state.highWaterMark);\x0d\n\x0d\n    state.sync = false;\x0d\n    // If _read pushed data synchronously\x2C then `reading` will be false\x2C\x0d\n    // and we need to re-evaluate how much data we can return to the user.\x0d\n    if (!state.reading)\x0d\n      n = howMuchToRead(nOrig\x2C state);\x0d\n  }\x0d\n\x0d\n  let ret;\x0d\n  if (n > 0)\x0d\n    ret = fromList(n\x2C state);\x0d\n  else\x0d\n    ret = null;\x0d\n\x0d\n  if (ret === null) {\x0d\n    state.needReadable = state.length <= state.highWaterMark;\x0d\n    n = 0;\x0d\n  } else {\x0d\n    state.length -= n;\x0d\n    if (state.multiAwaitDrain) {\x0d\n      state.awaitDrainWriters.clear();\x0d\n    } else {\x0d\n      state.awaitDrainWriters = null;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (state.length === 0) {\x0d\n    // If we have nothing in the buffer\x2C then we want to know\x0d\n    // as soon as we *do* get something into the buffer.\x0d\n    if (!state.ended)\x0d\n      state.needReadable = true;\x0d\n\x0d\n    // If we tried to read() past the EOF\x2C then emit end on the next tick.\x0d\n    if (nOrig !== n && state.ended)\x0d\n      endReadable(this);\x0d\n  }\x0d\n\x0d\n  if (ret !== null) {\x0d\n    state.dataEmitted = true;\x0d\n    this.emit('data'\x2C ret);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n};\x0d\n\x0d\nfunction onEofChunk(stream\x2C state) {\x0d\n  debug('onEofChunk');\x0d\n  if (state.ended) return;\x0d\n  if (state.decoder) {\x0d\n    const chunk = state.decoder.end();\x0d\n    if (chunk && chunk.length) {\x0d\n      state.buffer.push(chunk);\x0d\n      state.length += state.objectMode ? 1 : chunk.length;\x0d\n    }\x0d\n  }\x0d\n  state.ended = true;\x0d\n\x0d\n  if (state.sync) {\x0d\n    // If we are sync\x2C wait until next tick to emit the data.\x0d\n    // Otherwise we risk emitting data in the flow()\x0d\n    // the readable code triggers during a read() call.\x0d\n    emitReadable(stream);\x0d\n  } else {\x0d\n    // Emit 'readable' now to make sure it gets picked up.\x0d\n    state.needReadable = false;\x0d\n    state.emittedReadable = true;\x0d\n    // We have to emit readable now that we are EOF. Modules\x0d\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\x0d\n    emitReadable_(stream);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Don't emit readable right away in sync mode\x2C because this can trigger\x0d\n// another read() call => stack overflow.  This way\x2C it might trigger\x0d\n// a nextTick recursion warning\x2C but that's not so bad.\x0d\nfunction emitReadable(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('emitReadable'\x2C state.needReadable\x2C state.emittedReadable);\x0d\n  state.needReadable = false;\x0d\n  if (!state.emittedReadable) {\x0d\n    debug('emitReadable'\x2C state.flowing);\x0d\n    state.emittedReadable = true;\x0d\n    process.nextTick(emitReadable_\x2C stream);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitReadable_(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('emitReadable_'\x2C state.destroyed\x2C state.length\x2C state.ended);\x0d\n  if (!state.destroyed && !state.errored && (state.length || state.ended)) {\x0d\n    stream.emit('readable');\x0d\n    state.emittedReadable = false;\x0d\n  }\x0d\n\x0d\n  // The stream needs another readable event if:\x0d\n  // 1. It is not flowing\x2C as the flow mechanism will take\x0d\n  //    care of it.\x0d\n  // 2. It is not ended.\x0d\n  // 3. It is below the highWaterMark\x2C so we can schedule\x0d\n  //    another readable later.\x0d\n  state.needReadable =\x0d\n    !state.flowing &&\x0d\n    !state.ended &&\x0d\n    state.length <= state.highWaterMark;\x0d\n  flow(stream);\x0d\n}\x0d\n\x0d\n\x0d\n// At this point\x2C the user has presumably seen the 'readable' event\x2C\x0d\n// and called read() to consume some data.  that may have triggered\x0d\n// in turn another _read(n) call\x2C in which case reading = true if\x0d\n// it's in progress.\x0d\n// However\x2C if we're not ended\x2C or reading\x2C and the length < hwm\x2C\x0d\n// then go ahead and try to read some more preemptively.\x0d\nfunction maybeReadMore(stream\x2C state) {\x0d\n  if (!state.readingMore && state.constructed) {\x0d\n    state.readingMore = true;\x0d\n    process.nextTick(maybeReadMore_\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeReadMore_(stream\x2C state) {\x0d\n  // Attempt to read more data if we should.\x0d\n  //\x0d\n  // The conditions for reading more data are (one of):\x0d\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\x0d\n  //   is responsible for filling the buffer with enough data if such data\x0d\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\x0d\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\x0d\n  //   when the stream consumer calls read() instead.\x0d\n  // - No data in the buffer\x2C and the stream is in flowing mode. In this mode\x0d\n  //   the loop below is responsible for ensuring read() is called. Failing to\x0d\n  //   call read here would abort the flow and there's no other mechanism for\x0d\n  //   continuing the flow if the stream consumer has just subscribed to the\x0d\n  //   'data' event.\x0d\n  //\x0d\n  // In addition to the above conditions to keep reading data\x2C the following\x0d\n  // conditions prevent the data from being read:\x0d\n  // - The stream has ended (state.ended).\x0d\n  // - There is already a pending 'read' operation (state.reading). This is a\x0d\n  //   case where the stream has called the implementation defined _read()\x0d\n  //   method\x2C but they are processing the call asynchronously and have _not_\x0d\n  //   called push() with new data. In this case we skip performing more\x0d\n  //   read()s. The execution ends in this method again after the _read() ends\x0d\n  //   up calling push() with more data.\x0d\n  while (!state.reading && !state.ended &&\x0d\n         (state.length < state.highWaterMark ||\x0d\n          (state.flowing && state.length === 0))) {\x0d\n    const len = state.length;\x0d\n    debug('maybeReadMore read 0');\x0d\n    stream.read(0);\x0d\n    if (len === state.length)\x0d\n      // Didn't get any data\x2C stop spinning.\x0d\n      break;\x0d\n  }\x0d\n  state.readingMore = false;\x0d\n}\x0d\n\x0d\n// Abstract method.  to be overridden in specific implementation classes.\x0d\n// call cb(er\x2C data) where data is <= n in length.\x0d\n// for virtual (non-string\x2C non-buffer) streams\x2C "length" is somewhat\x0d\n// arbitrary\x2C and perhaps not very meaningful.\x0d\nReadable.prototype._read = function(n) {\x0d\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()');\x0d\n};\x0d\n\x0d\nReadable.prototype.pipe = function(dest\x2C pipeOpts) {\x0d\n  const src = this;\x0d\n  const state = this._readableState;\x0d\n\x0d\n  if (state.pipes.length === 1) {\x0d\n    if (!state.multiAwaitDrain) {\x0d\n      state.multiAwaitDrain = true;\x0d\n      state.awaitDrainWriters = new SafeSet(\x0d\n        state.awaitDrainWriters ? [state.awaitDrainWriters] : []\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n\x0d\n  state.pipes.push(dest);\x0d\n  debug('pipe count=%d opts=%j'\x2C state.pipes.length\x2C pipeOpts);\x0d\n\x0d\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) &&\x0d\n              dest !== process.stdout &&\x0d\n              dest !== process.stderr;\x0d\n\x0d\n  const endFn = doEnd ? onend : unpipe;\x0d\n  if (state.endEmitted)\x0d\n    process.nextTick(endFn);\x0d\n  else\x0d\n    src.once('end'\x2C endFn);\x0d\n\x0d\n  dest.on('unpipe'\x2C onunpipe);\x0d\n  function onunpipe(readable\x2C unpipeInfo) {\x0d\n    debug('onunpipe');\x0d\n    if (readable === src) {\x0d\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\x0d\n        unpipeInfo.hasUnpiped = true;\x0d\n        cleanup();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function onend() {\x0d\n    debug('onend');\x0d\n    dest.end();\x0d\n  }\x0d\n\x0d\n  let ondrain;\x0d\n\x0d\n  let cleanedUp = false;\x0d\n  function cleanup() {\x0d\n    debug('cleanup');\x0d\n    // Cleanup event handlers once the pipe is broken.\x0d\n    dest.removeListener('close'\x2C onclose);\x0d\n    dest.removeListener('finish'\x2C onfinish);\x0d\n    if (ondrain) {\x0d\n      dest.removeListener('drain'\x2C ondrain);\x0d\n    }\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n    dest.removeListener('unpipe'\x2C onunpipe);\x0d\n    src.removeListener('end'\x2C onend);\x0d\n    src.removeListener('end'\x2C unpipe);\x0d\n    src.removeListener('data'\x2C ondata);\x0d\n\x0d\n    cleanedUp = true;\x0d\n\x0d\n    // If the reader is waiting for a drain event from this\x0d\n    // specific writer\x2C then it would cause it to never start\x0d\n    // flowing again.\x0d\n    // So\x2C if this is awaiting a drain\x2C then we just call it now.\x0d\n    // If we don't know\x2C then assume that we are waiting for one.\x0d\n    if (ondrain && state.awaitDrainWriters &&\x0d\n        (!dest._writableState || dest._writableState.needDrain))\x0d\n      ondrain();\x0d\n  }\x0d\n\x0d\n  function pause() {\x0d\n    // If the user unpiped during `dest.write()`\x2C it is possible\x0d\n    // to get stuck in a permanently paused state if that write\x0d\n    // also returned false.\x0d\n    // => Check whether `dest` is still a piping destination.\x0d\n    if (!cleanedUp) {\x0d\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\x0d\n        debug('false write response\x2C pause'\x2C 0);\x0d\n        state.awaitDrainWriters = dest;\x0d\n        state.multiAwaitDrain = false;\x0d\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\x0d\n        debug('false write response\x2C pause'\x2C state.awaitDrainWriters.size);\x0d\n        state.awaitDrainWriters.add(dest);\x0d\n      }\x0d\n      src.pause();\x0d\n    }\x0d\n    if (!ondrain) {\x0d\n      // When the dest drains\x2C it reduces the awaitDrain counter\x0d\n      // on the source.  This would be more elegant with a .once()\x0d\n      // handler in flow()\x2C but adding and removing repeatedly is\x0d\n      // too slow.\x0d\n      ondrain = pipeOnDrain(src\x2C dest);\x0d\n      dest.on('drain'\x2C ondrain);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  src.on('data'\x2C ondata);\x0d\n  function ondata(chunk) {\x0d\n    debug('ondata');\x0d\n    const ret = dest.write(chunk);\x0d\n    debug('dest.write'\x2C ret);\x0d\n    if (ret === false) {\x0d\n      pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // If the dest has an error\x2C then stop piping into it.\x0d\n  // However\x2C don't suppress the throwing behavior for this.\x0d\n  function onerror(er) {\x0d\n    debug('onerror'\x2C er);\x0d\n    unpipe();\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n    if (EE.listenerCount(dest\x2C 'error') === 0) {\x0d\n      const s = dest._writableState || dest._readableState;\x0d\n      if (s && !s.errorEmitted) {\x0d\n        // User incorrectly emitted 'error' directly on the stream.\x0d\n        errorOrDestroy(dest\x2C er);\x0d\n      } else {\x0d\n        dest.emit('error'\x2C er);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Make sure our error handler is attached before userland ones.\x0d\n  prependListener(dest\x2C 'error'\x2C onerror);\x0d\n\x0d\n  // Both close and finish should trigger unpipe\x2C but only once.\x0d\n  function onclose() {\x0d\n    dest.removeListener('finish'\x2C onfinish);\x0d\n    unpipe();\x0d\n  }\x0d\n  dest.once('close'\x2C onclose);\x0d\n  function onfinish() {\x0d\n    debug('onfinish');\x0d\n    dest.removeListener('close'\x2C onclose);\x0d\n    unpipe();\x0d\n  }\x0d\n  dest.once('finish'\x2C onfinish);\x0d\n\x0d\n  function unpipe() {\x0d\n    debug('unpipe');\x0d\n    src.unpipe(dest);\x0d\n  }\x0d\n\x0d\n  // Tell the dest that it's being piped to.\x0d\n  dest.emit('pipe'\x2C src);\x0d\n\x0d\n  // Start the flow if it hasn't been started already.\x0d\n\x0d\n  if (dest.writableNeedDrain === true) {\x0d\n    if (state.flowing) {\x0d\n      pause();\x0d\n    }\x0d\n  } else if (!state.flowing) {\x0d\n    debug('pipe resume');\x0d\n    src.resume();\x0d\n  }\x0d\n\x0d\n  return dest;\x0d\n};\x0d\n\x0d\nfunction pipeOnDrain(src\x2C dest) {\x0d\n  return function pipeOnDrainFunctionResult() {\x0d\n    const state = src._readableState;\x0d\n\x0d\n    // `ondrain` will call directly\x2C\x0d\n    // `this` maybe not a reference to dest\x2C\x0d\n    // so we use the real dest here.\x0d\n    if (state.awaitDrainWriters === dest) {\x0d\n      debug('pipeOnDrain'\x2C 1);\x0d\n      state.awaitDrainWriters = null;\x0d\n    } else if (state.multiAwaitDrain) {\x0d\n      debug('pipeOnDrain'\x2C state.awaitDrainWriters.size);\x0d\n      state.awaitDrainWriters.delete(dest);\x0d\n    }\x0d\n\x0d\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) &&\x0d\n      EE.listenerCount(src\x2C 'data')) {\x0d\n      src.resume();\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\n\x0d\nReadable.prototype.unpipe = function(dest) {\x0d\n  const state = this._readableState;\x0d\n  const unpipeInfo = { hasUnpiped: false };\x0d\n\x0d\n  // If we're not piping anywhere\x2C then do nothing.\x0d\n  if (state.pipes.length === 0)\x0d\n    return this;\x0d\n\x0d\n  if (!dest) {\x0d\n    // remove all.\x0d\n    const dests = state.pipes;\x0d\n    state.pipes = [];\x0d\n    this.pause();\x0d\n\x0d\n    for (let i = 0; i < dests.length; i++)\x0d\n      dests[i].emit('unpipe'\x2C this\x2C { hasUnpiped: false });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Try to find the right one.\x0d\n  const index = ArrayPrototypeIndexOf(state.pipes\x2C dest);\x0d\n  if (index === -1)\x0d\n    return this;\x0d\n\x0d\n  state.pipes.splice(index\x2C 1);\x0d\n  if (state.pipes.length === 0)\x0d\n    this.pause();\x0d\n\x0d\n  dest.emit('unpipe'\x2C this\x2C unpipeInfo);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Set up data events if they are asked for\x0d\n// Ensure readable listeners eventually get something.\x0d\nReadable.prototype.on = function(ev\x2C fn) {\x0d\n  const res = Stream.prototype.on.call(this\x2C ev\x2C fn);\x0d\n  const state = this._readableState;\x0d\n\x0d\n  if (ev === 'data') {\x0d\n    // Update readableListening so that resume() may be a no-op\x0d\n    // a few lines down. This is needed to support once('readable').\x0d\n    state.readableListening = this.listenerCount('readable') > 0;\x0d\n\x0d\n    // Try start flowing on next tick if stream isn't explicitly paused.\x0d\n    if (state.flowing !== false)\x0d\n      this.resume();\x0d\n  } else if (ev === 'readable') {\x0d\n    if (!state.endEmitted && !state.readableListening) {\x0d\n      state.readableListening = state.needReadable = true;\x0d\n      state.flowing = false;\x0d\n      state.emittedReadable = false;\x0d\n      debug('on readable'\x2C state.length\x2C state.reading);\x0d\n      if (state.length) {\x0d\n        emitReadable(this);\x0d\n      } else if (!state.reading) {\x0d\n        process.nextTick(nReadingNextTick\x2C this);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\nReadable.prototype.addListener = Readable.prototype.on;\x0d\n\x0d\nReadable.prototype.removeListener = function(ev\x2C fn) {\x0d\n  const res = Stream.prototype.removeListener.call(this\x2C\x0d\n                                                   ev\x2C fn);\x0d\n\x0d\n  if (ev === 'readable') {\x0d\n    // We need to check if there is someone still listening to\x0d\n    // readable and reset the state. However this needs to happen\x0d\n    // after readable has been emitted but before I/O (nextTick) to\x0d\n    // support once('readable'\x2C fn) cycles. This means that calling\x0d\n    // resume within the same tick will have no\x0d\n    // effect.\x0d\n    process.nextTick(updateReadableListening\x2C this);\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\nReadable.prototype.off = Readable.prototype.removeListener;\x0d\n\x0d\nReadable.prototype.removeAllListeners = function(ev) {\x0d\n  const res = Stream.prototype.removeAllListeners.apply(this\x2C\x0d\n                                                        arguments);\x0d\n\x0d\n  if (ev === 'readable' || ev === undefined) {\x0d\n    // We need to check if there is someone still listening to\x0d\n    // readable and reset the state. However this needs to happen\x0d\n    // after readable has been emitted but before I/O (nextTick) to\x0d\n    // support once('readable'\x2C fn) cycles. This means that calling\x0d\n    // resume within the same tick will have no\x0d\n    // effect.\x0d\n    process.nextTick(updateReadableListening\x2C this);\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\n\x0d\nfunction updateReadableListening(self) {\x0d\n  const state = self._readableState;\x0d\n  state.readableListening = self.listenerCount('readable') > 0;\x0d\n\x0d\n  if (state.resumeScheduled && state[kPaused] === false) {\x0d\n    // Flowing needs to be set to true now\x2C otherwise\x0d\n    // the upcoming resume will not flow.\x0d\n    state.flowing = true;\x0d\n\x0d\n    // Crude way to check if we should resume.\x0d\n  } else if (self.listenerCount('data') > 0) {\x0d\n    self.resume();\x0d\n  } else if (!state.readableListening) {\x0d\n    state.flowing = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction nReadingNextTick(self) {\x0d\n  debug('readable nexttick read 0');\x0d\n  self.read(0);\x0d\n}\x0d\n\x0d\n// pause() and resume() are remnants of the legacy readable stream API\x0d\n// If the user uses them\x2C then switch into old mode.\x0d\nReadable.prototype.resume = function() {\x0d\n  const state = this._readableState;\x0d\n  if (!state.flowing) {\x0d\n    debug('resume');\x0d\n    // We flow only if there is no one listening\x0d\n    // for readable\x2C but we still have to call\x0d\n    // resume().\x0d\n    state.flowing = !state.readableListening;\x0d\n    resume(this\x2C state);\x0d\n  }\x0d\n  state[kPaused] = false;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction resume(stream\x2C state) {\x0d\n  if (!state.resumeScheduled) {\x0d\n    state.resumeScheduled = true;\x0d\n    process.nextTick(resume_\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resume_(stream\x2C state) {\x0d\n  debug('resume'\x2C state.reading);\x0d\n  if (!state.reading) {\x0d\n    stream.read(0);\x0d\n  }\x0d\n\x0d\n  state.resumeScheduled = false;\x0d\n  stream.emit('resume');\x0d\n  flow(stream);\x0d\n  if (state.flowing && !state.reading)\x0d\n    stream.read(0);\x0d\n}\x0d\n\x0d\nReadable.prototype.pause = function() {\x0d\n  debug('call pause flowing=%j'\x2C this._readableState.flowing);\x0d\n  if (this._readableState.flowing !== false) {\x0d\n    debug('pause');\x0d\n    this._readableState.flowing = false;\x0d\n    this.emit('pause');\x0d\n  }\x0d\n  this._readableState[kPaused] = true;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction flow(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('flow'\x2C state.flowing);\x0d\n  while (state.flowing && stream.read() !== null);\x0d\n}\x0d\n\x0d\n// Wrap an old-style stream as the async data source.\x0d\n// This is *not* part of the readable stream interface.\x0d\n// It is an ugly unfortunate mess of history.\x0d\nReadable.prototype.wrap = function(stream) {\x0d\n  let paused = false;\x0d\n\x0d\n  // TODO (ronag): Should this.destroy(err) emit\x0d\n  // 'error' on the wrapped stream? Would require\x0d\n  // a static factory method\x2C e.g. Readable.wrap(stream).\x0d\n\x0d\n  stream.on('data'\x2C (chunk) => {\x0d\n    if (!this.push(chunk) && stream.pause) {\x0d\n      paused = true;\x0d\n      stream.pause();\x0d\n    }\x0d\n  });\x0d\n\x0d\n  stream.on('end'\x2C () => {\x0d\n    this.push(null);\x0d\n  });\x0d\n\x0d\n  stream.on('error'\x2C (err) => {\x0d\n    errorOrDestroy(this\x2C err);\x0d\n  });\x0d\n\x0d\n  stream.on('close'\x2C () => {\x0d\n    this.destroy();\x0d\n  });\x0d\n\x0d\n  stream.on('destroy'\x2C () => {\x0d\n    this.destroy();\x0d\n  });\x0d\n\x0d\n  this._read = () => {\x0d\n    if (paused && stream.resume) {\x0d\n      paused = false;\x0d\n      stream.resume();\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Proxy all the other methods. Important when wrapping filters and duplexes.\x0d\n  const streamKeys = ObjectKeys(stream);\x0d\n  for (let j = 1; j < streamKeys.length; j++) {\x0d\n    const i = streamKeys[j];\x0d\n    if (this[i] === undefined && typeof stream[i] === 'function') {\x0d\n      this[i] = stream[i].bind(stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nReadable.prototype[SymbolAsyncIterator] = function() {\x0d\n  return streamToAsyncIterator(this);\x0d\n};\x0d\n\x0d\nReadable.prototype.iterator = function(options) {\x0d\n  if (options !== undefined) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  return streamToAsyncIterator(this\x2C options);\x0d\n};\x0d\n\x0d\nfunction streamToAsyncIterator(stream\x2C options) {\x0d\n  if (typeof stream.read !== 'function') {\x0d\n    stream = Readable.wrap(stream\x2C { objectMode: true });\x0d\n  }\x0d\n\x0d\n  const iter = createAsyncIterator(stream\x2C options);\x0d\n  iter.stream = stream;\x0d\n  return iter;\x0d\n}\x0d\n\x0d\nasync function* createAsyncIterator(stream\x2C options) {\x0d\n  let callback = nop;\x0d\n\x0d\n  const opts = {\x0d\n    destroyOnReturn: true\x2C\x0d\n    destroyOnError: true\x2C\x0d\n    ...options\x2C\x0d\n  };\x0d\n\x0d\n  function next(resolve) {\x0d\n    if (this === stream) {\x0d\n      callback();\x0d\n      callback = nop;\x0d\n    } else {\x0d\n      callback = resolve;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  let error = state.errored;\x0d\n  let errorEmitted = state.errorEmitted;\x0d\n  let endEmitted = state.endEmitted;\x0d\n  let closeEmitted = state.closeEmitted;\x0d\n\x0d\n  stream\x0d\n    .on('readable'\x2C next)\x0d\n    .on('error'\x2C function(err) {\x0d\n      error = err;\x0d\n      errorEmitted = true;\x0d\n      next.call(this);\x0d\n    })\x0d\n    .on('end'\x2C function() {\x0d\n      endEmitted = true;\x0d\n      next.call(this);\x0d\n    })\x0d\n    .on('close'\x2C function() {\x0d\n      closeEmitted = true;\x0d\n      next.call(this);\x0d\n    });\x0d\n\x0d\n  let errorThrown = false;\x0d\n  try {\x0d\n    while (true) {\x0d\n      const chunk = stream.destroyed ? null : stream.read();\x0d\n      if (chunk !== null) {\x0d\n        yield chunk;\x0d\n      } else if (errorEmitted) {\x0d\n        throw error;\x0d\n      } else if (endEmitted) {\x0d\n        break;\x0d\n      } else if (closeEmitted) {\x0d\n        break;\x0d\n      } else {\x0d\n        await new Promise(next);\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    if (opts.destroyOnError) {\x0d\n      destroyImpl.destroyer(stream\x2C err);\x0d\n    }\x0d\n    errorThrown = true;\x0d\n    throw err;\x0d\n  } finally {\x0d\n    if (!errorThrown && opts.destroyOnReturn) {\x0d\n      if (state.autoDestroy || !endEmitted) {\x0d\n        // TODO(ronag): ERR_PREMATURE_CLOSE?\x0d\n        destroyImpl.destroyer(stream\x2C null);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Making it explicit these properties are not enumerable\x0d\n// because otherwise some prototype manipulation in\x0d\n// userland will fail.\x0d\nObjectDefineProperties(Readable.prototype\x2C {\x0d\n  readable: {\x0d\n    get() {\x0d\n      const r = this._readableState;\x0d\n      // r.readable === false means that this is part of a Duplex stream\x0d\n      // where the readable side was disabled upon construction.\x0d\n      // Compat. The user might manually disable readable side through\x0d\n      // deprecated setter.\x0d\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted &&\x0d\n        !r.endEmitted;\x0d\n    }\x2C\x0d\n    set(val) {\x0d\n      // Backwards compat.\x0d\n      if (this._readableState) {\x0d\n        this._readableState.readable = !!val;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableDidRead: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.dataEmitted;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableAborted: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return !!(\x0d\n        this._readableState.readable !== false &&\x0d\n        (this._readableState.destroyed || this._readableState.errored) &&\x0d\n        !this._readableState.endEmitted\x0d\n      );\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableHighWaterMark: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.highWaterMark;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableBuffer: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState && this._readableState.buffer;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableFlowing: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.flowing;\x0d\n    }\x2C\x0d\n    set: function(state) {\x0d\n      if (this._readableState) {\x0d\n        this._readableState.flowing = state;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableLength: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState.length;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableObjectMode: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.objectMode : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableEncoding: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.encoding : null;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      if (this._readableState === undefined) {\x0d\n        return false;\x0d\n      }\x0d\n      return this._readableState.destroyed;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // We ignore the value if the stream\x0d\n      // has not been initialized yet.\x0d\n      if (!this._readableState) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      // Backward compatibility\x2C the user is explicitly\x0d\n      // managing destroyed.\x0d\n      this._readableState.destroyed = value;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableEnded: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.endEmitted : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n});\x0d\n\x0d\nObjectDefineProperties(ReadableState.prototype\x2C {\x0d\n  // Legacy getter for `pipesCount`.\x0d\n  pipesCount: {\x0d\n    get() {\x0d\n      return this.pipes.length;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy property for `paused`.\x0d\n  paused: {\x0d\n    get() {\x0d\n      return this[kPaused] !== false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kPaused] = !!value;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\n// Exposed for testing purposes only.\x0d\nReadable._fromList = fromList;\x0d\n\x0d\n// Pluck off n bytes from an array of buffers.\x0d\n// Length is the combined lengths of all the buffers in the list.\x0d\n// This function is designed to be inlinable\x2C so please take care when making\x0d\n// changes to the function body.\x0d\nfunction fromList(n\x2C state) {\x0d\n  // nothing buffered.\x0d\n  if (state.length === 0)\x0d\n    return null;\x0d\n\x0d\n  let ret;\x0d\n  if (state.objectMode)\x0d\n    ret = state.buffer.shift();\x0d\n  else if (!n || n >= state.length) {\x0d\n    // Read it all\x2C truncate the list.\x0d\n    if (state.decoder)\x0d\n      ret = state.buffer.join('');\x0d\n    else if (state.buffer.length === 1)\x0d\n      ret = state.buffer.first();\x0d\n    else\x0d\n      ret = state.buffer.concat(state.length);\x0d\n    state.buffer.clear();\x0d\n  } else {\x0d\n    // read part of list.\x0d\n    ret = state.buffer.consume(n\x2C state.decoder);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction endReadable(stream) {\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  debug('endReadable'\x2C state.endEmitted);\x0d\n  if (!state.endEmitted) {\x0d\n    state.ended = true;\x0d\n    process.nextTick(endReadableNT\x2C state\x2C stream);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction endReadableNT(state\x2C stream) {\x0d\n  debug('endReadableNT'\x2C state.endEmitted\x2C state.length);\x0d\n\x0d\n  // Check that we didn't get one last unshift.\x0d\n  if (!state.errorEmitted && !state.closeEmitted &&\x0d\n      !state.endEmitted && state.length === 0) {\x0d\n    state.endEmitted = true;\x0d\n    stream.emit('end');\x0d\n\x0d\n    if (stream.writable && stream.allowHalfOpen === false) {\x0d\n      process.nextTick(endWritableNT\x2C stream);\x0d\n    } else if (state.autoDestroy) {\x0d\n      // In case of duplex streams we need a way to detect\x0d\n      // if the writable side is ready for autoDestroy as well.\x0d\n      const wState = stream._writableState;\x0d\n      const autoDestroy = !wState || (\x0d\n        wState.autoDestroy &&\x0d\n        // We don't expect the writable to ever 'finish'\x0d\n        // if writable is explicitly set to false.\x0d\n        (wState.finished || wState.writable === false)\x0d\n      );\x0d\n\x0d\n      if (autoDestroy) {\x0d\n        stream.destroy();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction endWritableNT(stream) {\x0d\n  const writable = stream.writable && !stream.writableEnded &&\x0d\n    !stream.destroyed;\x0d\n  if (writable) {\x0d\n    stream.end();\x0d\n  }\x0d\n}\x0d\n\x0d\nReadable.from = function(iterable\x2C opts) {\x0d\n  return from(Readable\x2C iterable\x2C opts);\x0d\n};\x0d\n\x0d\nReadable.wrap = function(src\x2C options) {\x0d\n  return new Readable({\x0d\n    objectMode: src.readableObjectMode ?? src.objectMode ?? true\x2C\x0d\n    ...options\x2C\x0d\n    destroy(err\x2C callback) {\x0d\n      destroyImpl.destroyer(src\x2C err);\x0d\n      callback(err);\x0d\n    }\x0d\n  }).wrap(src);\x0d\n};\x0d\n
code-source-info,0x24050b3f5ee,56,6426,7336,C0O6426C9O6441C16O6452C21O6479C28O6486C33O6508C34O6667C41O6683C44O6690C48O6672C52O6703C71O6725C76O6723C80O6774C84O6813C92O6841C95O6862C99O6852C103O6894C111O6925C114O6949C118O6939C122O6984C130O7017C133O7043C137O7033C141O7071C149O7082C151O7099C158O7132C166O7099C171O7157C178O7164C186O7164C192O7190C199O7202C212O7202C219O7335,,
tick,0x7ff954d96b5b,1612658,0,0x0,2,0x7ff7dde72760,0x24050b382b7,0x24050b2c811,0x24050b287db,0x24050b27cde,0x24050b15f27,0x24050b15af2,0x24050b149a3,0x24050b1474d,0x22cec14654c,0x22cec142065
code-creation,LazyCompile,10,1612806,0x4aa59c3d6e,18,Stream node:internal/streams/legacy:10:16,0x1945c70ea90,~
script-source,57,node:internal/streams/legacy,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EE = require('events');\x0d\n\x0d\nfunction Stream(opts) {\x0d\n  EE.call(this\x2C opts);\x0d\n}\x0d\nObjectSetPrototypeOf(Stream.prototype\x2C EE.prototype);\x0d\nObjectSetPrototypeOf(Stream\x2C EE);\x0d\n\x0d\nStream.prototype.pipe = function(dest\x2C options) {\x0d\n  const source = this;\x0d\n\x0d\n  function ondata(chunk) {\x0d\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\x0d\n      source.pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  source.on('data'\x2C ondata);\x0d\n\x0d\n  function ondrain() {\x0d\n    if (source.readable && source.resume) {\x0d\n      source.resume();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  dest.on('drain'\x2C ondrain);\x0d\n\x0d\n  // If the 'end' option is not supplied\x2C dest.end() will be called when\x0d\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\x0d\n  if (!dest._isStdio && (!options || options.end !== false)) {\x0d\n    source.on('end'\x2C onend);\x0d\n    source.on('close'\x2C onclose);\x0d\n  }\x0d\n\x0d\n  let didOnEnd = false;\x0d\n  function onend() {\x0d\n    if (didOnEnd) return;\x0d\n    didOnEnd = true;\x0d\n\x0d\n    dest.end();\x0d\n  }\x0d\n\x0d\n\x0d\n  function onclose() {\x0d\n    if (didOnEnd) return;\x0d\n    didOnEnd = true;\x0d\n\x0d\n    if (typeof dest.destroy === 'function') dest.destroy();\x0d\n  }\x0d\n\x0d\n  // Don't leave dangling pipes when there are errors.\x0d\n  function onerror(er) {\x0d\n    cleanup();\x0d\n    if (EE.listenerCount(this\x2C 'error') === 0) {\x0d\n      this.emit('error'\x2C er);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  prependListener(source\x2C 'error'\x2C onerror);\x0d\n  prependListener(dest\x2C 'error'\x2C onerror);\x0d\n\x0d\n  // Remove all the event listeners that were added.\x0d\n  function cleanup() {\x0d\n    source.removeListener('data'\x2C ondata);\x0d\n    dest.removeListener('drain'\x2C ondrain);\x0d\n\x0d\n    source.removeListener('end'\x2C onend);\x0d\n    source.removeListener('close'\x2C onclose);\x0d\n\x0d\n    source.removeListener('error'\x2C onerror);\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n\x0d\n    source.removeListener('end'\x2C cleanup);\x0d\n    source.removeListener('close'\x2C cleanup);\x0d\n\x0d\n    dest.removeListener('close'\x2C cleanup);\x0d\n  }\x0d\n\x0d\n  source.on('end'\x2C cleanup);\x0d\n  source.on('close'\x2C cleanup);\x0d\n\x0d\n  dest.on('close'\x2C cleanup);\x0d\n  dest.emit('pipe'\x2C source);\x0d\n\x0d\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\x0d\n  return dest;\x0d\n};\x0d\n\x0d\nfunction prependListener(emitter\x2C event\x2C fn) {\x0d\n  // Sadly this is not cacheable as some libraries bundle their own\x0d\n  // event emitter implementation with them.\x0d\n  if (typeof emitter.prependListener === 'function')\x0d\n    return emitter.prependListener(event\x2C fn);\x0d\n\x0d\n  // This is a hack to make sure that our error handler is attached before any\x0d\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\x0d\n  // to continue to work with older versions of Node.js that do not include\x0d\n  // the prependListener() method. The goal is to eventually remove this hack.\x0d\n  if (!emitter._events || !emitter._events[event])\x0d\n    emitter.on(event\x2C fn);\x0d\n  else if (ArrayIsArray(emitter._events[event]))\x0d\n    emitter._events[event].unshift(fn);\x0d\n  else\x0d\n    emitter._events[event] = [fn\x2C emitter._events[event]];\x0d\n}\x0d\n\x0d\nmodule.exports = { Stream\x2C prependListener };\x0d\n
code-source-info,0x4aa59c3d6e,57,136,171,C0O148C5O151C10O151C17O170,,
code-creation,LazyCompile,10,1614107,0x4aa59c4636,354,ReadableState node:internal/streams/readable:78:23,0x1945c70c1e0,~
code-source-info,0x4aa59c
code-creation,LazyCompile,10,1614559,0x4aa59c4a46,98,getHighWaterMark node:internal/streams/state:19:26,0x1945c711578,~
script-source,60,node:internal/streams/state,'use strict';\x0d\n\x0d\nconst {\x0d\n  MathFloor\x2C\x0d\n  NumberIsInteger\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ERR_INVALID_ARG_VALUE } = require('internal/errors').codes;\x0d\n\x0d\nfunction highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey) {\x0d\n  return options.highWaterMark != null ? options.highWaterMark :\x0d\n    isDuplex ? options[duplexKey] : null;\x0d\n}\x0d\n\x0d\nfunction getDefaultHighWaterMark(objectMode) {\x0d\n  return objectMode ? 16 : 16 * 1024;\x0d\n}\x0d\n\x0d\nfunction getHighWaterMark(state\x2C options\x2C duplexKey\x2C isDuplex) {\x0d\n  const hwm = highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey);\x0d\n  if (hwm != null) {\x0d\n    if (!NumberIsInteger(hwm) || hwm < 0) {\x0d\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark';\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C hwm);\x0d\n    }\x0d\n    return MathFloor(hwm);\x0d\n  }\x0d\n\x0d\n  // Default value\x0d\n  return getDefaultHighWaterMark(state.objectMode);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n};\x0d\n
code-source-info,0x4aa59c4a46,60,442,862,C0O497C12O497C18O549C21O573C26O578C33O606C38O633C47O655C56O701C69O707C74O701C75O757C80O764C84O779C85O810C88O847C93O817C97O859,,
code-creation,LazyCompile,10,1614991,0x4aa59c4cde,26,highWaterMarkFrom node:internal/streams/state:10:27,0x1945c711418,~
code-source-info,0x4aa59c4cde,60,177,321,C0O228C7O260C15O281C19O299C25O318,,
code-creation,LazyCompile,10,1615082,0x4aa59c4db6,13,getDefaultHighWaterMark node:internal/streams/state:15:33,0x1945c711528,~
code-source-info,0x4aa59c4db6,60,357,413,C0O375C12O410,,
code-creation,LazyCompile,10,1615212,0x4aa59c4e96,17,BufferList node:internal/streams/buffer_list:14:14,0x1945c7108d0,~
script-source,59,node:internal/streams/buffer_list,'use strict';\x0d\n\x0d\nconst {\x0d\n  StringPrototypeSlice\x2C\x0d\n  SymbolIterator\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nmodule.exports = class BufferList {\x0d\n  constructor() {\x0d\n    this.head = null;\x0d\n    this.tail = null;\x0d\n    this.length = 0;\x0d\n  }\x0d\n\x0d\n  push(v) {\x0d\n    const entry = { data: v\x2C next: null };\x0d\n    if (this.length > 0)\x0d\n      this.tail.next = entry;\x0d\n    else\x0d\n      this.head = entry;\x0d\n    this.tail = entry;\x0d\n    ++this.length;\x0d\n  }\x0d\n\x0d\n  unshift(v) {\x0d\n    const entry = { data: v\x2C next: this.head };\x0d\n    if (this.length === 0)\x0d\n      this.tail = entry;\x0d\n    this.head = entry;\x0d\n    ++this.length;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    if (this.length === 0)\x0d\n      return;\x0d\n    const ret = this.head.data;\x0d\n    if (this.length === 1)\x0d\n      this.head = this.tail = null;\x0d\n    else\x0d\n      this.head = this.head.next;\x0d\n    --this.length;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  clear() {\x0d\n    this.head = this.tail = null;\x0d\n    this.length = 0;\x0d\n  }\x0d\n\x0d\n  join(s) {\x0d\n    if (this.length === 0)\x0d\n      return '';\x0d\n    let p = this.head;\x0d\n    let ret = '' + p.data;\x0d\n    while ((p = p.next) !== null)\x0d\n      ret += s + p.data;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  concat(n) {\x0d\n    if (this.length === 0)\x0d\n      return Buffer.alloc(0);\x0d\n    const ret = Buffer.allocUnsafe(n >>> 0);\x0d\n    let p = this.head;\x0d\n    let i = 0;\x0d\n    while (p) {\x0d\n      TypedArrayPrototypeSet(ret\x2C p.data\x2C i);\x0d\n      i += p.data.length;\x0d\n      p = p.next;\x0d\n    }\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of bytes or characters from the buffered data.\x0d\n  consume(n\x2C hasStrings) {\x0d\n    const data = this.head.data;\x0d\n    if (n < data.length) {\x0d\n      // `slice` is the same for buffers and strings.\x0d\n      const slice = data.slice(0\x2C n);\x0d\n      this.head.data = data.slice(n);\x0d\n      return slice;\x0d\n    }\x0d\n    if (n === data.length) {\x0d\n      // First chunk is a perfect match.\x0d\n      return this.shift();\x0d\n    }\x0d\n    // Result spans more than one buffer.\x0d\n    return hasStrings ? this._getString(n) : this._getBuffer(n);\x0d\n  }\x0d\n\x0d\n  first() {\x0d\n    return this.head.data;\x0d\n  }\x0d\n\x0d\n  *[SymbolIterator]() {\x0d\n    for (let p = this.head; p; p = p.next) {\x0d\n      yield p.data;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of characters from the buffered data.\x0d\n  _getString(n) {\x0d\n    let ret = '';\x0d\n    let p = this.head;\x0d\n    let c = 0;\x0d\n    do {\x0d\n      const str = p.data;\x0d\n      if (n > str.length) {\x0d\n        ret += str;\x0d\n        n -= str.length;\x0d\n      } else {\x0d\n        if (n === str.length) {\x0d\n          ret += str;\x0d\n          ++c;\x0d\n          if (p.next)\x0d\n            this.head = p.next;\x0d\n          else\x0d\n            this.head = this.tail = null;\x0d\n        } else {\x0d\n          ret += StringPrototypeSlice(str\x2C 0\x2C n);\x0d\n          this.head = p;\x0d\n          p.data = StringPrototypeSlice(str\x2C n);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n      ++c;\x0d\n    } while ((p = p.next) !== null);\x0d\n    this.length -= c;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of bytes from the buffered data.\x0d\n  _getBuffer(n) {\x0d\n    const ret = Buffer.allocUnsafe(n);\x0d\n    const retLen = n;\x0d\n    let p = this.head;\x0d\n    let c = 0;\x0d\n    do {\x0d\n      const buf = p.data;\x0d\n      if (n > buf.length) {\x0d\n        TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\x0d\n        n -= buf.length;\x0d\n      } else {\x0d\n        if (n === buf.length) {\x0d\n          TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\x0d\n          ++c;\x0d\n          if (p.next)\x0d\n            this.head = p.next;\x0d\n          else\x0d\n            this.head = this.tail = null;\x0d\n        } else {\x0d\n          TypedArrayPrototypeSet(ret\x2C\x0d\n                                 new Uint8Array(buf.buffer\x2C buf.byteOffset\x2C n)\x2C\x0d\n                                 retLen - n);\x0d\n          this.head = p;\x0d\n          p.data = buf.slice(n);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n      ++c;\x0d\n    } while ((p = p.next) !== null);\x0d\n    this.length -= c;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Make sure the linked list only shows the minimal necessary information.\x0d\n  [inspect.custom](_\x2C options) {\x0d\n    return inspect(this\x2C {\x0d\n      ...options\x2C\x0d\n      // Only inspect one level.\x0d\n      depth: 0\x2C\x0d\n      // It should not recurse.\x0d\n      customInspect: false\x0d\n    });\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x4aa59c4e96,59,278,355,C0O288C1O298C5O311C6O321C10O334C11O346C16O354,,
code-creation,LazyCompile,10,1616245,0x4aa59c55e6,98,construct node:internal/streams/destroy:225:19,0x15057cf6c70,~
script-source,54,node:internal/streams/destroy,'use strict';\x0d\n\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_MULTIPLE_CALLBACK\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kDestroy = Symbol('kDestroy');\x0d\nconst kConstruct = Symbol('kConstruct');\x0d\n\x0d\nfunction checkError(err\x2C w\x2C r) {\x0d\n  if (err) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    err.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (w && !w.errored) {\x0d\n      w.errored = err;\x0d\n    }\x0d\n    if (r && !r.errored) {\x0d\n      r.errored = err;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Backwards compat. cb() is undocumented and unused in core but\x0d\n// unfortunately might be used by modules.\x0d\nfunction destroy(err\x2C cb) {\x0d\n  const r = this._readableState;\x0d\n  const w = this._writableState;\x0d\n  // With duplex streams we use the writable side for state.\x0d\n  const s = w || r;\x0d\n\x0d\n  if ((w && w.destroyed) || (r && r.destroyed)) {\x0d\n    if (typeof cb === 'function') {\x0d\n      cb();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n\x0d\n  // We set destroyed to true before firing error callbacks in order\x0d\n  // to make it re-entrance safe in case destroy() is called within callbacks\x0d\n  checkError(err\x2C w\x2C r);\x0d\n\x0d\n  if (w) {\x0d\n    w.destroyed = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.destroyed = true;\x0d\n  }\x0d\n\x0d\n  // If still constructing then defer calling _destroy.\x0d\n  if (!s.constructed) {\x0d\n    this.once(kDestroy\x2C function(er) {\x0d\n      _destroy(this\x2C aggregateTwoErrors(er\x2C err)\x2C cb);\x0d\n    });\x0d\n  } else {\x0d\n    _destroy(this\x2C err\x2C cb);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n}\x0d\n\x0d\nfunction _destroy(self\x2C err\x2C cb) {\x0d\n  let called = false;\x0d\n\x0d\n  function onDestroy(err) {\x0d\n    if (called) {\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    const r = self._readableState;\x0d\n    const w = self._writableState;\x0d\n\x0d\n    checkError(err\x2C w\x2C r);\x0d\n\x0d\n    if (w) {\x0d\n      w.closed = true;\x0d\n    }\x0d\n    if (r) {\x0d\n      r.closed = true;\x0d\n    }\x0d\n\x0d\n    if (typeof cb === 'function') {\x0d\n      cb(err);\x0d\n    }\x0d\n\x0d\n    if (err) {\x0d\n      process.nextTick(emitErrorCloseNT\x2C self\x2C err);\x0d\n    } else {\x0d\n      process.nextTick(emitCloseNT\x2C self);\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const result = self._destroy(err || null\x2C onDestroy);\x0d\n    if (result != null) {\x0d\n      const then = result.then;\x0d\n      if (typeof then === 'function') {\x0d\n        then.call(\x0d\n          result\x2C\x0d\n          function() {\x0d\n            process.nextTick(onDestroy\x2C null);\x0d\n          }\x2C\x0d\n          function(err) {\x0d\n            process.nextTick(onDestroy\x2C err);\x0d\n          });\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    onDestroy(err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitErrorCloseNT(self\x2C err) {\x0d\n  emitErrorNT(self\x2C err);\x0d\n  emitCloseNT(self);\x0d\n}\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  const r = self._readableState;\x0d\n  const w = self._writableState;\x0d\n\x0d\n  if (w) {\x0d\n    w.closeEmitted = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.closeEmitted = true;\x0d\n  }\x0d\n\x0d\n  if ((w && w.emitClose) || (r && r.emitClose)) {\x0d\n    self.emit('close');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  const r = self._readableState;\x0d\n  const w = self._writableState;\x0d\n\x0d\n  if ((w && w.errorEmitted) || (r && r.errorEmitted)) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (w) {\x0d\n    w.errorEmitted = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.errorEmitted = true;\x0d\n  }\x0d\n\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\nfunction undestroy() {\x0d\n  const r = this._readableState;\x0d\n  const w = this._writableState;\x0d\n\x0d\n  if (r) {\x0d\n    r.constructed = true;\x0d\n    r.closed = false;\x0d\n    r.closeEmitted = false;\x0d\n    r.destroyed = false;\x0d\n    r.errored = null;\x0d\n    r.errorEmitted = false;\x0d\n    r.reading = false;\x0d\n    r.ended = false;\x0d\n    r.endEmitted = false;\x0d\n  }\x0d\n\x0d\n  if (w) {\x0d\n    w.constructed = true;\x0d\n    w.destroyed = false;\x0d\n    w.closed = false;\x0d\n    w.closeEmitted = false;\x0d\n    w.errored = null;\x0d\n    w.errorEmitted = false;\x0d\n    w.ended = false;\x0d\n    w.ending = false;\x0d\n    w.finalCalled = false;\x0d\n    w.prefinished = false;\x0d\n    w.finished = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction errorOrDestroy(stream\x2C err\x2C sync) {\x0d\n  // We have tests that rely on errors being emitted\x0d\n  // in the same tick\x2C so changing this is semver major.\x0d\n  // For now when you opt-in to autoDestroy we allow\x0d\n  // the error to be emitted nextTick. In a future\x0d\n  // semver major update we should change the default to this.\x0d\n\x0d\n  const r = stream._readableState;\x0d\n  const w = stream._writableState;\x0d\n\x0d\n  if ((w && w.destroyed) || (r && r.destroyed)) {\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if ((r && r.autoDestroy) || (w && w.autoDestroy))\x0d\n    stream.destroy(err);\x0d\n  else if (err) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    err.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (w && !w.errored) {\x0d\n      w.errored = err;\x0d\n    }\x0d\n    if (r && !r.errored) {\x0d\n      r.errored = err;\x0d\n    }\x0d\n    if (sync) {\x0d\n      process.nextTick(emitErrorNT\x2C stream\x2C err);\x0d\n    } else {\x0d\n      emitErrorNT(stream\x2C err);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction construct(stream\x2C cb) {\x0d\n  if (typeof stream._construct !== 'function') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const r = stream._readableState;\x0d\n  const w = stream._writableState;\x0d\n\x0d\n  if (r) {\x0d\n    r.constructed = false;\x0d\n  }\x0d\n  if (w) {\x0d\n    w.constructed = false;\x0d\n  }\x0d\n\x0d\n  stream.once(kConstruct\x2C cb);\x0d\n\x0d\n  if (stream.listenerCount(kConstruct) > 1) {\x0d\n    // Duplex\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.nextTick(constructNT\x2C stream);\x0d\n}\x0d\n\x0d\nfunction constructNT(stream) {\x0d\n  let called = false;\x0d\n\x0d\n  function onConstruct(err) {\x0d\n    if (called) {\x0d\n      errorOrDestroy(stream\x2C err ?? new ERR_MULTIPLE_CALLBACK());\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    const r = stream._readableState;\x0d\n    const w = stream._writableState;\x0d\n    const s = w || r;\x0d\n\x0d\n    if (r) {\x0d\n      r.constructed = true;\x0d\n    }\x0d\n    if (w) {\x0d\n      w.constructed = true;\x0d\n    }\x0d\n\x0d\n    if (s.destroyed) {\x0d\n      stream.emit(kDestroy\x2C err);\x0d\n    } else if (err) {\x0d\n      errorOrDestroy(stream\x2C err\x2C true);\x0d\n    } else {\x0d\n      process.nextTick(emitConstructNT\x2C stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const result = stream._construct(onConstruct);\x0d\n    if (result != null) {\x0d\n      const then = result.then;\x0d\n      if (typeof then === 'function') {\x0d\n        then.call(\x0d\n          result\x2C\x0d\n          function() {\x0d\n            if (!called) {\x0d\n              process.nextTick(onConstruct\x2C null);\x0d\n            }\x0d\n          }\x2C\x0d\n          function(err) {\x0d\n            if (!called) {\x0d\n              process.nextTick(onConstruct\x2C err);\x0d\n            }\x0d\n          });\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    onConstruct(err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitConstructNT(stream) {\x0d\n  stream.emit(kConstruct);\x0d\n}\x0d\n\x0d\nfunction isRequest(stream) {\x0d\n  return stream && stream.setHeader && typeof stream.abort === 'function';\x0d\n}\x0d\n\x0d\n// Normalize destroy for legacy.\x0d\nfunction destroyer(stream\x2C err) {\x0d\n  if (!stream) return;\x0d\n  if (isRequest(stream)) return stream.abort();\x0d\n  if (isRequest(stream.req)) return stream.req.abort();\x0d\n  if (typeof stream.destroy === 'function') return stream.destroy(err);\x0d\n  if (typeof stream.close === 'function') return stream.close();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  construct\x2C\x0d\n  destroyer\x2C\x0d\n  destroy\x2C\x0d\n  undestroy\x2C\x0d\n  errorOrDestroy\x0d\n};\x0d\n
code-source-info,0x4aa59c55e6,54,4850,5261,C0O4886C8O4920C9O4927C10O4955C15O4991C20O5012C24O5026C25O5040C29O5057C33O5071C34O5085C38O5111C45O5116C48O5111C54O5149C61O5163C64O5149C72O5175C77O5202C78O5209C79O5220C82O5228C90O5228C97O5260,,
code-creation,LazyCompile,10,1618295,0x4aa59c62be,266,Writable node:internal/streams/writable:219:18,0x1945c71aec8,~
script-source,63,node:internal/streams/writable,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// A bit simpler than readable streams.\x0d\n// Implement an async ._write(chunk\x2C encoding\x2C cb)\x2C and it'll handle all\x0d\n// the drain event emission and buffering.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeSymbolHasInstance\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Writable;\x0d\nWritable.WritableState = WritableState;\x0d\n\x0d\nconst EE = require('events');\x0d\nconst Stream = require('internal/streams/legacy').Stream;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\n\x0d\nconst {\x0d\n  addAbortSignalNoValidate\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\n\x0d\nconst {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n} = require('internal/streams/state');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  ERR_MULTIPLE_CALLBACK\x2C\x0d\n  ERR_STREAM_CANNOT_PIPE\x2C\x0d\n  ERR_STREAM_DESTROYED\x2C\x0d\n  ERR_STREAM_ALREADY_FINISHED\x2C\x0d\n  ERR_STREAM_NULL_VALUES\x2C\x0d\n  ERR_STREAM_WRITE_AFTER_END\x2C\x0d\n  ERR_UNKNOWN_ENCODING\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { errorOrDestroy } = destroyImpl;\x0d\n\x0d\nObjectSetPrototypeOf(Writable.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(Writable\x2C Stream);\x0d\n\x0d\nfunction nop() {}\x0d\n\x0d\nconst kOnFinished = Symbol('kOnFinished');\x0d\n\x0d\nfunction WritableState(options\x2C stream\x2C isDuplex) {\x0d\n  // Duplex streams are both readable and writable\x2C but share\x0d\n  // the same options object.\x0d\n  // However\x2C some cases require setting options to different\x0d\n  // values for the readable and the writable sides of the duplex stream\x2C\x0d\n  // e.g. options.readableObjectMode vs. options.writableObjectMode\x2C etc.\x0d\n  if (typeof isDuplex !== 'boolean')\x0d\n    isDuplex = stream instanceof Stream.Duplex;\x0d\n\x0d\n  // Object stream flag to indicate whether or not this stream\x0d\n  // contains buffers or objects.\x0d\n  this.objectMode = !!(options && options.objectMode);\x0d\n\x0d\n  if (isDuplex)\x0d\n    this.objectMode = this.objectMode ||\x0d\n      !!(options && options.writableObjectMode);\x0d\n\x0d\n  // The point at which write() starts returning false\x0d\n  // Note: 0 is a valid value\x2C means that we always return false if\x0d\n  // the entire buffer is not flushed immediately on write().\x0d\n  this.highWaterMark = options ?\x0d\n    getHighWaterMark(this\x2C options\x2C 'writableHighWaterMark'\x2C isDuplex) :\x0d\n    getDefaultHighWaterMark(false);\x0d\n\x0d\n  // if _final has been called.\x0d\n  this.finalCalled = false;\x0d\n\x0d\n  // drain event flag.\x0d\n  this.needDrain = false;\x0d\n  // At the start of calling end()\x0d\n  this.ending = false;\x0d\n  // When end() has been called\x2C and returned.\x0d\n  this.ended = false;\x0d\n  // When 'finish' is emitted.\x0d\n  this.finished = false;\x0d\n\x0d\n  // Has it been destroyed\x0d\n  this.destroyed = false;\x0d\n\x0d\n  // Should we decode strings into buffers before passing to _write?\x0d\n  // this is here so that some node-core streams can optimize string\x0d\n  // handling at a lower level.\x0d\n  const noDecode = !!(options && options.decodeStrings === false);\x0d\n  this.decodeStrings = !noDecode;\x0d\n\x0d\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\x0d\n  // encoding is 'binary' so we have to make this configurable.\x0d\n  // Everything else in the universe uses 'utf8'\x2C though.\x0d\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\x0d\n\x0d\n  // Not an actual buffer we keep track of\x2C but a measurement\x0d\n  // of how much we're waiting to get pushed to some underlying\x0d\n  // socket or file.\x0d\n  this.length = 0;\x0d\n\x0d\n  // A flag to see when we're in the middle of a write.\x0d\n  this.writing = false;\x0d\n\x0d\n  // When true all writes will be buffered until .uncork() call.\x0d\n  this.corked = 0;\x0d\n\x0d\n  // A flag to be able to tell if the onwrite cb is called immediately\x2C\x0d\n  // or on a later tick.  We set this to true at first\x2C because any\x0d\n  // actions that shouldn't happen until "later" should generally also\x0d\n  // not happen before the first write call.\x0d\n  this.sync = true;\x0d\n\x0d\n  // A flag to know if we're processing previously buffered items\x2C which\x0d\n  // may call the _write() callback in the same tick\x2C so that we don't\x0d\n  // end up in an overlapped onwrite situation.\x0d\n  this.bufferProcessing = false;\x0d\n\x0d\n  // The callback that's passed to _write(chunk\x2C cb).\x0d\n  this.onwrite = onwrite.bind(undefined\x2C stream);\x0d\n\x0d\n  // The callback that the user supplies to write(chunk\x2C encoding\x2C cb).\x0d\n  this.writecb = null;\x0d\n\x0d\n  // The amount that is being written when _write is called.\x0d\n  this.writelen = 0;\x0d\n\x0d\n  // Storage for data passed to the afterWrite() callback in case of\x0d\n  // synchronous _write() completion.\x0d\n  this.afterWriteTickInfo = null;\x0d\n\x0d\n  resetBuffer(this);\x0d\n\x0d\n  // Number of pending user-supplied write callbacks\x0d\n  // this must be 0 before 'finish' can be emitted.\x0d\n  this.pendingcb = 0;\x0d\n\x0d\n  // Stream is still being constructed and cannot be\x0d\n  // destroyed until construction finished or failed.\x0d\n  // Async construction is opt in\x2C therefore we start as\x0d\n  // constructed.\x0d\n  this.constructed = true;\x0d\n\x0d\n  // Emit prefinish if the only thing we're waiting for is _write cbs\x0d\n  // This is relevant for synchronous Transform streams.\x0d\n  this.prefinished = false;\x0d\n\x0d\n  // True if the error was already emitted and should not be thrown again.\x0d\n  this.errorEmitted = false;\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  this.emitClose = !options || options.emitClose !== false;\x0d\n\x0d\n  // Should .destroy() be called after 'finish' (and potentially 'end').\x0d\n  this.autoDestroy = !options || options.autoDestroy !== false;\x0d\n\x0d\n  // Indicates whether the stream has errored. When true all write() calls\x0d\n  // should return false. This is needed since when autoDestroy\x0d\n  // is disabled we need a way to tell whether the stream has failed.\x0d\n  this.errored = null;\x0d\n\x0d\n  // Indicates whether the stream has finished destroying.\x0d\n  this.closed = false;\x0d\n\x0d\n  // True if close has been emitted or would have been emitted\x0d\n  // depending on emitClose.\x0d\n  this.closeEmitted = false;\x0d\n\x0d\n  this[kOnFinished] = [];\x0d\n}\x0d\n\x0d\nfunction resetBuffer(state) {\x0d\n  state.buffered = [];\x0d\n  state.bufferedIndex = 0;\x0d\n  state.allBuffers = true;\x0d\n  state.allNoop = true;\x0d\n}\x0d\n\x0d\nWritableState.prototype.getBuffer = function getBuffer() {\x0d\n  return ArrayPrototypeSlice(this.buffered\x2C this.bufferedIndex);\x0d\n};\x0d\n\x0d\nObjectDefineProperty(WritableState.prototype\x2C 'bufferedRequestCount'\x2C {\x0d\n  get() {\x0d\n    return this.buffered.length - this.bufferedIndex;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction Writable(options) {\x0d\n  // Writable ctor is applied to Duplexes\x2C too.\x0d\n  // `realHasInstance` is necessary because using plain `instanceof`\x0d\n  // would return false\x2C as no `_writableState` property is attached.\x0d\n\x0d\n  // Trying to use the custom `instanceof` for Writable here will also break the\x0d\n  // Node.js LazyTransform implementation\x2C which has a non-trivial getter for\x0d\n  // `_writableState` that would lead to infinite recursion.\x0d\n\x0d\n  // Checking for a Stream.Duplex instance is faster here instead of inside\x0d\n  // the WritableState constructor\x2C at least with V8 6.5.\x0d\n  const isDuplex = (this instanceof Stream.Duplex);\x0d\n\x0d\n  if (!isDuplex && !FunctionPrototypeSymbolHasInstance(Writable\x2C this))\x0d\n    return new Writable(options);\x0d\n\x0d\n  this._writableState = new WritableState(options\x2C this\x2C isDuplex);\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.write === 'function')\x0d\n      this._write = options.write;\x0d\n\x0d\n    if (typeof options.writev === 'function')\x0d\n      this._writev = options.writev;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.final === 'function')\x0d\n      this._final = options.final;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n    if (options.signal)\x0d\n      addAbortSignalNoValidate(options.signal\x2C this);\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  destroyImpl.construct(this\x2C () => {\x0d\n    const state = this._writableState;\x0d\n\x0d\n    if (!state.writing) {\x0d\n      clearBuffer(this\x2C state);\x0d\n    }\x0d\n\x0d\n    finishMaybe(this\x2C state);\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Writable\x2C SymbolHasInstance\x2C {\x0d\n  value: function(object) {\x0d\n    if (FunctionPrototypeSymbolHasInstance(this\x2C object)) return true;\x0d\n    if (this !== Writable) return false;\x0d\n\x0d\n    return object && object._writableState instanceof WritableState;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Otherwise people can pipe Writable streams\x2C which is just wrong.\x0d\nWritable.prototype.pipe = function() {\x0d\n  errorOrDestroy(this\x2C new ERR_STREAM_CANNOT_PIPE());\x0d\n};\x0d\n\x0d\nfunction _write(stream\x2C chunk\x2C encoding\x2C cb) {\x0d\n  const state = stream._writableState;\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = state.defaultEncoding;\x0d\n  } else {\x0d\n    if (!encoding)\x0d\n      encoding = state.defaultEncoding;\x0d\n    else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding))\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (typeof cb !== 'function')\x0d\n      cb = nop;\x0d\n  }\x0d\n\x0d\n  if (chunk === null) {\x0d\n    throw new ERR_STREAM_NULL_VALUES();\x0d\n  } else if (!state.objectMode) {\x0d\n    if (typeof chunk === 'string') {\x0d\n      if (state.decodeStrings !== false) {\x0d\n        chunk = Buffer.from(chunk\x2C encoding);\x0d\n        encoding = 'buffer';\x0d\n      }\x0d\n    } else if (chunk instanceof Buffer) {\x0d\n      encoding = 'buffer';\x0d\n    } else if (Stream._isUint8Array(chunk)) {\x0d\n      chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n      encoding = 'buffer';\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (state.ending) {\x0d\n    err = new ERR_STREAM_WRITE_AFTER_END();\x0d\n  } else if (state.destroyed) {\x0d\n    err = new ERR_STREAM_DESTROYED('write');\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    process.nextTick(cb\x2C err);\x0d\n    errorOrDestroy(stream\x2C err\x2C true);\x0d\n    return err;\x0d\n  }\x0d\n  state.pendingcb++;\x0d\n  return writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C cb);\x0d\n}\x0d\n\x0d\nWritable.prototype.write = function(chunk\x2C encoding\x2C cb) {\x0d\n  return _write(this\x2C chunk\x2C encoding\x2C cb) === true;\x0d\n};\x0d\n\x0d\nWritable.prototype.cork = function() {\x0d\n  this._writableState.corked++;\x0d\n};\x0d\n\x0d\nWritable.prototype.uncork = function() {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  if (state.corked) {\x0d\n    state.corked--;\x0d\n\x0d\n    if (!state.writing)\x0d\n      clearBuffer(this\x2C state);\x0d\n  }\x0d\n};\x0d\n\x0d\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\x0d\n  // node::ParseEncoding() requires lower case.\x0d\n  if (typeof encoding === 'string')\x0d\n    encoding = StringPrototypeToLowerCase(encoding);\x0d\n  if (!Buffer.isEncoding(encoding))\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  this._writableState.defaultEncoding = encoding;\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// If we're already writing something\x2C then just put this\x0d\n// in the queue\x2C and wait our turn.  Otherwise\x2C call _write\x0d\n// If we return false\x2C then we need a drain event\x2C so set that flag.\x0d\nfunction writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C callback) {\x0d\n  const len = state.objectMode ? 1 : chunk.length;\x0d\n\x0d\n  state.length += len;\x0d\n\x0d\n  // stream._write resets state.length\x0d\n  const ret = state.length < state.highWaterMark;\x0d\n  // We must ensure that previous needDrain will not be reset to false.\x0d\n  if (!ret)\x0d\n    state.needDrain = true;\x0d\n\x0d\n  if (state.writing || state.corked || state.errored || !state.constructed) {\x0d\n    state.buffered.push({ chunk\x2C encoding\x2C callback });\x0d\n    if (state.allBuffers && encoding !== 'buffer') {\x0d\n      state.allBuffers = false;\x0d\n    }\x0d\n    if (state.allNoop && callback !== nop) {\x0d\n      state.allNoop = false;\x0d\n    }\x0d\n  } else {\x0d\n    state.writelen = len;\x0d\n    state.writecb = callback;\x0d\n    state.writing = true;\x0d\n    state.sync = true;\x0d\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\x0d\n    state.sync = false;\x0d\n  }\x0d\n\x0d\n  // Return false if errored or destroyed in order to break\x0d\n  // any synchronous while(stream.write(data)) loops.\x0d\n  return ret && !state.errored && !state.destroyed;\x0d\n}\x0d\n\x0d\nfunction doWrite(stream\x2C state\x2C writev\x2C len\x2C chunk\x2C encoding\x2C cb) {\x0d\n  state.writelen = len;\x0d\n  state.writecb = cb;\x0d\n  state.writing = true;\x0d\n  state.sync = true;\x0d\n  if (state.destroyed)\x0d\n    state.onwrite(new ERR_STREAM_DESTROYED('write'));\x0d\n  else if (writev)\x0d\n    stream._writev(chunk\x2C state.onwrite);\x0d\n  else\x0d\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\x0d\n  state.sync = false;\x0d\n}\x0d\n\x0d\nfunction onwriteError(stream\x2C state\x2C er\x2C cb) {\x0d\n  --state.pendingcb;\x0d\n\x0d\n  cb(er);\x0d\n  // Ensure callbacks are invoked even when autoDestroy is\x0d\n  // not enabled. Passing `er` here doesn't make sense since\x0d\n  // it's related to one specific write\x2C not to the buffered\x0d\n  // writes.\x0d\n  errorBuffer(state);\x0d\n  // This can emit error\x2C but error must always follow cb.\x0d\n  errorOrDestroy(stream\x2C er);\x0d\n}\x0d\n\x0d\nfunction onwrite(stream\x2C er) {\x0d\n  const state = stream._writableState;\x0d\n  const sync = state.sync;\x0d\n  const cb = state.writecb;\x0d\n\x0d\n  if (typeof cb !== 'function') {\x0d\n    errorOrDestroy(stream\x2C new ERR_MULTIPLE_CALLBACK());\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  state.writing = false;\x0d\n  state.writecb = null;\x0d\n  state.length -= state.writelen;\x0d\n  state.writelen = 0;\x0d\n\x0d\n  if (er) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    er.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (!state.errored) {\x0d\n      state.errored = er;\x0d\n    }\x0d\n\x0d\n    // In case of duplex streams we need to notify the readable side of the\x0d\n    // error.\x0d\n    if (stream._readableState && !stream._readableState.errored) {\x0d\n      stream._readableState.errored = er;\x0d\n    }\x0d\n\x0d\n    if (sync) {\x0d\n      process.nextTick(onwriteError\x2C stream\x2C state\x2C er\x2C cb);\x0d\n    } else {\x0d\n      onwriteError(stream\x2C state\x2C er\x2C cb);\x0d\n    }\x0d\n  } else {\x0d\n    if (state.buffered.length > state.bufferedIndex) {\x0d\n      clearBuffer(stream\x2C state);\x0d\n    }\x0d\n\x0d\n    if (sync) {\x0d\n      // It is a common case that the callback passed to .write() is always\x0d\n      // the same. In that case\x2C we do not schedule a new nextTick()\x2C but\x0d\n      // rather just increase a counter\x2C to improve performance and avoid\x0d\n      // memory allocations.\x0d\n      if (state.afterWriteTickInfo !== null &&\x0d\n          state.afterWriteTickInfo.cb === cb) {\x0d\n        state.afterWriteTickInfo.count++;\x0d\n      } else {\x0d\n        state.afterWriteTickInfo = { count: 1\x2C cb\x2C stream\x2C state };\x0d\n        process.nextTick(afterWriteTick\x2C state.afterWriteTickInfo);\x0d\n      }\x0d\n    } else {\x0d\n      afterWrite(stream\x2C state\x2C 1\x2C cb);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterWriteTick({ stream\x2C state\x2C count\x2C cb }) {\x0d\n  state.afterWriteTickInfo = null;\x0d\n  return afterWrite(stream\x2C state\x2C count\x2C cb);\x0d\n}\x0d\n\x0d\nfunction afterWrite(stream\x2C state\x2C count\x2C cb) {\x0d\n  const needDrain = !state.ending && !stream.destroyed && state.length === 0 &&\x0d\n    state.needDrain;\x0d\n  if (needDrain) {\x0d\n    state.needDrain = false;\x0d\n    stream.emit('drain');\x0d\n  }\x0d\n\x0d\n  while (count-- > 0) {\x0d\n    state.pendingcb--;\x0d\n    cb();\x0d\n  }\x0d\n\x0d\n  if (state.destroyed) {\x0d\n    errorBuffer(state);\x0d\n  }\x0d\n\x0d\n  finishMaybe(stream\x2C state);\x0d\n}\x0d\n\x0d\n// If there's something in the buffer waiting\x2C then invoke callbacks.\x0d\nfunction errorBuffer(state) {\x0d\n  if (state.writing) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\x0d\n    const { chunk\x2C callback } = state.buffered[n];\x0d\n    const len = state.objectMode ? 1 : chunk.length;\x0d\n    state.length -= len;\x0d\n    callback(new ERR_STREAM_DESTROYED('write'));\x0d\n  }\x0d\n\x0d\n  const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n    onfinishCallbacks[i](new ERR_STREAM_DESTROYED('end'));\x0d\n  }\x0d\n\x0d\n  resetBuffer(state);\x0d\n}\x0d\n\x0d\n// If there's something in the buffer waiting\x2C then process it.\x0d\nfunction clearBuffer(stream\x2C state) {\x0d\n  if (state.corked ||\x0d\n      state.bufferProcessing ||\x0d\n      state.destroyed ||\x0d\n      !state.constructed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const { buffered\x2C bufferedIndex\x2C objectMode } = state;\x0d\n  const bufferedLength = buffered.length - bufferedIndex;\x0d\n\x0d\n  if (!bufferedLength) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let i = bufferedIndex;\x0d\n\x0d\n  state.bufferProcessing = true;\x0d\n  if (bufferedLength > 1 && stream._writev) {\x0d\n    state.pendingcb -= bufferedLength - 1;\x0d\n\x0d\n    const callback = state.allNoop ? nop : (err) => {\x0d\n      for (let n = i; n < buffered.length; ++n) {\x0d\n        buffered[n].callback(err);\x0d\n      }\x0d\n    };\x0d\n    // Make a copy of `buffered` if it's going to be used by `callback` above\x2C\x0d\n    // since `doWrite` will mutate the array.\x0d\n    const chunks = state.allNoop && i === 0 ?\x0d\n      buffered : ArrayPrototypeSlice(buffered\x2C i);\x0d\n    chunks.allBuffers = state.allBuffers;\x0d\n\x0d\n    doWrite(stream\x2C state\x2C true\x2C state.length\x2C chunks\x2C ''\x2C callback);\x0d\n\x0d\n    resetBuffer(state);\x0d\n  } else {\x0d\n    do {\x0d\n      const { chunk\x2C encoding\x2C callback } = buffered[i];\x0d\n      buffered[i++] = null;\x0d\n      const len = objectMode ? 1 : chunk.length;\x0d\n      doWrite(stream\x2C state\x2C false\x2C len\x2C chunk\x2C encoding\x2C callback);\x0d\n    } while (i < buffered.length && !state.writing);\x0d\n\x0d\n    if (i === buffered.length) {\x0d\n      resetBuffer(state);\x0d\n    } else if (i > 256) {\x0d\n      buffered.splice(0\x2C i);\x0d\n      state.bufferedIndex = 0;\x0d\n    } else {\x0d\n      state.bufferedIndex = i;\x0d\n    }\x0d\n  }\x0d\n  state.bufferProcessing = false;\x0d\n}\x0d\n\x0d\nWritable.prototype._write = function(chunk\x2C encoding\x2C cb) {\x0d\n  if (this._writev) {\x0d\n    this._writev([{ chunk\x2C encoding }]\x2C cb);\x0d\n  } else {\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()');\x0d\n  }\x0d\n};\x0d\n\x0d\nWritable.prototype._writev = null;\x0d\n\x0d\nWritable.prototype.end = function(chunk\x2C encoding\x2C cb) {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  if (typeof chunk === 'function') {\x0d\n    cb = chunk;\x0d\n    chunk = null;\x0d\n    encoding = null;\x0d\n  } else if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (chunk !== null && chunk !== undefined) {\x0d\n    const ret = _write(this\x2C chunk\x2C encoding);\x0d\n    if (ret instanceof Error) {\x0d\n      err = ret;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // .end() fully uncorks.\x0d\n  if (state.corked) {\x0d\n    state.corked = 1;\x0d\n    this.uncork();\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    // Do nothing...\x0d\n  } else if (!state.errored && !state.ending) {\x0d\n    // This is forgiving in terms of unnecessary calls to end() and can hide\x0d\n    // logic errors. However\x2C usually such errors are harmless and causing a\x0d\n    // hard error can be disproportionately destructive. It is not always\x0d\n    // trivial for the user to determine whether end() needs to be called\x0d\n    // or not.\x0d\n\x0d\n    state.ending = true;\x0d\n    finishMaybe(this\x2C state\x2C true);\x0d\n    state.ended = true;\x0d\n  } else if (state.finished) {\x0d\n    err = new ERR_STREAM_ALREADY_FINISHED('end');\x0d\n  } else if (state.destroyed) {\x0d\n    err = new ERR_STREAM_DESTROYED('end');\x0d\n  }\x0d\n\x0d\n  if (typeof cb === 'function') {\x0d\n    if (err || state.finished) {\x0d\n      process.nextTick(cb\x2C err);\x0d\n    } else {\x0d\n      state[kOnFinished].push(cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction needFinish(state) {\x0d\n  return (state.ending &&\x0d\n          state.constructed &&\x0d\n          state.length === 0 &&\x0d\n          !state.errored &&\x0d\n          state.buffered.length === 0 &&\x0d\n          !state.finished &&\x0d\n          !state.writing &&\x0d\n          !state.errorEmitted &&\x0d\n          !state.closeEmitted);\x0d\n}\x0d\n\x0d\nfunction callFinal(stream\x2C state) {\x0d\n  let called = false;\x0d\n\x0d\n  function onFinish(err) {\x0d\n    if (called) {\x0d\n      errorOrDestroy(stream\x2C err ?? ERR_MULTIPLE_CALLBACK());\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    state.pendingcb--;\x0d\n    if (err) {\x0d\n      const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n      for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n        onfinishCallbacks[i](err);\x0d\n      }\x0d\n      errorOrDestroy(stream\x2C err\x2C state.sync);\x0d\n    } else if (needFinish(state)) {\x0d\n      state.prefinished = true;\x0d\n      stream.emit('prefinish');\x0d\n      // Backwards compat. Don't check state.sync here.\x0d\n      // Some streams assume 'finish' will be emitted\x0d\n      // asynchronously relative to _final callback.\x0d\n      state.pendingcb++;\x0d\n      process.nextTick(finish\x2C stream\x2C state);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  state.sync = true;\x0d\n  state.pendingcb++;\x0d\n\x0d\n  try {\x0d\n    const result = stream._final(onFinish);\x0d\n    if (result != null) {\x0d\n      const then = result.then;\x0d\n      if (typeof then === 'function') {\x0d\n        then.call(\x0d\n          result\x2C\x0d\n          function() {\x0d\n            if (!called) {\x0d\n              process.nextTick(onFinish\x2C null);\x0d\n            }\x0d\n          }\x2C\x0d\n          function(err) {\x0d\n            if (!called) {\x0d\n              process.nextTick(onFinish\x2C err);\x0d\n            }\x0d\n          });\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    onFinish(err);\x0d\n  }\x0d\n\x0d\n  state.sync = false;\x0d\n}\x0d\n\x0d\nfunction prefinish(stream\x2C state) {\x0d\n  if (!state.prefinished && !state.finalCalled) {\x0d\n    if (typeof stream._final === 'function' && !state.destroyed) {\x0d\n      state.finalCalled = true;\x0d\n      callFinal(stream\x2C state);\x0d\n    } else {\x0d\n      state.prefinished = true;\x0d\n      stream.emit('prefinish');\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction finishMaybe(stream\x2C state\x2C sync) {\x0d\n  if (needFinish(state)) {\x0d\n    prefinish(stream\x2C state);\x0d\n    if (state.pendingcb === 0 && needFinish(state)) {\x0d\n      state.pendingcb++;\x0d\n      if (sync) {\x0d\n        process.nextTick(finish\x2C stream\x2C state);\x0d\n      } else {\x0d\n        finish(stream\x2C state);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction finish(stream\x2C state) {\x0d\n  state.pendingcb--;\x0d\n  state.finished = true;\x0d\n\x0d\n  const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n    onfinishCallbacks[i]();\x0d\n  }\x0d\n\x0d\n  stream.emit('finish');\x0d\n\x0d\n  if (state.autoDestroy) {\x0d\n    // In case of duplex streams we need a way to detect\x0d\n    // if the readable side is ready for autoDestroy as well.\x0d\n    const rState = stream._readableState;\x0d\n    const autoDestroy = !rState || (\x0d\n      rState.autoDestroy &&\x0d\n      // We don't expect the readable to ever 'end'\x0d\n      // if readable is explicitly set to false.\x0d\n      (rState.endEmitted || rState.readable === false)\x0d\n    );\x0d\n    if (autoDestroy) {\x0d\n      stream.destroy();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Writable.prototype\x2C {\x0d\n\x0d\n  destroyed: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.destroyed : false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // Backward compatibility\x2C the user is explicitly managing destroyed.\x0d\n      if (this._writableState) {\x0d\n        this._writableState.destroyed = value;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writable: {\x0d\n    get() {\x0d\n      const w = this._writableState;\x0d\n      // w.writable === false means that this is part of a Duplex stream\x0d\n      // where the writable side was disabled upon construction.\x0d\n      // Compat. The user might manually disable writable side through\x0d\n      // deprecated setter.\x0d\n      return !!w && w.writable !== false && !w.destroyed && !w.errored &&\x0d\n        !w.ending && !w.ended;\x0d\n    }\x2C\x0d\n    set(val) {\x0d\n      // Backwards compatible.\x0d\n      if (this._writableState) {\x0d\n        this._writableState.writable = !!val;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableFinished: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.finished : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableObjectMode: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.objectMode : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableBuffer: {\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.getBuffer();\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableEnded: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.ending : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableNeedDrain: {\x0d\n    get() {\x0d\n      const wState = this._writableState;\x0d\n      if (!wState) return false;\x0d\n      return !wState.destroyed && !wState.ending && wState.needDrain;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableHighWaterMark: {\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.highWaterMark;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableCorked: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.corked : 0;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableLength: {\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.length;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nconst destroy = destroyImpl.destroy;\x0d\nWritable.prototype.destroy = function(err\x2C cb) {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  // Invoke pending callbacks.\x0d\n  if (!state.destroyed &&\x0d\n    (state.bufferedIndex < state.buffered.length ||\x0d\n      state[kOnFinished].length)) {\x0d\n    process.nextTick(errorBuffer\x2C state);\x0d\n  }\x0d\n\x0d\n  destroy.call(this\x2C err\x2C cb);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nWritable.prototype._undestroy = destroyImpl.undestroy;\x0d\nWritable.prototype._destroy = function(err\x2C cb) {\x0d\n  cb(err);\x0d\n};\x0d\n\x0d\nWritable.prototype[EE.captureRejectionSymbol] = function(err) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n
code-source-info,0x4aa59c62be,63,7627,9195,C0O7627C9O8212C16O8229C19O8236C23O8218C27O8250C33O8268C44O8268C51O8325C58O8332C63O8354C64O8360C83O8382C88O8380C92O8431C96O8470C104O8499C107O8521C111O8511C115O8554C123O8584C126O8607C130O8597C134O8641C142O8672C145O8696C149O8686C153O8731C161O8760C164O8782C168O8772C172O8815C180O8848C183O8874C187O8864C191O8902C197O8917C204O8950C212O8917C217O8975C224O8982C232O8982C238O9008C245O9020C258O9020C265O9194,,
code-creation,LazyCompile,10,1622600,0x4aa59c832e,341,WritableState node:internal/streams/writable:77:23,0x1945c71ad68,~
code-source-info,0x4aa59c832e
code-creation,LazyCompile,10,1623098,0x4aa59c873e,23,resetBuffer node:internal/streams/writable:202:21,0x1945c71adb8,~
code-source-info,0x4aa59c873e,63,7206,7323,C0O7219C2O7234C6O7243C7O7263C11O7271C12O7288C16O7299C17O7313C22O7322,,
code-creation,LazyCompile,10,1623305,0x4aa59c8846,21,set node:internal/streams/readable:1174:8,0x1945c70d1d8,~
code-source-info,0x4aa59c8846,56,36985,37117,C0O37037C6O37069C13O37097C15O37093C20O37116,,
code-creation,LazyCompile,10,1623507,0x4aa59c899e,131,createHandle node:net:137:22,0x22cec1694f8,~
code-source-info,0x4aa59c899e,101,3745,4121,C0O3766C13O3766C18O3810C23O3810C28O3834C30O3843C35O3862C42O3886C46O3898C49O3912C57O3921C60O3935C67O3869C72O3949C73O3960C75O3969C80O3987C87O4010C91O4022C94O4035C102O4044C105O4057C112O3994C117O4071C118O4082C125O4088C130O4082,,
code-creation,LazyCompile,10,1623695,0x4aa59c8b3e,14,set node:net:1754:6,0x22cec16b538,~
code-source-info,0x4aa59c8b3e,101,48768,48801,C0O48774C2O48786C7O48795C13O48799,,
code-creation,LazyCompile,10,1623881,0x4aa59c8c2e,8,get node:net:1753:6,0x22cec16b4e8,~
code-source-info,0x4aa59c8c2e,101,48732,48760,C0O48737C2O48749C4O48748C7O48758,,
code-creation,LazyCompile,10,1624175,0x4aa59c8dde,196,Readable.on node:internal/streams/readable:874:33,0x1945c70cb10,~
code-source-info,0x4aa59c8dde,56,28621,29547,C0O28647C5O28654C10O28664C15O28667C29O28667C35O28709C40O28730C42O28737C47O28922C55O28922C62O28948C65O28915C69O29044C75O29052C80O29075C85O29075C91O29095C93O29102C98O29136C104O29157C110O29185C112O29230C118O29209C122O29245C123O29259C127O29275C128O29297C132O29313C140O29340C145O29354C150O29313C155O29381C161O29400C164O29400C170O29445C176O29465C179O29473C187O29473C193O29533C195O29544,,
code-creation,LazyCompile,10,1624981,0x4aa59c9056,135,initSocketHandle node:net:254:26,0x22cec1696d8,~
code-source-info,0x4aa59c9056,101,6586,7186,C0O6603C5O6603C9O6620C10O6635C14O6724C20O6745C27O6753C32O6767C36O6785C43O6802C45O6800C49O6821C51O6826C57O6864C62O6845C66O6843C70O6895C72O6900C74O6899C78O6915C80O6952C82O6957C84O6956C88O6977C90O7019C94O7038C99O7043C105O7077C106O7084C107O7094C109O7099C114O7108C118O7140C123O7148C128O7148C134O7185,,
code-creation,LazyCompile,10,1625415,0x4aa59c9286,120,undestroy node:internal/streams/destroy:160:19,0x15057cf6bb0,~
code-source-info,0x4aa59c9286,54,3223,3849,C0O3246C5O3280C10O3301C14O3315C15O3329C19O3342C20O3351C24O3365C25O3380C29O3394C30O3406C34O3420C35O3430C39O3443C40O3458C44O3472C45O3482C49O3496C50O3504C54O3518C55O3531C59O3550C63O3564C64O3578C68O3591C69O3603C73O3617C74O3626C78O3640C79O3655C83O3669C84O3679C88O3692C89O3707C93O3721C94O3729C98O3743C99O3752C103O3766C104O3780C108O3794C109O3808C113O3822C114O3833C119O3848,,
code-creation,LazyCompile,10,1625831,0x4aa59c9486,32,getNewAsyncId node:net:156:23,0x22cec169548,~
code-source-info,0x4aa59c9486,101,4149,4268,C0O4163C4O4196C14O4230C17O4230C22O4252C27O4252C31O4265,,
code-creation,LazyCompile,10,1626045,0x4aa59c9586,5,get node:internal/bootstrap/pre_execution:370:8,0x24dc49d8478,~
code-source-info,0x4aa59c9586,96,12136,12171,C0O12148C4O12164,,
code-creation,LazyCompile,10,1626188,0x4aa59c965e,5,get C:\\Users\\jerso\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js:19:10,0x24050b38000,~
code-source-info,0x4aa59c965e,140,392,404,C0O398C4O404,,
tick,0x22e326833c3,1628891,0,0x0,0,0x22e32683629,0x22e32687912,0x24050b182db,0x24050b17fc8,0x24050b28654,0x24050b27cde,0x24050b15f27,0x24050b15af2,0x24050b149a3,0x24050b1474d,0x22cec14654c,0x22cec142065
code-creation,Function,11,1629047,0x22e3268a5e0,1148,readPackageScope node:internal/modules/cjs/loader:321:26,0x24dc49db228,^
code-source-info,0x22e3268a5e0,111,9239,9772,,,
code-creation,Function,11,1629150,0x22e3268aac0,216, node:vm:313:27,0x24050b2e198,^
code-source-info,0x22e3268aac0,88,10064,10115,,,
code-creation,Function,11,1629257,0x22e3268ac00,72,isUint32 node:internal/validators:40:18,0x3eae9abccc0,^
code-source-info,0x22e3268ac00,15,835,882,,,
code-creation,Function,11,1629352,0x22e3268acc0,40,noop node:internal/util/debuglog:47:14,0xc194f61ca0,^
code-source-info,0x22e3268acc0,22,1465,1473,,,
code-creation,Function,11,1629483,0x22e3268ad60,1020,debuglog node:internal/util/debuglog:71:18,0xc194f61d40,^
code-source-info,0x22e3268ad60,22,2302,3328,,,
code-creation,Function,11,1629572,0x22e3268b1c0,252,canBeRequiredByUsers node:internal/bootstrap/loaders:240:30,0x3eae9a8fb20,^
code-source-info,0x22e3268b1c0,9,7593,7692,,,
code-creation,Function,11,1629663,0x22e3268b320,72,isInt32 node:internal/validators:36:17,0x3eae9abc7b0,^
code-source-info,0x22e3268b320,15,769,814,,,
code-creation,Eval,10,1629990,0x4aa59c9e2e,5, C:\\Users\\jerso\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\soft-exit.js:1:1,0x4aa59c9ce8,~
script-source,144,C:\\Users\\jerso\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\soft-exit.js,'use strict'\n\nprocess.on('SIGINT'\x2C process.exit)\nprocess.on('SIGTERM'\x2C process.exit)\n
code-source-info,0x4aa59c9e2e,144,0,85,C0O0C4O85,,
code-creation,Function,10,1630120,0x4aa59c9ece,56, C:\\Users\\jerso\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\soft-exit.js:1:1,0x4aa59c9da8,~
code-source-info,0x4aa59c9ece,144,0,85,C0O14C4O22C12O35C16O43C21O22C27O49C31O57C39O71C43O79C48O57C55O84,,
code-creation,LazyCompile,10,1630594,0x4aa59ca5ae,50,initializeFrozenIntrinsics node:internal/bootstrap/pre_execution:522:36,0x22cec144770,~
code-source-info,0x4aa59ca5ae,96,17219,17447,C0O17227C8O17231C14O17277C17O17285C28O17285C34O17399C40O17399C45O17436C49O17446,,
code-creation,LazyCompile,10,1630892,0x4aa59ca6d6,80,executeUserEntryPoint node:internal/modules/run_main:70:31,0x24050b13a78,~
code-source-info,0x4aa59ca6d6,132,2231,2545,C7O2247C14O2251C22O2282C25O2282C30O2329C33O2329C38O2366C40O2391C45O2402C50O2391C56O2506C61O2513C73O2513C79O2544,,
code-creation,LazyCompile,10,1631076,0x4aa59cab06,68,resolveMainPath node:internal/modules/run_main:15:25,0x24050b13938,~
code-source-info,0x4aa59cab06,132,412,839,C0O588C5O595C12O605C15O610C20O610C30O595C36O641C38O661C39O668C40O703C48O703C53O750C55O782C60O793C65O820C67O836,,
code-creation,Function,11,1632403,0x22e3268b3e0,7720,realpathSync node:fs:2425:22,0x2bf990993f0,^
code-source-info,0x22e3268b3e0,80,66755,70785,,,
code-creation,Function,11,1632507,0x22e3268d280,160,checkListener node:events:258:23,0xc194f6b2f8,^
code-source-info,0x22e3268d280,23,7884,7942,,,
code-creation,Function,11,1632568,0x22e3268d380,128,addListener node:events:618:58,0xc194f6ba38,^
code-source-info,0x22e3268d380,23,18854,18928,,,
code-creation,LazyCompile,10,1633484,0x4aa59cb7d6,109,shouldUseESMLoader node:internal/modules/run_main:30:28,0x24050b13988,~
code-source-info,0x4aa59cb7d6,132,870,1445,C0O905C8O905C13O949C15O970C16O982C17O1027C25O1027C30O1085C32O1117C37O1134C38O1146C39O1196C45O1212C51O1212C58O1260C59O1272C60O1276C66O1293C72O1293C79O1341C80O1354C81O1370C86O1370C91O1401C93O1419C98O1424C105O1429C108O1442,,
code-creation,Eval,10,1634989,0x4aa59cbbfe,5, C:\\Users\\jerso\\OneDrive\\Escritorio\\BackEnd\\Desafio 15\\utils\\random.js:1:1,0x4aa59cbaa8,~
script-source,145,C:\\Users\\jerso\\OneDrive\\Escritorio\\BackEnd\\Desafio 15\\utils\\random.js,function generateRandomNumbers(n) {\x0d\n    const randomNumbers = [];\x0d\n    \x0d\n    for (let i = 0; i < n; i++) {\x0d\n        randomNumbers.push(\x0d\n            Math.floor(Math.random() * 1000)\x0d\n        )\x0d\n    }\x0d\n    return randomNumbers;\x0d\n}\x0d\n\x0d\nprocess.on('message'\x2C (num) => {\x0d\n    const numbers = generateRandomNumbers(num);\x0d\n    process.send(numbers);\x0d\n})
code-source-info,0x4aa59cbbfe,145,0,347,C0O0C4O347,,
code-creation,Function,10,1635178,0x4aa59cbd46,36, C:\\Users\\jerso\\OneDrive\\Escritorio\\BackEnd\\Desafio 15\\utils\\random.js:1:1,0x4aa59cbb78,~
code-source-info,0x4aa59cbd46,145,0,347,C0O0C11O234C15O242C28O242C35O346,,
code-creation,LazyCompile,10,1635482,0x4aa59cbf3e,44,refCounted node:internal/child_process:539:13,0x22cec163f28,~
code-source-info,0x4aa59cbf3e,100,14732,14834,C0O14742C3O14752C9O14753C15O14759C22O14774C27O14802C29O14807C33O14816C38O14816C43O14833,,
code-creation,LazyCompile,10,1635797,0x4aa59cc0fe,318,processTicksAndRejections node:internal/process/task_queues:68:35,0x12f5b0daa00,~
code-source-info,0x4aa59cc0fe
code-creation,LazyCompile,10,1635991,0x4aa59cc3d6,43,shift node:internal/fixed_queue:108:8,0x12f5b0dfd20,~
code-source-info,0x4aa59cc3d6,34,4061,4295,C0O4089C5O4118C10O4118C15O4141C20O4141C26O4159C32O4260C36O4253C40O4278C42O4290,,
code-creation,LazyCompile,10,1636091,0x4aa59cc51e,54,shift node:internal/fixed_queue:80:8,0x12f5b0dfb30,~
code-source-info,0x4aa59cc51e,34,3379,3596,C0O3411C5O3421C9O3415C13O3435C15O3470C16O3482C17O3493C22O3503C28O3511C32O3549C36O3556C42O3563C44O3561C47O3541C51O3575C53O3591,,
code-creation,LazyCompile,10,1636224,0x4aa59cc656,42,emitBeforeScript node:internal/async_hooks:510:26,0x3eae9ab8c78,~
code-source-info,0x4aa59cc656,13,17372,17528,C0O17413C12O17413C17O17471C22O17484C25O17475C31O17499C36O17499C41O17527,,
code-creation,LazyCompile,10,1636340,0x4aa59cc7a6,180,pushAsyncContext node:internal/async_hooks:540:26,0x3eae9ab8e20,~
code-source-info,0x4aa59cc7a6,13,18046,18601,C0O18102C7O18120C9O18119C13O18138C20O18172C24O18187C26O18198C32O18205C35O18216C40O18232C44O18202C49O18245C54O18252C59O18295C60O18299C65O18310C72O18333C78O18340C83O18356C85O18355C88O18338C92O18379C97O18390C104O18413C107O18417C113O18424C118O18440C120O18439C123O18422C127O18461C134O18479C142O18492C146O18499C153O18515C158O18534C162O18548C169O18564C174O18581C179O18600,,
code-creation,LazyCompile,10,1636656,0x4aa59cc9be,125, node:internal/child_process:708:22,0x24dc49cee58,~
code-source-info,0x4aa59cc9be,100,20124,20501,C0O20139C3O20151C12O20170C20O20170C27O20205C28O20212C29O20239C32O20246C41O20254C43O20253C47O20288C52O20316C54O20329C55O20336C56O20359C58O20364C60O20364C65O20390C75O20410C85O20432C89O20390C94O20375C99O20346C102O20456C105O20463C114O20471C119O20489C124O20500,,
code-creation,LazyCompile,10,1636893,0x4aa59ccb7e,31,listenerCount node:events:854:23,0xc194f6bf80,~
code-source-info,0x4aa59ccb7e,23,25515,25797,C0O25547C5O25561C7O25613C9O25619C13O25634C17O25681C19O25690C20O25703C24O25760C28O25767C29O25785C30O25794,,
code-creation,LazyCompile,10,1636999,0x4aa59ccc86,13,destroyHooksExist node:internal/async_hooks:487:27,0x3eae9ab8b88,~
code-source-info,0x4aa59ccc86,13,16798,16835,C0O16806C5O16822C8O16813C12O16832,,
code-creation,LazyCompile,10,1637089,0x4aa59ccd76,32,emitAfterScript node:internal/async_hooks:518:25,0x3eae9ab8cc8,~
code-source-info,0x4aa59ccd76,13,17558,17659,C0O17573C5O17586C8O17577C14O17600C19O17600C23O17631C26O17631C31O17658,,
code-creation,LazyCompile,10,1637225,0x4aa59ccede,167,popAsyncContext node:internal/async_hooks:554:25,0x3eae9ab8e70,~
code-source-info,0x4aa59ccede,13,18694,19296,C0O18729C7O18747C9O18746C13O18765C14O18781C19O18788C20O18801C21O18807C24O18811C31O18834C36O18850C38O18849C44O18869C49O18953C54O18960C58O18986C59O19012C61O19024C65O19032C72O19048C77O19069C80O19080C87O19098C90O19095C93O19067C97O19112C104O19128C109O19147C112O19158C119O19176C122O19185C125O19173C128O19145C132O19194C137O19220C142O19220C146O19230C153O19248C158O19262C162O19275C163O19289C166O19293,,
code-creation,LazyCompile,10,1637414,0x4aa59cd0be,13,enabledHooksExist node:internal/async_hooks:475:27,0x3eae9ab8a78,~
code-source-info,0x4aa59cd0be,13,16609,16644,C0O16617C5O16633C8O16624C12O16641,,
code-creation,LazyCompile,10,1637979,0x4aa59cd426,627,processPromiseRejections node:internal/process/promises:211:34,0x12f5b0de438,~
script-source,33,node:internal/process/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  Error\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeWeakMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  tickInfo\x2C\x0d\n  promiseRejectEvents: {\x0d\n    kPromiseRejectWithNoHandler\x2C\x0d\n    kPromiseHandlerAddedAfterReject\x2C\x0d\n    kPromiseResolveAfterResolved\x2C\x0d\n    kPromiseRejectAfterResolved\x0d\n  }\x2C\x0d\n  setPromiseRejectCallback\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  noSideEffectsToString\x2C\x0d\n  triggerUncaughtException\x0d\n} = internalBinding('errors');\x0d\n\x0d\nconst {\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol: kAsyncIdSymbol\x2C\x0d\n    trigger_async_id_symbol: kTriggerAsyncIdSymbol\x0d\n  }\x0d\n} = require('internal/async_hooks');\x0d\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasRejectionToWarn = 1;\x0d\n\x0d\nconst maybeUnhandledPromises = new SafeWeakMap();\x0d\nconst pendingUnhandledRejections = [];\x0d\nconst asyncHandledRejections = [];\x0d\nlet lastPromiseId = 0;\x0d\n\x0d\n// --unhandled-rejections=none:\x0d\n// Emit 'unhandledRejection'\x2C but do not emit any warning.\x0d\nconst kIgnoreUnhandledRejections = 0;\x0d\n\x0d\n// --unhandled-rejections=warn:\x0d\n// Emit 'unhandledRejection'\x2C then emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kAlwaysWarnUnhandledRejections = 1;\x0d\n\x0d\n// --unhandled-rejections=strict:\x0d\n// Emit 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\n// Otherwise\x2C emit 'unhandledRejection'. If 'unhandledRejection' is not\x0d\n// handled\x2C emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kStrictUnhandledRejections = 2;\x0d\n\x0d\n// --unhandled-rejections=throw:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\nconst kThrowUnhandledRejections = 3;\x0d\n\x0d\n// --unhandled-rejections=warn-with-error-code:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'UnhandledPromiseRejectionWarning'\x2C then set process exit code to 1.\x0d\n\x0d\nconst kWarnWithErrorCodeUnhandledRejections = 4;\x0d\n\x0d\nlet unhandledRejectionsMode;\x0d\n\x0d\nfunction setHasRejectionToWarn(value) {\x0d\n  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nfunction hasRejectionToWarn() {\x0d\n  return tickInfo[kHasRejectionToWarn] === 1;\x0d\n}\x0d\n\x0d\nfunction isErrorLike(o) {\x0d\n  return typeof o === 'object' &&\x0d\n         o !== null &&\x0d\n         ObjectPrototypeHasOwnProperty(o\x2C 'stack');\x0d\n}\x0d\n\x0d\nfunction getUnhandledRejectionsMode() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  switch (getOptionValue('--unhandled-rejections')) {\x0d\n    case 'none':\x0d\n      return kIgnoreUnhandledRejections;\x0d\n    case 'warn':\x0d\n      return kAlwaysWarnUnhandledRejections;\x0d\n    case 'strict':\x0d\n      return kStrictUnhandledRejections;\x0d\n    case 'throw':\x0d\n      return kThrowUnhandledRejections;\x0d\n    case 'warn-with-error-code':\x0d\n      return kWarnWithErrorCodeUnhandledRejections;\x0d\n    default:\x0d\n      return kThrowUnhandledRejections;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseRejectHandler(type\x2C promise\x2C reason) {\x0d\n  if (unhandledRejectionsMode === undefined) {\x0d\n    unhandledRejectionsMode = getUnhandledRejectionsMode();\x0d\n  }\x0d\n  switch (type) {\x0d\n    case kPromiseRejectWithNoHandler:\x0d\n      unhandledRejection(promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseHandlerAddedAfterReject:\x0d\n      handledRejection(promise);\x0d\n      break;\x0d\n    case kPromiseResolveAfterResolved:\x0d\n      resolveError('resolve'\x2C promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseRejectAfterResolved:\x0d\n      resolveError('reject'\x2C promise\x2C reason);\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resolveError(type\x2C promise\x2C reason) {\x0d\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\x0d\n  // the executed promise.\x0d\n  process.nextTick(() => {\x0d\n    process.emit('multipleResolves'\x2C type\x2C promise\x2C reason);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction unhandledRejection(promise\x2C reason) {\x0d\n  const emit = (reason\x2C promise\x2C promiseInfo) => {\x0d\n    if (promiseInfo.domain) {\x0d\n      return promiseInfo.domain.emit('error'\x2C reason);\x0d\n    }\x0d\n    return process.emit('unhandledRejection'\x2C reason\x2C promise);\x0d\n  };\x0d\n\x0d\n  maybeUnhandledPromises.set(promise\x2C {\x0d\n    reason\x2C\x0d\n    uid: ++lastPromiseId\x2C\x0d\n    warned: false\x2C\x0d\n    domain: process.domain\x2C\x0d\n    emit\x0d\n  });\x0d\n  // This causes the promise to be referenced at least for one tick.\x0d\n  ArrayPrototypePush(pendingUnhandledRejections\x2C promise);\x0d\n  setHasRejectionToWarn(true);\x0d\n}\x0d\n\x0d\nfunction handledRejection(promise) {\x0d\n  const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n  if (promiseInfo !== undefined) {\x0d\n    maybeUnhandledPromises.delete(promise);\x0d\n    if (promiseInfo.warned) {\x0d\n      const { uid } = promiseInfo;\x0d\n      // Generate the warning object early to get a good stack trace.\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const warning = new Error('Promise rejection was handled ' +\x0d\n                                `asynchronously (rejection id: ${uid})`);\x0d\n      warning.name = 'PromiseRejectionHandledWarning';\x0d\n      warning.id = uid;\x0d\n      ArrayPrototypePush(asyncHandledRejections\x2C { promise\x2C warning });\x0d\n      setHasRejectionToWarn(true);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  if (maybeUnhandledPromises.size === 0 && asyncHandledRejections.length === 0)\x0d\n    setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\nconst unhandledRejectionErrName = 'UnhandledPromiseRejectionWarning';\x0d\nfunction emitUnhandledRejectionWarning(uid\x2C reason) {\x0d\n  const warning = getErrorWithoutStack(\x0d\n    unhandledRejectionErrName\x2C\x0d\n    'Unhandled promise rejection. This error originated either by ' +\x0d\n      'throwing inside of an async function without a catch block\x2C ' +\x0d\n      'or by rejecting a promise which was not handled with .catch(). ' +\x0d\n      'To terminate the node process on unhandled promise ' +\x0d\n      'rejection\x2C use the CLI flag `--unhandled-rejections=strict` (see ' +\x0d\n      'https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). ' +\x0d\n      `(rejection id: ${uid})`\x0d\n  );\x0d\n  try {\x0d\n    if (isErrorLike(reason)) {\x0d\n      warning.stack = reason.stack;\x0d\n      process.emitWarning(reason.stack\x2C unhandledRejectionErrName);\x0d\n    } else {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    }\x0d\n  } catch {\x0d\n    try {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    } catch {\x0d\n      // Ignore.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  process.emitWarning(warning);\x0d\n}\x0d\n\x0d\n// If this method returns true\x2C we've executed user code or triggered\x0d\n// a warning to be emitted which requires the microtask and next tick\x0d\n// queues to be drained again.\x0d\nfunction processPromiseRejections() {\x0d\n  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;\x0d\n\x0d\n  while (asyncHandledRejections.length > 0) {\x0d\n    const { promise\x2C warning } = ArrayPrototypeShift(asyncHandledRejections);\x0d\n    if (!process.emit('rejectionHandled'\x2C promise)) {\x0d\n      process.emitWarning(warning);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let len = pendingUnhandledRejections.length;\x0d\n  while (len--) {\x0d\n    const promise = ArrayPrototypeShift(pendingUnhandledRejections);\x0d\n    const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n    if (promiseInfo === undefined) {\x0d\n      continue;\x0d\n    }\x0d\n    promiseInfo.warned = true;\x0d\n    const { reason\x2C uid\x2C emit } = promiseInfo;\x0d\n\x0d\n    let needPop = true;\x0d\n    const {\x0d\n      [kAsyncIdSymbol]: promiseAsyncId\x2C\x0d\n      [kTriggerAsyncIdSymbol]: promiseTriggerAsyncId\x2C\x0d\n    } = promise;\x0d\n    // We need to check if async_hooks are enabled\x0d\n    // don't use enabledHooksExist as a Promise could\x0d\n    // come from a vm.* context and not have an async id\x0d\n    if (typeof promiseAsyncId !== 'undefined') {\x0d\n      pushAsyncContext(\x0d\n        promiseAsyncId\x2C\x0d\n        promiseTriggerAsyncId\x2C\x0d\n        promise\x0d\n      );\x0d\n    }\x0d\n    try {\x0d\n      switch (unhandledRejectionsMode) {\x0d\n        case kStrictUnhandledRejections: {\x0d\n          const err = isErrorLike(reason) ?\x0d\n            reason : generateUnhandledRejectionError(reason);\x0d\n          // This destroys the async stack\x2C don't clear it after\x0d\n          triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n          if (typeof promiseAsyncId !== 'undefined') {\x0d\n            pushAsyncContext(\x0d\n              promise[kAsyncIdSymbol]\x2C\x0d\n              promise[kTriggerAsyncIdSymbol]\x2C\x0d\n              promise\x0d\n            );\x0d\n          }\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kIgnoreUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          break;\x0d\n        }\x0d\n        case kAlwaysWarnUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kThrowUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            const err = isErrorLike(reason) ?\x0d\n              reason : generateUnhandledRejectionError(reason);\x0d\n              // This destroys the async stack\x2C don't clear it after\x0d\n            triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n            needPop = false;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n        case kWarnWithErrorCodeUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n            process.exitCode = 1;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    } finally {\x0d\n      if (needPop) {\x0d\n        if (typeof promiseAsyncId !== 'undefined') {\x0d\n          popAsyncContext(promiseAsyncId);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    maybeScheduledTicksOrMicrotasks = true;\x0d\n  }\x0d\n  return maybeScheduledTicksOrMicrotasks ||\x0d\n         pendingUnhandledRejections.length !== 0;\x0d\n}\x0d\n\x0d\nfunction getErrorWithoutStack(name\x2C message) {\x0d\n  // Reset the stack to prevent any overhead.\x0d\n  const tmp = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmp;\x0d\n  ObjectDefineProperty(err\x2C 'name'\x2C {\x0d\n    value: name\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction generateUnhandledRejectionError(reason) {\x0d\n  const message =\x0d\n    'This error originated either by ' +\x0d\n    'throwing inside of an async function without a catch block\x2C ' +\x0d\n    'or by rejecting a promise which was not handled with .catch().' +\x0d\n    ' The promise rejected with the reason ' +\x0d\n    `"${noSideEffectsToString(reason)}".`;\x0d\n\x0d\n  const err = getErrorWithoutStack('UnhandledPromiseRejection'\x2C message);\x0d\n  err.code = 'ERR_UNHANDLED_REJECTION';\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction listenForRejections() {\x0d\n  setPromiseRejectCallback(promiseRejectHandler);\x0d\n}\x0d\nmodule.exports = {\x0d\n  hasRejectionToWarn\x2C\x0d\n  setHasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x2C\x0d\n};\x0d\n
code-source-info,0x4aa59cd426,33,6650,9869,C0O6696C6O6719C13O6726C17O6773C23O6766C30O6773C35O6814C43O6834C47O6814C53O6793C58O6802C64O6864C68O6877C78O6877C86O6921C90O6929C96O6929C101O6736C104O6978C110O7005C115O7026C126O7026C128O7053C136O7073C140O7053C145O7127C151O7150C157O7150C163O7169C165O7209C167O7231C168O7250C172O7271C177O7279C182O7284C187O7327C189O7451C198O7344C203O7371C215O7419C227O7630C233O7682C248O7682C256O7809C264O7858C273O8529C282O8649C291O8828C300O9283C309O7911C313O7911C327O7955C332O8073C341O8073C346O8139C352O8197C360O8238C362O8237C369O8278C371O8277C379O8197C384O8381C393O8381C399O8428C401O8442C405O8442C410O8497C412O8570C421O8570C426O8617C428O8694C437O8694C442O8741C446O8741C451O8796C453O8884C462O8884C468O8931C470O8972C474O8972C488O9018C493O9142C502O9142C507O9210C509O9251C511O9351C520O9351C526O9398C528O9427C532O9427C537O9484C543O9501C547O9530C564O9581C570O9605C576O9661C582O9661C597O9726C599O7016C605O9774C611O9826C615O9853C622O9860C626O9866,,
code-creation,LazyCompile,10,1640111,0x4aa59ce37e,25,setHasRejectionToWarn node:internal/process/promises:75:31,0x12f5b0dd9a8,~
code-source-info,0x4aa59ce37e,33,2169,2231,C0O2182C7O2191C12O2214C19O2212C24O2230,,
tick,0x7ff954e0fd34,1644081,0,0x0,8
tick,0x7ff954e0fd34,1659462,0,0x0,8
tick,0x7ff954e0fd34,1675995,0,0x0,8
tick,0x7ff954e0fd34,1689665,0,0x0,8
tick,0x7ff954e0fd34,1704850,0,0x0,8
tick,0x7ff954e0fd34,1719690,0,0x0,8
tick,0x7ff954e0fd34,1734839,0,0x0,8
tick,0x7ff954e0fd34,1749490,0,0x0,8
tick,0x7ff954e0fd34,1764737,0,0x0,8
tick,0x7ff954e0fd34,1779684,0,0x0,8
tick,0x7ff954e0fd34,1795588,0,0x0,8
tick,0x7ff954e0fd34,1811314,0,0x0,8
tick,0x7ff954e0fd34,1827582,0,0x0,8
tick,0x7ff954e0fd34,1842457,0,0x0,8
tick,0x7ff954e0fd34,1856266,0,0x0,8
tick,0x7ff954e0fd34,1872344,0,0x0,8
tick,0x7ff954e0fd34,1887354,0,0x0,8
tick,0x7ff954e0fd34,1902945,0,0x0,8
tick,0x7ff954e0fd34,1918143,0,0x0,8
tick,0x7ff954e0fd34,1933028,0,0x0,8
tick,0x7ff954e0fd34,1948215,0,0x0,8
tick,0x7ff954e0fd34,1963042,0,0x0,8
tick,0x7ff954e0fd34,1979073,0,0x0,8
tick,0x7ff954e0fd34,1995010,0,0x0,8
tick,0x7ff954e0fd34,2011133,0,0x0,8
tick,0x7ff954e0fd34,2025931,0,0x0,8
tick,0x7ff954e0fd34,2041494,0,0x0,8
tick,0x7ff954e0fd34,2056682,0,0x0,8
tick,0x7ff954e0fd34,2071767,0,0x0,8
tick,0x7ff954e0fd34,2087647,0,0x0,8
tick,0x7ff954e0fd34,2103456,0,0x0,8
tick,0x7ff954e0fd34,2119458,0,0x0,8
tick,0x7ff954e0fd34,2135031,0,0x0,8
tick,0x7ff954e0fd34,2150356,0,0x0,8
tick,0x7ff954e0fd34,2165968,0,0x0,8
tick,0x7ff954e0fd34,2180791,0,0x0,8
tick,0x7ff954e0fd34,2195876,0,0x0,8
tick,0x7ff954e0fd34,2212276,0,0x0,8
tick,0x7ff954e0fd34,2228225,0,0x0,8
tick,0x7ff954e0fd34,2243036,0,0x0,8
tick,0x7ff954e0fd34,2258880,0,0x0,8
tick,0x7ff954e0fd34,2274802,0,0x0,8
tick,0x7ff954e0fd34,2290582,0,0x0,8
tick,0x7ff954e0fd34,2306574,0,0x0,8
tick,0x7ff954e0fd34,2321796,0,0x0,8
tick,0x7ff954e0fd34,2336940,0,0x0,8
tick,0x7ff954e0fd34,2351774,0,0x0,8
tick,0x7ff954e0fd34,2367577,0,0x0,8
tick,0x7ff954e0fd34,2382410,0,0x0,8
tick,0x7ff954e0fd34,2398266,0,0x0,8
tick,0x7ff954e0fd34,2414225,0,0x0,8
tick,0x7ff954e0fd34,2430500,0,0x0,8
tick,0x7ff954e0fd34,2445638,0,0x0,8
tick,0x7ff954e0fd34,2460635,0,0x0,8
tick,0x7ff954e0fd34,2476104,0,0x0,8
tick,0x7ff954e0fd34,2491041,0,0x0,8
tick,0x7ff954e0fd34,2506087,0,0x0,8
tick,0x7ff954e0fd34,2521023,0,0x0,8
tick,0x7ff954e0fd34,2537213,0,0x0,8
tick,0x7ff954e0fd34,2552236,0,0x0,8
tick,0x7ff954e0fd34,2568061,0,0x0,8
tick,0x7ff954e0fd34,2583242,0,0x0,8
tick,0x7ff954e0fd34,2597844,0,0x0,8
tick,0x7ff954e0fd34,2613808,0,0x0,8
tick,0x7ff954e0fd34,2630352,0,0x0,8
tick,0x7ff954e0fd34,2645020,0,0x0,8
tick,0x7ff954e0fd34,2661062,0,0x0,8
tick,0x7ff954e0fd34,2675829,0,0x0,8
tick,0x7ff954e0fd34,2691110,0,0x0,8
tick,0x7ff954e0fd34,2706999,0,0x0,8
tick,0x7ff954e0fd34,2724094,0,0x0,8
tick,0x7ff954e0fd34,2739155,0,0x0,8
tick,0x7ff954e0fd34,2754990,0,0x0,8
tick,0x7ff954e0fd34,2770855,0,0x0,8
tick,0x7ff954e0fd34,2786036,0,0x0,8
tick,0x7ff954e0fd34,2801759,0,0x0,8
tick,0x7ff954e0fd34,2816967,0,0x0,8
tick,0x7ff954e0fd34,2831752,0,0x0,8
tick,0x7ff954e0fd34,2846725,0,0x0,8
tick,0x7ff954e0fd34,2862613,0,0x0,8
tick,0x7ff954e0fd34,2878633,0,0x0,8
tick,0x7ff954e0fd34,2894484,0,0x0,8
tick,0x7ff954e0fd34,2909488,0,0x0,8
tick,0x7ff954e0fd34,2925737,0,0x0,8
tick,0x7ff954e0fd34,2940973,0,0x0,8
tick,0x7ff954e0fd34,2955615,0,0x0,8
tick,0x7ff954e0fd34,2971286,0,0x0,8
tick,0x7ff954e0fd34,2986636,0,0x0,8
tick,0x7ff954e0fd34,3001345,0,0x0,8
tick,0x7ff954e0fd34,3016197,0,0x0,8
tick,0x7ff954e0fd34,3032118,0,0x0,8
tick,0x7ff954e0fd34,3048139,0,0x0,8
tick,0x7ff954e0fd34,3063200,0,0x0,8
tick,0x7ff954e0fd34,3078005,0,0x0,8
tick,0x7ff954e0fd34,3094448,0,0x0,8
tick,0x7ff954e0fd34,3108636,0,0x0,8
tick,0x7ff954e0fd34,3123425,0,0x0,8
tick,0x7ff954e0fd34,3139342,0,0x0,8
tick,0x7ff954e0fd34,3155384,0,0x0,8
tick,0x7ff954e0fd34,3170416,0,0x0,8
tick,0x7ff954e0fd34,3186294,0,0x0,8
tick,0x7ff954e0fd34,3201435,0,0x0,8
tick,0x7ff954e0fd34,3217176,0,0x0,8
tick,0x7ff954e0fd34,3232478,0,0x0,8
tick,0x7ff954e0fd34,3247584,0,0x0,8
tick,0x7ff954e0fd34,3262272,0,0x0,8
tick,0x7ff954e0fd34,3278117,0,0x0,8
tick,0x7ff954e0fd34,3293103,0,0x0,8
tick,0x7ff954e0fd34,3309145,0,0x0,8
tick,0x7ff954e0fd34,3323873,0,0x0,8
tick,0x7ff954e0fd34,3338913,0,0x0,8
tick,0x7ff954e0fd34,3353778,0,0x0,8
tick,0x7ff954e0fd34,3368851,0,0x0,8
tick,0x7ff954e0fd34,3384739,0,0x0,8
tick,0x7ff954e0fd34,3400973,0,0x0,8
tick,0x7ff954e0fd34,3416595,0,0x0,8
tick,0x7ff954e0fd34,3432050,0,0x0,8
tick,0x7ff954e0fd34,3447681,0,0x0,8
tick,0x7ff954e0fd34,3462612,0,0x0,8
tick,0x7ff954e0fd34,3478483,0,0x0,8
tick,0x7ff954e0fd34,3494300,0,0x0,8
tick,0x7ff954e0fd34,3510197,0,0x0,8
tick,0x7ff954e0fd34,3526153,0,0x0,8
tick,0x7ff954e0fd34,3542353,0,0x0,8
tick,0x7ff954e0fd34,3558116,0,0x0,8
tick,0x7ff954e0fd34,3574841,0,0x0,8
tick,0x7ff954e0fd34,3590351,0,0x0,8
tick,0x7ff954e0fd34,3605690,0,0x0,8
tick,0x7ff954e0fd34,3621873,0,0x0,8
tick,0x7ff954e0fd34,3637776,0,0x0,8
tick,0x7ff954e0fd34,3653540,0,0x0,8
tick,0x7ff954e0fd34,3669532,0,0x0,8
tick,0x7ff954e0fd34,3685561,0,0x0,8
tick,0x7ff954e0fd34,3701595,0,0x0,8
tick,0x7ff954e0fd34,3717370,0,0x0,8
tick,0x7ff954e0fd34,3733624,0,0x0,8
tick,0x7ff954e0fd34,3749307,0,0x0,8
tick,0x7ff954e0fd34,3765355,0,0x0,8
tick,0x7ff954e0fd34,3781221,0,0x0,8
tick,0x7ff954e0fd34,3797237,0,0x0,8
tick,0x7ff954e0fd34,3812635,0,0x0,8
tick,0x7ff954e0fd34,3828811,0,0x0,8
tick,0x7ff954e0fd34,3844004,0,0x0,8
tick,0x7ff954e0fd34,3858530,0,0x0,8
tick,0x7ff954e0fd34,3874539,0,0x0,8
tick,0x7ff954e0fd34,3890508,0,0x0,8
tick,0x7ff954e0fd34,3905398,0,0x0,8
tick,0x7ff954e0fd34,3921361,0,0x0,8
tick,0x7ff954e0fd34,3936372,0,0x0,8
tick,0x7ff954e0fd34,3952631,0,0x0,8
tick,0x7ff954e0fd34,3968622,0,0x0,8
tick,0x7ff954e0fd34,3984296,0,0x0,8
tick,0x7ff954e0fd34,3999720,0,0x0,8
tick,0x7ff954e0fd34,4016146,0,0x0,8
tick,0x7ff954e0fd34,4031584,0,0x0,8
tick,0x7ff954e0fd34,4047710,0,0x0,8
tick,0x7ff954e0fd34,4063816,0,0x0,8
tick,0x7ff954e0fd34,4078954,0,0x0,8
tick,0x7ff954e0fd34,4095126,0,0x0,8
tick,0x7ff954e0fd34,4110130,0,0x0,8
tick,0x7ff954e0fd34,4125765,0,0x0,8
tick,0x7ff954e0fd34,4141687,0,0x0,8
tick,0x7ff954e0fd34,4157484,0,0x0,8
tick,0x7ff954e0fd34,4173783,0,0x0,8
tick,0x7ff954e0fd34,4188966,0,0x0,8
tick,0x7ff954e0fd34,4204317,0,0x0,8
tick,0x7ff954e0fd34,4219117,0,0x0,8
tick,0x7ff954e0fd34,4234605,0,0x0,8
tick,0x7ff954e0fd34,4249575,0,0x0,8
tick,0x7ff954e0fd34,4264826,0,0x0,8
tick,0x7ff954e0fd34,4279253,0,0x0,8
tick,0x7ff954e0fd34,4294808,0,0x0,8
tick,0x7ff954e0fd34,4309362,0,0x0,8
tick,0x7ff954e0fd34,4325542,0,0x0,8
tick,0x7ff954e0fd34,4341108,0,0x0,8
tick,0x7ff954e0fd34,4356963,0,0x0,8
tick,0x7ff954e0fd34,4373032,0,0x0,8
tick,0x7ff954e0fd34,4389737,0,0x0,8
tick,0x7ff954e0fd34,4403962,0,0x0,8
tick,0x7ff954e0fd34,4418796,0,0x0,8
tick,0x7ff954e0fd34,4434815,0,0x0,8
tick,0x7ff954e0fd34,4450770,0,0x0,8
tick,0x7ff954e0fd34,4465601,0,0x0,8
tick,0x7ff954e0fd34,4480536,0,0x0,8
tick,0x7ff954e0fd34,4496754,0,0x0,8
tick,0x7ff954e0fd34,4512354,0,0x0,8
tick,0x7ff954e0fd34,4528506,0,0x0,8
tick,0x7ff954e0fd34,4543310,0,0x0,8
tick,0x7ff954e0fd34,4558220,0,0x0,8
tick,0x7ff954e0fd34,4573170,0,0x0,8
tick,0x7ff954e0fd34,4588485,0,0x0,8
tick,0x7ff954e0fd34,4604211,0,0x0,8
tick,0x7ff954e0fd34,4619197,0,0x0,8
tick,0x7ff954e0fd34,4635042,0,0x0,8
tick,0x7ff954e0fd34,4651229,0,0x0,8
tick,0x7ff954e0fd34,4666887,0,0x0,8
tick,0x7ff954e0fd34,4683377,0,0x0,8
tick,0x7ff954e0fd34,4698862,0,0x0,8
tick,0x7ff954e0fd34,4713802,0,0x0,8
tick,0x7ff954e0fd34,4728788,0,0x0,8
tick,0x7ff954e0fd34,4744137,0,0x0,8
tick,0x7ff954e0fd34,4758706,0,0x0,8
tick,0x7ff954e0fd34,4774658,0,0x0,8
tick,0x7ff954e0fd34,4790752,0,0x0,8
tick,0x7ff954e0fd34,4805766,0,0x0,8
tick,0x7ff954e0fd34,4820576,0,0x0,8
tick,0x7ff954e0fd34,4836938,0,0x0,8
tick,0x7ff954e0fd34,4852538,0,0x0,8
tick,0x7ff954e0fd34,4868363,0,0x0,8
tick,0x7ff954e0fd34,4883417,0,0x0,8
tick,0x7ff954e0fd34,4898851,0,0x0,8
tick,0x7ff954e0fd34,4914794,0,0x0,8
tick,0x7ff954e0fd34,4930050,0,0x0,8
tick,0x7ff954e0fd34,4945010,0,0x0,8
tick,0x7ff954e0fd34,4960588,0,0x0,8
tick,0x7ff954e0fd34,4974940,0,0x0,8
tick,0x7ff954e0fd34,4990871,0,0x0,8
tick,0x7ff954e0fd34,5006825,0,0x0,8
tick,0x7ff954e0fd34,5022868,0,0x0,8
tick,0x7ff954e0fd34,5038704,0,0x0,8
tick,0x7ff954e0fd34,5054674,0,0x0,8
tick,0x7ff954e0fd34,5070633,0,0x0,8
tick,0x7ff954e0fd34,5087150,0,0x0,8
tick,0x7ff954e0fd34,5101947,0,0x0,8
tick,0x7ff954e0fd34,5118470,0,0x0,8
tick,0x7ff954e0fd34,5133578,0,0x0,8
tick,0x7ff954e0fd34,5147428,0,0x0,8
tick,0x7ff954e0fd34,5163167,0,0x0,8
tick,0x7ff954e0fd34,5179204,0,0x0,8
tick,0x7ff954e0fd34,5193845,0,0x0,8
tick,0x7ff954e0fd34,5208804,0,0x0,8
tick,0x7ff954e0fd34,5224011,0,0x0,8
tick,0x7ff954e0fd34,5238789,0,0x0,8
tick,0x7ff954e0fd34,5255105,0,0x0,8
tick,0x7ff954e0fd34,5269640,0,0x0,8
tick,0x7ff954e0fd34,5285576,0,0x0,8
tick,0x7ff954e0fd34,5300576,0,0x0,8
tick,0x7ff954e0fd34,5315740,0,0x0,8
tick,0x7ff954e0fd34,5336318,0,0x0,8
tick,0x7ff954e0fd34,5345681,0,0x0,8
tick,0x7ff954e0fd34,5360842,0,0x0,8
tick,0x7ff954e0fd34,5375463,0,0x0,8
tick,0x7ff954e0fd34,5390337,0,0x0,8
tick,0x7ff954e0fd34,5405852,0,0x0,8
tick,0x7ff954e0fd34,5423668,0,0x0,8
tick,0x7ff954e0fd34,5438315,0,0x0,8
tick,0x7ff954e0fd34,5453987,0,0x0,8
tick,0x7ff954e0fd34,5469108,0,0x0,8
tick,0x7ff954e0fd34,5485666,0,0x0,8
tick,0x7ff954e0fd34,5502201,0,0x0,8
tick,0x7ff954e0fd34,5518566,0,0x0,8
tick,0x7ff954e0fd34,5532065,0,0x0,8
tick,0x7ff954e0fd34,5548669,0,0x0,8
tick,0x7ff954e0fd34,5563098,0,0x0,8
tick,0x7ff954e0fd34,5577026,0,0x0,8
tick,0x7ff954e0fd34,5592789,0,0x0,8
tick,0x7ff954e0fd34,5607680,0,0x0,8
tick,0x7ff954e0fd34,5623028,0,0x0,8
tick,0x7ff954e0fd34,5638006,0,0x0,8
tick,0x7ff954e0fd34,5653775,0,0x0,8
tick,0x7ff954e0fd34,5668980,0,0x0,8
tick,0x7ff954e0fd34,5683537,0,0x0,8
tick,0x7ff954e0fd34,5698461,0,0x0,8
tick,0x7ff954e0fd34,5717331,0,0x0,8
tick,0x7ff954e0fd34,5729678,0,0x0,8
tick,0x7ff954e0fd34,5745652,0,0x0,8
tick,0x7ff954e0fd34,5760378,0,0x0,8
tick,0x7ff954e0fd34,5775396,0,0x0,8
tick,0x7ff954e0fd34,5791324,0,0x0,8
tick,0x7ff954e0fd34,5806805,0,0x0,8
tick,0x7ff954e0fd34,5821987,0,0x0,8
tick,0x7ff954e0fd34,5839761,0,0x0,8
tick,0x7ff954e0fd34,5853275,0,0x0,8
tick,0x7ff954e0fd34,5869708,0,0x0,8
tick,0x7ff954e0fd34,5883017,0,0x0,8
tick,0x7ff954e0fd34,5899457,0,0x0,8
tick,0x7ff954e0fd34,5913990,0,0x0,8
tick,0x7ff954e0fd34,5929364,0,0x0,8
tick,0x7ff954e0fd34,5943830,0,0x0,8
tick,0x7ff954e0fd34,5958755,0,0x0,8
tick,0x7ff954e0fd34,5974745,0,0x0,8
tick,0x7ff954e0fd34,5989685,0,0x0,8
tick,0x7ff954e0fd34,6004804,0,0x0,8
tick,0x7ff954e0fd34,6019607,0,0x0,8
tick,0x7ff954e0fd34,6034605,0,0x0,8
tick,0x7ff954e0fd34,6051023,0,0x0,8
tick,0x7ff954e0fd34,6066494,0,0x0,8
tick,0x7ff954e0fd34,6082472,0,0x0,8
tick,0x7ff954e0fd34,6098029,0,0x0,8
tick,0x7ff954e0fd34,6114852,0,0x0,8
tick,0x7ff954e0fd34,6130546,0,0x0,8
tick,0x7ff954e0fd34,6143780,0,0x0,8
tick,0x7ff954e0fd34,6160137,0,0x0,8
tick,0x7ff954e0fd34,6174752,0,0x0,8
tick,0x7ff954e0fd34,6190665,0,0x0,8
tick,0x7ff954e0fd34,6206040,0,0x0,8
tick,0x7ff954e0fd34,6222503,0,0x0,8
tick,0x7ff954e0fd34,6240635,0,0x0,8
tick,0x7ff954e0fd34,6250787,0,0x0,8
tick,0x7ff954e0fd34,6265854,0,0x0,8
tick,0x7ff954e0fd34,6282786,0,0x0,8
tick,0x7ff954e0fd34,6296398,0,0x0,8
tick,0x7ff954e0fd34,6313387,0,0x0,8
tick,0x7ff954e0fd34,6331568,0,0x0,8
tick,0x7ff954e0fd34,6343755,0,0x0,8
tick,0x7ff954e0fd34,6360425,0,0x0,8
tick,0x7ff954e0fd34,6377198,0,0x0,8
tick,0x7ff954e0fd34,6390111,0,0x0,8
tick,0x7ff954e0fd34,6406147,0,0x0,8
tick,0x7ff954e0fd34,6433288,0,0x0,8
tick,0x7ff954e0fd34,6437052,0,0x0,8
tick,0x7ff954e0fd34,6450472,0,0x0,8
tick,0x7ff954e0fd34,6467676,0,0x0,8
tick,0x7ff954e0fd34,6484332,0,0x0,8
tick,0x7ff954e0fd34,6497162,0,0x0,8
tick,0x7ff954e0fd34,6511976,0,0x0,8
tick,0x7ff954e0fd34,6526819,0,0x0,8
tick,0x7ff954e0fd34,6546853,0,0x0,8
tick,0x7ff954e0fd34,6558658,0,0x0,8
tick,0x7ff954e0fd34,6575409,0,0x0,8
tick,0x7ff954e0fd34,6588780,0,0x0,8
tick,0x7ff954e0fd34,6603819,0,0x0,8
tick,0x7ff954e0fd34,6619640,0,0x0,8
tick,0x7ff954e0fd34,6635544,0,0x0,8
tick,0x7ff954e0fd34,6651870,0,0x0,8
tick,0x7ff954e0fd34,6666399,0,0x0,8
tick,0x7ff954e0fd34,6681342,0,0x0,8
tick,0x7ff954e0fd34,6696540,0,0x0,8
tick,0x7ff954e0fd34,6711440,0,0x0,8
tick,0x7ff954e0fd34,6727355,0,0x0,8
tick,0x7ff954e0fd34,6743218,0,0x0,8
tick,0x7ff954e0fd34,6759225,0,0x0,8
tick,0x7ff954e0fd34,6774145,0,0x0,8
tick,0x7ff954e0fd34,6789134,0,0x0,8
tick,0x7ff954e0fd34,6804041,0,0x0,8
tick,0x7ff954e0fd34,6820034,0,0x0,8
tick,0x7ff954e0fd34,6836093,0,0x0,8
tick,0x7ff954e0fd34,6851918,0,0x0,8
tick,0x7ff954e0fd34,6868590,0,0x0,8
tick,0x7ff954e0fd34,6883849,0,0x0,8
tick,0x7ff954e0fd34,6900596,0,0x0,8
tick,0x7ff954e0fd34,6914736,0,0x0,8
tick,0x7ff954e0fd34,6931187,0,0x0,8
tick,0x7ff954e0fd34,6944905,0,0x0,8
tick,0x7ff954e0fd34,6960932,0,0x0,8
tick,0x7ff954e0fd34,6976564,0,0x0,8
tick,0x7ff954e0fd34,6992649,0,0x0,8
tick,0x7ff954e0fd34,7008463,0,0x0,8
tick,0x7ff954e0fd34,7024527,0,0x0,8
tick,0x7ff954e0fd34,7040422,0,0x0,8
tick,0x7ff954e0fd34,7056382,0,0x0,8
tick,0x7ff954e0fd34,7072570,0,0x0,8
tick,0x7ff954e0fd34,7088290,0,0x0,8
tick,0x7ff954e0fd34,7104418,0,0x0,8
tick,0x7ff954e0fd34,7119482,0,0x0,8
tick,0x7ff954e0fd34,7134235,0,0x0,8
tick,0x7ff954e0fd34,7151224,0,0x0,8
tick,0x7ff954e0fd34,7167051,0,0x0,8
tick,0x7ff954e0fd34,7180315,0,0x0,8
tick,0x7ff954e0fd34,7194215,0,0x0,8
tick,0x7ff954e0fd34,7209978,0,0x0,8
tick,0x7ff954e0fd34,7225975,0,0x0,8
tick,0x7ff954e0fd34,7240845,0,0x0,8
tick,0x7ff954e0fd34,7257532,0,0x0,8
tick,0x7ff954e0fd34,7272185,0,0x0,8
tick,0x7ff954e0fd34,7287780,0,0x0,8
tick,0x7ff954e0fd34,7304427,0,0x0,8
tick,0x7ff954e0fd34,7320101,0,0x0,8
tick,0x7ff954e0fd34,7335598,0,0x0,8
tick,0x7ff954e0fd34,7352066,0,0x0,8
tick,0x7ff954e0fd34,7368295,0,0x0,8
tick,0x7ff954e0fd34,7383487,0,0x0,8
tick,0x7ff954e0fd34,7400214,0,0x0,8
tick,0x7ff954e0fd34,7415170,0,0x0,8
tick,0x7ff954e0fd34,7431931,0,0x0,8
tick,0x7ff954e0fd34,7445958,0,0x0,8
tick,0x7ff954e0fd34,7461397,0,0x0,8
tick,0x7ff954e0fd34,7477523,0,0x0,8
tick,0x7ff954e0fd34,7494182,0,0x0,8
tick,0x7ff954e0fd34,7507838,0,0x0,8
tick,0x7ff954e0fd34,7522639,0,0x0,8
tick,0x7ff954e0fd34,7537132,0,0x0,8
tick,0x7ff954e0fd34,7553381,0,0x0,8
tick,0x7ff954e0fd34,7568686,0,0x0,8
tick,0x7ff954e0fd34,7583019,0,0x0,8
tick,0x7ff954e0fd34,7599520,0,0x0,8
tick,0x7ff954e0fd34,7617316,0,0x0,8
tick,0x7ff954e0fd34,7629343,0,0x0,8
tick,0x7ff954e0fd34,7645114,0,0x0,8
tick,0x7ff954e0fd34,7659072,0,0x0,8
tick,0x7ff954e0fd34,7673830,0,0x0,8
tick,0x7ff954e0fd34,7692949,0,0x0,8
tick,0x7ff954e0fd34,7704952,0,0x0,8
tick,0x7ff954e0fd34,7720955,0,0x0,8
tick,0x7ff954e0fd34,7735559,0,0x0,8
tick,0x7ff954e0fd34,7750513,0,0x0,8
tick,0x7ff954e0fd34,7766905,0,0x0,8
tick,0x7ff954e0fd34,7782740,0,0x0,8
tick,0x7ff954e0fd34,7801134,0,0x0,8
tick,0x7ff954e0fd34,7815166,0,0x0,8
tick,0x7ff954e0fd34,7829310,0,0x0,8
tick,0x7ff954e0fd34,7844633,0,0x0,8
tick,0x7ff954e0fd34,7860505,0,0x0,8
tick,0x7ff954e0fd34,7876211,0,0x0,8
tick,0x7ff954e0fd34,7892186,0,0x0,8
tick,0x7ff954e0fd34,7907497,0,0x0,8
tick,0x7ff954e0fd34,7923137,0,0x0,8
tick,0x7ff954e0fd34,7939030,0,0x0,8
tick,0x7ff954e0fd34,7954055,0,0x0,8
tick,0x7ff954e0fd34,7968988,0,0x0,8
tick,0x7ff954e0fd34,7984353,0,0x0,8
tick,0x7ff954e0fd34,8000345,0,0x0,8
tick,0x7ff954e0fd34,8014130,0,0x0,8
tick,0x7ff954e0fd34,8029415,0,0x0,8
tick,0x7ff954e0fd34,8043768,0,0x0,8
tick,0x7ff954e0fd34,8059789,0,0x0,8
tick,0x7ff954e0fd34,8075656,0,0x0,8
tick,0x7ff954e0fd34,8091525,0,0x0,8
tick,0x7ff954e0fd34,8106590,0,0x0,8
tick,0x7ff954e0fd34,8121935,0,0x0,8
tick,0x7ff954e0fd34,8136442,0,0x0,8
tick,0x7ff954e0fd34,8151506,0,0x0,8
tick,0x7ff954e0fd34,8167387,0,0x0,8
tick,0x7ff954e0fd34,8183020,0,0x0,8
tick,0x7ff954e0fd34,8198829,0,0x0,8
tick,0x7ff954e0fd34,8213699,0,0x0,8
tick,0x7ff954e0fd34,8228658,0,0x0,8
tick,0x7ff954e0fd34,8243613,0,0x0,8
tick,0x7ff954e0fd34,8258602,0,0x0,8
tick,0x7ff954e0fd34,8273516,0,0x0,8
tick,0x7ff954e0fd34,8289499,0,0x0,8
tick,0x7ff954e0fd34,8305451,0,0x0,8
tick,0x7ff954e0fd34,8321501,0,0x0,8
tick,0x7ff954e0fd34,8336397,0,0x0,8
tick,0x7ff954e0fd34,8351557,0,0x0,8
tick,0x7ff954e0fd34,8366308,0,0x0,8
tick,0x7ff954e0fd34,8381885,0,0x0,8
tick,0x7ff954e0fd34,8397861,0,0x0,8
tick,0x7ff954e0fd34,8413728,0,0x0,8
tick,0x7ff954e0fd34,8428708,0,0x0,8
tick,0x7ff954e0fd34,8443894,0,0x0,8
tick,0x7ff954e0fd34,8459602,0,0x0,8
tick,0x7ff954e0fd34,8475578,0,0x0,8
tick,0x7ff954e0fd34,8491497,0,0x0,8
tick,0x7ff954e0fd34,8506476,0,0x0,8
tick,0x7ff954e0fd34,8521442,0,0x0,8
tick,0x7ff954e0fd34,8536400,0,0x0,8
tick,0x7ff954e0fd34,8552418,0,0x0,8
tick,0x7ff954e0fd34,8567356,0,0x0,8
tick,0x7ff954e0fd34,8583494,0,0x0,8
tick,0x7ff954e0fd34,8598816,0,0x0,8
tick,0x7ff954e0fd34,8614691,0,0x0,8
tick,0x7ff954e0fd34,8630641,0,0x0,8
tick,0x7ff954e0fd34,8646604,0,0x0,8
tick,0x7ff954e0fd34,8661528,0,0x0,8
tick,0x7ff954e0fd34,8676490,0,0x0,8
tick,0x7ff954e0fd34,8691419,0,0x0,8
tick,0x7ff954e0fd34,8706432,0,0x0,8
tick,0x7ff954e0fd34,8722354,0,0x0,8
tick,0x7ff954e0fd34,8738294,0,0x0,8
tick,0x7ff954e0fd34,8753369,0,0x0,8
tick,0x7ff954e0fd34,8768248,0,0x0,8
tick,0x7ff954e0fd34,8784656,0,0x0,8
tick,0x7ff954e0fd34,8800254,0,0x0,8
tick,0x7ff954e0fd34,8815394,0,0x0,8
tick,0x7ff954e0fd34,8831576,0,0x0,8
tick,0x7ff954e0fd34,8847203,0,0x0,8
tick,0x7ff954e0fd34,8862995,0,0x0,8
tick,0x7ff954e0fd34,8877218,0,0x0,8
tick,0x7ff954e0fd34,8892092,0,0x0,8
tick,0x7ff954e0fd34,8908297,0,0x0,8
tick,0x7ff954e0fd34,8923867,0,0x0,8
tick,0x7ff954e0fd34,8938507,0,0x0,8
tick,0x7ff954e0fd34,8953925,0,0x0,8
tick,0x7ff954e0fd34,8970167,0,0x0,8
tick,0x7ff954e0fd34,8984436,0,0x0,8
tick,0x7ff954e0fd34,9000335,0,0x0,8
tick,0x7ff954e0fd34,9014295,0,0x0,8
tick,0x7ff954e0fd34,9029501,0,0x0,8
tick,0x7ff954e0fd34,9045398,0,0x0,8
tick,0x7ff954e0fd34,9060978,0,0x0,8
tick,0x7ff954e0fd34,9076987,0,0x0,8
tick,0x7ff954e0fd34,9092558,0,0x0,8
tick,0x7ff954e0fd34,9108434,0,0x0,8
tick,0x7ff954e0fd34,9123483,0,0x0,8
tick,0x7ff954e0fd34,9138384,0,0x0,8
tick,0x7ff954e0fd34,9153267,0,0x0,8
tick,0x7ff954e0fd34,9168330,0,0x0,8
tick,0x7ff954e0fd34,9183436,0,0x0,8
tick,0x7ff954e0fd34,9199189,0,0x0,8
tick,0x7ff954e0fd34,9214317,0,0x0,8
tick,0x7ff954e0fd34,9229074,0,0x0,8
tick,0x7ff954e0fd34,9244012,0,0x0,8
tick,0x7ff954e0fd34,9259977,0,0x0,8
tick,0x7ff954e0fd34,9275002,0,0x0,8
tick,0x7ff954e0fd34,9290944,0,0x0,8
tick,0x7ff954e0fd34,9305875,0,0x0,8
tick,0x7ff954e0fd34,9320843,0,0x0,8
tick,0x7ff954e0fd34,9336843,0,0x0,8
tick,0x7ff954e0fd34,9352398,0,0x0,8
tick,0x7ff954e0fd34,9366703,0,0x0,8
tick,0x7ff954e0fd34,9381681,0,0x0,8
tick,0x7ff954e0fd34,9396777,0,0x0,8
tick,0x7ff954e0fd34,9412525,0,0x0,8
tick,0x7ff954e0fd34,9428647,0,0x0,8
tick,0x7ff954e0fd34,9444459,0,0x0,8
tick,0x7ff954e0fd34,9459620,0,0x0,8
tick,0x7ff954e0fd34,9475473,0,0x0,8
tick,0x7ff954e0fd34,9490337,0,0x0,8
tick,0x7ff954e0fd34,9505424,0,0x0,8
tick,0x7ff954e0fd34,9520318,0,0x0,8
tick,0x7ff954e0fd34,9536517,0,0x0,8
tick,0x7ff954e0fd34,9552654,0,0x0,8
tick,0x7ff954e0fd34,9568249,0,0x0,8
tick,0x7ff954e0fd34,9583140,0,0x0,8
tick,0x7ff954e0fd34,9598184,0,0x0,8
tick,0x7ff954e0fd34,9614049,0,0x0,8
tick,0x7ff954e0fd34,9628947,0,0x0,8
tick,0x7ff954e0fd34,9644918,0,0x0,8
tick,0x7ff954e0fd34,9659888,0,0x0,8
tick,0x7ff954e0fd34,9675862,0,0x0,8
tick,0x7ff954e0fd34,9691783,0,0x0,8
tick,0x7ff954e0fd34,9707847,0,0x0,8
tick,0x7ff954e0fd34,9723028,0,0x0,8
tick,0x7ff954e0fd34,9737729,0,0x0,8
tick,0x7ff954e0fd34,9752805,0,0x0,8
tick,0x7ff954e0fd34,9768527,0,0x0,8
tick,0x7ff954e0fd34,9783825,0,0x0,8
tick,0x7ff954e0fd34,9798506,0,0x0,8
tick,0x7ff954e0fd34,9814526,0,0x0,8
tick,0x7ff954e0fd34,9829505,0,0x0,8
tick,0x7ff954e0fd34,9845406,0,0x0,8
tick,0x7ff954e0fd34,9861362,0,0x0,8
tick,0x7ff954e0fd34,9877343,0,0x0,8
tick,0x7ff954e0fd34,9892323,0,0x0,8
tick,0x7ff954e0fd34,9907243,0,0x0,8
tick,0x7ff954e0fd34,9922255,0,0x0,8
tick,0x7ff954e0fd34,9938158,0,0x0,8
tick,0x7ff954e0fd34,9953093,0,0x0,8
tick,0x7ff954e0fd34,9969089,0,0x0,8
tick,0x7ff954e0fd34,9984193,0,0x0,8
tick,0x7ff954e0fd34,9999516,0,0x0,8
tick,0x7ff954e0fd34,10015455,0,0x0,8
tick,0x7ff954e0fd34,10030584,0,0x0,8
tick,0x7ff954e0fd34,10045381,0,0x0,8
tick,0x7ff954e0fd34,10060481,0,0x0,8
tick,0x7ff954e0fd34,10075279,0,0x0,8
tick,0x7ff954e0fd34,10091654,0,0x0,8
tick,0x7ff954e0fd34,10106190,0,0x0,8
tick,0x7ff954e0fd34,10122307,0,0x0,8
tick,0x7ff954e0fd34,10137247,0,0x0,8
tick,0x7ff954e0fd34,10153149,0,0x0,8
tick,0x7ff954e0fd34,10169456,0,0x0,8
tick,0x7ff954e0fd34,10185137,0,0x0,8
tick,0x7ff954e0fd34,10201150,0,0x0,8
tick,0x7ff954e0fd34,10216926,0,0x0,8
tick,0x7ff954e0fd34,10232972,0,0x0,8
tick,0x7ff954e0fd34,10247891,0,0x0,8
tick,0x7ff954e0fd34,10264007,0,0x0,8
tick,0x7ff954e0fd34,10278827,0,0x0,8
tick,0x7ff954e0fd34,10293682,0,0x0,8
tick,0x7ff954e0fd34,10308815,0,0x0,8
tick,0x7ff954e0fd34,10323677,0,0x0,8
tick,0x7ff954e0fd34,10341275,0,0x0,8
tick,0x7ff954e0fd34,10355710,0,0x0,8
tick,0x7ff954e0fd34,10371612,0,0x0,8
tick,0x7ff954e0fd34,10387539,0,0x0,8
tick,0x7ff954e0fd34,10404523,0,0x0,8
tick,0x7ff954e0fd34,10419614,0,0x0,8
tick,0x7ff954e0fd34,10433426,0,0x0,8
tick,0x7ff954e0fd34,10449534,0,0x0,8
tick,0x7ff954e0fd34,10465296,0,0x0,8
tick,0x7ff954e0fd34,10481166,0,0x0,8
tick,0x7ff954e0fd34,10496836,0,0x0,8
tick,0x7ff954e0fd34,10512709,0,0x0,8
tick,0x7ff954e0fd34,10528424,0,0x0,8
tick,0x7ff954e0fd34,10542995,0,0x0,8
tick,0x7ff954e0fd34,10558185,0,0x0,8
tick,0x7ff954e0fd34,10573668,0,0x0,8
tick,0x7ff954e0fd34,10588715,0,0x0,8
tick,0x7ff954e0fd34,10603857,0,0x0,8
tick,0x7ff954e0fd34,10619155,0,0x0,8
tick,0x7ff954e0fd34,10633714,0,0x0,8
tick,0x7ff954e0fd34,10648559,0,0x0,8
tick,0x7ff954e0fd34,10664504,0,0x0,8
tick,0x7ff954e0fd34,10679818,0,0x0,8
tick,0x7ff954e0fd34,10694859,0,0x0,8
tick,0x7ff954e0fd34,10711184,0,0x0,8
tick,0x7ff954e0fd34,10725704,0,0x0,8
tick,0x7ff954e0fd34,10741998,0,0x0,8
tick,0x7ff954e0fd34,10757497,0,0x0,8
tick,0x7ff954e0fd34,10772979,0,0x0,8
tick,0x7ff954e0fd34,10788858,0,0x0,8
tick,0x7ff954e0fd34,10803456,0,0x0,8
tick,0x7ff954e0fd34,10818409,0,0x0,8
tick,0x7ff954e0fd34,10833544,0,0x0,8
tick,0x7ff954e0fd34,10848344,0,0x0,8
tick,0x7ff954e0fd34,10864244,0,0x0,8
tick,0x7ff954e0fd34,10879246,0,0x0,8
tick,0x7ff954e0fd34,10894130,0,0x0,8
tick,0x7ff954e0fd34,10909199,0,0x0,8
tick,0x7ff954e0fd34,10925089,0,0x0,8
tick,0x7ff954e0fd34,10940624,0,0x0,8
tick,0x7ff954e0fd34,10955135,0,0x0,8
tick,0x7ff954e0fd34,10972628,0,0x0,8
tick,0x7ff954e0fd34,10986321,0,0x0,8
tick,0x7ff954e0fd34,11002074,0,0x0,8
tick,0x7ff954e0fd34,11016821,0,0x0,8
tick,0x7ff954e0fd34,11031918,0,0x0,8
tick,0x7ff954e0fd34,11046814,0,0x0,8
tick,0x7ff954e0fd34,11061739,0,0x0,8
tick,0x7ff954e0fd34,11076679,0,0x0,8
tick,0x7ff954e0fd34,11091947,0,0x0,8
tick,0x7ff954e0fd34,11107887,0,0x0,8
tick,0x7ff954e0fd34,11122814,0,0x0,8
tick,0x7ff954e0fd34,11137908,0,0x0,8
tick,0x7ff954e0fd34,11153743,0,0x0,8
tick,0x7ff954e0fd34,11168907,0,0x0,8
tick,0x7ff954e0fd34,11185402,0,0x0,8
tick,0x7ff954e0fd34,11200665,0,0x0,8
tick,0x7ff954e0fd34,11216652,0,0x0,8
tick,0x7ff954e0fd34,11231737,0,0x0,8
tick,0x7ff954e0fd34,11246587,0,0x0,8
tick,0x7ff954e0fd34,11261480,0,0x0,8
tick,0x7ff954e0fd34,11277525,0,0x0,8
tick,0x7ff954e0fd34,11292394,0,0x0,8
tick,0x7ff954e0fd34,11311126,0,0x0,8
tick,0x7ff954e0fd34,11323291,0,0x0,8
tick,0x7ff954e0fd34,11343660,0,0x0,8
tick,0x7ff954e0fd34,11355927,0,0x0,8
tick,0x7ff954e0fd34,11374678,0,0x0,8
tick,0x7ff954e0fd34,11386888,0,0x0,8
tick,0x7ff954e0fd34,11399418,0,0x0,8
tick,0x7ff954e0fd34,11415936,0,0x0,8
tick,0x7ff954e0fd34,11429979,0,0x0,8
tick,0x7ff954e0fd34,11444144,0,0x0,8
tick,0x7ff954e0fd34,11460203,0,0x0,8
tick,0x7ff954e0fd34,11478475,0,0x0,8
tick,0x7ff954e0fd34,11490903,0,0x0,8
tick,0x7ff954e0fd34,11507716,0,0x0,8
tick,0x7ff954e0fd34,11521421,0,0x0,8
tick,0x7ff954e0fd34,11536521,0,0x0,8
tick,0x7ff954e0fd34,11551087,0,0x0,8
tick,0x7ff954e0fd34,11565948,0,0x0,8
tick,0x7ff954e0fd34,11581914,0,0x0,8
tick,0x7ff954e0fd34,11597868,0,0x0,8
tick,0x7ff954e0fd34,11612848,0,0x0,8
tick,0x7ff954e0fd34,11628495,0,0x0,8
tick,0x7ff954e0fd34,11643479,0,0x0,8
tick,0x7ff954e0fd34,11659426,0,0x0,8
tick,0x7ff954e0fd34,11674921,0,0x0,8
tick,0x7ff954e0fd34,11689858,0,0x0,8
tick,0x7ff954e0fd34,11704644,0,0x0,8
tick,0x7ff954e0fd34,11719229,0,0x0,8
tick,0x7ff954e0fd34,11734830,0,0x0,8
tick,0x7ff954e0fd34,11749215,0,0x0,8
tick,0x7ff954e0fd34,11764098,0,0x0,8
tick,0x7ff954e0fd34,11780167,0,0x0,8
tick,0x7ff954e0fd34,11795019,0,0x0,8
tick,0x7ff954e0fd34,11811043,0,0x0,8
tick,0x7ff954e0fd34,11826108,0,0x0,8
tick,0x7ff954e0fd34,11842136,0,0x0,8
tick,0x7ff954e0fd34,11857987,0,0x0,8
tick,0x7ff954e0fd34,11873806,0,0x0,8
tick,0x7ff954e0fd34,11888781,0,0x0,8
tick,0x7ff954e0fd34,11903766,0,0x0,8
tick,0x7ff954e0fd34,11919735,0,0x0,8
tick,0x7ff954e0fd34,11934756,0,0x0,8
tick,0x7ff954e0fd34,11949621,0,0x0,8
tick,0x7ff954e0fd34,11964619,0,0x0,8
tick,0x7ff954e0fd34,11980753,0,0x0,8
tick,0x7ff954e0fd34,11995557,0,0x0,8
tick,0x7ff954e0fd34,12011549,0,0x0,8
tick,0x7ff954e0fd34,12027414,0,0x0,8
tick,0x7ff954e0fd34,12042878,0,0x0,8
tick,0x7ff954e0fd34,12058886,0,0x0,8
tick,0x7ff954e0fd34,12073816,0,0x0,8
tick,0x7ff954e0fd34,12089877,0,0x0,8
tick,0x7ff954e0fd34,12104795,0,0x0,8
tick,0x7ff954e0fd34,12121565,0,0x0,8
tick,0x7ff954e0fd34,12136643,0,0x0,8
tick,0x7ff954e0fd34,12152678,0,0x0,8
tick,0x7ff954e0fd34,12168609,0,0x0,8
tick,0x7ff954e0fd34,12184542,0,0x0,8
tick,0x7ff954e0fd34,12200454,0,0x0,8
tick,0x7ff954e0fd34,12215425,0,0x0,8
tick,0x7ff954e0fd34,12231386,0,0x0,8
tick,0x7ff954e0fd34,12246860,0,0x0,8
tick,0x7ff954e0fd34,12262915,0,0x0,8
tick,0x7ff954e0fd34,12278850,0,0x0,8
tick,0x7ff954e0fd34,12293830,0,0x0,8
tick,0x7ff954e0fd34,12308735,0,0x0,8
tick,0x7ff954e0fd34,12323674,0,0x0,8
tick,0x7ff954e0fd34,12338630,0,0x0,8
tick,0x7ff954e0fd34,12354572,0,0x0,8
tick,0x7ff954e0fd34,12369884,0,0x0,8
tick,0x7ff954e0fd34,12385567,0,0x0,8
tick,0x7ff954e0fd34,12401495,0,0x0,8
tick,0x7ff954e0fd34,12417396,0,0x0,8
tick,0x7ff954e0fd34,12433376,0,0x0,8
tick,0x7ff954e0fd34,12449474,0,0x0,8
tick,0x7ff954e0fd34,12465532,0,0x0,8
tick,0x7ff954e0fd34,12481255,0,0x0,8
tick,0x7ff954e0fd34,12497094,0,0x0,8
tick,0x7ff954e0fd34,12513146,0,0x0,8
tick,0x7ff954e0fd34,12529028,0,0x0,8
tick,0x7ff954e0fd34,12544491,0,0x0,8
tick,0x7ff954e0fd34,12560462,0,0x0,8
tick,0x7ff954e0fd34,12576407,0,0x0,8
tick,0x7ff954e0fd34,12592388,0,0x0,8
tick,0x7ff954e0fd34,12608343,0,0x0,8
tick,0x7ff954e0fd34,12624296,0,0x0,8
tick,0x7ff954e0fd34,12639911,0,0x0,8
tick,0x7ff954e0fd34,12655497,0,0x0,8
tick,0x7ff954e0fd34,12670480,0,0x0,8
tick,0x7ff954e0fd34,12686489,0,0x0,8
tick,0x7ff954e0fd34,12702353,0,0x0,8
tick,0x7ff954e0fd34,12718336,0,0x0,8
tick,0x7ff954e0fd34,12734263,0,0x0,8
tick,0x7ff954e0fd34,12749891,0,0x0,8
tick,0x7ff954e0fd34,12765838,0,0x0,8
tick,0x7ff954e0fd34,12781829,0,0x0,8
tick,0x7ff954e0fd34,12797525,0,0x0,8
tick,0x7ff954e0fd34,12813471,0,0x0,8
tick,0x7ff954e0fd34,12829426,0,0x0,8
tick,0x7ff954e0fd34,12845084,0,0x0,8
tick,0x7ff954e0fd34,12860553,0,0x0,8
tick,0x7ff954e0fd34,12876229,0,0x0,8
tick,0x7ff954e0fd34,12891178,0,0x0,8
tick,0x7ff954e0fd34,12907155,0,0x0,8
tick,0x7ff954e0fd34,12922100,0,0x0,8
tick,0x7ff954e0fd34,12938266,0,0x0,8
tick,0x7ff954e0fd34,12954026,0,0x0,8
tick,0x7ff954e0fd34,12969989,0,0x0,8
tick,0x7ff954e0fd34,12985961,0,0x0,8
tick,0x7ff954e0fd34,13001952,0,0x0,8
tick,0x7ff954e0fd34,13017854,0,0x0,8
tick,0x7ff954e0fd34,13033814,0,0x0,8
tick,0x7ff954e0fd34,13049740,0,0x0,8
tick,0x7ff954e0fd34,13065724,0,0x0,8
tick,0x7ff954e0fd34,13080676,0,0x0,8
tick,0x7ff954e0fd34,13095631,0,0x0,8
tick,0x7ff954e0fd34,13110905,0,0x0,8
tick,0x7ff954e0fd34,13125598,0,0x0,8
tick,0x7ff954e0fd34,13141513,0,0x0,8
tick,0x7ff954e0fd34,13156678,0,0x0,8
tick,0x7ff954e0fd34,13172428,0,0x0,8
tick,0x7ff954e0fd34,13187371,0,0x0,8
tick,0x7ff954e0fd34,13203349,0,0x0,8
tick,0x7ff954e0fd34,13218309,0,0x0,8
tick,0x7ff954e0fd34,13233288,0,0x0,8
tick,0x7ff954e0fd34,13248234,0,0x0,8
tick,0x7ff954e0fd34,13263209,0,0x0,8
tick,0x7ff954e0fd34,13278510,0,0x0,8
tick,0x7ff954e0fd34,13293460,0,0x0,8
tick,0x7ff954e0fd34,13308450,0,0x0,8
tick,0x7ff954e0fd34,13323367,0,0x0,8
tick,0x7ff954e0fd34,13338387,0,0x0,8
tick,0x7ff954e0fd34,13354106,0,0x0,8
tick,0x7ff954e0fd34,13370183,0,0x0,8
tick,0x7ff954e0fd34,13385337,0,0x0,8
tick,0x7ff954e0fd34,13401276,0,0x0,8
tick,0x7ff954e0fd34,13416148,0,0x0,8
tick,0x7ff954e0fd34,13432171,0,0x0,8
tick,0x7ff954e0fd34,13447806,0,0x0,8
tick,0x7ff954e0fd34,13463759,0,0x0,8
tick,0x7ff954e0fd34,13479733,0,0x0,8
tick,0x7ff954e0fd34,13495860,0,0x0,8
tick,0x7ff954e0fd34,13511906,0,0x0,8
tick,0x7ff954e0fd34,13527910,0,0x0,8
tick,0x7ff954e0fd34,13543864,0,0x0,8
tick,0x7ff954e0fd34,13559775,0,0x0,8
tick,0x7ff954e0fd34,13574769,0,0x0,8
tick,0x7ff954e0fd34,13589710,0,0x0,8
tick,0x7ff954e0fd34,13604682,0,0x0,8
tick,0x7ff954e0fd34,13619750,0,0x0,8
tick,0x7ff954e0fd34,13635570,0,0x0,8
tick,0x7ff954e0fd34,13651562,0,0x0,8
tick,0x7ff954e0fd34,13667525,0,0x0,8
tick,0x7ff954e0fd34,13683509,0,0x0,8
tick,0x7ff954e0fd34,13699410,0,0x0,8
tick,0x7ff954e0fd34,13714467,0,0x0,8
tick,0x7ff954e0fd34,13730395,0,0x0,8
tick,0x7ff954e0fd34,13745361,0,0x0,8
tick,0x7ff954e0fd34,13760306,0,0x0,8
tick,0x7ff954e0fd34,13775387,0,0x0,8
tick,0x7ff954e0fd34,13790253,0,0x0,8
tick,0x7ff954e0fd34,13806205,0,0x0,8
tick,0x7ff954e0fd34,13822180,0,0x0,8
tick,0x7ff954e0fd34,13838140,0,0x0,8
tick,0x7ff954e0fd34,13854128,0,0x0,8
tick,0x7ff954e0fd34,13870009,0,0x0,8
tick,0x7ff954e0fd34,13884994,0,0x0,8
tick,0x7ff954e0fd34,13899941,0,0x0,8
tick,0x7ff954e0fd34,13914934,0,0x0,8
tick,0x7ff954e0fd34,13929895,0,0x0,8
tick,0x7ff954e0fd34,13945842,0,0x0,8
tick,0x7ff954e0fd34,13961569,0,0x0,8
tick,0x7ff954e0fd34,13977493,0,0x0,8
tick,0x7ff954e0fd34,13993488,0,0x0,8
tick,0x7ff954e0fd34,14008440,0,0x0,8
tick,0x7ff954e0fd34,14023406,0,0x0,8
tick,0x7ff954e0fd34,14038336,0,0x0,8
tick,0x7ff954e0fd34,14053564,0,0x0,8
tick,0x7ff954e0fd34,14069535,0,0x0,8
tick,0x7ff954e0fd34,14084488,0,0x0,8
tick,0x7ff954e0fd34,14100567,0,0x0,8
tick,0x7ff954e0fd34,14115397,0,0x0,8
tick,0x7ff954e0fd34,14131378,0,0x0,8
tick,0x7ff954e0fd34,14146308,0,0x0,8
tick,0x7ff954e0fd34,14161294,0,0x0,8
tick,0x7ff954e0fd34,14176226,0,0x0,8
tick,0x7ff954e0fd34,14191206,0,0x0,8
tick,0x7ff954e0fd34,14207196,0,0x0,8
tick,0x7ff954e0fd34,14223111,0,0x0,8
tick,0x7ff954e0fd34,14239081,0,0x0,8
tick,0x7ff954e0fd34,14253685,0,0x0,8
tick,0x7ff954e0fd34,14268664,0,0x0,8
tick,0x7ff954e0fd34,14283788,0,0x0,8
tick,0x7ff954e0fd34,14299537,0,0x0,8
tick,0x7ff954e0fd34,14315109,0,0x0,8
tick,0x7ff954e0fd34,14331041,0,0x0,8
tick,0x7ff954e0fd34,14346263,0,0x0,8
tick,0x7ff954e0fd34,14361428,0,0x0,8
tick,0x7ff954e0fd34,14377045,0,0x0,8
tick,0x7ff954e0fd34,14392948,0,0x0,8
tick,0x7ff954e0fd34,14408928,0,0x0,8
tick,0x7ff954e0fd34,14424880,0,0x0,8
tick,0x7ff954e0fd34,14440857,0,0x0,8
tick,0x7ff954e0fd34,14455905,0,0x0,8
tick,0x7ff954e0fd34,14470771,0,0x0,8
tick,0x7ff954e0fd34,14485764,0,0x0,8
tick,0x7ff954e0fd34,14501656,0,0x0,8
tick,0x7ff954e0fd34,14516603,0,0x0,8
tick,0x7ff954e0fd34,14532607,0,0x0,8
tick,0x7ff954e0fd34,14548381,0,0x0,8
tick,0x7ff954e0fd34,14564349,0,0x0,8
tick,0x7ff954e0fd34,14580334,0,0x0,8
tick,0x7ff954e0fd34,14595930,0,0x0,8
tick,0x7ff954e0fd34,14611446,0,0x0,8
tick,0x7ff954e0fd34,14626294,0,0x0,8
tick,0x7ff954e0fd34,14642218,0,0x0,8
tick,0x7ff954e0fd34,14658157,0,0x0,8
tick,0x7ff954e0fd34,14674136,0,0x0,8
tick,0x7ff954e0fd34,14689446,0,0x0,8
tick,0x7ff954e0fd34,14705397,0,0x0,8
tick,0x7ff954e0fd34,14721433,0,0x0,8
tick,0x7ff954e0fd34,14737334,0,0x0,8
tick,0x7ff954e0fd34,14753284,0,0x0,8
tick,0x7ff954e0fd34,14768237,0,0x0,8
tick,0x7ff954e0fd34,14783185,0,0x0,8
tick,0x7ff954e0fd34,14798157,0,0x0,8
tick,0x7ff954e0fd34,14813106,0,0x0,8
tick,0x7ff954e0fd34,14829061,0,0x0,8
tick,0x7ff954e0fd34,14844078,0,0x0,8
tick,0x7ff954e0fd34,14859984,0,0x0,8
tick,0x7ff954e0fd34,14876021,0,0x0,8
tick,0x7ff954e0fd34,14891901,0,0x0,8
tick,0x7ff954e0fd34,14907866,0,0x0,8
tick,0x7ff954e0fd34,14933894,0,0x0,8
tick,0x7ff954e0fd34,14939000,0,0x0,8
tick,0x7ff954e0fd34,14954936,0,0x0,8
tick,0x7ff954e0fd34,14969310,0,0x0,8
tick,0x7ff954e0fd34,14984404,0,0x0,8
tick,0x7ff954e0fd34,15000268,0,0x0,8
tick,0x7ff954e0fd34,15015091,0,0x0,8
tick,0x7ff954e0fd34,15032582,0,0x0,8
tick,0x7ff954e0fd34,15046523,0,0x0,8
tick,0x7ff954e0fd34,15061756,0,0x0,8
tick,0x7ff954e0fd34,15077518,0,0x0,8
tick,0x7ff954e0fd34,15093651,0,0x0,8
tick,0x7ff954e0fd34,15109575,0,0x0,8
tick,0x7ff954e0fd34,15124541,0,0x0,8
tick,0x7ff954e0fd34,15140532,0,0x0,8
tick,0x7ff954e0fd34,15155299,0,0x0,8
tick,0x7ff954e0fd34,15171353,0,0x0,8
tick,0x7ff954e0fd34,15187311,0,0x0,8
tick,0x7ff954e0fd34,15203258,0,0x0,8
tick,0x7ff954e0fd34,15219066,0,0x0,8
tick,0x7ff954e0fd34,15235001,0,0x0,8
tick,0x7ff954e0fd34,15251083,0,0x0,8
tick,0x7ff954e0fd34,15265935,0,0x0,8
tick,0x7ff954e0fd34,15281920,0,0x0,8
tick,0x7ff954e0fd34,15297966,0,0x0,8
tick,0x7ff954e0fd34,15311836,0,0x0,8
tick,0x7ff954e0fd34,15326898,0,0x0,8
tick,0x7ff954e0fd34,15341735,0,0x0,8
tick,0x7ff954e0fd34,15358148,0,0x0,8
tick,0x7ff954e0fd34,15374116,0,0x0,8
tick,0x7ff954e0fd34,15392484,0,0x0,8
tick,0x7ff954e0fd34,15404876,0,0x0,8
tick,0x7ff954e0fd34,15420055,0,0x0,8
tick,0x7ff954e0fd34,15435502,0,0x0,8
tick,0x7ff954e0fd34,15451354,0,0x0,8
tick,0x7ff954e0fd34,15465399,0,0x0,8
tick,0x7ff954e0fd34,15481378,0,0x0,8
tick,0x7ff954e0fd34,15497494,0,0x0,8
tick,0x7ff954e0fd34,15513318,0,0x0,8
tick,0x7ff954e0fd34,15529249,0,0x0,8
tick,0x7ff954e0fd34,15544185,0,0x0,8
tick,0x7ff954e0fd34,15560158,0,0x0,8
tick,0x7ff954e0fd34,15575140,0,0x0,8
tick,0x7ff954e0fd34,15590064,0,0x0,8
tick,0x7ff954e0fd34,15606022,0,0x0,8
tick,0x7ff954e0fd34,15621004,0,0x0,8
tick,0x7ff954e0fd34,15636798,0,0x0,8
tick,0x7ff954e0fd34,15652778,0,0x0,8
tick,0x7ff954e0fd34,15667711,0,0x0,8
tick,0x7ff954e0fd34,15683966,0,0x0,8
tick,0x7ff954e0fd34,15698636,0,0x0,8
tick,0x7ff954e0fd34,15713602,0,0x0,8
tick,0x7ff954e0fd34,15730008,0,0x0,8
tick,0x7ff954e0fd34,15744510,0,0x0,8
tick,0x7ff954e0fd34,15759459,0,0x0,8
tick,0x7ff954e0fd34,15774426,0,0x0,8
tick,0x7ff954e0fd34,15790386,0,0x0,8
tick,0x7ff954e0fd34,15805521,0,0x0,8
tick,0x7ff954e0fd34,15820357,0,0x0,8
tick,0x7ff954e0fd34,15836261,0,0x0,8
tick,0x7ff954e0fd34,15852233,0,0x0,8
tick,0x7ff954e0fd34,15868290,0,0x0,8
tick,0x7ff954e0fd34,15884257,0,0x0,8
tick,0x7ff954e0fd34,15899194,0,0x0,8
tick,0x7ff954e0fd34,15914208,0,0x0,8
tick,0x7ff954e0fd34,15930221,0,0x0,8
tick,0x7ff954e0fd34,15946084,0,0x0,8
tick,0x7ff954e0fd34,15962034,0,0x0,8
tick,0x7ff954e0fd34,15976980,0,0x0,8
tick,0x7ff954e0fd34,15991958,0,0x0,8
tick,0x7ff954e0fd34,16006925,0,0x0,8
tick,0x7ff954e0fd34,16022868,0,0x0,8
tick,0x7ff954e0fd34,16037921,0,0x0,8
tick,0x7ff954e0fd34,16053789,0,0x0,8
tick,0x7ff954e0fd34,16069776,0,0x0,8
tick,0x7ff954e0fd34,16085701,0,0x0,8
tick,0x7ff954e0fd34,16101675,0,0x0,8
tick,0x7ff954e0fd34,16117654,0,0x0,8
tick,0x7ff954e0fd34,16133600,0,0x0,8
tick,0x7ff954e0fd34,16149534,0,0x0,8
tick,0x7ff954e0fd34,16164484,0,0x0,8
tick,0x7ff954e0fd34,16179502,0,0x0,8
tick,0x7ff954e0fd34,16195404,0,0x0,8
tick,0x7ff954e0fd34,16211117,0,0x0,8
tick,0x7ff954e0fd34,16227040,0,0x0,8
tick,0x7ff954e0fd34,16243013,0,0x0,8
tick,0x7ff954e0fd34,16258984,0,0x0,8
tick,0x7ff954e0fd34,16274969,0,0x0,8
tick,0x7ff954e0fd34,16291037,0,0x0,8
tick,0x7ff954e0fd34,16307126,0,0x0,8
tick,0x7ff954e0fd34,16322939,0,0x0,8
tick,0x7ff954e0fd34,16338789,0,0x0,8
tick,0x7ff954e0fd34,16354718,0,0x0,8
tick,0x7ff954e0fd34,16370763,0,0x0,8
tick,0x7ff954e0fd34,16386620,0,0x0,8
tick,0x7ff954e0fd34,16402596,0,0x0,8
tick,0x7ff954e0fd34,16418565,0,0x0,8
tick,0x7ff954e0fd34,16434507,0,0x0,8
tick,0x7ff954e0fd34,16450445,0,0x0,8
tick,0x7ff954e0fd34,16466188,0,0x0,8
tick,0x7ff954e0fd34,16481903,0,0x0,8
tick,0x7ff954e0fd34,16497944,0,0x0,8
tick,0x7ff954e0fd34,16513923,0,0x0,8
tick,0x7ff954e0fd34,16528870,0,0x0,8
tick,0x7ff954e0fd34,16543786,0,0x0,8
tick,0x7ff954e0fd34,16559394,0,0x0,8
tick,0x7ff954e0fd34,16575319,0,0x0,8
tick,0x7ff954e0fd34,16590356,0,0x0,8
tick,0x7ff954e0fd34,16606369,0,0x0,8
tick,0x7ff954e0fd34,16621171,0,0x0,8
tick,0x7ff954e0fd34,16637195,0,0x0,8
tick,0x7ff954e0fd34,16652106,0,0x0,8
tick,0x7ff954e0fd34,16668163,0,0x0,8
tick,0x7ff954e0fd34,16683851,0,0x0,8
tick,0x7ff954e0fd34,16699836,0,0x0,8
tick,0x7ff954e0fd34,16715680,0,0x0,8
tick,0x7ff954e0fd34,16731628,0,0x0,8
tick,0x7ff954e0fd34,16747675,0,0x0,8
tick,0x7ff954e0fd34,16762588,0,0x0,8
tick,0x7ff954e0fd34,16777492,0,0x0,8
tick,0x7ff954e0fd34,16792498,0,0x0,8
tick,0x7ff954e0fd34,16808581,0,0x0,8
tick,0x7ff954e0fd34,16823369,0,0x0,8
tick,0x7ff954e0fd34,16839403,0,0x0,8
tick,0x7ff954e0fd34,16855320,0,0x0,8
tick,0x7ff954e0fd34,16871346,0,0x0,8
tick,0x7ff954e0fd34,16886234,0,0x0,8
tick,0x7ff954e0fd34,16901175,0,0x0,8
tick,0x7ff954e0fd34,16917120,0,0x0,8
tick,0x7ff954e0fd34,16932564,0,0x0,8
tick,0x7ff954e0fd34,16948593,0,0x0,8
tick,0x7ff954e0fd34,16964791,0,0x0,8
tick,0x7ff954e0fd34,16980911,0,0x0,8
tick,0x7ff954e0fd34,16995351,0,0x0,8
tick,0x7ff954e0fd34,17010494,0,0x0,8
tick,0x7ff954e0fd34,17025549,0,0x0,8
tick,0x7ff954e0fd34,17041479,0,0x0,8
tick,0x7ff954e0fd34,17056230,0,0x0,8
tick,0x7ff954e0fd34,17072173,0,0x0,8
tick,0x7ff954e0fd34,17088096,0,0x0,8
tick,0x7ff954e0fd34,17103070,0,0x0,8
tick,0x7ff954e0fd34,17118997,0,0x0,8
tick,0x7ff954e0fd34,17133990,0,0x0,8
tick,0x7ff954e0fd34,17150002,0,0x0,8
tick,0x7ff954e0fd34,17165788,0,0x0,8
tick,0x7ff954e0fd34,17181758,0,0x0,8
tick,0x7ff954e0fd34,17197686,0,0x0,8
tick,0x7ff954e0fd34,17213613,0,0x0,8
tick,0x7ff954e0fd34,17229539,0,0x0,8
tick,0x7ff954e0fd34,17245466,0,0x0,8
tick,0x7ff954e0fd34,17261517,0,0x0,8
tick,0x7ff954e0fd34,17277394,0,0x0,8
tick,0x7ff954e0fd34,17292677,0,0x0,8
tick,0x7ff954e0fd34,17307637,0,0x0,8
tick,0x7ff954e0fd34,17323520,0,0x0,8
tick,0x7ff954e0fd34,17339590,0,0x0,8
tick,0x7ff954e0fd34,17355487,0,0x0,8
tick,0x7ff954e0fd34,17371380,0,0x0,8
tick,0x7ff954e0fd34,17387332,0,0x0,8
tick,0x7ff954e0fd34,17403308,0,0x0,8
tick,0x7ff954e0fd34,17419250,0,0x0,8
tick,0x7ff954e0fd34,17434212,0,0x0,8
tick,0x7ff954e0fd34,17449190,0,0x0,8
tick,0x7ff954e0fd34,17465117,0,0x0,8
tick,0x7ff954e0fd34,17481110,0,0x0,8
tick,0x7ff954e0fd34,17497076,0,0x0,8
tick,0x7ff954e0fd34,17512429,0,0x0,8
tick,0x7ff954e0fd34,17528389,0,0x0,8
tick,0x7ff954e0fd34,17543364,0,0x0,8
tick,0x7ff954e0fd34,17558312,0,0x0,8
tick,0x7ff954e0fd34,17573295,0,0x0,8
tick,0x7ff954e0fd34,17589254,0,0x0,8
tick,0x7ff954e0fd34,17604171,0,0x0,8
tick,0x7ff954e0fd34,17619152,0,0x0,8
tick,0x7ff954e0fd34,17634133,0,0x0,8
tick,0x7ff954e0fd34,17649126,0,0x0,8
tick,0x7ff954e0fd34,17664677,0,0x0,8
tick,0x7ff954e0fd34,17679850,0,0x0,8
tick,0x7ff954e0fd34,17694574,0,0x0,8
tick,0x7ff954e0fd34,17709568,0,0x0,8
tick,0x7ff954e0fd34,17725106,0,0x0,8
tick,0x7ff954e0fd34,17740579,0,0x0,8
tick,0x7ff954e0fd34,17756562,0,0x0,8
tick,0x7ff954e0fd34,17772488,0,0x0,8
tick,0x7ff954e0fd34,17788439,0,0x0,8
tick,0x7ff954e0fd34,17804477,0,0x0,8
tick,0x7ff954e0fd34,17820347,0,0x0,8
tick,0x7ff954e0fd34,17836318,0,0x0,8
tick,0x7ff954e0fd34,17852276,0,0x0,8
tick,0x7ff954e0fd34,17868234,0,0x0,8
tick,0x7ff954e0fd34,17884162,0,0x0,8
tick,0x7ff954e0fd34,17900150,0,0x0,8
tick,0x7ff954e0fd34,17916092,0,0x0,8
tick,0x7ff954e0fd34,17931058,0,0x0,8
tick,0x7ff954e0fd34,17946017,0,0x0,8
tick,0x7ff954e0fd34,17961115,0,0x0,8
tick,0x7ff954e0fd34,17977095,0,0x0,8
tick,0x7ff954e0fd34,17992084,0,0x0,8
tick,0x7ff954e0fd34,18007980,0,0x0,8
tick,0x7ff954e0fd34,18024012,0,0x0,8
tick,0x7ff954e0fd34,18040000,0,0x0,8
tick,0x7ff954e0fd34,18055471,0,0x0,8
tick,0x7ff954e0fd34,18071563,0,0x0,8
tick,0x7ff954e0fd34,18086878,0,0x0,8
tick,0x7ff954e0fd34,18102907,0,0x0,8
tick,0x7ff954e0fd34,18118252,0,0x0,8
tick,0x7ff954e0fd34,18133424,0,0x0,8
tick,0x7ff954e0fd34,18149429,0,0x0,8
tick,0x7ff954e0fd34,18164377,0,0x0,8
tick,0x7ff954e0fd34,18179452,0,0x0,8
tick,0x7ff954e0fd34,18194562,0,0x0,8
tick,0x7ff954e0fd34,18210535,0,0x0,8
tick,0x7ff954e0fd34,18226464,0,0x0,8
tick,0x7ff954e0fd34,18242490,0,0x0,8
tick,0x7ff954e0fd34,18258455,0,0x0,8
tick,0x7ff954e0fd34,18273411,0,0x0,8
tick,0x7ff954e0fd34,18288613,0,0x0,8
tick,0x7ff954e0fd34,18303538,0,0x0,8
tick,0x7ff954e0fd34,18319511,0,0x0,8
tick,0x7ff954e0fd34,18334462,0,0x0,8
tick,0x7ff954e0fd34,18350434,0,0x0,8
tick,0x7ff954e0fd34,18366393,0,0x0,8
tick,0x7ff954e0fd34,18382358,0,0x0,8
tick,0x7ff954e0fd34,18398282,0,0x0,8
tick,0x7ff954e0fd34,18414310,0,0x0,8
tick,0x7ff954e0fd34,18430345,0,0x0,8
tick,0x7ff954e0fd34,18446237,0,0x0,8
tick,0x7ff954e0fd34,18462152,0,0x0,8
tick,0x7ff954e0fd34,18477689,0,0x0,8
tick,0x7ff954e0fd34,18492469,0,0x0,8
tick,0x7ff954e0fd34,18509254,0,0x0,8
tick,0x7ff954e0fd34,18523026,0,0x0,8
tick,0x7ff954e0fd34,18539416,0,0x0,8
tick,0x7ff954e0fd34,18554918,0,0x0,8
tick,0x7ff954e0fd34,18570915,0,0x0,8
tick,0x7ff954e0fd34,18585835,0,0x0,8
tick,0x7ff954e0fd34,18600793,0,0x0,8
tick,0x7ff954e0fd34,18621189,0,0x0,8
tick,0x7ff954e0fd34,18630734,0,0x0,8
tick,0x7ff954e0fd34,18646673,0,0x0,8
tick,0x7ff954e0fd34,18661988,0,0x0,8
tick,0x7ff954e0fd34,18676596,0,0x0,8
tick,0x7ff954e0fd34,18691719,0,0x0,8
tick,0x7ff954e0fd34,18706502,0,0x0,8
tick,0x7ff954e0fd34,18722483,0,0x0,8
tick,0x7ff954e0fd34,18737447,0,0x0,8
tick,0x7ff954e0fd34,18752383,0,0x0,8
tick,0x7ff954e0fd34,18767113,0,0x0,8
tick,0x7ff954e0fd34,18783040,0,0x0,8
tick,0x7ff954e0fd34,18798994,0,0x0,8
tick,0x7ff954e0fd34,18814968,0,0x0,8
tick,0x7ff954e0fd34,18830888,0,0x0,8
tick,0x7ff954e0fd34,18845883,0,0x0,8
tick,0x7ff954e0fd34,18861461,0,0x0,8
tick,0x7ff954e0fd34,18877449,0,0x0,8
tick,0x7ff954e0fd34,18893456,0,0x0,8
tick,0x7ff954e0fd34,18909361,0,0x0,8
tick,0x7ff954e0fd34,18925374,0,0x0,8
tick,0x7ff954e0fd34,18940379,0,0x0,8
tick,0x7ff954e0fd34,18955258,0,0x0,8
tick,0x7ff954e0fd34,18970188,0,0x0,8
tick,0x7ff954e0fd34,18985145,0,0x0,8
tick,0x7ff954e0fd34,19001086,0,0x0,8
tick,0x7ff954e0fd34,19016773,0,0x0,8
tick,0x7ff954e0fd34,19031733,0,0x0,8
tick,0x7ff954e0fd34,19047718,0,0x0,8
tick,0x7ff954e0fd34,19063645,0,0x0,8
tick,0x7ff954e0fd34,19079281,0,0x0,8
tick,0x7ff954e0fd34,19095107,0,0x0,8
tick,0x7ff954e0fd34,19111404,0,0x0,8
tick,0x7ff954e0fd34,19126039,0,0x0,8
tick,0x7ff954e0fd34,19142037,0,0x0,8
tick,0x7ff954e0fd34,19156938,0,0x0,8
tick,0x7ff954e0fd34,19172892,0,0x0,8
tick,0x7ff954e0fd34,19187852,0,0x0,8
tick,0x7ff954e0fd34,19202835,0,0x0,8
tick,0x7ff954e0fd34,19217768,0,0x0,8
tick,0x7ff954e0fd34,19232756,0,0x0,8
tick,0x7ff954e0fd34,19248784,0,0x0,8
tick,0x7ff954e0fd34,19264574,0,0x0,8
tick,0x7ff954e0fd34,19280354,0,0x0,8
tick,0x7ff954e0fd34,19296312,0,0x0,8
tick,0x7ff954e0fd34,19312251,0,0x0,8
tick,0x7ff954e0fd34,19328370,0,0x0,8
tick,0x7ff954e0fd34,19344245,0,0x0,8
tick,0x7ff954e0fd34,19360117,0,0x0,8
tick,0x7ff954e0fd34,19376132,0,0x0,8
tick,0x7ff954e0fd34,19391032,0,0x0,8
tick,0x7ff954e0fd34,19406992,0,0x0,8
tick,0x7ff954e0fd34,19421942,0,0x0,8
tick,0x7ff954e0fd34,19437931,0,0x0,8
tick,0x7ff954e0fd34,19453856,0,0x0,8
tick,0x7ff954e0fd34,19469850,0,0x0,8
tick,0x7ff954e0fd34,19485773,0,0x0,8
tick,0x7ff954e0fd34,19500747,0,0x0,8
tick,0x7ff954e0fd34,19515728,0,0x0,8
tick,0x7ff954e0fd34,19530714,0,0x0,8
tick,0x7ff954e0fd34,19546458,0,0x0,8
tick,0x7ff954e0fd34,19561411,0,0x0,8
tick,0x7ff954e0fd34,19577326,0,0x0,8
tick,0x7ff954e0fd34,19592975,0,0x0,8
tick,0x7ff954e0fd34,19608944,0,0x0,8
tick,0x7ff954e0fd34,19624888,0,0x0,8
tick,0x7ff954e0fd34,19639845,0,0x0,8
tick,0x7ff954e0fd34,19654810,0,0x0,8
tick,0x7ff954e0fd34,19669768,0,0x0,8
tick,0x7ff954e0fd34,19685411,0,0x0,8
tick,0x7ff954e0fd34,19700411,0,0x0,8
tick,0x7ff954e0fd34,19715342,0,0x0,8
tick,0x7ff954e0fd34,19730337,0,0x0,8
tick,0x7ff954e0fd34,19745153,0,0x0,8
tick,0x7ff954e0fd34,19760855,0,0x0,8
tick,0x7ff954e0fd34,19776438,0,0x0,8
tick,0x7ff954e0fd34,19791361,0,0x0,8
tick,0x7ff954e0fd34,19807306,0,0x0,8
tick,0x7ff954e0fd34,19822279,0,0x0,8
tick,0x7ff954e0fd34,19838213,0,0x0,8
tick,0x7ff954e0fd34,19853194,0,0x0,8
tick,0x7ff954e0fd34,19868135,0,0x0,8
tick,0x7ff954e0fd34,19883122,0,0x0,8
tick,0x7ff954e0fd34,19898130,0,0x0,8
tick,0x7ff954e0fd34,19914026,0,0x0,8
tick,0x7ff954e0fd34,19929060,0,0x0,8
tick,0x7ff954e0fd34,19943964,0,0x0,8
tick,0x7ff954e0fd34,19958912,0,0x0,8
tick,0x7ff954e0fd34,19973899,0,0x0,8
tick,0x7ff954e0fd34,19988857,0,0x0,8
tick,0x7ff954e0fd34,20003812,0,0x0,8
tick,0x7ff954e0fd34,20019025,0,0x0,8
tick,0x7ff954e0fd34,20034839,0,0x0,8
tick,0x7ff954e0fd34,20049786,0,0x0,8
tick,0x7ff954e0fd34,20065753,0,0x0,8
tick,0x7ff954e0fd34,20081728,0,0x0,8
tick,0x7ff954e0fd34,20096967,0,0x0,8
tick,0x7ff954e0fd34,20112151,0,0x0,8
tick,0x7ff954e0fd34,20127110,0,0x0,8
tick,0x7ff954e0fd34,20142260,0,0x0,8
tick,0x7ff954e0fd34,20157211,0,0x0,8
tick,0x7ff954e0fd34,20172255,0,0x0,8
tick,0x7ff954e0fd34,20187266,0,0x0,8
tick,0x7ff954e0fd34,20202233,0,0x0,8
tick,0x7ff954e0fd34,20217974,0,0x0,8
tick,0x7ff954e0fd34,20233880,0,0x0,8
tick,0x7ff954e0fd34,20249807,0,0x0,8
tick,0x7ff954e0fd34,20265787,0,0x0,8
tick,0x7ff954e0fd34,20281728,0,0x0,8
tick,0x7ff954e0fd34,20297700,0,0x0,8
tick,0x7ff954e0fd34,20313643,0,0x0,8
tick,0x7ff954e0fd34,20329673,0,0x0,8
tick,0x7ff954e0fd34,20345551,0,0x0,8
tick,0x7ff954e0fd34,20361526,0,0x0,8
tick,0x7ff954e0fd34,20377490,0,0x0,8
tick,0x7ff954e0fd34,20393462,0,0x0,8
tick,0x7ff954e0fd34,20408617,0,0x0,8
tick,0x7ff954e0fd34,20423613,0,0x0,8
tick,0x7ff954e0fd34,20438505,0,0x0,8
tick,0x7ff954e0fd34,20453648,0,0x0,8
tick,0x7ff954e0fd34,20469248,0,0x0,8
tick,0x7ff954e0fd34,20485322,0,0x0,8
tick,0x7ff954e0fd34,20501273,0,0x0,8
tick,0x7ff954e0fd34,20516213,0,0x0,8
tick,0x7ff954e0fd34,20531271,0,0x0,8
tick,0x7ff954e0fd34,20546273,0,0x0,8
tick,0x7ff954e0fd34,20561132,0,0x0,8
tick,0x7ff954e0fd34,20576038,0,0x0,8
tick,0x7ff954e0fd34,20591027,0,0x0,8
tick,0x7ff954e0fd34,20606036,0,0x0,8
tick,0x7ff954e0fd34,20621910,0,0x0,8
tick,0x7ff954e0fd34,20636895,0,0x0,8
tick,0x7ff954e0fd34,20651831,0,0x0,8
tick,0x7ff954e0fd34,20668087,0,0x0,8
tick,0x7ff954e0fd34,20682767,0,0x0,8
tick,0x7ff954e0fd34,20698734,0,0x0,8
tick,0x7ff954e0fd34,20713701,0,0x0,8
tick,0x7ff954e0fd34,20728673,0,0x0,8
tick,0x7ff954e0fd34,20743662,0,0x0,8
tick,0x7ff954e0fd34,20759645,0,0x0,8
tick,0x7ff954e0fd34,20774537,0,0x0,8
tick,0x7ff954e0fd34,20790496,0,0x0,8
tick,0x7ff954e0fd34,20805459,0,0x0,8
tick,0x7ff954e0fd34,20821231,0,0x0,8
tick,0x7ff954e0fd34,20836257,0,0x0,8
tick,0x7ff954e0fd34,20852148,0,0x0,8
tick,0x7ff954e0fd34,20867094,0,0x0,8
tick,0x7ff954e0fd34,20883070,0,0x0,8
tick,0x7ff954e0fd34,20899022,0,0x0,8
tick,0x7ff954e0fd34,20914981,0,0x0,8
tick,0x7ff954e0fd34,20931022,0,0x0,8
tick,0x7ff954e0fd34,20946918,0,0x0,8
tick,0x7ff954e0fd34,20962858,0,0x0,8
tick,0x7ff954e0fd34,20978843,0,0x0,8
tick,0x7ff954e0fd34,20994818,0,0x0,8
tick,0x7ff954e0fd34,21010057,0,0x0,8
tick,0x7ff954e0fd34,21026019,0,0x0,8
tick,0x7ff954e0fd34,21040983,0,0x0,8
tick,0x7ff954e0fd34,21056097,0,0x0,8
tick,0x7ff954e0fd34,21071223,0,0x0,8
tick,0x7ff954e0fd34,21086382,0,0x0,8
tick,0x7ff954e0fd34,21102295,0,0x0,8
tick,0x7ff954e0fd34,21118240,0,0x0,8
tick,0x7ff954e0fd34,21133373,0,0x0,8
tick,0x7ff954e0fd34,21149311,0,0x0,8
tick,0x7ff954e0fd34,21164273,0,0x0,8
tick,0x7ff954e0fd34,21179240,0,0x0,8
tick,0x7ff954e0fd34,21194250,0,0x0,8
tick,0x7ff954e0fd34,21209151,0,0x0,8
tick,0x7ff954e0fd34,21225182,0,0x0,8
tick,0x7ff954e0fd34,21241069,0,0x0,8
tick,0x7ff954e0fd34,21257013,0,0x0,8
tick,0x7ff954e0fd34,21273018,0,0x0,8
tick,0x7ff954e0fd34,21288937,0,0x0,8
tick,0x7ff954e0fd34,21303917,0,0x0,8
tick,0x7ff954e0fd34,21318879,0,0x0,8
tick,0x7ff954e0fd34,21333849,0,0x0,8
tick,0x7ff954e0fd34,21348837,0,0x0,8
tick,0x7ff954e0fd34,21364735,0,0x0,8
tick,0x7ff954e0fd34,21379760,0,0x0,8
tick,0x7ff954e0fd34,21395757,0,0x0,8
tick,0x7ff954e0fd34,21410628,0,0x0,8
tick,0x7ff954e0fd34,21426607,0,0x0,8
tick,0x7ff954e0fd34,21442509,0,0x0,8
tick,0x7ff954e0fd34,21458502,0,0x0,8
tick,0x7ff954e0fd34,21473932,0,0x0,8
tick,0x7ff954e0fd34,21489755,0,0x0,8
tick,0x7ff954e0fd34,21504712,0,0x0,8
tick,0x7ff954e0fd34,21520658,0,0x0,8
tick,0x7ff954e0fd34,21536606,0,0x0,8
tick,0x7ff954e0fd34,21552559,0,0x0,8
tick,0x7ff954e0fd34,21568522,0,0x0,8
tick,0x7ff954e0fd34,21584502,0,0x0,8
tick,0x7ff954e0fd34,21600486,0,0x0,8
tick,0x7ff954e0fd34,21615393,0,0x0,8
tick,0x7ff954e0fd34,21630485,0,0x0,8
tick,0x7ff954e0fd34,21645331,0,0x0,8
tick,0x7ff954e0fd34,21660291,0,0x0,8
tick,0x7ff954e0fd34,21675553,0,0x0,8
tick,0x7ff954e0fd34,21691504,0,0x0,8
tick,0x7ff954e0fd34,21707503,0,0x0,8
tick,0x7ff954e0fd34,21723411,0,0x0,8
tick,0x7ff954e0fd34,21739365,0,0x0,8
tick,0x7ff954e0fd34,21754100,0,0x0,8
tick,0x7ff954e0fd34,21769113,0,0x0,8
tick,0x7ff954e0fd34,21785056,0,0x0,8
tick,0x7ff954e0fd34,21800575,0,0x0,8
tick,0x7ff954e0fd34,21816649,0,0x0,8
tick,0x7ff954e0fd34,21832622,0,0x0,8
tick,0x7ff954e0fd34,21847541,0,0x0,8
tick,0x7ff954e0fd34,21863463,0,0x0,8
tick,0x7ff954e0fd34,21878365,0,0x0,8
tick,0x7ff954e0fd34,21893336,0,0x0,8
tick,0x7ff954e0fd34,21908296,0,0x0,8
tick,0x7ff954e0fd34,21923269,0,0x0,8
tick,0x7ff954e0fd34,21938221,0,0x0,8
tick,0x7ff954e0fd34,21954164,0,0x0,8
tick,0x7ff954e0fd34,21970170,0,0x0,8
tick,0x7ff954e0fd34,21985606,0,0x0,8
tick,0x7ff954e0fd34,22001463,0,0x0,8
tick,0x7ff954e0fd34,22017427,0,0x0,8
tick,0x7ff954e0fd34,22033205,0,0x0,8
tick,0x7ff954e0fd34,22048638,0,0x0,8
tick,0x7ff954e0fd34,22063619,0,0x0,8
tick,0x7ff954e0fd34,22079529,0,0x0,8
tick,0x7ff954e0fd34,22094496,0,0x0,8
tick,0x7ff954e0fd34,22109495,0,0x0,8
tick,0x7ff954e0fd34,22125423,0,0x0,8
tick,0x7ff954e0fd34,22140384,0,0x0,8
tick,0x7ff954e0fd34,22156351,0,0x0,8
tick,0x7ff954e0fd34,22172305,0,0x0,8
tick,0x7ff954e0fd34,22188279,0,0x0,8
tick,0x7ff954e0fd34,22204252,0,0x0,8
tick,0x7ff954e0fd34,22219224,0,0x0,8
tick,0x7ff954e0fd34,22234199,0,0x0,8
tick,0x7ff954e0fd34,22249198,0,0x0,8
tick,0x7ff954e0fd34,22264067,0,0x0,8
tick,0x7ff954e0fd34,22280217,0,0x0,8
tick,0x7ff954e0fd34,22294992,0,0x0,8
tick,0x7ff954e0fd34,22310741,0,0x0,8
tick,0x7ff954e0fd34,22326698,0,0x0,8
tick,0x7ff954e0fd34,22341679,0,0x0,8
tick,0x7ff954e0fd34,22357623,0,0x0,8
tick,0x7ff954e0fd34,22372585,0,0x0,8
tick,0x7ff954e0fd34,22387575,0,0x0,8
tick,0x7ff954e0fd34,22403489,0,0x0,8
tick,0x7ff954e0fd34,22418434,0,0x0,8
tick,0x7ff954e0fd34,22433451,0,0x0,8
tick,0x7ff954e0fd34,22448402,0,0x0,8
tick,0x7ff954e0fd34,22464358,0,0x0,8
tick,0x7ff954e0fd34,22480279,0,0x0,8
tick,0x7ff954e0fd34,22496392,0,0x0,8
tick,0x7ff954e0fd34,22512208,0,0x0,8
tick,0x7ff954e0fd34,22527164,0,0x0,8
tick,0x7ff954e0fd34,22542409,0,0x0,8
tick,0x7ff954e0fd34,22558049,0,0x0,8
tick,0x7ff954e0fd34,22574020,0,0x0,8
tick,0x7ff954e0fd34,22588947,0,0x0,8
tick,0x7ff954e0fd34,22603649,0,0x0,8
tick,0x7ff954e0fd34,22619614,0,0x0,8
tick,0x7ff954e0fd34,22635556,0,0x0,8
tick,0x7ff954e0fd34,22651526,0,0x0,8
tick,0x7ff954e0fd34,22667494,0,0x0,8
tick,0x7ff954e0fd34,22682901,0,0x0,8
tick,0x7ff954e0fd34,22699023,0,0x0,8
tick,0x7ff954e0fd34,22714811,0,0x0,8
tick,0x7ff954e0fd34,22729849,0,0x0,8
tick,0x7ff954e0fd34,22746132,0,0x0,8
tick,0x7ff954e0fd34,22760813,0,0x0,8
tick,0x7ff954e0fd34,22776747,0,0x0,8
tick,0x7ff954e0fd34,22792770,0,0x0,8
tick,0x7ff954e0fd34,22808628,0,0x0,8
tick,0x7ff954e0fd34,22824651,0,0x0,8
tick,0x7ff954e0fd34,22840585,0,0x0,8
tick,0x7ff954e0fd34,22856698,0,0x0,8
tick,0x7ff954e0fd34,22871525,0,0x0,8
tick,0x7ff954e0fd34,22887495,0,0x0,8
tick,0x7ff954e0fd34,22902457,0,0x0,8
tick,0x7ff954e0fd34,22918623,0,0x0,8
tick,0x7ff954e0fd34,22934598,0,0x0,8
tick,0x7ff954e0fd34,22949375,0,0x0,8
tick,0x7ff954e0fd34,22965170,0,0x0,8
tick,0x7ff954e0fd34,22981316,0,0x0,8
tick,0x7ff954e0fd34,22997216,0,0x0,8
tick,0x7ff954e0fd34,23013251,0,0x0,8
tick,0x7ff954e0fd34,23029073,0,0x0,8
tick,0x7ff954e0fd34,23044023,0,0x0,8
tick,0x7ff954e0fd34,23058966,0,0x0,8
tick,0x7ff954e0fd34,23073866,0,0x0,8
tick,0x7ff954e0fd34,23089895,0,0x0,8
tick,0x7ff954e0fd34,23105234,0,0x0,8
tick,0x7ff954e0fd34,23121246,0,0x0,8
tick,0x7ff954e0fd34,23137160,0,0x0,8
tick,0x7ff954e0fd34,23152911,0,0x0,8
tick,0x7ff954e0fd34,23167552,0,0x0,8
tick,0x7ff954e0fd34,23183563,0,0x0,8
tick,0x7ff954e0fd34,23198476,0,0x0,8
tick,0x7ff954e0fd34,23213874,0,0x0,8
tick,0x7ff954e0fd34,23228789,0,0x0,8
tick,0x7ff954e0fd34,23243794,0,0x0,8
tick,0x7ff954e0fd34,23259791,0,0x0,8
tick,0x7ff954e0fd34,23274732,0,0x0,8
tick,0x7ff954e0fd34,23290832,0,0x0,8
tick,0x7ff954e0fd34,23306710,0,0x0,8
tick,0x7ff954e0fd34,23322646,0,0x0,8
tick,0x7ff954e0fd34,23338515,0,0x0,8
tick,0x7ff954e0fd34,23353404,0,0x0,8
tick,0x7ff954e0fd34,23369346,0,0x0,8
tick,0x7ff954e0fd34,23384330,0,0x0,8
tick,0x7ff954e0fd34,23400046,0,0x0,8
tick,0x7ff954e0fd34,23415870,0,0x0,8
tick,0x7ff954e0fd34,23431955,0,0x0,8
tick,0x7ff954e0fd34,23448125,0,0x0,8
tick,0x7ff954e0fd34,23463877,0,0x0,8
tick,0x7ff954e0fd34,23480364,0,0x0,8
tick,0x7ff954e0fd34,23495740,0,0x0,8
tick,0x7ff954e0fd34,23510953,0,0x0,8
tick,0x7ff954e0fd34,23526714,0,0x0,8
tick,0x7ff954e0fd34,23541637,0,0x0,8
tick,0x7ff954e0fd34,23557545,0,0x0,8
tick,0x7ff954e0fd34,23573452,0,0x0,8
tick,0x7ff954e0fd34,23588647,0,0x0,8
tick,0x7ff954e0fd34,23603528,0,0x0,8
tick,0x7ff954e0fd34,23618517,0,0x0,8
tick,0x7ff954e0fd34,23634443,0,0x0,8
tick,0x7ff954e0fd34,23650436,0,0x0,8
tick,0x7ff954e0fd34,23666367,0,0x0,8
tick,0x7ff954e0fd34,23682327,0,0x0,8
tick,0x7ff954e0fd34,23698008,0,0x0,8
tick,0x7ff954e0fd34,23712756,0,0x0,8
tick,0x7ff954e0fd34,23728706,0,0x0,8
tick,0x7ff954e0fd34,23743727,0,0x0,8
tick,0x7ff954e0fd34,23759367,0,0x0,8
tick,0x7ff954e0fd34,23775378,0,0x0,8
tick,0x7ff954e0fd34,23790842,0,0x0,8
tick,0x7ff954e0fd34,23806806,0,0x0,8
tick,0x7ff954e0fd34,23822734,0,0x0,8
tick,0x7ff954e0fd34,23838723,0,0x0,8
tick,0x7ff954e0fd34,23854662,0,0x0,8
tick,0x7ff954e0fd34,23870643,0,0x0,8
tick,0x7ff954e0fd34,23885577,0,0x0,8
tick,0x7ff954e0fd34,23901536,0,0x0,8
tick,0x7ff954e0fd34,23916499,0,0x0,8
tick,0x7ff954e0fd34,23932649,0,0x0,8
tick,0x7ff954e0fd34,23948400,0,0x0,8
tick,0x7ff954e0fd34,23964380,0,0x0,8
tick,0x7ff954e0fd34,23980424,0,0x0,8
tick,0x7ff954e0fd34,23996294,0,0x0,8
tick,0x7ff954e0fd34,24012226,0,0x0,8
tick,0x7ff954e0fd34,24027440,0,0x0,8
tick,0x7ff954e0fd34,24042586,0,0x0,8
tick,0x7ff954e0fd34,24058606,0,0x0,8
tick,0x7ff954e0fd34,24073509,0,0x0,8
tick,0x7ff954e0fd34,24088484,0,0x0,8
tick,0x7ff954e0fd34,24104263,0,0x0,8
tick,0x7ff954e0fd34,24120302,0,0x0,8
tick,0x7ff954e0fd34,24135204,0,0x0,8
tick,0x7ff954e0fd34,24150166,0,0x0,8
tick,0x7ff954e0fd34,24166185,0,0x0,8
tick,0x7ff954e0fd34,24182131,0,0x0,8
tick,0x7ff954e0fd34,24198113,0,0x0,8
tick,0x7ff954e0fd34,24214073,0,0x0,8
tick,0x7ff954e0fd34,24229039,0,0x0,8
tick,0x7ff954e0fd34,24244857,0,0x0,8
tick,0x7ff954e0fd34,24260809,0,0x0,8
tick,0x7ff954e0fd34,24276770,0,0x0,8
tick,0x7ff954e0fd34,24292735,0,0x0,8
tick,0x7ff954e0fd34,24308694,0,0x0,8
tick,0x7ff954e0fd34,24323618,0,0x0,8
tick,0x7ff954e0fd34,24339018,0,0x0,8
tick,0x7ff954e0fd34,24354945,0,0x0,8
tick,0x7ff954e0fd34,24370456,0,0x0,8
tick,0x7ff954e0fd34,24386394,0,0x0,8
tick,0x7ff954e0fd34,24401378,0,0x0,8
tick,0x7ff954e0fd34,24416754,0,0x0,8
tick,0x7ff954e0fd34,24431708,0,0x0,8
tick,0x7ff954e0fd34,24447799,0,0x0,8
tick,0x7ff954e0fd34,24462618,0,0x0,8
tick,0x7ff954e0fd34,24478533,0,0x0,8
tick,0x7ff954e0fd34,24493180,0,0x0,8
tick,0x7ff954e0fd34,24509161,0,0x0,8
tick,0x7ff954e0fd34,24524129,0,0x0,8
tick,0x7ff954e0fd34,24540076,0,0x0,8
tick,0x7ff954e0fd34,24555011,0,0x0,8
tick,0x7ff954e0fd34,24570186,0,0x0,8
tick,0x7ff954e0fd34,24586152,0,0x0,8
tick,0x7ff954e0fd34,24601091,0,0x0,8
tick,0x7ff954e0fd34,24617044,0,0x0,8
tick,0x7ff954e0fd34,24633018,0,0x0,8
tick,0x7ff954e0fd34,24648117,0,0x0,8
tick,0x7ff954e0fd34,24663946,0,0x0,8
tick,0x7ff954e0fd34,24679916,0,0x0,8
tick,0x7ff954e0fd34,24694839,0,0x0,8
tick,0x7ff954e0fd34,24710803,0,0x0,8
tick,0x7ff954e0fd34,24725775,0,0x0,8
tick,0x7ff954e0fd34,24740731,0,0x0,8
tick,0x7ff954e0fd34,24756701,0,0x0,8
tick,0x7ff954e0fd34,24771693,0,0x0,8
tick,0x7ff954e0fd34,24786589,0,0x0,8
tick,0x7ff954e0fd34,24801569,0,0x0,8
tick,0x7ff954e0fd34,24817016,0,0x0,8
tick,0x7ff954e0fd34,24832985,0,0x0,8
tick,0x7ff954e0fd34,24847949,0,0x0,8
tick,0x7ff954e0fd34,24862923,0,0x0,8
tick,0x7ff954e0fd34,24878071,0,0x0,8
tick,0x7ff954e0fd34,24893517,0,0x0,8
tick,0x7ff954e0fd34,24908704,0,0x0,8
tick,0x7ff954e0fd34,24924654,0,0x0,8
tick,0x7ff954e0fd34,24939836,0,0x0,8
tick,0x7ff954e0fd34,24954807,0,0x0,8
tick,0x7ff954e0fd34,24969690,0,0x0,8
tick,0x7ff954e0fd34,24984667,0,0x0,8
tick,0x7ff954e0fd34,25000629,0,0x0,8
tick,0x7ff954e0fd34,25016592,0,0x0,8
tick,0x7ff954e0fd34,25032416,0,0x0,8
tick,0x7ff954e0fd34,25047387,0,0x0,8
tick,0x7ff954e0fd34,25063441,0,0x0,8
tick,0x7ff954e0fd34,25078375,0,0x0,8
tick,0x7ff954e0fd34,25094341,0,0x0,8
tick,0x7ff954e0fd34,25109807,0,0x0,8
tick,0x7ff954e0fd34,25125758,0,0x0,8
tick,0x7ff954e0fd34,25141777,0,0x0,8
tick,0x7ff954e0fd34,25157673,0,0x0,8
tick,0x7ff954e0fd34,25173624,0,0x0,8
tick,0x7ff954e0fd34,25189624,0,0x0,8
tick,0x7ff954e0fd34,25205549,0,0x0,8
tick,0x7ff954e0fd34,25221483,0,0x0,8
tick,0x7ff954e0fd34,25237449,0,0x0,8
tick,0x7ff954e0fd34,25253453,0,0x0,8
tick,0x7ff954e0fd34,25269369,0,0x0,8
tick,0x7ff954e0fd34,25285330,0,0x0,8
tick,0x7ff954e0fd34,25301027,0,0x0,8
tick,0x7ff954e0fd34,25316884,0,0x0,8
tick,0x7ff954e0fd34,25332839,0,0x0,8
tick,0x7ff954e0fd34,25348800,0,0x0,8
tick,0x7ff954e0fd34,25363922,0,0x0,8
tick,0x7ff954e0fd34,25378877,0,0x0,8
tick,0x7ff954e0fd34,25394377,0,0x0,8
tick,0x7ff954e0fd34,25410453,0,0x0,8
tick,0x7ff954e0fd34,25425684,0,0x0,8
tick,0x7ff954e0fd34,25441610,0,0x0,8
tick,0x7ff954e0fd34,25456560,0,0x0,8
tick,0x7ff954e0fd34,25472555,0,0x0,8
tick,0x7ff954e0fd34,25488480,0,0x0,8
tick,0x7ff954e0fd34,25504260,0,0x0,8
tick,0x7ff954e0fd34,25520257,0,0x0,8
tick,0x7ff954e0fd34,25535748,0,0x0,8
tick,0x7ff954e0fd34,25551662,0,0x0,8
tick,0x7ff954e0fd34,25567642,0,0x0,8
tick,0x7ff954e0fd34,25583519,0,0x0,8
tick,0x7ff954e0fd34,25599478,0,0x0,8
tick,0x7ff954e0fd34,25615431,0,0x0,8
tick,0x7ff954e0fd34,25631365,0,0x0,8
tick,0x7ff954e0fd34,25647307,0,0x0,8
tick,0x7ff954e0fd34,25662309,0,0x0,8
tick,0x7ff954e0fd34,25678221,0,0x0,8
tick,0x7ff954e0fd34,25693180,0,0x0,8
tick,0x7ff954e0fd34,25708734,0,0x0,8
tick,0x7ff954e0fd34,25723699,0,0x0,8
tick,0x7ff954e0fd34,25739678,0,0x0,8
tick,0x7ff954e0fd34,25755617,0,0x0,8
tick,0x7ff954e0fd34,25771647,0,0x0,8
tick,0x7ff954e0fd34,25787521,0,0x0,8
tick,0x7ff954e0fd34,25803495,0,0x0,8
tick,0x7ff954e0fd34,25818480,0,0x0,8
tick,0x7ff954e0fd34,25834490,0,0x0,8
tick,0x7ff954e0fd34,25849372,0,0x0,8
tick,0x7ff954e0fd34,25865044,0,0x0,8
tick,0x7ff954e0fd34,25881006,0,0x0,8
tick,0x7ff954e0fd34,25897073,0,0x0,8
tick,0x7ff954e0fd34,25912989,0,0x0,8
tick,0x7ff954e0fd34,25928900,0,0x0,8
tick,0x7ff954e0fd34,25944848,0,0x0,8
tick,0x7ff954e0fd34,25960870,0,0x0,8
tick,0x7ff954e0fd34,25976755,0,0x0,8
tick,0x7ff954e0fd34,25992719,0,0x0,8
tick,0x7ff954e0fd34,26007665,0,0x0,8
tick,0x7ff954e0fd34,26022628,0,0x0,8
tick,0x7ff954e0fd34,26037624,0,0x0,8
tick,0x7ff954e0fd34,26053555,0,0x0,8
tick,0x7ff954e0fd34,26068538,0,0x0,8
tick,0x7ff954e0fd34,26083210,0,0x0,8
tick,0x7ff954e0fd34,26099124,0,0x0,8
tick,0x7ff954e0fd34,26115065,0,0x0,8
tick,0x7ff954e0fd34,26131023,0,0x0,8
tick,0x7ff954e0fd34,26146006,0,0x0,8
tick,0x7ff954e0fd34,26160942,0,0x0,8
tick,0x7ff954e0fd34,26175922,0,0x0,8
tick,0x7ff954e0fd34,26191918,0,0x0,8
tick,0x7ff954e0fd34,26206851,0,0x0,8
tick,0x7ff954e0fd34,26222809,0,0x0,8
tick,0x7ff954e0fd34,26238756,0,0x0,8
tick,0x7ff954e0fd34,26254819,0,0x0,8
tick,0x7ff954e0fd34,26270714,0,0x0,8
tick,0x7ff954e0fd34,26286627,0,0x0,8
tick,0x7ff954e0fd34,26302589,0,0x0,8
tick,0x7ff954e0fd34,26318552,0,0x0,8
tick,0x7ff954e0fd34,26334501,0,0x0,8
tick,0x7ff954e0fd34,26350510,0,0x0,8
tick,0x7ff954e0fd34,26366422,0,0x0,8
tick,0x7ff954e0fd34,26382368,0,0x0,8
tick,0x7ff954e0fd34,26398320,0,0x0,8
tick,0x7ff954e0fd34,26414273,0,0x0,8
tick,0x7ff954e0fd34,26430160,0,0x0,8
tick,0x7ff954e0fd34,26446107,0,0x0,8
tick,0x7ff954e0fd34,26462062,0,0x0,8
tick,0x7ff954e0fd34,26479092,0,0x0,8
tick,0x7ff954e0fd34,26494826,0,0x0,8
tick,0x7ff954e0fd34,26509283,0,0x0,8
tick,0x7ff954e0fd34,26523927,0,0x0,8
tick,0x7ff954e0fd34,26538906,0,0x0,8
tick,0x7ff954e0fd34,26554833,0,0x0,8
tick,0x7ff954e0fd34,26569826,0,0x0,8
tick,0x7ff954e0fd34,26584775,0,0x0,8
tick,0x7ff954e0fd34,26600683,0,0x0,8
tick,0x7ff954e0fd34,26615654,0,0x0,8
tick,0x7ff954e0fd34,26630604,0,0x0,8
tick,0x7ff954e0fd34,26645578,0,0x0,8
tick,0x7ff954e0fd34,26660563,0,0x0,8
tick,0x7ff954e0fd34,26675478,0,0x0,8
tick,0x7ff954e0fd34,26690639,0,0x0,8
tick,0x7ff954e0fd34,26706445,0,0x0,8
tick,0x7ff954e0fd34,26721369,0,0x0,8
tick,0x7ff954e0fd34,26736415,0,0x0,8
tick,0x7ff954e0fd34,26752293,0,0x0,8
tick,0x7ff954e0fd34,26767328,0,0x0,8
tick,0x7ff954e0fd34,26783242,0,0x0,8
tick,0x7ff954e0fd34,26799174,0,0x0,8
tick,0x7ff954e0fd34,26815135,0,0x0,8
tick,0x7ff954e0fd34,26831099,0,0x0,8
tick,0x7ff954e0fd34,26847022,0,0x0,8
tick,0x7ff954e0fd34,26862995,0,0x0,8
tick,0x7ff954e0fd34,26878418,0,0x0,8
tick,0x7ff954e0fd34,26894406,0,0x0,8
tick,0x7ff954e0fd34,26909879,0,0x0,8
tick,0x7ff954e0fd34,26925855,0,0x0,8
tick,0x7ff954e0fd34,26941799,0,0x0,8
tick,0x7ff954e0fd34,26957749,0,0x0,8
tick,0x7ff954e0fd34,26973708,0,0x0,8
tick,0x7ff954e0fd34,26989644,0,0x0,8
tick,0x7ff954e0fd34,27005620,0,0x0,8
tick,0x7ff954e0fd34,27021628,0,0x0,8
tick,0x7ff954e0fd34,27037514,0,0x0,8
tick,0x7ff954e0fd34,27052503,0,0x0,8
tick,0x7ff954e0fd34,27068447,0,0x0,8
tick,0x7ff954e0fd34,27084463,0,0x0,8
tick,0x7ff954e0fd34,27100337,0,0x0,8
tick,0x7ff954e0fd34,27115325,0,0x0,8
tick,0x7ff954e0fd34,27131257,0,0x0,8
tick,0x7ff954e0fd34,27146235,0,0x0,8
tick,0x7ff954e0fd34,27162233,0,0x0,8
tick,0x7ff954e0fd34,27178161,0,0x0,8
tick,0x7ff954e0fd34,27194087,0,0x0,8
tick,0x7ff954e0fd34,27210192,0,0x0,8
tick,0x7ff954e0fd34,27225241,0,0x0,8
tick,0x7ff954e0fd34,27241215,0,0x0,8
tick,0x7ff954e0fd34,27256133,0,0x0,8
tick,0x7ff954e0fd34,27272092,0,0x0,8
tick,0x7ff954e0fd34,27287082,0,0x0,8
tick,0x7ff954e0fd34,27303002,0,0x0,8
tick,0x7ff954e0fd34,27321101,0,0x0,8
tick,0x7ff954e0fd34,27335048,0,0x0,8
tick,0x7ff954e0fd34,27350999,0,0x0,8
tick,0x7ff954e0fd34,27366864,0,0x0,8
tick,0x7ff954e0fd34,27382775,0,0x0,8
tick,0x7ff954e0fd34,27398795,0,0x0,8
tick,0x7ff954e0fd34,27413715,0,0x0,8
tick,0x7ff954e0fd34,27429700,0,0x0,8
tick,0x7ff954e0fd34,27444664,0,0x0,8
tick,0x7ff954e0fd34,27459793,0,0x0,8
tick,0x7ff954e0fd34,27474574,0,0x0,8
tick,0x7ff954e0fd34,27491246,0,0x0,8
tick,0x7ff954e0fd34,27505513,0,0x0,8
tick,0x7ff954e0fd34,27521512,0,0x0,8
tick,0x7ff954e0fd34,27537400,0,0x0,8
tick,0x7ff954e0fd34,27552532,0,0x0,8
tick,0x7ff954e0fd34,27567351,0,0x0,8
tick,0x7ff954e0fd34,27582274,0,0x0,8
tick,0x7ff954e0fd34,27597253,0,0x0,8
tick,0x7ff954e0fd34,27613185,0,0x0,8
tick,0x7ff954e0fd34,27628151,0,0x0,8
tick,0x7ff954e0fd34,27643130,0,0x0,8
tick,0x7ff954e0fd34,27658070,0,0x0,8
tick,0x7ff954e0fd34,27673058,0,0x0,8
tick,0x7ff954e0fd34,27689017,0,0x0,8
tick,0x7ff954e0fd34,27703948,0,0x0,8
tick,0x7ff954e0fd34,27720071,0,0x0,8
tick,0x7ff954e0fd34,27735734,0,0x0,8
tick,0x7ff954e0fd34,27750528,0,0x0,8
tick,0x7ff954e0fd34,27765475,0,0x0,8
tick,0x7ff954e0fd34,27781433,0,0x0,8
tick,0x7ff954e0fd34,27796410,0,0x0,8
tick,0x7ff954e0fd34,27812461,0,0x0,8
tick,0x7ff954e0fd34,27827317,0,0x0,8
tick,0x7ff954e0fd34,27842285,0,0x0,8
tick,0x7ff954e0fd34,27857244,0,0x0,8
tick,0x7ff954e0fd34,27872226,0,0x0,8
tick,0x7ff954e0fd34,27887165,0,0x0,8
tick,0x7ff954e0fd34,27902189,0,0x0,8
tick,0x7ff954e0fd34,27917104,0,0x0,8
tick,0x7ff954e0fd34,27933069,0,0x0,8
tick,0x7ff954e0fd34,27948009,0,0x0,8
tick,0x7ff954e0fd34,27963965,0,0x0,8
tick,0x7ff954e0fd34,27978913,0,0x0,8
tick,0x7ff954e0fd34,27994912,0,0x0,8
tick,0x7ff954e0fd34,28009860,0,0x0,8
tick,0x7ff954e0fd34,28024815,0,0x0,8
tick,0x7ff954e0fd34,28039763,0,0x0,8
tick,0x7ff954e0fd34,28054743,0,0x0,8
tick,0x7ff954e0fd34,28069707,0,0x0,8
tick,0x7ff954e0fd34,28085675,0,0x0,8
tick,0x7ff954e0fd34,28101619,0,0x0,8
tick,0x7ff954e0fd34,28117556,0,0x0,8
tick,0x7ff954e0fd34,28133547,0,0x0,8
tick,0x7ff954e0fd34,28149481,0,0x0,8
tick,0x7ff954e0fd34,28165463,0,0x0,8
tick,0x7ff954e0fd34,28181421,0,0x0,8
tick,0x7ff954e0fd34,28197338,0,0x0,8
tick,0x7ff954e0fd34,28212317,0,0x0,8
tick,0x7ff954e0fd34,28227620,0,0x0,8
tick,0x7ff954e0fd34,28242634,0,0x0,8
tick,0x7ff954e0fd34,28258400,0,0x0,8
tick,0x7ff954e0fd34,28274194,0,0x0,8
tick,0x7ff954e0fd34,28290172,0,0x0,8
tick,0x7ff954e0fd34,28306139,0,0x0,8
tick,0x7ff954e0fd34,28321341,0,0x0,8
tick,0x7ff954e0fd34,28337321,0,0x0,8
tick,0x7ff954e0fd34,28352246,0,0x0,8
tick,0x7ff954e0fd34,28367628,0,0x0,8
tick,0x7ff954e0fd34,28383329,0,0x0,8
tick,0x7ff954e0fd34,28398272,0,0x0,8
tick,0x7ff954e0fd34,28414278,0,0x0,8
tick,0x7ff954e0fd34,28429231,0,0x0,8
tick,0x7ff954e0fd34,28444597,0,0x0,8
tick,0x7ff954e0fd34,28459538,0,0x0,8
tick,0x7ff954e0fd34,28475557,0,0x0,8
tick,0x7ff954e0fd34,28490522,0,0x0,8
tick,0x7ff954e0fd34,28505450,0,0x0,8
tick,0x7ff954e0fd34,28521411,0,0x0,8
tick,0x7ff954e0fd34,28536360,0,0x0,8
tick,0x7ff954e0fd34,28552780,0,0x0,8
tick,0x7ff954e0fd34,28568736,0,0x0,8
tick,0x7ff954e0fd34,28583951,0,0x0,8
tick,0x7ff954e0fd34,28599942,0,0x0,8
tick,0x7ff954e0fd34,28614863,0,0x0,8
tick,0x7ff954e0fd34,28630823,0,0x0,8
tick,0x7ff954e0fd34,28646792,0,0x0,8
tick,0x7ff954e0fd34,28662746,0,0x0,8
tick,0x7ff954e0fd34,28677696,0,0x0,8
tick,0x7ff954e0fd34,28692753,0,0x0,8
tick,0x7ff954e0fd34,28707891,0,0x0,8
tick,0x7ff954e0fd34,28723971,0,0x0,8
tick,0x7ff954e0fd34,28738807,0,0x0,8
tick,0x7ff954e0fd34,28754771,0,0x0,8
tick,0x7ff954e0fd34,28769771,0,0x0,8
tick,0x7ff954e0fd34,28784707,0,0x0,8
tick,0x7ff954e0fd34,28800634,0,0x0,8
tick,0x7ff954e0fd34,28815597,0,0x0,8
tick,0x7ff954e0fd34,28830579,0,0x0,8
tick,0x7ff954e0fd34,28845525,0,0x0,8
tick,0x7ff954e0fd34,28860514,0,0x0,8
tick,0x7ff954e0fd34,28876433,0,0x0,8
tick,0x7ff954e0fd34,28891401,0,0x0,8
tick,0x7ff954e0fd34,28906377,0,0x0,8
tick,0x7ff954e0fd34,28921424,0,0x0,8
tick,0x7ff954e0fd34,28937341,0,0x0,8
tick,0x7ff954e0fd34,28952249,0,0x0,8
tick,0x7ff954e0fd34,28967187,0,0x0,8
tick,0x7ff954e0fd34,28982159,0,0x0,8
tick,0x7ff954e0fd34,28997138,0,0x0,8
tick,0x7ff954e0fd34,29013078,0,0x0,8
tick,0x7ff954e0fd34,29028611,0,0x0,8
tick,0x7ff954e0fd34,29044606,0,0x0,8
tick,0x7ff954e0fd34,29060537,0,0x0,8
tick,0x7ff954e0fd34,29076475,0,0x0,8
tick,0x7ff954e0fd34,29092458,0,0x0,8
tick,0x7ff954e0fd34,29108441,0,0x0,8
tick,0x7ff954e0fd34,29124425,0,0x0,8
tick,0x7ff954e0fd34,29140349,0,0x0,8
tick,0x7ff954e0fd34,29155669,0,0x0,8
tick,0x7ff954e0fd34,29171654,0,0x0,8
tick,0x7ff954e0fd34,29186340,0,0x0,8
tick,0x7ff954e0fd34,29201293,0,0x0,8
tick,0x7ff954e0fd34,29216961,0,0x0,8
tick,0x7ff954e0fd34,29232935,0,0x0,8
tick,0x7ff954e0fd34,29248318,0,0x0,8
tick,0x7ff954e0fd34,29263715,0,0x0,8
tick,0x7ff954e0fd34,29279047,0,0x0,8
tick,0x7ff954e0fd34,29295015,0,0x0,8
tick,0x7ff954e0fd34,29310124,0,0x0,8
tick,0x7ff954e0fd34,29325916,0,0x0,8
tick,0x7ff954e0fd34,29341625,0,0x0,8
tick,0x7ff954e0fd34,29357637,0,0x0,8
tick,0x7ff954e0fd34,29373537,0,0x0,8
tick,0x7ff954e0fd34,29389478,0,0x0,8
tick,0x7ff954e0fd34,29405423,0,0x0,8
tick,0x7ff954e0fd34,29420804,0,0x0,8
tick,0x7ff954e0fd34,29436681,0,0x0,8
tick,0x7ff954e0fd34,29452634,0,0x0,8
tick,0x7ff954e0fd34,29468594,0,0x0,8
tick,0x7ff954e0fd34,29483562,0,0x0,8
tick,0x7ff954e0fd34,29499374,0,0x0,8
tick,0x7ff954e0fd34,29515418,0,0x0,8
tick,0x7ff954e0fd34,29530346,0,0x0,8
tick,0x7ff954e0fd34,29546320,0,0x0,8
tick,0x7ff954e0fd34,29561273,0,0x0,8
tick,0x7ff954e0fd34,29576226,0,0x0,8
tick,0x7ff954e0fd34,29592083,0,0x0,8
tick,0x7ff954e0fd34,29607079,0,0x0,8
tick,0x7ff954e0fd34,29622308,0,0x0,8
tick,0x7ff954e0fd34,29638249,0,0x0,8
tick,0x7ff954e0fd34,29653218,0,0x0,8
tick,0x7ff954e0fd34,29669210,0,0x0,8
tick,0x7ff954e0fd34,29685112,0,0x0,8
tick,0x7ff954e0fd34,29700081,0,0x0,8
tick,0x7ff954e0fd34,29716028,0,0x0,8
tick,0x7ff954e0fd34,29731374,0,0x0,8
tick,0x7ff954e0fd34,29747348,0,0x0,8
tick,0x7ff954e0fd34,29762311,0,0x0,8
tick,0x7ff954e0fd34,29777251,0,0x0,8
tick,0x7ff954e0fd34,29792246,0,0x0,8
tick,0x7ff954e0fd34,29808366,0,0x0,8
tick,0x7ff954e0fd34,29823137,0,0x0,8
tick,0x7ff954e0fd34,29839080,0,0x0,8
tick,0x7ff954e0fd34,29855059,0,0x0,8
tick,0x7ff954e0fd34,29871033,0,0x0,8
tick,0x7ff954e0fd34,29886244,0,0x0,8
tick,0x7ff954e0fd34,29901217,0,0x0,8
tick,0x7ff954e0fd34,29916148,0,0x0,8
tick,0x7ff954e0fd34,29931155,0,0x0,8
tick,0x7ff954e0fd34,29947086,0,0x0,8
tick,0x7ff954e0fd34,29962052,0,0x0,8
tick,0x7ff954e0fd34,29977062,0,0x0,8
tick,0x7ff954e0fd34,29991961,0,0x0,8
tick,0x7ff954e0fd34,30006952,0,0x0,8
tick,0x7ff954e0fd34,30021880,0,0x0,8
tick,0x7ff954e0fd34,30036857,0,0x0,8
tick,0x7ff954e0fd34,30051823,0,0x0,8
tick,0x7ff954e0fd34,30067115,0,0x0,8
tick,0x7ff954e0fd34,30082112,0,0x0,8
tick,0x7ff954e0fd34,30097527,0,0x0,8
tick,0x7ff954e0fd34,30113473,0,0x0,8
tick,0x7ff954e0fd34,30129472,0,0x0,8
tick,0x7ff954e0fd34,30144440,0,0x0,8
tick,0x7ff954e0fd34,30159371,0,0x0,8
tick,0x7ff954e0fd34,30175354,0,0x0,8
tick,0x7ff954e0fd34,30191420,0,0x0,8
tick,0x7ff954e0fd34,30206256,0,0x0,8
tick,0x7ff954e0fd34,30222224,0,0x0,8
tick,0x7ff954e0fd34,30237169,0,0x0,8
tick,0x7ff954e0fd34,30252128,0,0x0,8
tick,0x7ff954e0fd34,30268110,0,0x0,8
tick,0x7ff954e0fd34,30283540,0,0x0,8
tick,0x7ff954e0fd34,30299520,0,0x0,8
tick,0x7ff954e0fd34,30315475,0,0x0,8
tick,0x7ff954e0fd34,30331415,0,0x0,8
tick,0x7ff954e0fd34,30347486,0,0x0,8
tick,0x7ff954e0fd34,30362653,0,0x0,8
tick,0x7ff954e0fd34,30378624,0,0x0,8
tick,0x7ff954e0fd34,30393790,0,0x0,8
tick,0x7ff954e0fd34,30409805,0,0x0,8
tick,0x7ff954e0fd34,30425734,0,0x0,8
tick,0x7ff954e0fd34,30441712,0,0x0,8
tick,0x7ff954e0fd34,30457822,0,0x0,8
tick,0x7ff954e0fd34,30473750,0,0x0,8
tick,0x7ff954e0fd34,30489802,0,0x0,8
tick,0x7ff954e0fd34,30505788,0,0x0,8
tick,0x7ff954e0fd34,30520919,0,0x0,8
tick,0x7ff954e0fd34,30535920,0,0x0,8
tick,0x7ff954e0fd34,30551867,0,0x0,8
tick,0x7ff954e0fd34,30567312,0,0x0,8
tick,0x7ff954e0fd34,30583305,0,0x0,8
tick,0x7ff954e0fd34,30599242,0,0x0,8
tick,0x7ff954e0fd34,30615249,0,0x0,8
tick,0x7ff954e0fd34,30630511,0,0x0,8
tick,0x7ff954e0fd34,30645414,0,0x0,8
tick,0x7ff954e0fd34,30660379,0,0x0,8
tick,0x7ff954e0fd34,30676326,0,0x0,8
tick,0x7ff954e0fd34,30691292,0,0x0,8
tick,0x7ff954e0fd34,30707223,0,0x0,8
tick,0x7ff954e0fd34,30722240,0,0x0,8
tick,0x7ff954e0fd34,30737184,0,0x0,8
tick,0x7ff954e0fd34,30752124,0,0x0,8
tick,0x7ff954e0fd34,30768078,0,0x0,8
tick,0x7ff954e0fd34,30783039,0,0x0,8
tick,0x7ff954e0fd34,30797994,0,0x0,8
tick,0x7ff954e0fd34,30813966,0,0x0,8
tick,0x7ff954e0fd34,30828911,0,0x0,8
tick,0x7ff954e0fd34,30843875,0,0x0,8
tick,0x7ff954e0fd34,30858849,0,0x0,8
tick,0x7ff954e0fd34,30874155,0,0x0,8
tick,0x7ff954e0fd34,30889052,0,0x0,8
tick,0x7ff954e0fd34,30905056,0,0x0,8
tick,0x7ff954e0fd34,30919984,0,0x0,8
tick,0x7ff954e0fd34,30935932,0,0x0,8
tick,0x7ff954e0fd34,30951923,0,0x0,8
tick,0x7ff954e0fd34,30967801,0,0x0,8
tick,0x7ff954e0fd34,30982744,0,0x0,8
tick,0x7ff954e0fd34,30998118,0,0x0,8
tick,0x7ff954e0fd34,31013926,0,0x0,8
tick,0x7ff954e0fd34,31028907,0,0x0,8
tick,0x7ff954e0fd34,31043870,0,0x0,8
tick,0x7ff954e0fd34,31058823,0,0x0,8
tick,0x7ff954e0fd34,31074779,0,0x0,8
tick,0x7ff954e0fd34,31090682,0,0x0,8
tick,0x7ff954e0fd34,31106732,0,0x0,8
tick,0x7ff954e0fd34,31122579,0,0x0,8
tick,0x7ff954e0fd34,31138592,0,0x0,8
tick,0x7ff954e0fd34,31154546,0,0x0,8
tick,0x7ff954e0fd34,31170498,0,0x0,8
tick,0x7ff954e0fd34,31186425,0,0x0,8
tick,0x7ff954e0fd34,31202410,0,0x0,8
tick,0x7ff954e0fd34,31218375,0,0x0,8
tick,0x7ff954e0fd34,31234104,0,0x0,8
tick,0x7ff954e0fd34,31249311,0,0x0,8
tick,0x7ff954e0fd34,31264285,0,0x0,8
tick,0x7ff954e0fd34,31280290,0,0x0,8
tick,0x7ff954e0fd34,31296191,0,0x0,8
tick,0x7ff954e0fd34,31311176,0,0x0,8
tick,0x7ff954e0fd34,31326127,0,0x0,8
tick,0x7ff954e0fd34,31342114,0,0x0,8
tick,0x7ff954e0fd34,31358045,0,0x0,8
tick,0x7ff954e0fd34,31374017,0,0x0,8
tick,0x7ff954e0fd34,31389132,0,0x0,8
tick,0x7ff954e0fd34,31403989,0,0x0,8
tick,0x7ff954e0fd34,31418930,0,0x0,8
tick,0x7ff954e0fd34,31434502,0,0x0,8
tick,0x7ff954e0fd34,31449437,0,0x0,8
tick,0x7ff954e0fd34,31464388,0,0x0,8
tick,0x7ff954e0fd34,31480428,0,0x0,8
tick,0x7ff954e0fd34,31496301,0,0x0,8
tick,0x7ff954e0fd34,31512256,0,0x0,8
tick,0x7ff954e0fd34,31527812,0,0x0,8
tick,0x7ff954e0fd34,31542739,0,0x0,8
tick,0x7ff954e0fd34,31558740,0,0x0,8
tick,0x7ff954e0fd34,31573661,0,0x0,8
tick,0x7ff954e0fd34,31589428,0,0x0,8
tick,0x7ff954e0fd34,31605346,0,0x0,8
tick,0x7ff954e0fd34,31620940,0,0x0,8
tick,0x7ff954e0fd34,31636965,0,0x0,8
tick,0x7ff954e0fd34,31651884,0,0x0,8
tick,0x7ff954e0fd34,31667847,0,0x0,8
tick,0x7ff954e0fd34,31682805,0,0x0,8
tick,0x7ff954e0fd34,31698788,0,0x0,8
tick,0x7ff954e0fd34,31713732,0,0x0,8
tick,0x7ff954e0fd34,31729591,0,0x0,8
tick,0x7ff954e0fd34,31745536,0,0x0,8
tick,0x7ff954e0fd34,31760632,0,0x0,8
tick,0x7ff954e0fd34,31776005,0,0x0,8
tick,0x7ff954e0fd34,31791890,0,0x0,8
tick,0x7ff954e0fd34,31807874,0,0x0,8
tick,0x7ff954e0fd34,31822985,0,0x0,8
tick,0x7ff954e0fd34,31838496,0,0x0,8
tick,0x7ff954e0fd34,31854453,0,0x0,8
tick,0x7ff954e0fd34,31870434,0,0x0,8
tick,0x7ff954e0fd34,31886391,0,0x0,8
tick,0x7ff954e0fd34,31902497,0,0x0,8
tick,0x7ff954e0fd34,31918313,0,0x0,8
tick,0x7ff954e0fd34,31933846,0,0x0,8
tick,0x7ff954e0fd34,31949816,0,0x0,8
tick,0x7ff954e0fd34,31965783,0,0x0,8
tick,0x7ff954e0fd34,31981202,0,0x0,8
tick,0x7ff954e0fd34,31996362,0,0x0,8
tick,0x7ff954e0fd34,32012347,0,0x0,8
tick,0x7ff954e0fd34,32027269,0,0x0,8
tick,0x7ff954e0fd34,32042154,0,0x0,8
tick,0x7ff954e0fd34,32057135,0,0x0,8
tick,0x7ff954e0fd34,32072128,0,0x0,8
tick,0x7ff954e0fd34,32088034,0,0x0,8
tick,0x7ff954e0fd34,32103020,0,0x0,8
tick,0x7ff954e0fd34,32117942,0,0x0,8
tick,0x7ff954e0fd34,32132949,0,0x0,8
tick,0x7ff954e0fd34,32148679,0,0x0,8
tick,0x7ff954e0fd34,32163632,0,0x0,8
tick,0x7ff954e0fd34,32179625,0,0x0,8
tick,0x7ff954e0fd34,32194581,0,0x0,8
tick,0x7ff954e0fd34,32209813,0,0x0,8
tick,0x7ff954e0fd34,32225848,0,0x0,8
tick,0x7ff954e0fd34,32241796,0,0x0,8
tick,0x7ff954e0fd34,32257079,0,0x0,8
tick,0x7ff954e0fd34,32271673,0,0x0,8
tick,0x7ff954e0fd34,32287747,0,0x0,8
tick,0x7ff954e0fd34,32303613,0,0x0,8
tick,0x7ff954e0fd34,32319529,0,0x0,8
tick,0x7ff954e0fd34,32334676,0,0x0,8
tick,0x7ff954e0fd34,32350623,0,0x0,8
tick,0x7ff954e0fd34,32365561,0,0x0,8
tick,0x7ff954e0fd34,32381493,0,0x0,8
tick,0x7ff954e0fd34,32397477,0,0x0,8
tick,0x7ff954e0fd34,32413445,0,0x0,8
tick,0x7ff954e0fd34,32429410,0,0x0,8
tick,0x7ff954e0fd34,32445353,0,0x0,8
tick,0x7ff954e0fd34,32460321,0,0x0,8
tick,0x7ff954e0fd34,32475266,0,0x0,8
tick,0x7ff954e0fd34,32490257,0,0x0,8
tick,0x7ff954e0fd34,32506240,0,0x0,8
tick,0x7ff954e0fd34,32521182,0,0x0,8
tick,0x7ff954e0fd34,32537102,0,0x0,8
tick,0x7ff954e0fd34,32553068,0,0x0,8
tick,0x7ff954e0fd34,32569015,0,0x0,8
tick,0x7ff954e0fd34,32584972,0,0x0,8
tick,0x7ff954e0fd34,32600955,0,0x0,8
tick,0x7ff954e0fd34,32616876,0,0x0,8
tick,0x7ff954e0fd34,32632837,0,0x0,8
tick,0x7ff954e0fd34,32648795,0,0x0,8
tick,0x7ff954e0fd34,32664777,0,0x0,8
tick,0x7ff954e0fd34,32679797,0,0x0,8
tick,0x7ff954e0fd34,32695407,0,0x0,8
tick,0x7ff954e0fd34,32711329,0,0x0,8
tick,0x7ff954e0fd34,32727285,0,0x0,8
tick,0x7ff954e0fd34,32743234,0,0x0,8
tick,0x7ff954e0fd34,32759262,0,0x0,8
tick,0x7ff954e0fd34,32775147,0,0x0,8
tick,0x7ff954e0fd34,32791131,0,0x0,8
tick,0x7ff954e0fd34,32807077,0,0x0,8
tick,0x7ff954e0fd34,32822070,0,0x0,8
tick,0x7ff954e0fd34,32836976,0,0x0,8
tick,0x7ff954e0fd34,32851967,0,0x0,8
tick,0x7ff954e0fd34,32867973,0,0x0,8
tick,0x7ff954e0fd34,32882865,0,0x0,8
tick,0x7ff954e0fd34,32897840,0,0x0,8
tick,0x7ff954e0fd34,32913786,0,0x0,8
tick,0x7ff954e0fd34,32928743,0,0x0,8
tick,0x7ff954e0fd34,32944718,0,0x0,8
tick,0x7ff954e0fd34,32960674,0,0x0,8
tick,0x7ff954e0fd34,32976662,0,0x0,8
tick,0x7ff954e0fd34,32992586,0,0x0,8
tick,0x7ff954e0fd34,33008535,0,0x0,8
tick,0x7ff954e0fd34,33024507,0,0x0,8
tick,0x7ff954e0fd34,33039468,0,0x0,8
tick,0x7ff954e0fd34,33054399,0,0x0,8
tick,0x7ff954e0fd34,33070352,0,0x0,8
tick,0x7ff954e0fd34,33086348,0,0x0,8
tick,0x7ff954e0fd34,33102307,0,0x0,8
tick,0x7ff954e0fd34,33118245,0,0x0,8
tick,0x7ff954e0fd34,33133199,0,0x0,8
tick,0x7ff954e0fd34,33148164,0,0x0,8
tick,0x7ff954e0fd34,33164160,0,0x0,8
tick,0x7ff954e0fd34,33180095,0,0x0,8
tick,0x7ff954e0fd34,33195974,0,0x0,8
tick,0x7ff954e0fd34,33210930,0,0x0,8
tick,0x7ff954e0fd34,33226886,0,0x0,8
tick,0x7ff954e0fd34,33242864,0,0x0,8
tick,0x7ff954e0fd34,33257830,0,0x0,8
tick,0x7ff954e0fd34,33273749,0,0x0,8
tick,0x7ff954e0fd34,33289909,0,0x0,8
tick,0x7ff954e0fd34,33305712,0,0x0,8
tick,0x7ff954e0fd34,33321593,0,0x0,8
tick,0x7ff954e0fd34,33337652,0,0x0,8
tick,0x7ff954e0fd34,33353638,0,0x0,8
tick,0x7ff954e0fd34,33369507,0,0x0,8
tick,0x7ff954e0fd34,33385466,0,0x0,8
tick,0x7ff954e0fd34,33401465,0,0x0,8
tick,0x7ff954e0fd34,33416355,0,0x0,8
tick,0x7ff954e0fd34,33431313,0,0x0,8
tick,0x7ff954e0fd34,33446834,0,0x0,8
tick,0x7ff954e0fd34,33462760,0,0x0,8
tick,0x7ff954e0fd34,33477705,0,0x0,8
tick,0x7ff954e0fd34,33492669,0,0x0,8
tick,0x7ff954e0fd34,33508685,0,0x0,8
tick,0x7ff954e0fd34,33524663,0,0x0,8
tick,0x7ff954e0fd34,33540534,0,0x0,8
tick,0x7ff954e0fd34,33556562,0,0x0,8
tick,0x7ff954e0fd34,33572452,0,0x0,8
tick,0x7ff954e0fd34,33588424,0,0x0,8
tick,0x7ff954e0fd34,33603367,0,0x0,8
tick,0x7ff954e0fd34,33619326,0,0x0,8
tick,0x7ff954e0fd34,33634271,0,0x0,8
tick,0x7ff954e0fd34,33650278,0,0x0,8
tick,0x7ff954e0fd34,33666201,0,0x0,8
tick,0x7ff954e0fd34,33682194,0,0x0,8
tick,0x7ff954e0fd34,33698125,0,0x0,8
tick,0x7ff954e0fd34,33714057,0,0x0,8
tick,0x7ff954e0fd34,33729677,0,0x0,8
tick,0x7ff954e0fd34,33744994,0,0x0,8
tick,0x7ff954e0fd34,33760949,0,0x0,8
tick,0x7ff954e0fd34,33775918,0,0x0,8
tick,0x7ff954e0fd34,33791890,0,0x0,8
tick,0x7ff954e0fd34,33807313,0,0x0,8
tick,0x7ff954e0fd34,33822275,0,0x0,8
tick,0x7ff954e0fd34,33838216,0,0x0,8
tick,0x7ff954e0fd34,33853210,0,0x0,8
tick,0x7ff954e0fd34,33868943,0,0x0,8
tick,0x7ff954e0fd34,33884924,0,0x0,8
tick,0x7ff954e0fd34,33899845,0,0x0,8
tick,0x7ff954e0fd34,33914834,0,0x0,8
tick,0x7ff954e0fd34,33930010,0,0x0,8
tick,0x7ff954e0fd34,33945947,0,0x0,8
tick,0x7ff954e0fd34,33961355,0,0x0,8
tick,0x7ff954e0fd34,33977305,0,0x0,8
tick,0x7ff954e0fd34,33993249,0,0x0,8
tick,0x7ff954e0fd34,34009246,0,0x0,8
tick,0x7ff954e0fd34,34024220,0,0x0,8
tick,0x7ff954e0fd34,34040102,0,0x0,8
tick,0x7ff954e0fd34,34056073,0,0x0,8
tick,0x7ff954e0fd34,34072048,0,0x0,8
tick,0x7ff954e0fd34,34086986,0,0x0,8
tick,0x7ff954e0fd34,34102877,0,0x0,8
tick,0x7ff954e0fd34,34118839,0,0x0,8
tick,0x7ff954e0fd34,34133778,0,0x0,8
tick,0x7ff954e0fd34,34149322,0,0x0,8
tick,0x7ff954e0fd34,34164602,0,0x0,8
tick,0x7ff954e0fd34,34180528,0,0x0,8
tick,0x7ff954e0fd34,34196537,0,0x0,8
tick,0x7ff954e0fd34,34211634,0,0x0,8
tick,0x7ff954e0fd34,34227324,0,0x0,8
tick,0x7ff954e0fd34,34243262,0,0x0,8
tick,0x7ff954e0fd34,34258428,0,0x0,8
tick,0x7ff954e0fd34,34274492,0,0x0,8
tick,0x7ff954e0fd34,34289534,0,0x0,8
tick,0x7ff954e0fd34,34304487,0,0x0,8
tick,0x7ff954e0fd34,34319430,0,0x0,8
tick,0x7ff954e0fd34,34335486,0,0x0,8
tick,0x7ff954e0fd34,34350302,0,0x0,8
tick,0x7ff954e0fd34,34366249,0,0x0,8
tick,0x7ff954e0fd34,34381213,0,0x0,8
tick,0x7ff954e0fd34,34396205,0,0x0,8
tick,0x7ff954e0fd34,34412153,0,0x0,8
tick,0x7ff954e0fd34,34427165,0,0x0,8
tick,0x7ff954e0fd34,34443053,0,0x0,8
tick,0x7ff954e0fd34,34459022,0,0x0,8
tick,0x7ff954e0fd34,34474976,0,0x0,8
tick,0x7ff954e0fd34,34490983,0,0x0,8
tick,0x7ff954e0fd34,34506876,0,0x0,8
tick,0x7ff954e0fd34,34522870,0,0x0,8
tick,0x7ff954e0fd34,34538356,0,0x0,8
tick,0x7ff954e0fd34,34554321,0,0x0,8
tick,0x7ff954e0fd34,34570285,0,0x0,8
tick,0x7ff954e0fd34,34586261,0,0x0,8
tick,0x7ff954e0fd34,34602188,0,0x0,8
tick,0x7ff954e0fd34,34617783,0,0x0,8
tick,0x7ff954e0fd34,34633758,0,0x0,8
tick,0x7ff954e0fd34,34649749,0,0x0,8
tick,0x7ff954e0fd34,34665656,0,0x0,8
tick,0x7ff954e0fd34,34680383,0,0x0,8
tick,0x7ff954e0fd34,34696325,0,0x0,8
tick,0x7ff954e0fd34,34711358,0,0x0,8
tick,0x7ff954e0fd34,34726863,0,0x0,8
tick,0x7ff954e0fd34,34742105,0,0x0,8
tick,0x7ff954e0fd34,34758062,0,0x0,8
tick,0x7ff954e0fd34,34774015,0,0x0,8
tick,0x7ff954e0fd34,34789971,0,0x0,8
tick,0x7ff954e0fd34,34805930,0,0x0,8
tick,0x7ff954e0fd34,34821874,0,0x0,8
tick,0x7ff954e0fd34,34836875,0,0x0,8
tick,0x7ff954e0fd34,34851836,0,0x0,8
tick,0x7ff954e0fd34,34866820,0,0x0,8
tick,0x7ff954e0fd34,34882093,0,0x0,8
tick,0x7ff954e0fd34,34898001,0,0x0,8
tick,0x7ff954e0fd34,34913985,0,0x0,8
tick,0x7ff954e0fd34,34929011,0,0x0,8
tick,0x7ff954e0fd34,34944884,0,0x0,8
tick,0x7ff954e0fd34,34960839,0,0x0,8
tick,0x7ff954e0fd34,34976808,0,0x0,8
tick,0x7ff954e0fd34,34991832,0,0x0,8
tick,0x7ff954e0fd34,35006699,0,0x0,8
tick,0x7ff954e0fd34,35021957,0,0x0,8
tick,0x7ff954e0fd34,35036916,0,0x0,8
tick,0x7ff954e0fd34,35051883,0,0x0,8
tick,0x7ff954e0fd34,35066838,0,0x0,8
tick,0x7ff954e0fd34,35082785,0,0x0,8
tick,0x7ff954e0fd34,35098785,0,0x0,8
tick,0x7ff954e0fd34,35114705,0,0x0,8
tick,0x7ff954e0fd34,35130734,0,0x0,8
tick,0x7ff954e0fd34,35146621,0,0x0,8
tick,0x7ff954e0fd34,35162560,0,0x0,8
tick,0x7ff954e0fd34,35178526,0,0x0,8
tick,0x7ff954e0fd34,35194483,0,0x0,8
tick,0x7ff954e0fd34,35209476,0,0x0,8
tick,0x7ff954e0fd34,35224412,0,0x0,8
tick,0x7ff954e0fd34,35239375,0,0x0,8
tick,0x7ff954e0fd34,35254342,0,0x0,8
tick,0x7ff954e0fd34,35270420,0,0x0,8
tick,0x7ff954e0fd34,35285462,0,0x0,8
tick,0x7ff954e0fd34,35300390,0,0x0,8
tick,0x7ff954e0fd34,35315491,0,0x0,8
tick,0x7ff954e0fd34,35330346,0,0x0,8
tick,0x7ff954e0fd34,35346187,0,0x0,8
tick,0x7ff954e0fd34,35362140,0,0x0,8
tick,0x7ff954e0fd34,35378080,0,0x0,8
tick,0x7ff954e0fd34,35393343,0,0x0,8
tick,0x7ff954e0fd34,35408339,0,0x0,8
tick,0x7ff954e0fd34,35424242,0,0x0,8
tick,0x7ff954e0fd34,35439529,0,0x0,8
tick,0x7ff954e0fd34,35454487,0,0x0,8
tick,0x7ff954e0fd34,35470430,0,0x0,8
tick,0x7ff954e0fd34,35486372,0,0x0,8
tick,0x7ff954e0fd34,35501325,0,0x0,8
tick,0x7ff954e0fd34,35517324,0,0x0,8
tick,0x7ff954e0fd34,35532265,0,0x0,8
tick,0x7ff954e0fd34,35547258,0,0x0,8
tick,0x7ff954e0fd34,35562235,0,0x0,8
tick,0x7ff954e0fd34,35577183,0,0x0,8
tick,0x7ff954e0fd34,35593137,0,0x0,8
tick,0x7ff954e0fd34,35609049,0,0x0,8
tick,0x7ff954e0fd34,35625008,0,0x0,8
tick,0x7ff954e0fd34,35640341,0,0x0,8
tick,0x7ff954e0fd34,35656274,0,0x0,8
tick,0x7ff954e0fd34,35671482,0,0x0,8
tick,0x7ff954e0fd34,35686461,0,0x0,8
tick,0x7ff954e0fd34,35701874,0,0x0,8
tick,0x7ff954e0fd34,35717331,0,0x0,8
tick,0x7ff954e0fd34,35732290,0,0x0,8
tick,0x7ff954e0fd34,35747665,0,0x0,8
tick,0x7ff954e0fd34,35762824,0,0x0,8
tick,0x7ff954e0fd34,35777810,0,0x0,8
tick,0x7ff954e0fd34,35792530,0,0x0,8
tick,0x7ff954e0fd34,35808108,0,0x0,8
tick,0x7ff954e0fd34,35824075,0,0x0,8
tick,0x7ff954e0fd34,35839985,0,0x0,8
tick,0x7ff954e0fd34,35855982,0,0x0,8
tick,0x7ff954e0fd34,35871292,0,0x0,8
tick,0x7ff954e0fd34,35887250,0,0x0,8
tick,0x7ff954e0fd34,35903268,0,0x0,8
tick,0x7ff954e0fd34,35918194,0,0x0,8
tick,0x7ff954e0fd34,35933121,0,0x0,8
tick,0x7ff954e0fd34,35948102,0,0x0,8
tick,0x7ff954e0fd34,35963066,0,0x0,8
tick,0x7ff954e0fd34,35979027,0,0x0,8
tick,0x7ff954e0fd34,35994974,0,0x0,8
tick,0x7ff954e0fd34,36010960,0,0x0,8
tick,0x7ff954e0fd34,36025921,0,0x0,8
tick,0x7ff954e0fd34,36041882,0,0x0,8
tick,0x7ff954e0fd34,36056853,0,0x0,8
tick,0x7ff954e0fd34,36072801,0,0x0,8
tick,0x7ff954e0fd34,36088382,0,0x0,8
tick,0x7ff954e0fd34,36104481,0,0x0,8
tick,0x7ff954e0fd34,36120484,0,0x0,8
tick,0x7ff954e0fd34,36136486,0,0x0,8
tick,0x7ff954e0fd34,36151881,0,0x0,8
tick,0x7ff954e0fd34,36167916,0,0x0,8
tick,0x7ff954e0fd34,36183816,0,0x0,8
tick,0x7ff954e0fd34,36199073,0,0x0,8
tick,0x7ff954e0fd34,36215044,0,0x0,8
tick,0x7ff954e0fd34,36230284,0,0x0,8
tick,0x7ff954e0fd34,36245883,0,0x0,8
tick,0x7ff954e0fd34,36261646,0,0x0,8
tick,0x7ff954e0fd34,36277235,0,0x0,8
tick,0x7ff954e0fd34,36293216,0,0x0,8
tick,0x7ff954e0fd34,36308551,0,0x0,8
tick,0x7ff954e0fd34,36324578,0,0x0,8
tick,0x7ff954e0fd34,36340466,0,0x0,8
tick,0x7ff954e0fd34,36356374,0,0x0,8
tick,0x7ff954e0fd34,36372302,0,0x0,8
tick,0x7ff954e0fd34,36388328,0,0x0,8
tick,0x7ff954e0fd34,36404248,0,0x0,8
tick,0x7ff954e0fd34,36420203,0,0x0,8
tick,0x7ff954e0fd34,36435200,0,0x0,8
tick,0x7ff954e0fd34,36451124,0,0x0,8
tick,0x7ff954e0fd34,36466080,0,0x0,8
tick,0x7ff954e0fd34,36482021,0,0x0,8
tick,0x7ff954e0fd34,36497995,0,0x0,8
tick,0x7ff954e0fd34,36513956,0,0x0,8
tick,0x7ff954e0fd34,36528898,0,0x0,8
tick,0x7ff954e0fd34,36544471,0,0x0,8
tick,0x7ff954e0fd34,36560418,0,0x0,8
tick,0x7ff954e0fd34,36576398,0,0x0,8
tick,0x7ff954e0fd34,36592331,0,0x0,8
tick,0x7ff954e0fd34,36608311,0,0x0,8
tick,0x7ff954e0fd34,36623250,0,0x0,8
tick,0x7ff954e0fd34,36639194,0,0x0,8
tick,0x7ff954e0fd34,36654830,0,0x0,8
tick,0x7ff954e0fd34,36670690,0,0x0,8
tick,0x7ff954e0fd34,36685670,0,0x0,8
tick,0x7ff954e0fd34,36700610,0,0x0,8
tick,0x7ff954e0fd34,36715830,0,0x0,8
tick,0x7ff954e0fd34,36731775,0,0x0,8
tick,0x7ff954e0fd34,36746688,0,0x0,8
tick,0x7ff954e0fd34,36762648,0,0x0,8
tick,0x7ff954e0fd34,36777615,0,0x0,8
tick,0x7ff954e0fd34,36792579,0,0x0,8
tick,0x7ff954e0fd34,36808551,0,0x0,8
tick,0x7ff954e0fd34,36824222,0,0x0,8
tick,0x7ff954e0fd34,36840185,0,0x0,8
tick,0x7ff954e0fd34,36855867,0,0x0,8
tick,0x7ff954e0fd34,36871762,0,0x0,8
tick,0x7ff954e0fd34,36887694,0,0x0,8
tick,0x7ff954e0fd34,36903687,0,0x0,8
tick,0x7ff954e0fd34,36919669,0,0x0,8
tick,0x7ff954e0fd34,36935631,0,0x0,8
tick,0x7ff954e0fd34,36951574,0,0x0,8
tick,0x7ff954e0fd34,36967432,0,0x0,8
tick,0x7ff954e0fd34,36983407,0,0x0,8
tick,0x7ff954e0fd34,36999340,0,0x0,8
tick,0x7ff954e0fd34,37014456,0,0x0,8
tick,0x7ff954e0fd34,37029398,0,0x0,8
tick,0x7ff954e0fd34,37045348,0,0x0,8
tick,0x7ff954e0fd34,37060808,0,0x0,8
tick,0x7ff954e0fd34,37076769,0,0x0,8
tick,0x7ff954e0fd34,37092731,0,0x0,8
tick,0x7ff954e0fd34,37108690,0,0x0,8
tick,0x7ff954e0fd34,37124632,0,0x0,8
tick,0x7ff954e0fd34,37140644,0,0x0,8
tick,0x7ff954e0fd34,37156624,0,0x0,8
tick,0x7ff954e0fd34,37171549,0,0x0,8
tick,0x7ff954e0fd34,37187555,0,0x0,8
tick,0x7ff954e0fd34,37203435,0,0x0,8
tick,0x7ff954e0fd34,37219399,0,0x0,8
tick,0x7ff954e0fd34,37235354,0,0x0,8
tick,0x7ff954e0fd34,37251315,0,0x0,8
tick,0x7ff954e0fd34,37267277,0,0x0,8
tick,0x7ff954e0fd34,37282219,0,0x0,8
tick,0x7ff954e0fd34,37298323,0,0x0,8
tick,0x7ff954e0fd34,37313200,0,0x0,8
tick,0x7ff954e0fd34,37329516,0,0x0,8
tick,0x7ff954e0fd34,37344308,0,0x0,8
tick,0x7ff954e0fd34,37359046,0,0x0,8
tick,0x7ff954e0fd34,37375432,0,0x0,8
tick,0x7ff954e0fd34,37389940,0,0x0,8
tick,0x7ff954e0fd34,37404919,0,0x0,8
tick,0x7ff954e0fd34,37422817,0,0x0,8
tick,0x7ff954e0fd34,37435880,0,0x0,8
tick,0x7ff954e0fd34,37450870,0,0x0,8
tick,0x7ff954e0fd34,37465744,0,0x0,8
tick,0x7ff954e0fd34,37482215,0,0x0,8
tick,0x7ff954e0fd34,37496930,0,0x0,8
tick,0x7ff954e0fd34,37512726,0,0x0,8
tick,0x7ff954e0fd34,37528630,0,0x0,8
tick,0x7ff954e0fd34,37544913,0,0x0,8
tick,0x7ff954e0fd34,37559516,0,0x0,8
tick,0x7ff954e0fd34,37576078,0,0x0,8
tick,0x7ff954e0fd34,37589971,0,0x0,8
tick,0x7ff954e0fd34,37604527,0,0x0,8
tick,0x7ff954e0fd34,37622815,0,0x0,8
tick,0x7ff954e0fd34,37636404,0,0x0,8
tick,0x7ff954e0fd34,37651273,0,0x0,8
tick,0x7ff954e0fd34,37666223,0,0x0,8
tick,0x7ff954e0fd34,37682215,0,0x0,8
tick,0x7ff954e0fd34,37698217,0,0x0,8
tick,0x7ff954e0fd34,37722831,0,0x0,8
tick,0x7ff954e0fd34,37730160,0,0x0,8
tick,0x7ff954e0fd34,37744049,0,0x0,8
tick,0x7ff954e0fd34,37760192,0,0x0,8
tick,0x7ff954e0fd34,37774960,0,0x0,8
tick,0x7ff954e0fd34,37790675,0,0x0,8
tick,0x7ff954e0fd34,37804916,0,0x0,8
tick,0x7ff954e0fd34,37820025,0,0x0,8
tick,0x7ff954e0fd34,37835010,0,0x0,8
tick,0x7ff954e0fd34,37849985,0,0x0,8
tick,0x7ff954e0fd34,37865715,0,0x0,8
tick,0x7ff954e0fd34,37880700,0,0x0,8
tick,0x7ff954e0fd34,37896596,0,0x0,8
tick,0x7ff954e0fd34,37917203,0,0x0,8
tick,0x7ff954e0fd34,37932218,0,0x0,8
tick,0x7ff954e0fd34,37942501,0,0x0,8
tick,0x7ff954e0fd34,37957945,0,0x0,8
tick,0x7ff954e0fd34,37974591,0,0x0,8
tick,0x7ff954e0fd34,37990131,0,0x0,8
tick,0x7ff954e0fd34,38006125,0,0x0,8
tick,0x7ff954e0fd34,38020695,0,0x0,8
tick,0x7ff954e0fd34,38036525,0,0x0,8
tick,0x7ff954e0fd34,38050494,0,0x0,8
tick,0x7ff954e0fd34,38065251,0,0x0,8
tick,0x7ff954e0fd34,38080871,0,0x0,8
tick,0x7ff954e0fd34,38095695,0,0x0,8
tick,0x7ff954e0fd34,38110647,0,0x0,8
tick,0x7ff954e0fd34,38126640,0,0x0,8
tick,0x7ff954e0fd34,38141535,0,0x0,8
tick,0x7ff954e0fd34,38156388,0,0x0,8
tick,0x7ff954e0fd34,38172510,0,0x0,8
tick,0x7ff954e0fd34,38186337,0,0x0,8
tick,0x7ff954e0fd34,38201289,0,0x0,8
tick,0x7ff954e0fd34,38216227,0,0x0,8
tick,0x7ff954e0fd34,38231177,0,0x0,8
tick,0x7ff954e0fd34,38247347,0,0x0,8
tick,0x7ff954e0fd34,38262232,0,0x0,8
tick,0x7ff954e0fd34,38278153,0,0x0,8
tick,0x7ff954e0fd34,38294164,0,0x0,8
tick,0x7ff954e0fd34,38309952,0,0x0,8
tick,0x7ff954e0fd34,38325907,0,0x0,8
tick,0x7ff954e0fd34,38341984,0,0x0,8
tick,0x7ff954e0fd34,38357871,0,0x0,8
tick,0x7ff954e0fd34,38372835,0,0x0,8
tick,0x7ff954e0fd34,38387913,0,0x0,8
tick,0x7ff954e0fd34,38403710,0,0x0,8
tick,0x7ff954e0fd34,38419670,0,0x0,8
tick,0x7ff954e0fd34,38435587,0,0x0,8
tick,0x7ff954e0fd34,38451551,0,0x0,8
tick,0x7ff954e0fd34,38467080,0,0x0,8
tick,0x7ff954e0fd34,38483042,0,0x0,8
tick,0x7ff954e0fd34,38498979,0,0x0,8
tick,0x7ff954e0fd34,38514946,0,0x0,8
tick,0x7ff954e0fd34,38530151,0,0x0,8
tick,0x7ff954e0fd34,38545059,0,0x0,8
tick,0x7ff954e0fd34,38560851,0,0x0,8
tick,0x7ff954e0fd34,38576909,0,0x0,8
tick,0x7ff954e0fd34,38593624,0,0x0,8
tick,0x7ff954e0fd34,38606708,0,0x0,8
tick,0x7ff954e0fd34,38622626,0,0x0,8
tick,0x7ff954e0fd34,38638595,0,0x0,8
tick,0x7ff954e0fd34,38653528,0,0x0,8
tick,0x7ff954e0fd34,38669556,0,0x0,8
tick,0x7ff954e0fd34,38684464,0,0x0,8
tick,0x7ff954e0fd34,38700423,0,0x0,8
tick,0x7ff954e0fd34,38715375,0,0x0,8
tick,0x7ff954e0fd34,38731100,0,0x0,8
tick,0x7ff954e0fd34,38746287,0,0x0,8
tick,0x7ff954e0fd34,38762279,0,0x0,8
tick,0x7ff954e0fd34,38778197,0,0x0,8
tick,0x7ff954e0fd34,38794158,0,0x0,8
tick,0x7ff954e0fd34,38809176,0,0x0,8
tick,0x7ff954e0fd34,38825096,0,0x0,8
tick,0x7ff954e0fd34,38840295,0,0x0,8
tick,0x7ff954e0fd34,38856090,0,0x0,8
tick,0x7ff954e0fd34,38872074,0,0x0,8
tick,0x7ff954e0fd34,38887945,0,0x0,8
tick,0x7ff954e0fd34,38904006,0,0x0,8
tick,0x7ff954e0fd34,38919894,0,0x0,8
tick,0x7ff954e0fd34,38935789,0,0x0,8
tick,0x7ff954e0fd34,38950866,0,0x0,8
tick,0x7ff954e0fd34,38965707,0,0x0,8
tick,0x7ff954e0fd34,38980818,0,0x0,8
tick,0x7ff954e0fd34,38996643,0,0x0,8
tick,0x7ff954e0fd34,39012643,0,0x0,8
tick,0x7ff954e0fd34,39028576,0,0x0,8
tick,0x7ff954e0fd34,39044614,0,0x0,8
tick,0x7ff954e0fd34,39060647,0,0x0,8
tick,0x7ff954e0fd34,39076745,0,0x0,8
tick,0x7ff954e0fd34,39092388,0,0x0,8
tick,0x7ff954e0fd34,39107411,0,0x0,8
tick,0x7ff954e0fd34,39122429,0,0x0,8
tick,0x7ff954e0fd34,39138416,0,0x0,8
tick,0x7ff954e0fd34,39153279,0,0x0,8
tick,0x7ff954e0fd34,39168318,0,0x0,8
tick,0x7ff954e0fd34,39183182,0,0x0,8
tick,0x7ff954e0fd34,39199105,0,0x0,8
tick,0x7ff954e0fd34,39214191,0,0x0,8
tick,0x7ff954e0fd34,39229138,0,0x0,8
tick,0x7ff954e0fd34,39244961,0,0x0,8
tick,0x7ff954e0fd34,39259923,0,0x0,8
tick,0x7ff954e0fd34,39275880,0,0x0,8
tick,0x7ff954e0fd34,39291875,0,0x0,8
tick,0x7ff954e0fd34,39307777,0,0x0,8
tick,0x7ff954e0fd34,39322762,0,0x0,8
tick,0x7ff954e0fd34,39337820,0,0x0,8
tick,0x7ff954e0fd34,39352727,0,0x0,8
tick,0x7ff954e0fd34,39368638,0,0x0,8
tick,0x7ff954e0fd34,39383616,0,0x0,8
tick,0x7ff954e0fd34,39399564,0,0x0,8
tick,0x7ff954e0fd34,39415507,0,0x0,8
tick,0x7ff954e0fd34,39431485,0,0x0,8
tick,0x7ff954e0fd34,39447419,0,0x0,8
tick,0x7ff954e0fd34,39463420,0,0x0,8
tick,0x7ff954e0fd34,39479328,0,0x0,8
tick,0x7ff954e0fd34,39495288,0,0x0,8
tick,0x7ff954e0fd34,39511244,0,0x0,8
tick,0x7ff954e0fd34,39527363,0,0x0,8
tick,0x7ff954e0fd34,39543156,0,0x0,8
tick,0x7ff954e0fd34,39558911,0,0x0,8
tick,0x7ff954e0fd34,39573846,0,0x0,8
tick,0x7ff954e0fd34,39588800,0,0x0,8
tick,0x7ff954e0fd34,39603759,0,0x0,8
tick,0x7ff954e0fd34,39618501,0,0x0,8
tick,0x7ff954e0fd34,39633975,0,0x0,8
tick,0x7ff954e0fd34,39649916,0,0x0,8
tick,0x7ff954e0fd34,39665562,0,0x0,8
tick,0x7ff954e0fd34,39680875,0,0x0,8
tick,0x7ff954e0fd34,39696118,0,0x0,8
tick,0x7ff954e0fd34,39712074,0,0x0,8
tick,0x7ff954e0fd34,39728065,0,0x0,8
tick,0x7ff954e0fd34,39743985,0,0x0,8
tick,0x7ff954e0fd34,39759171,0,0x0,8
tick,0x7ff954e0fd34,39775168,0,0x0,8
tick,0x7ff954e0fd34,39790625,0,0x0,8
tick,0x7ff954e0fd34,39806238,0,0x0,8
tick,0x7ff954e0fd34,39822228,0,0x0,8
tick,0x7ff954e0fd34,39838206,0,0x0,8
tick,0x7ff954e0fd34,39854174,0,0x0,8
tick,0x7ff954e0fd34,39870166,0,0x0,8
tick,0x7ff954e0fd34,39885592,0,0x0,8
tick,0x7ff954e0fd34,39901506,0,0x0,8
tick,0x7ff954e0fd34,39916461,0,0x0,8
tick,0x7ff954e0fd34,39932497,0,0x0,8
tick,0x7ff954e0fd34,39948410,0,0x0,8
tick,0x7ff954e0fd34,39964432,0,0x0,8
tick,0x7ff954e0fd34,39979647,0,0x0,8
tick,0x7ff954e0fd34,39995692,0,0x0,8
tick,0x7ff954e0fd34,40010759,0,0x0,8
tick,0x7ff954e0fd34,40026586,0,0x0,8
tick,0x7ff954e0fd34,40042454,0,0x0,8
tick,0x7ff954e0fd34,40058412,0,0x0,8
tick,0x7ff954e0fd34,40073375,0,0x0,8
tick,0x7ff954e0fd34,40089315,0,0x0,8
tick,0x7ff954e0fd34,40104328,0,0x0,8
tick,0x7ff954e0fd34,40120283,0,0x0,8
tick,0x7ff954e0fd34,40135241,0,0x0,8
tick,0x7ff954e0fd34,40150180,0,0x0,8
tick,0x7ff954e0fd34,40165164,0,0x0,8
tick,0x7ff954e0fd34,40181236,0,0x0,8
tick,0x7ff954e0fd34,40197207,0,0x0,8
tick,0x7ff954e0fd34,40212260,0,0x0,8
tick,0x7ff954e0fd34,40227118,0,0x0,8
tick,0x7ff954e0fd34,40242087,0,0x0,8
tick,0x7ff954e0fd34,40257144,0,0x0,8
tick,0x7ff954e0fd34,40272967,0,0x0,8
tick,0x7ff954e0fd34,40288567,0,0x0,8
tick,0x7ff954e0fd34,40304552,0,0x0,8
tick,0x7ff954e0fd34,40320524,0,0x0,8
tick,0x7ff954e0fd34,40336438,0,0x0,8
tick,0x7ff954e0fd34,40352377,0,0x0,8
tick,0x7ff954e0fd34,40368386,0,0x0,8
tick,0x7ff954e0fd34,40383623,0,0x0,8
tick,0x7ff954e0fd34,40398587,0,0x0,8
tick,0x7ff954e0fd34,40414654,0,0x0,8
tick,0x7ff954e0fd34,40430561,0,0x0,8
tick,0x7ff954e0fd34,40446520,0,0x0,8
tick,0x7ff954e0fd34,40461401,0,0x0,8
tick,0x7ff954e0fd34,40476999,0,0x0,8
tick,0x7ff954e0fd34,40492303,0,0x0,8
tick,0x7ff954e0fd34,40508270,0,0x0,8
tick,0x7ff954e0fd34,40524192,0,0x0,8
tick,0x7ff954e0fd34,40539178,0,0x0,8
tick,0x7ff954e0fd34,40555322,0,0x0,8
tick,0x7ff954e0fd34,40570118,0,0x0,8
tick,0x7ff954e0fd34,40586019,0,0x0,8
tick,0x7ff954e0fd34,40602044,0,0x0,8
tick,0x7ff954e0fd34,40617945,0,0x0,8
tick,0x7ff954e0fd34,40633945,0,0x0,8
tick,0x7ff954e0fd34,40649853,0,0x0,8
tick,0x7ff954e0fd34,40665244,0,0x0,8
tick,0x7ff954e0fd34,40681175,0,0x0,8
tick,0x7ff954e0fd34,40697128,0,0x0,8
tick,0x7ff954e0fd34,40713124,0,0x0,8
tick,0x7ff954e0fd34,40729064,0,0x0,8
tick,0x7ff954e0fd34,40745008,0,0x0,8
tick,0x7ff954e0fd34,40759978,0,0x0,8
tick,0x7ff954e0fd34,40774919,0,0x0,8
tick,0x7ff954e0fd34,40790556,0,0x0,8
tick,0x7ff954e0fd34,40805520,0,0x0,8
tick,0x7ff954e0fd34,40820501,0,0x0,8
tick,0x7ff954e0fd34,40835546,0,0x0,8
tick,0x7ff954e0fd34,40850942,0,0x0,8
tick,0x7ff954e0fd34,40866828,0,0x0,8
tick,0x7ff954e0fd34,40882754,0,0x0,8
tick,0x7ff954e0fd34,40898853,0,0x0,8
tick,0x7ff954e0fd34,40915407,0,0x0,8
tick,0x7ff954e0fd34,40929576,0,0x0,8
tick,0x7ff954e0fd34,40944474,0,0x0,8
tick,0x7ff954e0fd34,40960425,0,0x0,8
tick,0x7ff954e0fd34,40975767,0,0x0,8
tick,0x7ff954e0fd34,40990881,0,0x0,8
tick,0x7ff954e0fd34,41005973,0,0x0,8
tick,0x7ff954e0fd34,41020964,0,0x0,8
tick,0x7ff954e0fd34,41035822,0,0x0,8
tick,0x7ff954e0fd34,41050770,0,0x0,8
tick,0x7ff954e0fd34,41066686,0,0x0,8
tick,0x7ff954e0fd34,41082216,0,0x0,8
tick,0x7ff954e0fd34,41098069,0,0x0,8
tick,0x7ff954e0fd34,41114081,0,0x0,8
tick,0x7ff954e0fd34,41129025,0,0x0,8
tick,0x7ff954e0fd34,41143965,0,0x0,8
tick,0x7ff954e0fd34,41159918,0,0x0,8
tick,0x7ff954e0fd34,41175862,0,0x0,8
tick,0x7ff954e0fd34,41191827,0,0x0,8
tick,0x7ff954e0fd34,41207822,0,0x0,8
tick,0x7ff954e0fd34,41222749,0,0x0,8
tick,0x7ff954e0fd34,41237887,0,0x0,8
tick,0x7ff954e0fd34,41254071,0,0x0,8
tick,0x7ff954e0fd34,41269635,0,0x0,8
tick,0x7ff954e0fd34,41284604,0,0x0,8
tick,0x7ff954e0fd34,41300560,0,0x0,8
tick,0x7ff954e0fd34,41315635,0,0x0,8
tick,0x7ff954e0fd34,41330526,0,0x0,8
tick,0x7ff954e0fd34,41345657,0,0x0,8
tick,0x7ff954e0fd34,41360684,0,0x0,8
tick,0x7ff954e0fd34,41375668,0,0x0,8
tick,0x7ff954e0fd34,41390556,0,0x0,8
tick,0x7ff954e0fd34,41406476,0,0x0,8
tick,0x7ff954e0fd34,41421444,0,0x0,8
tick,0x7ff954e0fd34,41437393,0,0x0,8
tick,0x7ff954e0fd34,41452371,0,0x0,8
tick,0x7ff954e0fd34,41468312,0,0x0,8
tick,0x7ff954e0fd34,41484276,0,0x0,8
tick,0x7ff954e0fd34,41499257,0,0x0,8
tick,0x7ff954e0fd34,41515217,0,0x0,8
tick,0x7ff954e0fd34,41530160,0,0x0,8
tick,0x7ff954e0fd34,41545143,0,0x0,8
tick,0x7ff954e0fd34,41560143,0,0x0,8
tick,0x7ff954e0fd34,41575037,0,0x0,8
tick,0x7ff954e0fd34,41590372,0,0x0,8
tick,0x7ff954e0fd34,41606390,0,0x0,8
tick,0x7ff954e0fd34,41621294,0,0x0,8
tick,0x7ff954e0fd34,41637281,0,0x0,8
tick,0x7ff954e0fd34,41652179,0,0x0,8
tick,0x7ff954e0fd34,41668141,0,0x0,8
tick,0x7ff954e0fd34,41683223,0,0x0,8
tick,0x7ff954e0fd34,41698088,0,0x0,8
tick,0x7ff954e0fd34,41713625,0,0x0,8
tick,0x7ff954e0fd34,41729548,0,0x0,8
tick,0x7ff954e0fd34,41745543,0,0x0,8
tick,0x7ff954e0fd34,41761681,0,0x0,8
tick,0x7ff954e0fd34,41777604,0,0x0,8
tick,0x7ff954e0fd34,41793508,0,0x0,8
tick,0x7ff954e0fd34,41809468,0,0x0,8
tick,0x7ff954e0fd34,41825422,0,0x0,8
tick,0x7ff954e0fd34,41841372,0,0x0,8
tick,0x7ff954e0fd34,41857363,0,0x0,8
tick,0x7ff954e0fd34,41873306,0,0x0,8
tick,0x7ff954e0fd34,41889308,0,0x0,8
tick,0x7ff954e0fd34,41904255,0,0x0,8
tick,0x7ff954e0fd34,41919201,0,0x0,8
tick,0x7ff954e0fd34,41934161,0,0x0,8
tick,0x7ff954e0fd34,41949121,0,0x0,8
tick,0x7ff954e0fd34,41965063,0,0x0,8
tick,0x7ff954e0fd34,41980020,0,0x0,8
tick,0x7ff954e0fd34,41995959,0,0x0,8
tick,0x7ff954e0fd34,42011475,0,0x0,8
tick,0x7ff954e0fd34,42027416,0,0x0,8
tick,0x7ff954e0fd34,42042349,0,0x0,8
tick,0x7ff954e0fd34,42057694,0,0x0,8
tick,0x7ff954e0fd34,42073616,0,0x0,8
tick,0x7ff954e0fd34,42089649,0,0x0,8
tick,0x7ff954e0fd34,42105567,0,0x0,8
tick,0x7ff954e0fd34,42121463,0,0x0,8
tick,0x7ff954e0fd34,42136541,0,0x0,8
tick,0x7ff954e0fd34,42151519,0,0x0,8
tick,0x7ff954e0fd34,42166937,0,0x0,8
tick,0x7ff954e0fd34,42182930,0,0x0,8
tick,0x7ff954e0fd34,42198004,0,0x0,8
tick,0x7ff954e0fd34,42213672,0,0x0,8
tick,0x7ff954e0fd34,42228547,0,0x0,8
tick,0x7ff954e0fd34,42244518,0,0x0,8
tick,0x7ff954e0fd34,42260497,0,0x0,8
tick,0x7ff954e0fd34,42275821,0,0x0,8
tick,0x7ff954e0fd34,42290772,0,0x0,8
tick,0x7ff954e0fd34,42306841,0,0x0,8
tick,0x7ff954e0fd34,42322353,0,0x0,8
tick,0x7ff954e0fd34,42338302,0,0x0,8
tick,0x7ff954e0fd34,42353589,0,0x0,8
tick,0x7ff954e0fd34,42369519,0,0x0,8
tick,0x7ff954e0fd34,42384801,0,0x0,8
tick,0x7ff954e0fd34,42400396,0,0x0,8
tick,0x7ff954e0fd34,42416252,0,0x0,8
tick,0x7ff954e0fd34,42431539,0,0x0,8
tick,0x7ff954e0fd34,42447365,0,0x0,8
tick,0x7ff954e0fd34,42462368,0,0x0,8
tick,0x7ff954e0fd34,42477574,0,0x0,8
tick,0x7ff954e0fd34,42493543,0,0x0,8
tick,0x7ff954e0fd34,42508417,0,0x0,8
tick,0x7ff954e0fd34,42524450,0,0x0,8
tick,0x7ff954e0fd34,42539371,0,0x0,8
tick,0x7ff954e0fd34,42554318,0,0x0,8
tick,0x7ff954e0fd34,42570261,0,0x0,8
tick,0x7ff954e0fd34,42586228,0,0x0,8
tick,0x7ff954e0fd34,42602216,0,0x0,8
tick,0x7ff954e0fd34,42618293,0,0x0,8
tick,0x7ff954e0fd34,42633097,0,0x0,8
tick,0x7ff954e0fd34,42649094,0,0x0,8
tick,0x7ff954e0fd34,42664034,0,0x0,8
tick,0x7ff954e0fd34,42679984,0,0x0,8
tick,0x7ff954e0fd34,42695519,0,0x0,8
tick,0x7ff954e0fd34,42710501,0,0x0,8
tick,0x7ff954e0fd34,42726417,0,0x0,8
tick,0x7ff954e0fd34,42741381,0,0x0,8
tick,0x7ff954e0fd34,42757340,0,0x0,8
tick,0x7ff954e0fd34,42773280,0,0x0,8
tick,0x7ff954e0fd34,42788828,0,0x0,8
tick,0x7ff954e0fd34,42804765,0,0x0,8
tick,0x7ff954e0fd34,42820695,0,0x0,8
tick,0x7ff954e0fd34,42836655,0,0x0,8
tick,0x7ff954e0fd34,42852630,0,0x0,8
tick,0x7ff954e0fd34,42868604,0,0x0,8
tick,0x7ff954e0fd34,42884519,0,0x0,8
tick,0x7ff954e0fd34,42900661,0,0x0,8
tick,0x7ff954e0fd34,42916525,0,0x0,8
tick,0x7ff954e0fd34,42931648,0,0x0,8
tick,0x7ff954e0fd34,42946554,0,0x0,8
tick,0x7ff954e0fd34,42961532,0,0x0,8
tick,0x7ff954e0fd34,42977487,0,0x0,8
tick,0x7ff954e0fd34,42992448,0,0x0,8
tick,0x7ff954e0fd34,43008407,0,0x0,8
tick,0x7ff954e0fd34,43023652,0,0x0,8
tick,0x7ff954e0fd34,43038669,0,0x0,8
tick,0x7ff954e0fd34,43054583,0,0x0,8
tick,0x7ff954e0fd34,43069580,0,0x0,8
tick,0x7ff954e0fd34,43085389,0,0x0,8
tick,0x7ff954e0fd34,43100993,0,0x0,8
tick,0x7ff954e0fd34,43117017,0,0x0,8
tick,0x7ff954e0fd34,43131902,0,0x0,8
tick,0x7ff954e0fd34,43147897,0,0x0,8
tick,0x7ff954e0fd34,43163731,0,0x0,8
tick,0x7ff954e0fd34,43179696,0,0x0,8
tick,0x7ff954e0fd34,43195596,0,0x0,8
tick,0x7ff954e0fd34,43210549,0,0x0,8
tick,0x7ff954e0fd34,43226521,0,0x0,8
tick,0x7ff954e0fd34,43242470,0,0x0,8
tick,0x7ff954e0fd34,43258443,0,0x0,8
tick,0x7ff954e0fd34,43274044,0,0x0,8
tick,0x7ff954e0fd34,43290008,0,0x0,8
tick,0x7ff954e0fd34,43305980,0,0x0,8
tick,0x7ff954e0fd34,43321901,0,0x0,8
tick,0x7ff954e0fd34,43337881,0,0x0,8
tick,0x7ff954e0fd34,43353832,0,0x0,8
tick,0x7ff954e0fd34,43369913,0,0x0,8
tick,0x7ff954e0fd34,43385921,0,0x0,8
tick,0x7ff954e0fd34,43401288,0,0x0,8
tick,0x7ff954e0fd34,43416215,0,0x0,8
tick,0x7ff954e0fd34,43431229,0,0x0,8
tick,0x7ff954e0fd34,43446136,0,0x0,8
tick,0x7ff954e0fd34,43461126,0,0x0,8
tick,0x7ff954e0fd34,43477093,0,0x0,8
tick,0x7ff954e0fd34,43492751,0,0x0,8
tick,0x7ff954e0fd34,43508717,0,0x0,8
tick,0x7ff954e0fd34,43524913,0,0x0,8
tick,0x7ff954e0fd34,43539678,0,0x0,8
tick,0x7ff954e0fd34,43555578,0,0x0,8
tick,0x7ff954e0fd34,43570554,0,0x0,8
tick,0x7ff954e0fd34,43585543,0,0x0,8
tick,0x7ff954e0fd34,43601086,0,0x0,8
tick,0x7ff954e0fd34,43616935,0,0x0,8
tick,0x7ff954e0fd34,43633049,0,0x0,8
tick,0x7ff954e0fd34,43647847,0,0x0,8
tick,0x7ff954e0fd34,43662802,0,0x0,8
tick,0x7ff954e0fd34,43678108,0,0x0,8
tick,0x7ff954e0fd34,43692821,0,0x0,8
tick,0x7ff954e0fd34,43707750,0,0x0,8
tick,0x7ff954e0fd34,43722686,0,0x0,8
tick,0x7ff954e0fd34,43738628,0,0x0,8
tick,0x7ff954e0fd34,43753568,0,0x0,8
tick,0x7ff954e0fd34,43768601,0,0x0,8
tick,0x7ff954e0fd34,43784490,0,0x0,8
tick,0x7ff954e0fd34,43799485,0,0x0,8
tick,0x7ff954e0fd34,43814406,0,0x0,8
tick,0x7ff954e0fd34,43829384,0,0x0,8
tick,0x7ff954e0fd34,43844341,0,0x0,8
tick,0x7ff954e0fd34,43860278,0,0x0,8
tick,0x7ff954e0fd34,43876280,0,0x0,8
tick,0x7ff954e0fd34,43892211,0,0x0,8
tick,0x7ff954e0fd34,43908167,0,0x0,8
tick,0x7ff954e0fd34,43924118,0,0x0,8
tick,0x7ff954e0fd34,43940081,0,0x0,8
tick,0x7ff954e0fd34,43955021,0,0x0,8
tick,0x7ff954e0fd34,43970971,0,0x0,8
tick,0x7ff954e0fd34,43986743,0,0x0,8
tick,0x7ff954e0fd34,44002758,0,0x0,8
tick,0x7ff954e0fd34,44018698,0,0x0,8
tick,0x7ff954e0fd34,44034661,0,0x0,8
tick,0x7ff954e0fd34,44049585,0,0x0,8
tick,0x7ff954e0fd34,44064564,0,0x0,8
tick,0x7ff954e0fd34,44080524,0,0x0,8
tick,0x7ff954e0fd34,44095829,0,0x0,8
tick,0x7ff954e0fd34,44111758,0,0x0,8
tick,0x7ff954e0fd34,44127717,0,0x0,8
tick,0x7ff954e0fd34,44142697,0,0x0,8
tick,0x7ff954e0fd34,44158629,0,0x0,8
tick,0x7ff954e0fd34,44173587,0,0x0,8
tick,0x7ff954e0fd34,44189543,0,0x0,8
tick,0x7ff954e0fd34,44205272,0,0x0,8
tick,0x7ff954e0fd34,44220271,0,0x0,8
tick,0x7ff954e0fd34,44236235,0,0x0,8
tick,0x7ff954e0fd34,44251174,0,0x0,8
tick,0x7ff954e0fd34,44267114,0,0x0,8
tick,0x7ff954e0fd34,44283106,0,0x0,8
tick,0x7ff954e0fd34,44299050,0,0x0,8
tick,0x7ff954e0fd34,44315040,0,0x0,8
tick,0x7ff954e0fd34,44330937,0,0x0,8
tick,0x7ff954e0fd34,44346916,0,0x0,8
tick,0x7ff954e0fd34,44362856,0,0x0,8
tick,0x7ff954e0fd34,44378845,0,0x0,8
tick,0x7ff954e0fd34,44394788,0,0x0,8
tick,0x7ff954e0fd34,44410836,0,0x0,8
tick,0x7ff954e0fd34,44425695,0,0x0,8
tick,0x7ff954e0fd34,44441667,0,0x0,8
tick,0x7ff954e0fd34,44456599,0,0x0,8
tick,0x7ff954e0fd34,44472560,0,0x0,8
tick,0x7ff954e0fd34,44487519,0,0x0,8
tick,0x7ff954e0fd34,44502525,0,0x0,8
tick,0x7ff954e0fd34,44518464,0,0x0,8
tick,0x7ff954e0fd34,44534432,0,0x0,8
tick,0x7ff954e0fd34,44550355,0,0x0,8
tick,0x7ff954e0fd34,44566324,0,0x0,8
tick,0x7ff954e0fd34,44582267,0,0x0,8
tick,0x7ff954e0fd34,44598255,0,0x0,8
tick,0x7ff954e0fd34,44614203,0,0x0,8
tick,0x7ff954e0fd34,44629158,0,0x0,8
tick,0x7ff954e0fd34,44644406,0,0x0,8
tick,0x7ff954e0fd34,44659390,0,0x0,8
tick,0x7ff954e0fd34,44675341,0,0x0,8
tick,0x7ff954e0fd34,44690285,0,0x0,8
tick,0x7ff954e0fd34,44706268,0,0x0,8
tick,0x7ff954e0fd34,44721447,0,0x0,8
tick,0x7ff954e0fd34,44736400,0,0x0,8
tick,0x7ff954e0fd34,44751968,0,0x0,8
tick,0x7ff954e0fd34,44767958,0,0x0,8
tick,0x7ff954e0fd34,44783937,0,0x0,8
tick,0x7ff954e0fd34,44799824,0,0x0,8
tick,0x7ff954e0fd34,44815514,0,0x0,8
tick,0x7ff954e0fd34,44831489,0,0x0,8
tick,0x7ff954e0fd34,44846457,0,0x0,8
tick,0x7ff954e0fd34,44861395,0,0x0,8
tick,0x7ff954e0fd34,44876367,0,0x0,8
tick,0x7ff954e0fd34,44892322,0,0x0,8
tick,0x7ff954e0fd34,44907562,0,0x0,8
tick,0x7ff954e0fd34,44922492,0,0x0,8
tick,0x7ff954e0fd34,44937855,0,0x0,8
tick,0x7ff954e0fd34,44953737,0,0x0,8
tick,0x7ff954e0fd34,44968706,0,0x0,8
tick,0x7ff954e0fd34,44984664,0,0x0,8
tick,0x7ff954e0fd34,45000659,0,0x0,8
tick,0x7ff954e0fd34,45016584,0,0x0,8
tick,0x7ff954e0fd34,45032000,0,0x0,8
tick,0x7ff954e0fd34,45046973,0,0x0,8
tick,0x7ff954e0fd34,45061938,0,0x0,8
tick,0x7ff954e0fd34,45076896,0,0x0,8
tick,0x7ff954e0fd34,45091842,0,0x0,8
tick,0x7ff954e0fd34,45107599,0,0x0,8
tick,0x7ff954e0fd34,45122563,0,0x0,8
tick,0x7ff954e0fd34,45138512,0,0x0,8
tick,0x7ff954e0fd34,45154457,0,0x0,8
tick,0x7ff954e0fd34,45170342,0,0x0,8
tick,0x7ff954e0fd34,45186125,0,0x0,8
tick,0x7ff954e0fd34,45202094,0,0x0,8
tick,0x7ff954e0fd34,45218055,0,0x0,8
tick,0x7ff954e0fd34,45233015,0,0x0,8
tick,0x7ff954e0fd34,45248986,0,0x0,8
tick,0x7ff954e0fd34,45263927,0,0x0,8
tick,0x7ff954e0fd34,45279887,0,0x0,8
tick,0x7ff954e0fd34,45295839,0,0x0,8
tick,0x7ff954e0fd34,45311838,0,0x0,8
tick,0x7ff954e0fd34,45327862,0,0x0,8
tick,0x7ff954e0fd34,45342714,0,0x0,8
tick,0x7ff954e0fd34,45358813,0,0x0,8
tick,0x7ff954e0fd34,45373691,0,0x0,8
tick,0x7ff954e0fd34,45389594,0,0x0,8
tick,0x7ff954e0fd34,45405397,0,0x0,8
tick,0x7ff954e0fd34,45421300,0,0x0,8
tick,0x7ff954e0fd34,45437278,0,0x0,8
tick,0x7ff954e0fd34,45453201,0,0x0,8
tick,0x7ff954e0fd34,45468172,0,0x0,8
tick,0x7ff954e0fd34,45483147,0,0x0,8
tick,0x7ff954e0fd34,45498107,0,0x0,8
tick,0x7ff954e0fd34,45514055,0,0x0,8
tick,0x7ff954e0fd34,45529018,0,0x0,8
tick,0x7ff954e0fd34,45545001,0,0x0,8
tick,0x7ff954e0fd34,45560931,0,0x0,8
tick,0x7ff954e0fd34,45576885,0,0x0,8
tick,0x7ff954e0fd34,45592948,0,0x0,8
tick,0x7ff954e0fd34,45607798,0,0x0,8
tick,0x7ff954e0fd34,45623733,0,0x0,8
tick,0x7ff954e0fd34,45639742,0,0x0,8
tick,0x7ff954e0fd34,45655637,0,0x0,8
tick,0x7ff954e0fd34,45670630,0,0x0,8
tick,0x7ff954e0fd34,45685578,0,0x0,8
tick,0x7ff954e0fd34,45700608,0,0x0,8
tick,0x7ff954e0fd34,45716548,0,0x0,8
tick,0x7ff954e0fd34,45731515,0,0x0,8
tick,0x7ff954e0fd34,45747465,0,0x0,8
tick,0x7ff954e0fd34,45763352,0,0x0,8
tick,0x7ff954e0fd34,45779325,0,0x0,8
tick,0x7ff954e0fd34,45794297,0,0x0,8
tick,0x7ff954e0fd34,45809240,0,0x0,8
tick,0x7ff954e0fd34,45825210,0,0x0,8
tick,0x7ff954e0fd34,45841341,0,0x0,8
tick,0x7ff954e0fd34,45856099,0,0x0,8
tick,0x7ff954e0fd34,45872072,0,0x0,8
tick,0x7ff954e0fd34,45887054,0,0x0,8
tick,0x7ff954e0fd34,45902999,0,0x0,8
tick,0x7ff954e0fd34,45919021,0,0x0,8
tick,0x7ff954e0fd34,45933912,0,0x0,8
tick,0x7ff954e0fd34,45949852,0,0x0,8
tick,0x7ff954e0fd34,45964841,0,0x0,8
tick,0x7ff954e0fd34,45980777,0,0x0,8
tick,0x7ff954e0fd34,45996770,0,0x0,8
tick,0x7ff954e0fd34,46012710,0,0x0,8
tick,0x7ff954e0fd34,46027662,0,0x0,8
tick,0x7ff954e0fd34,46042613,0,0x0,8
tick,0x7ff954e0fd34,46057566,0,0x0,8
tick,0x7ff954e0fd34,46073516,0,0x0,8
tick,0x7ff954e0fd34,46088486,0,0x0,8
tick,0x7ff954e0fd34,46104543,0,0x0,8
tick,0x7ff954e0fd34,46120649,0,0x0,8
tick,0x7ff954e0fd34,46136739,0,0x0,8
tick,0x7ff954e0fd34,46152468,0,0x0,8
tick,0x7ff954e0fd34,46168400,0,0x0,8
tick,0x7ff954e0fd34,46184301,0,0x0,8
tick,0x7ff954e0fd34,46200379,0,0x0,8
tick,0x7ff954e0fd34,46216257,0,0x0,8
tick,0x7ff954e0fd34,46232191,0,0x0,8
tick,0x7ff954e0fd34,46248165,0,0x0,8
tick,0x7ff954e0fd34,46264332,0,0x0,8
tick,0x7ff954e0fd34,46280230,0,0x0,8
tick,0x7ff954e0fd34,46294614,0,0x0,8
tick,0x7ff954e0fd34,46310691,0,0x0,8
tick,0x7ff954e0fd34,46325533,0,0x0,8
tick,0x7ff954e0fd34,46341607,0,0x0,8
tick,0x7ff954e0fd34,46357529,0,0x0,8
tick,0x7ff954e0fd34,46372470,0,0x0,8
tick,0x7ff954e0fd34,46388102,0,0x0,8
tick,0x7ff954e0fd34,46404275,0,0x0,8
tick,0x7ff954e0fd34,46420301,0,0x0,8
tick,0x7ff954e0fd34,46436119,0,0x0,8
tick,0x7ff954e0fd34,46451915,0,0x0,8
tick,0x7ff954e0fd34,46468013,0,0x0,8
tick,0x7ff954e0fd34,46482885,0,0x0,8
tick,0x7ff954e0fd34,46497832,0,0x0,8
tick,0x7ff954e0fd34,46512846,0,0x0,8
tick,0x7ff954e0fd34,46527771,0,0x0,8
tick,0x7ff954e0fd34,46543657,0,0x0,8
tick,0x7ff954e0fd34,46558742,0,0x0,8
tick,0x7ff954e0fd34,46574603,0,0x0,8
tick,0x7ff954e0fd34,46590562,0,0x0,8
tick,0x7ff954e0fd34,46605532,0,0x0,8
tick,0x7ff954e0fd34,46621524,0,0x0,8
tick,0x7ff954e0fd34,46636428,0,0x0,8
tick,0x7ff954e0fd34,46652501,0,0x0,8
tick,0x7ff954e0fd34,46667340,0,0x0,8
tick,0x7ff954e0fd34,46682708,0,0x0,8
tick,0x7ff954e0fd34,46698608,0,0x0,8
tick,0x7ff954e0fd34,46714637,0,0x0,8
tick,0x7ff954e0fd34,46730540,0,0x0,8
tick,0x7ff954e0fd34,46746501,0,0x0,8
tick,0x7ff954e0fd34,46762429,0,0x0,8
tick,0x7ff954e0fd34,46777655,0,0x0,8
tick,0x7ff954e0fd34,46792645,0,0x0,8
tick,0x7ff954e0fd34,46807542,0,0x0,8
tick,0x7ff954e0fd34,46822630,0,0x0,8
tick,0x7ff954e0fd34,46837568,0,0x0,8
tick,0x7ff954e0fd34,46853520,0,0x0,8
tick,0x7ff954e0fd34,46868400,0,0x0,8
tick,0x7ff954e0fd34,46883896,0,0x0,8
tick,0x7ff954e0fd34,46899945,0,0x0,8
tick,0x7ff954e0fd34,46915778,0,0x0,8
tick,0x7ff954e0fd34,46930844,0,0x0,8
tick,0x7ff954e0fd34,46946242,0,0x0,8
tick,0x7ff954e0fd34,46962179,0,0x0,8
tick,0x7ff954e0fd34,46977878,0,0x0,8
tick,0x7ff954e0fd34,46993701,0,0x0,8
tick,0x7ff954e0fd34,47009741,0,0x0,8
tick,0x7ff954e0fd34,47025272,0,0x0,8
tick,0x7ff954e0fd34,47041134,0,0x0,8
tick,0x7ff954e0fd34,47057078,0,0x0,8
tick,0x7ff954e0fd34,47073369,0,0x0,8
tick,0x7ff954e0fd34,47088598,0,0x0,8
tick,0x7ff954e0fd34,47104558,0,0x0,8
tick,0x7ff954e0fd34,47120513,0,0x0,8
tick,0x7ff954e0fd34,47135705,0,0x0,8
tick,0x7ff954e0fd34,47150628,0,0x0,8
tick,0x7ff954e0fd34,47166534,0,0x0,8
tick,0x7ff954e0fd34,47181591,0,0x0,8
tick,0x7ff954e0fd34,47196466,0,0x0,8
tick,0x7ff954e0fd34,47211456,0,0x0,8
tick,0x7ff954e0fd34,47226372,0,0x0,8
tick,0x7ff954e0fd34,47241338,0,0x0,8
tick,0x7ff954e0fd34,47256450,0,0x0,8
tick,0x7ff954e0fd34,47271460,0,0x0,8
tick,0x7ff954e0fd34,47286710,0,0x0,8
tick,0x7ff954e0fd34,47301539,0,0x0,8
tick,0x7ff954e0fd34,47317494,0,0x0,8
tick,0x7ff954e0fd34,47332549,0,0x0,8
tick,0x7ff954e0fd34,47347389,0,0x0,8
tick,0x7ff954e0fd34,47363380,0,0x0,8
tick,0x7ff954e0fd34,47378306,0,0x0,8
tick,0x7ff954e0fd34,47393751,0,0x0,8
tick,0x7ff954e0fd34,47408664,0,0x0,8
tick,0x7ff954e0fd34,47424732,0,0x0,8
tick,0x7ff954e0fd34,47440722,0,0x0,8
tick,0x7ff954e0fd34,47456341,0,0x0,8
tick,0x7ff954e0fd34,47472456,0,0x0,8
tick,0x7ff954e0fd34,47488238,0,0x0,8
tick,0x7ff954e0fd34,47504180,0,0x0,8
tick,0x7ff954e0fd34,47519086,0,0x0,8
tick,0x7ff954e0fd34,47534000,0,0x0,8
tick,0x7ff954e0fd34,47549975,0,0x0,8
tick,0x7ff954e0fd34,47565517,0,0x0,8
tick,0x7ff954e0fd34,47580460,0,0x0,8
tick,0x7ff954e0fd34,47596465,0,0x0,8
tick,0x7ff954e0fd34,47611721,0,0x0,8
tick,0x7ff954e0fd34,47627682,0,0x0,8
tick,0x7ff954e0fd34,47642599,0,0x0,8
tick,0x7ff954e0fd34,47658687,0,0x0,8
tick,0x7ff954e0fd34,47673630,0,0x0,8
tick,0x7ff954e0fd34,47689745,0,0x0,8
tick,0x7ff954e0fd34,47704539,0,0x0,8
tick,0x7ff954e0fd34,47719470,0,0x0,8
tick,0x7ff954e0fd34,47734403,0,0x0,8
tick,0x7ff954e0fd34,47749360,0,0x0,8
tick,0x7ff954e0fd34,47765354,0,0x0,8
tick,0x7ff954e0fd34,47780706,0,0x0,8
tick,0x7ff954e0fd34,47795479,0,0x0,8
tick,0x7ff954e0fd34,47810667,0,0x0,8
tick,0x7ff954e0fd34,47825583,0,0x0,8
tick,0x7ff954e0fd34,47842078,0,0x0,8
tick,0x7ff954e0fd34,47857260,0,0x0,8
tick,0x7ff954e0fd34,47873235,0,0x0,8
tick,0x7ff954e0fd34,47888234,0,0x0,8
tick,0x7ff954e0fd34,47903557,0,0x0,8
tick,0x7ff954e0fd34,47918527,0,0x0,8
tick,0x7ff954e0fd34,47934628,0,0x0,8
tick,0x7ff954e0fd34,47950053,0,0x0,8
tick,0x7ff954e0fd34,47965450,0,0x0,8
tick,0x7ff954e0fd34,47980482,0,0x0,8
tick,0x7ff954e0fd34,47996127,0,0x0,8
tick,0x7ff954e0fd34,48011637,0,0x0,8
tick,0x7ff954e0fd34,48027667,0,0x0,8
tick,0x7ff954e0fd34,48043719,0,0x0,8
tick,0x7ff954e0fd34,48058580,0,0x0,8
tick,0x7ff954e0fd34,48074584,0,0x0,8
tick,0x7ff954e0fd34,48089629,0,0x0,8
tick,0x7ff954e0fd34,48104460,0,0x0,8
tick,0x7ff954e0fd34,48119408,0,0x0,8
tick,0x7ff954e0fd34,48134399,0,0x0,8
tick,0x7ff954e0fd34,48150594,0,0x0,8
tick,0x7ff954e0fd34,48166463,0,0x0,8
tick,0x7ff954e0fd34,48181429,0,0x0,8
tick,0x7ff954e0fd34,48196365,0,0x0,8
tick,0x7ff954e0fd34,48211325,0,0x0,8
tick,0x7ff954e0fd34,48226406,0,0x0,8
tick,0x7ff954e0fd34,48241252,0,0x0,8
tick,0x7ff954e0fd34,48256310,0,0x0,8
tick,0x7ff954e0fd34,48271828,0,0x0,8
tick,0x7ff954e0fd34,48286745,0,0x0,8
tick,0x7ff954e0fd34,48301709,0,0x0,8
tick,0x7ff954e0fd34,48317185,0,0x0,8
tick,0x7ff954e0fd34,48332231,0,0x0,8
tick,0x7ff954e0fd34,48348145,0,0x0,8
tick,0x7ff954e0fd34,48364173,0,0x0,8
tick,0x7ff954e0fd34,48380156,0,0x0,8
tick,0x7ff954e0fd34,48395984,0,0x0,8
tick,0x7ff954e0fd34,48410974,0,0x0,8
tick,0x7ff954e0fd34,48425972,0,0x0,8
tick,0x7ff954e0fd34,48441884,0,0x0,8
tick,0x7ff954e0fd34,48457864,0,0x0,8
tick,0x7ff954e0fd34,48473859,0,0x0,8
tick,0x7ff954e0fd34,48489985,0,0x0,8
tick,0x7ff954e0fd34,48505669,0,0x0,8
tick,0x7ff954e0fd34,48520949,0,0x0,8
tick,0x7ff954e0fd34,48536855,0,0x0,8
tick,0x7ff954e0fd34,48552573,0,0x0,8
tick,0x7ff954e0fd34,48567422,0,0x0,8
tick,0x7ff954e0fd34,48583334,0,0x0,8
tick,0x7ff954e0fd34,48598794,0,0x0,8
tick,0x7ff954e0fd34,48614719,0,0x0,8
tick,0x7ff954e0fd34,48629376,0,0x0,8
tick,0x7ff954e0fd34,48645518,0,0x0,8
tick,0x7ff954e0fd34,48661258,0,0x0,8
tick,0x7ff954e0fd34,48676238,0,0x0,8
tick,0x7ff954e0fd34,48692130,0,0x0,8
tick,0x7ff954e0fd34,48707745,0,0x0,8
tick,0x7ff954e0fd34,48722908,0,0x0,8
tick,0x7ff954e0fd34,48737872,0,0x0,8
tick,0x7ff954e0fd34,48753453,0,0x0,8
tick,0x7ff954e0fd34,48768781,0,0x0,8
tick,0x7ff954e0fd34,48783469,0,0x0,8
tick,0x7ff954e0fd34,48798491,0,0x0,8
tick,0x7ff954e0fd34,48813737,0,0x0,8
tick,0x7ff954e0fd34,48828968,0,0x0,8
tick,0x7ff954e0fd34,48843787,0,0x0,8
tick,0x7ff954e0fd34,48859092,0,0x0,8
tick,0x7ff954e0fd34,48874752,0,0x0,8
tick,0x7ff954e0fd34,48890553,0,0x0,8
tick,0x7ff954e0fd34,48905582,0,0x0,8
tick,0x7ff954e0fd34,48921851,0,0x0,8
tick,0x7ff954e0fd34,48938163,0,0x0,8
tick,0x7ff954e0fd34,48953379,0,0x0,8
tick,0x7ff954e0fd34,48968621,0,0x0,8
tick,0x7ff954e0fd34,48984750,0,0x0,8
tick,0x7ff954e0fd34,48999822,0,0x0,8
tick,0x7ff954e0fd34,49015074,0,0x0,8
tick,0x7ff954e0fd34,49030756,0,0x0,8
tick,0x7ff954e0fd34,49045621,0,0x0,8
tick,0x7ff954e0fd34,49061623,0,0x0,8
tick,0x7ff954e0fd34,49076550,0,0x0,8
tick,0x7ff954e0fd34,49091492,0,0x0,8
tick,0x7ff954e0fd34,49106512,0,0x0,8
tick,0x7ff954e0fd34,49122435,0,0x0,8
tick,0x7ff954e0fd34,49137397,0,0x0,8
tick,0x7ff954e0fd34,49153419,0,0x0,8
tick,0x7ff954e0fd34,49168338,0,0x0,8
tick,0x7ff954e0fd34,49183258,0,0x0,8
tick,0x7ff954e0fd34,49198589,0,0x0,8
tick,0x7ff954e0fd34,49214836,0,0x0,8
tick,0x7ff954e0fd34,49230636,0,0x0,8
tick,0x7ff954e0fd34,49245824,0,0x0,8
tick,0x7ff954e0fd34,49260876,0,0x0,8
tick,0x7ff954e0fd34,49276152,0,0x0,8
tick,0x7ff954e0fd34,49291907,0,0x0,8
tick,0x7ff954e0fd34,49307767,0,0x0,8
tick,0x7ff954e0fd34,49323010,0,0x0,8
tick,0x7ff954e0fd34,49338950,0,0x0,8
tick,0x7ff954e0fd34,49354130,0,0x0,8
tick,0x7ff954e0fd34,49369953,0,0x0,8
tick,0x7ff954e0fd34,49385522,0,0x0,8
tick,0x7ff954e0fd34,49401026,0,0x0,8
tick,0x7ff954e0fd34,49416444,0,0x0,8
tick,0x7ff954e0fd34,49432455,0,0x0,8
tick,0x7ff954e0fd34,49447805,0,0x0,8
tick,0x7ff954e0fd34,49463495,0,0x0,8
tick,0x7ff954e0fd34,49479241,0,0x0,8
tick,0x7ff954e0fd34,49494620,0,0x0,8
tick,0x7ff954e0fd34,49510079,0,0x0,8
tick,0x7ff954e0fd34,49526075,0,0x0,8
tick,0x7ff954e0fd34,49542223,0,0x0,8
tick,0x7ff954e0fd34,49557711,0,0x0,8
tick,0x7ff954e0fd34,49572747,0,0x0,8
tick,0x7ff954e0fd34,49587972,0,0x0,8
tick,0x7ff954e0fd34,49603616,0,0x0,8
tick,0x7ff954e0fd34,49619173,0,0x0,8
tick,0x7ff954e0fd34,49635338,0,0x0,8
tick,0x7ff954e0fd34,49650912,0,0x0,8
tick,0x7ff954e0fd34,49666091,0,0x0,8
tick,0x7ff954e0fd34,49681030,0,0x0,8
tick,0x7ff954e0fd34,49696215,0,0x0,8
tick,0x7ff954e0fd34,49712371,0,0x0,8
tick,0x7ff954e0fd34,49727215,0,0x0,8
tick,0x7ff954e0fd34,49743202,0,0x0,8
tick,0x7ff954e0fd34,49758655,0,0x0,8
tick,0x7ff954e0fd34,49773877,0,0x0,8
tick,0x7ff954e0fd34,49789761,0,0x0,8
tick,0x7ff954e0fd34,49804778,0,0x0,8
tick,0x7ff954e0fd34,49820668,0,0x0,8
tick,0x7ff954e0fd34,49836009,0,0x0,8
tick,0x7ff954e0fd34,49852448,0,0x0,8
tick,0x7ff954e0fd34,49868010,0,0x0,8
tick,0x7ff954e0fd34,49883656,0,0x0,8
tick,0x7ff954e0fd34,49899706,0,0x0,8
tick,0x7ff954e0fd34,49914694,0,0x0,8
tick,0x7ff954e0fd34,49930714,0,0x0,8
tick,0x7ff954e0fd34,49945900,0,0x0,8
tick,0x7ff954e0fd34,49961872,0,0x0,8
tick,0x7ff954e0fd34,49977841,0,0x0,8
tick,0x7ff954e0fd34,49993789,0,0x0,8
tick,0x7ff954e0fd34,50009700,0,0x0,8
tick,0x7ff954e0fd34,50025153,0,0x0,8
tick,0x7ff954e0fd34,50040423,0,0x0,8
tick,0x7ff954e0fd34,50055590,0,0x0,8
tick,0x7ff954e0fd34,50070631,0,0x0,8
tick,0x7ff954e0fd34,50085817,0,0x0,8
tick,0x7ff954e0fd34,50101795,0,0x0,8
tick,0x7ff954e0fd34,50117930,0,0x0,8
tick,0x7ff954e0fd34,50133635,0,0x0,8
tick,0x7ff954e0fd34,50149599,0,0x0,8
tick,0x7ff954e0fd34,50165324,0,0x0,8
tick,0x7ff954e0fd34,50180351,0,0x0,8
tick,0x7ff954e0fd34,50196151,0,0x0,8
tick,0x7ff954e0fd34,50212176,0,0x0,8
tick,0x7ff954e0fd34,50227928,0,0x0,8
tick,0x7ff954e0fd34,50243847,0,0x0,8
tick,0x7ff954e0fd34,50259933,0,0x0,8
tick,0x7ff954e0fd34,50275850,0,0x0,8
tick,0x7ff954e0fd34,50290753,0,0x0,8
tick,0x7ff954e0fd34,50305698,0,0x0,8
tick,0x7ff954e0fd34,50321668,0,0x0,8
tick,0x7ff954e0fd34,50336606,0,0x0,8
tick,0x7ff954e0fd34,50351560,0,0x0,8
tick,0x7ff954e0fd34,50366560,0,0x0,8
tick,0x7ff954e0fd34,50382543,0,0x0,8
tick,0x7ff954e0fd34,50398441,0,0x0,8
tick,0x7ff954e0fd34,50414428,0,0x0,8
tick,0x7ff954e0fd34,50430648,0,0x0,8
tick,0x7ff954e0fd34,50446373,0,0x0,8
tick,0x7ff954e0fd34,50462378,0,0x0,8
tick,0x7ff954e0fd34,50478249,0,0x0,8
tick,0x7ff954e0fd34,50493198,0,0x0,8
tick,0x7ff954e0fd34,50508180,0,0x0,8
tick,0x7ff954e0fd34,50524161,0,0x0,8
tick,0x7ff954e0fd34,50540087,0,0x0,8
tick,0x7ff954e0fd34,50555105,0,0x0,8
tick,0x7ff954e0fd34,50571019,0,0x0,8
tick,0x7ff954e0fd34,50585950,0,0x0,8
tick,0x7ff954e0fd34,50601933,0,0x0,8
tick,0x7ff954e0fd34,50616846,0,0x0,8
tick,0x7ff954e0fd34,50631830,0,0x0,8
tick,0x7ff954e0fd34,50646763,0,0x0,8
tick,0x7ff954e0fd34,50661752,0,0x0,8
tick,0x7ff954e0fd34,50677745,0,0x0,8
tick,0x7ff954e0fd34,50692712,0,0x0,8
tick,0x7ff954e0fd34,50708605,0,0x0,8
tick,0x7ff954e0fd34,50723583,0,0x0,8
tick,0x7ff954e0fd34,50738557,0,0x0,8
tick,0x7ff954e0fd34,50754475,0,0x0,8
tick,0x7ff954e0fd34,50769560,0,0x0,8
tick,0x7ff954e0fd34,50784483,0,0x0,8
tick,0x7ff954e0fd34,50799957,0,0x0,8
tick,0x7ff954e0fd34,50815904,0,0x0,8
tick,0x7ff954e0fd34,50830862,0,0x0,8
tick,0x7ff954e0fd34,50846817,0,0x0,8
tick,0x7ff954e0fd34,50861747,0,0x0,8
tick,0x7ff954e0fd34,50877788,0,0x0,8
tick,0x7ff954e0fd34,50893698,0,0x0,8
tick,0x7ff954e0fd34,50909746,0,0x0,8
tick,0x7ff954e0fd34,50925637,0,0x0,8
tick,0x7ff954e0fd34,50941575,0,0x0,8
tick,0x7ff954e0fd34,50957540,0,0x0,8
tick,0x7ff954e0fd34,50973459,0,0x0,8
tick,0x7ff954e0fd34,50988422,0,0x0,8
tick,0x7ff954e0fd34,51003366,0,0x0,8
tick,0x7ff954e0fd34,51019343,0,0x0,8
tick,0x7ff954e0fd34,51035318,0,0x0,8
tick,0x7ff954e0fd34,51050332,0,0x0,8
tick,0x7ff954e0fd34,51065583,0,0x0,8
tick,0x7ff954e0fd34,51080673,0,0x0,8
tick,0x7ff954e0fd34,51095916,0,0x0,8
tick,0x7ff954e0fd34,51111192,0,0x0,8
tick,0x7ff954e0fd34,51126424,0,0x0,8
tick,0x7ff954e0fd34,51141440,0,0x0,8
tick,0x7ff954e0fd34,51157094,0,0x0,8
tick,0x7ff954e0fd34,51172619,0,0x0,8
tick,0x7ff954e0fd34,51188768,0,0x0,8
tick,0x7ff954e0fd34,51204876,0,0x0,8
tick,0x7ff954e0fd34,51220072,0,0x0,8
tick,0x7ff954e0fd34,51235262,0,0x0,8
tick,0x7ff954e0fd34,51250416,0,0x0,8
tick,0x7ff954e0fd34,51266166,0,0x0,8
tick,0x7ff954e0fd34,51282122,0,0x0,8
tick,0x7ff954e0fd34,51298480,0,0x0,8
tick,0x7ff954e0fd34,51314073,0,0x0,8
tick,0x7ff954e0fd34,51329592,0,0x0,8
tick,0x7ff954e0fd34,51345128,0,0x0,8
tick,0x7ff954e0fd34,51359907,0,0x0,8
tick,0x7ff954e0fd34,51374931,0,0x0,8
tick,0x7ff954e0fd34,51390882,0,0x0,8
tick,0x7ff954e0fd34,51406082,0,0x0,8
tick,0x7ff954e0fd34,51421789,0,0x0,8
tick,0x7ff954e0fd34,51438232,0,0x0,8
tick,0x7ff954e0fd34,51463239,0,0x0,8
tick,0x7ff954e0fd34,51470044,0,0x0,8
tick,0x7ff954e0fd34,51485347,0,0x0,8
tick,0x7ff954e0fd34,51509498,0,0x0,8
tick,0x7ff954e0fd34,51514631,0,0x0,8
tick,0x7ff954e0fd34,51529435,0,0x0,8
tick,0x7ff954e0fd34,51545419,0,0x0,8
tick,0x7ff954e0fd34,51561346,0,0x0,8
tick,0x7ff954e0fd34,51576316,0,0x0,8
tick,0x7ff954e0fd34,51592335,0,0x0,8
tick,0x7ff954e0fd34,51607932,0,0x0,8
tick,0x7ff954e0fd34,51623755,0,0x0,8
tick,0x7ff954e0fd34,51638708,0,0x0,8
tick,0x7ff954e0fd34,51653645,0,0x0,8
tick,0x7ff954e0fd34,51668612,0,0x0,8
tick,0x7ff954e0fd34,51684618,0,0x0,8
tick,0x7ff954e0fd34,51699500,0,0x0,8
tick,0x7ff954e0fd34,51715492,0,0x0,8
tick,0x7ff954e0fd34,51730508,0,0x0,8
tick,0x7ff954e0fd34,51745434,0,0x0,8
tick,0x7ff954e0fd34,51761414,0,0x0,8
tick,0x7ff954e0fd34,51776313,0,0x0,8
tick,0x7ff954e0fd34,51791263,0,0x0,8
tick,0x7ff954e0fd34,51806247,0,0x0,8
tick,0x7ff954e0fd34,51822217,0,0x0,8
tick,0x7ff954e0fd34,51837151,0,0x0,8
tick,0x7ff954e0fd34,51852119,0,0x0,8
tick,0x7ff954e0fd34,51867100,0,0x0,8
tick,0x7ff954e0fd34,51882046,0,0x0,8
tick,0x7ff954e0fd34,51897989,0,0x0,8
tick,0x7ff954e0fd34,51913942,0,0x0,8
tick,0x7ff954e0fd34,51928921,0,0x0,8
tick,0x7ff954e0fd34,51943863,0,0x0,8
tick,0x7ff954e0fd34,51958917,0,0x0,8
tick,0x7ff954e0fd34,51973602,0,0x0,8
tick,0x7ff954e0fd34,51989457,0,0x0,8
tick,0x7ff954e0fd34,52005185,0,0x0,8
tick,0x7ff954e0fd34,52020117,0,0x0,8
tick,0x7ff954e0fd34,52036087,0,0x0,8
tick,0x7ff954e0fd34,52051059,0,0x0,8
tick,0x7ff954e0fd34,52066997,0,0x0,8
tick,0x7ff954e0fd34,52081976,0,0x0,8
tick,0x7ff954e0fd34,52096951,0,0x0,8
tick,0x7ff954e0fd34,52111900,0,0x0,8
tick,0x7ff954e0fd34,52127007,0,0x0,8
tick,0x7ff954e0fd34,52143027,0,0x0,8
tick,0x7ff954e0fd34,52158878,0,0x0,8
tick,0x7ff954e0fd34,52174724,0,0x0,8
tick,0x7ff954e0fd34,52190658,0,0x0,8
tick,0x7ff954e0fd34,52206666,0,0x0,8
tick,0x7ff954e0fd34,52221775,0,0x0,8
tick,0x7ff954e0fd34,52237492,0,0x0,8
tick,0x7ff954e0fd34,52253401,0,0x0,8
tick,0x7ff954e0fd34,52268421,0,0x0,8
tick,0x7ff954e0fd34,52284331,0,0x0,8
tick,0x7ff954e0fd34,52299866,0,0x0,8
tick,0x7ff954e0fd34,52315761,0,0x0,8
tick,0x7ff954e0fd34,52331803,0,0x0,8
tick,0x7ff954e0fd34,52347714,0,0x0,8
tick,0x7ff954e0fd34,52363032,0,0x0,8
tick,0x7ff954e0fd34,52378634,0,0x0,8
tick,0x7ff954e0fd34,52393595,0,0x0,8
tick,0x7ff954e0fd34,52408669,0,0x0,8
tick,0x7ff954e0fd34,52424627,0,0x0,8
tick,0x7ff954e0fd34,52440392,0,0x0,8
tick,0x7ff954e0fd34,52456390,0,0x0,8
tick,0x7ff954e0fd34,52472352,0,0x0,8
tick,0x7ff954e0fd34,52487281,0,0x0,8
tick,0x7ff954e0fd34,52502225,0,0x0,8
tick,0x7ff954e0fd34,52516972,0,0x0,8
tick,0x7ff954e0fd34,52532915,0,0x0,8
tick,0x7ff954e0fd34,52548867,0,0x0,8
tick,0x7ff954e0fd34,52564844,0,0x0,8
tick,0x7ff954e0fd34,52580329,0,0x0,8
tick,0x7ff954e0fd34,52595297,0,0x0,8
tick,0x7ff954e0fd34,52611263,0,0x0,8
tick,0x7ff954e0fd34,52626223,0,0x0,8
tick,0x7ff954e0fd34,52642206,0,0x0,8
tick,0x7ff954e0fd34,52658184,0,0x0,8
tick,0x7ff954e0fd34,52674118,0,0x0,8
tick,0x7ff954e0fd34,52690152,0,0x0,8
tick,0x7ff954e0fd34,52705120,0,0x0,8
tick,0x7ff954e0fd34,52720991,0,0x0,8
tick,0x7ff954e0fd34,52735908,0,0x0,8
tick,0x7ff954e0fd34,52751896,0,0x0,8
tick,0x7ff954e0fd34,52767824,0,0x0,8
tick,0x7ff954e0fd34,52783807,0,0x0,8
tick,0x7ff954e0fd34,52799772,0,0x0,8
tick,0x7ff954e0fd34,52814726,0,0x0,8
tick,0x7ff954e0fd34,52829679,0,0x0,8
tick,0x7ff954e0fd34,52844765,0,0x0,8
tick,0x7ff954e0fd34,52859773,0,0x0,8
tick,0x7ff954e0fd34,52875537,0,0x0,8
tick,0x7ff954e0fd34,52890533,0,0x0,8
tick,0x7ff954e0fd34,52906459,0,0x0,8
tick,0x7ff954e0fd34,52922458,0,0x0,8
tick,0x7ff954e0fd34,52938388,0,0x0,8
tick,0x7ff954e0fd34,52953353,0,0x0,8
tick,0x7ff954e0fd34,52968307,0,0x0,8
tick,0x7ff954e0fd34,52983434,0,0x0,8
tick,0x7ff954e0fd34,52998383,0,0x0,8
tick,0x7ff954e0fd34,53014347,0,0x0,8
tick,0x7ff954e0fd34,53029311,0,0x0,8
tick,0x7ff954e0fd34,53045251,0,0x0,8
tick,0x7ff954e0fd34,53060253,0,0x0,8
tick,0x7ff954e0fd34,53076189,0,0x0,8
tick,0x7ff954e0fd34,53092119,0,0x0,8
tick,0x7ff954e0fd34,53107061,0,0x0,8
tick,0x7ff954e0fd34,53122043,0,0x0,8
tick,0x7ff954e0fd34,53137032,0,0x0,8
tick,0x7ff954e0fd34,53152014,0,0x0,8
tick,0x7ff954e0fd34,53167934,0,0x0,8
tick,0x7ff954e0fd34,53182902,0,0x0,8
tick,0x7ff954e0fd34,53198903,0,0x0,8
tick,0x7ff954e0fd34,53214817,0,0x0,8
tick,0x7ff954e0fd34,53230782,0,0x0,8
tick,0x7ff954e0fd34,53246771,0,0x0,8
tick,0x7ff954e0fd34,53262760,0,0x0,8
tick,0x7ff954e0fd34,53278711,0,0x0,8
tick,0x7ff954e0fd34,53294616,0,0x0,8
tick,0x7ff954e0fd34,53310618,0,0x0,8
tick,0x7ff954e0fd34,53326027,0,0x0,8
tick,0x7ff954e0fd34,53341904,0,0x0,8
tick,0x7ff954e0fd34,53358050,0,0x0,8
tick,0x7ff954e0fd34,53374049,0,0x0,8
tick,0x7ff954e0fd34,53389034,0,0x0,8
tick,0x7ff954e0fd34,53403607,0,0x0,8
tick,0x7ff954e0fd34,53419514,0,0x0,8
tick,0x7ff954e0fd34,53434641,0,0x0,8
tick,0x7ff954e0fd34,53450621,0,0x0,8
tick,0x7ff954e0fd34,53466008,0,0x0,8
tick,0x7ff954e0fd34,53481279,0,0x0,8
tick,0x7ff954e0fd34,53496064,0,0x0,8
tick,0x7ff954e0fd34,53511990,0,0x0,8
tick,0x7ff954e0fd34,53527976,0,0x0,8
tick,0x7ff954e0fd34,53544072,0,0x0,8
tick,0x7ff954e0fd34,53559855,0,0x0,8
tick,0x7ff954e0fd34,53575198,0,0x0,8
tick,0x7ff954e0fd34,53590229,0,0x0,8
tick,0x7ff954e0fd34,53605494,0,0x0,8
tick,0x7ff954e0fd34,53621522,0,0x0,8
tick,0x7ff954e0fd34,53636533,0,0x0,8
tick,0x7ff954e0fd34,53651458,0,0x0,8
tick,0x7ff954e0fd34,53666586,0,0x0,8
tick,0x7ff954e0fd34,53681404,0,0x0,8
tick,0x7ff954e0fd34,53697345,0,0x0,8
tick,0x7ff954e0fd34,53712823,0,0x0,8
tick,0x7ff954e0fd34,53727818,0,0x0,8
tick,0x7ff954e0fd34,53743688,0,0x0,8
tick,0x7ff954e0fd34,53759526,0,0x0,8
tick,0x7ff954e0fd34,53774879,0,0x0,8
tick,0x7ff954e0fd34,53790559,0,0x0,8
tick,0x7ff954e0fd34,53805502,0,0x0,8
tick,0x7ff954e0fd34,53821349,0,0x0,8
tick,0x7ff954e0fd34,53836658,0,0x0,8
tick,0x7ff954e0fd34,53851604,0,0x0,8
tick,0x7ff954e0fd34,53867587,0,0x0,8
tick,0x7ff954e0fd34,53882789,0,0x0,8
tick,0x7ff954e0fd34,53898339,0,0x0,8
tick,0x7ff954e0fd34,53913803,0,0x0,8
tick,0x7ff954e0fd34,53928802,0,0x0,8
tick,0x7ff954e0fd34,53944694,0,0x0,8
tick,0x7ff954e0fd34,53959903,0,0x0,8
tick,0x7ff954e0fd34,53975814,0,0x0,8
tick,0x7ff954e0fd34,53990795,0,0x0,8
tick,0x7ff954e0fd34,54006500,0,0x0,8
tick,0x7ff954e0fd34,54022508,0,0x0,8
tick,0x7ff954e0fd34,54038451,0,0x0,8
tick,0x7ff954e0fd34,54054417,0,0x0,8
tick,0x7ff954e0fd34,54070368,0,0x0,8
tick,0x7ff954e0fd34,54086319,0,0x0,8
tick,0x7ff954e0fd34,54102264,0,0x0,8
tick,0x7ff954e0fd34,54118244,0,0x0,8
tick,0x7ff954e0fd34,54134206,0,0x0,8
tick,0x7ff954e0fd34,54150195,0,0x0,8
tick,0x7ff954e0fd34,54165351,0,0x0,8
tick,0x7ff954e0fd34,54181286,0,0x0,8
tick,0x7ff954e0fd34,54196829,0,0x0,8
tick,0x7ff954e0fd34,54212818,0,0x0,8
tick,0x7ff954e0fd34,54228749,0,0x0,8
tick,0x7ff954e0fd34,54244000,0,0x0,8
tick,0x7ff954e0fd34,54259907,0,0x0,8
tick,0x7ff954e0fd34,54275117,0,0x0,8
tick,0x7ff954e0fd34,54291077,0,0x0,8
tick,0x7ff954e0fd34,54305752,0,0x0,8
tick,0x7ff954e0fd34,54321706,0,0x0,8
tick,0x7ff954e0fd34,54337051,0,0x0,8
tick,0x7ff954e0fd34,54352916,0,0x0,8
tick,0x7ff954e0fd34,54368385,0,0x0,8
tick,0x7ff954e0fd34,54384314,0,0x0,8
tick,0x7ff954e0fd34,54399336,0,0x0,8
tick,0x7ff954e0fd34,54414274,0,0x0,8
tick,0x7ff954e0fd34,54429258,0,0x0,8
tick,0x7ff954e0fd34,54444242,0,0x0,8
tick,0x7ff954e0fd34,54459431,0,0x0,8
tick,0x7ff954e0fd34,54475106,0,0x0,8
tick,0x7ff954e0fd34,54491023,0,0x0,8
tick,0x7ff954e0fd34,54505930,0,0x0,8
tick,0x7ff954e0fd34,54521141,0,0x0,8
tick,0x7ff954e0fd34,54537092,0,0x0,8
tick,0x7ff954e0fd34,54553097,0,0x0,8
tick,0x7ff954e0fd34,54569016,0,0x0,8
tick,0x7ff954e0fd34,54584278,0,0x0,8
tick,0x7ff954e0fd34,54599770,0,0x0,8
tick,0x7ff954e0fd34,54615709,0,0x0,8
tick,0x7ff954e0fd34,54631766,0,0x0,8
tick,0x7ff954e0fd34,54646707,0,0x0,8
tick,0x7ff954e0fd34,54661757,0,0x0,8
tick,0x7ff954e0fd34,54677001,0,0x0,8
tick,0x7ff954e0fd34,54692910,0,0x0,8
tick,0x7ff954e0fd34,54708447,0,0x0,8
tick,0x7ff954e0fd34,54724140,0,0x0,8
tick,0x7ff954e0fd34,54739310,0,0x0,8
tick,0x7ff954e0fd34,54754697,0,0x0,8
tick,0x7ff954e0fd34,54770652,0,0x0,8
tick,0x7ff954e0fd34,54785615,0,0x0,8
tick,0x7ff954e0fd34,54800640,0,0x0,8
tick,0x7ff954e0fd34,54815674,0,0x0,8
tick,0x7ff954e0fd34,54830659,0,0x0,8
tick,0x7ff954e0fd34,54846435,0,0x0,8
tick,0x7ff954e0fd34,54861519,0,0x0,8
tick,0x7ff954e0fd34,54877383,0,0x0,8
tick,0x7ff954e0fd34,54892407,0,0x0,8
tick,0x7ff954e0fd34,54908295,0,0x0,8
tick,0x7ff954e0fd34,54924683,0,0x0,8
tick,0x7ff954e0fd34,54940346,0,0x0,8
tick,0x7ff954e0fd34,54956151,0,0x0,8
tick,0x7ff954e0fd34,54972127,0,0x0,8
tick,0x7ff954e0fd34,54988195,0,0x0,8
tick,0x7ff954e0fd34,55004008,0,0x0,8
tick,0x7ff954e0fd34,55020461,0,0x0,8
tick,0x7ff954e0fd34,55035989,0,0x0,8
tick,0x7ff954e0fd34,55051881,0,0x0,8
tick,0x7ff954e0fd34,55067850,0,0x0,8
tick,0x7ff954e0fd34,55083821,0,0x0,8
tick,0x7ff954e0fd34,55099790,0,0x0,8
tick,0x7ff954e0fd34,55115722,0,0x0,8
tick,0x7ff954e0fd34,55130696,0,0x0,8
tick,0x7ff954e0fd34,55146672,0,0x0,8
tick,0x7ff954e0fd34,55162070,0,0x0,8
tick,0x7ff954e0fd34,55178086,0,0x0,8
tick,0x7ff954e0fd34,55193496,0,0x0,8
tick,0x7ff954e0fd34,55209523,0,0x0,8
tick,0x7ff954e0fd34,55225456,0,0x0,8
tick,0x7ff954e0fd34,55241405,0,0x0,8
tick,0x7ff954e0fd34,55256383,0,0x0,8
tick,0x7ff954e0fd34,55271334,0,0x0,8
tick,0x7ff954e0fd34,55287359,0,0x0,8
tick,0x7ff954e0fd34,55302245,0,0x0,8
tick,0x7ff954e0fd34,55317217,0,0x0,8
tick,0x7ff954e0fd34,55332166,0,0x0,8
tick,0x7ff954e0fd34,55348040,0,0x0,8
tick,0x7ff954e0fd34,55363770,0,0x0,8
tick,0x7ff954e0fd34,55378591,0,0x0,8
tick,0x7ff954e0fd34,55394595,0,0x0,8
tick,0x7ff954e0fd34,55409509,0,0x0,8
tick,0x7ff954e0fd34,55424447,0,0x0,8
tick,0x7ff954e0fd34,55439420,0,0x0,8
tick,0x7ff954e0fd34,55454174,0,0x0,8
tick,0x7ff954e0fd34,55470172,0,0x0,8
tick,0x7ff954e0fd34,55485327,0,0x0,8
tick,0x7ff954e0fd34,55500418,0,0x0,8
tick,0x7ff954e0fd34,55515520,0,0x0,8
tick,0x7ff954e0fd34,55531478,0,0x0,8
tick,0x7ff954e0fd34,55547065,0,0x0,8
tick,0x7ff954e0fd34,55563113,0,0x0,8
tick,0x7ff954e0fd34,55578561,0,0x0,8
tick,0x7ff954e0fd34,55594361,0,0x0,8
tick,0x7ff954e0fd34,55609613,0,0x0,8
tick,0x7ff954e0fd34,55624368,0,0x0,8
tick,0x7ff954e0fd34,55639358,0,0x0,8
tick,0x7ff954e0fd34,55655412,0,0x0,8
tick,0x7ff954e0fd34,55670363,0,0x0,8
tick,0x7ff954e0fd34,55686318,0,0x0,8
tick,0x7ff954e0fd34,55702278,0,0x0,8
tick,0x7ff954e0fd34,55718212,0,0x0,8
tick,0x7ff954e0fd34,55734199,0,0x0,8
tick,0x7ff954e0fd34,55750341,0,0x0,8
tick,0x7ff954e0fd34,55765358,0,0x0,8
tick,0x7ff954e0fd34,55780403,0,0x0,8
tick,0x7ff954e0fd34,55795618,0,0x0,8
tick,0x7ff954e0fd34,55811575,0,0x0,8
tick,0x7ff954e0fd34,55826739,0,0x0,8
tick,0x7ff954e0fd34,55842051,0,0x0,8
tick,0x7ff954e0fd34,55857630,0,0x0,8
tick,0x7ff954e0fd34,55873494,0,0x0,8
tick,0x7ff954e0fd34,55889509,0,0x0,8
tick,0x7ff954e0fd34,55904417,0,0x0,8
tick,0x7ff954e0fd34,55919655,0,0x0,8
tick,0x7ff954e0fd34,55934936,0,0x0,8
tick,0x7ff954e0fd34,55950882,0,0x0,8
tick,0x7ff954e0fd34,55966418,0,0x0,8
tick,0x7ff954e0fd34,55982502,0,0x0,8
tick,0x7ff954e0fd34,55998338,0,0x0,8
tick,0x7ff954e0fd34,56014298,0,0x0,8
tick,0x7ff954e0fd34,56030293,0,0x0,8
tick,0x7ff954e0fd34,56045833,0,0x0,8
tick,0x7ff954e0fd34,56060886,0,0x0,8
tick,0x7ff954e0fd34,56076514,0,0x0,8
tick,0x7ff954e0fd34,56091790,0,0x0,8
tick,0x7ff954e0fd34,56107445,0,0x0,8
tick,0x7ff954e0fd34,56123356,0,0x0,8
tick,0x7ff954e0fd34,56138308,0,0x0,8
tick,0x7ff954e0fd34,56154285,0,0x0,8
tick,0x7ff954e0fd34,56170253,0,0x0,8
tick,0x7ff954e0fd34,56186015,0,0x0,8
tick,0x7ff954e0fd34,56201870,0,0x0,8
tick,0x7ff954e0fd34,56217821,0,0x0,8
tick,0x7ff954e0fd34,56233265,0,0x0,8
tick,0x7ff954e0fd34,56249275,0,0x0,8
tick,0x7ff954e0fd34,56265103,0,0x0,8
tick,0x7ff954e0fd34,56280932,0,0x0,8
tick,0x7ff954e0fd34,56296957,0,0x0,8
tick,0x7ff954e0fd34,56311867,0,0x0,8
tick,0x7ff954e0fd34,56327785,0,0x0,8
tick,0x7ff954e0fd34,56342786,0,0x0,8
tick,0x7ff954e0fd34,56358707,0,0x0,8
tick,0x7ff954e0fd34,56374671,0,0x0,8
tick,0x7ff954e0fd34,56390662,0,0x0,8
tick,0x7ff954e0fd34,56405638,0,0x0,8
tick,0x7ff954e0fd34,56420566,0,0x0,8
tick,0x7ff954e0fd34,56436499,0,0x0,8
tick,0x7ff954e0fd34,56452484,0,0x0,8
tick,0x7ff954e0fd34,56467416,0,0x0,8
tick,0x7ff954e0fd34,56483358,0,0x0,8
tick,0x7ff954e0fd34,56498489,0,0x0,8
tick,0x7ff954e0fd34,56514382,0,0x0,8
tick,0x7ff954e0fd34,56529387,0,0x0,8
tick,0x7ff954e0fd34,56544466,0,0x0,8
tick,0x7ff954e0fd34,56560305,0,0x0,8
tick,0x7ff954e0fd34,56576276,0,0x0,8
tick,0x7ff954e0fd34,56591518,0,0x0,8
tick,0x7ff954e0fd34,56607466,0,0x0,8
tick,0x7ff954e0fd34,56622493,0,0x0,8
tick,0x7ff954e0fd34,56637431,0,0x0,8
tick,0x7ff954e0fd34,56653373,0,0x0,8
tick,0x7ff954e0fd34,56668349,0,0x0,8
tick,0x7ff954e0fd34,56683293,0,0x0,8
tick,0x7ff954e0fd34,56698564,0,0x0,8
tick,0x7ff954e0fd34,56714571,0,0x0,8
tick,0x7ff954e0fd34,56730649,0,0x0,8
tick,0x7ff954e0fd34,56745449,0,0x0,8
tick,0x7ff954e0fd34,56761330,0,0x0,8
tick,0x7ff954e0fd34,56777008,0,0x0,8
tick,0x7ff954e0fd34,56793001,0,0x0,8
tick,0x7ff954e0fd34,56807973,0,0x0,8
tick,0x7ff954e0fd34,56823616,0,0x0,8
tick,0x7ff954e0fd34,56839677,0,0x0,8
tick,0x7ff954e0fd34,56855529,0,0x0,8
tick,0x7ff954e0fd34,56871288,0,0x0,8
tick,0x7ff954e0fd34,56887069,0,0x0,8
tick,0x7ff954e0fd34,56902027,0,0x0,8
tick,0x7ff954e0fd34,56917660,0,0x0,8
tick,0x7ff954e0fd34,56933744,0,0x0,8
tick,0x7ff954e0fd34,56949594,0,0x0,8
tick,0x7ff954e0fd34,56964745,0,0x0,8
tick,0x7ff954e0fd34,56980639,0,0x0,8
tick,0x7ff954e0fd34,56995621,0,0x0,8
tick,0x7ff954e0fd34,57010399,0,0x0,8
tick,0x7ff954e0fd34,57025960,0,0x0,8
tick,0x7ff954e0fd34,57041060,0,0x0,8
tick,0x7ff954e0fd34,57056971,0,0x0,8
tick,0x7ff954e0fd34,57071931,0,0x0,8
tick,0x7ff954e0fd34,57086915,0,0x0,8
tick,0x7ff954e0fd34,57102282,0,0x0,8
tick,0x7ff954e0fd34,57118024,0,0x0,8
tick,0x7ff954e0fd34,57132796,0,0x0,8
tick,0x7ff954e0fd34,57147887,0,0x0,8
tick,0x7ff954e0fd34,57163733,0,0x0,8
tick,0x7ff954e0fd34,57178656,0,0x0,8
tick,0x7ff954e0fd34,57193643,0,0x0,8
tick,0x7ff954e0fd34,57208635,0,0x0,8
tick,0x7ff954e0fd34,57224570,0,0x0,8
tick,0x7ff954e0fd34,57240513,0,0x0,8
tick,0x7ff954e0fd34,57256473,0,0x0,8
tick,0x7ff954e0fd34,57272453,0,0x0,8
tick,0x7ff954e0fd34,57287393,0,0x0,8
tick,0x7ff954e0fd34,57302354,0,0x0,8
tick,0x7ff954e0fd34,57317533,0,0x0,8
tick,0x7ff954e0fd34,57332326,0,0x0,8
tick,0x7ff954e0fd34,57348278,0,0x0,8
tick,0x7ff954e0fd34,57364282,0,0x0,8
tick,0x7ff954e0fd34,57380176,0,0x0,8
tick,0x7ff954e0fd34,57396079,0,0x0,8
tick,0x7ff954e0fd34,57411069,0,0x0,8
tick,0x7ff954e0fd34,57426356,0,0x0,8
tick,0x7ff954e0fd34,57441313,0,0x0,8
tick,0x7ff954e0fd34,57457282,0,0x0,8
tick,0x7ff954e0fd34,57472236,0,0x0,8
tick,0x7ff954e0fd34,57487354,0,0x0,8
tick,0x7ff954e0fd34,57502416,0,0x0,8
tick,0x7ff954e0fd34,57518246,0,0x0,8
tick,0x7ff954e0fd34,57533751,0,0x0,8
tick,0x7ff954e0fd34,57549780,0,0x0,8
tick,0x7ff954e0fd34,57565671,0,0x0,8
tick,0x7ff954e0fd34,57581618,0,0x0,8
tick,0x7ff954e0fd34,57597614,0,0x0,8
tick,0x7ff954e0fd34,57613515,0,0x0,8
tick,0x7ff954e0fd34,57628549,0,0x0,8
tick,0x7ff954e0fd34,57643460,0,0x0,8
tick,0x7ff954e0fd34,57659439,0,0x0,8
tick,0x7ff954e0fd34,57675384,0,0x0,8
tick,0x7ff954e0fd34,57691329,0,0x0,8
tick,0x7ff954e0fd34,57707284,0,0x0,8
tick,0x7ff954e0fd34,57723245,0,0x0,8
tick,0x7ff954e0fd34,57739294,0,0x0,8
tick,0x7ff954e0fd34,57755264,0,0x0,8
tick,0x7ff954e0fd34,57770639,0,0x0,8
tick,0x7ff954e0fd34,57786636,0,0x0,8
tick,0x7ff954e0fd34,57802612,0,0x0,8
tick,0x7ff954e0fd34,57818572,0,0x0,8
tick,0x7ff954e0fd34,57834632,0,0x0,8
tick,0x7ff954e0fd34,57850576,0,0x0,8
tick,0x7ff954e0fd34,57866057,0,0x0,8
tick,0x7ff954e0fd34,57882028,0,0x0,8
tick,0x7ff954e0fd34,57896718,0,0x0,8
tick,0x7ff954e0fd34,57912009,0,0x0,8
tick,0x7ff954e0fd34,57926890,0,0x0,8
tick,0x7ff954e0fd34,57942811,0,0x0,8
tick,0x7ff954e0fd34,57957950,0,0x0,8
tick,0x7ff954e0fd34,57972900,0,0x0,8
tick,0x7ff954e0fd34,57988884,0,0x0,8
tick,0x7ff954e0fd34,58004213,0,0x0,8
tick,0x7ff954e0fd34,58020180,0,0x0,8
tick,0x7ff954e0fd34,58035698,0,0x0,8
tick,0x7ff954e0fd34,58051633,0,0x0,8
tick,0x7ff954e0fd34,58066992,0,0x0,8
tick,0x7ff954e0fd34,58082460,0,0x0,8
tick,0x7ff954e0fd34,58098020,0,0x0,8
tick,0x7ff954e0fd34,58113906,0,0x0,8
tick,0x7ff954e0fd34,58128767,0,0x0,8
tick,0x7ff954e0fd34,58144689,0,0x0,8
tick,0x7ff954e0fd34,58159704,0,0x0,8
tick,0x7ff954e0fd34,58175596,0,0x0,8
tick,0x7ff954e0fd34,58190560,0,0x0,8
tick,0x7ff954e0fd34,58206062,0,0x0,8
tick,0x7ff954e0fd34,58222049,0,0x0,8
tick,0x7ff954e0fd34,58237032,0,0x0,8
tick,0x7ff954e0fd34,58251927,0,0x0,8
tick,0x7ff954e0fd34,58266910,0,0x0,8
tick,0x7ff954e0fd34,58282023,0,0x0,8
tick,0x7ff954e0fd34,58297993,0,0x0,8
tick,0x7ff954e0fd34,58312954,0,0x0,8
tick,0x7ff954e0fd34,58327903,0,0x0,8
tick,0x7ff954e0fd34,58342729,0,0x0,8
tick,0x7ff954e0fd34,58357688,0,0x0,8
tick,0x7ff954e0fd34,58373609,0,0x0,8
tick,0x7ff954e0fd34,58388576,0,0x0,8
tick,0x7ff954e0fd34,58403524,0,0x0,8
tick,0x7ff954e0fd34,58418526,0,0x0,8
tick,0x7ff954e0fd34,58433499,0,0x0,8
tick,0x7ff954e0fd34,58449431,0,0x0,8
tick,0x7ff954e0fd34,58465391,0,0x0,8
tick,0x7ff954e0fd34,58481263,0,0x0,8
tick,0x7ff954e0fd34,58496767,0,0x0,8
tick,0x7ff954e0fd34,58512715,0,0x0,8
tick,0x7ff954e0fd34,58527695,0,0x0,8
tick,0x7ff954e0fd34,58542642,0,0x0,8
tick,0x7ff954e0fd34,58557655,0,0x0,8
tick,0x7ff954e0fd34,58572763,0,0x0,8
tick,0x7ff954e0fd34,58588318,0,0x0,8
tick,0x7ff954e0fd34,58604297,0,0x0,8
tick,0x7ff954e0fd34,58620292,0,0x0,8
tick,0x7ff954e0fd34,58636063,0,0x0,8
tick,0x7ff954e0fd34,58651442,0,0x0,8
tick,0x7ff954e0fd34,58666438,0,0x0,8
tick,0x7ff954e0fd34,58682399,0,0x0,8
tick,0x7ff954e0fd34,58698324,0,0x0,8
tick,0x7ff954e0fd34,58714283,0,0x0,8
tick,0x7ff954e0fd34,58730270,0,0x0,8
tick,0x7ff954e0fd34,58746232,0,0x0,8
tick,0x7ff954e0fd34,58762194,0,0x0,8
tick,0x7ff954e0fd34,58778104,0,0x0,8
tick,0x7ff954e0fd34,58793093,0,0x0,8
tick,0x7ff954e0fd34,58808051,0,0x0,8
tick,0x7ff954e0fd34,58823007,0,0x0,8
tick,0x7ff954e0fd34,58838046,0,0x0,8
tick,0x7ff954e0fd34,58853394,0,0x0,8
tick,0x7ff954e0fd34,58868343,0,0x0,8
tick,0x7ff954e0fd34,58883607,0,0x0,8
tick,0x7ff954e0fd34,58899690,0,0x0,8
tick,0x7ff954e0fd34,58915212,0,0x0,8
tick,0x7ff954e0fd34,58930548,0,0x0,8
tick,0x7ff954e0fd34,58945482,0,0x0,8
tick,0x7ff954e0fd34,58961397,0,0x0,8
tick,0x7ff954e0fd34,58977271,0,0x0,8
tick,0x7ff954e0fd34,58993263,0,0x0,8
tick,0x7ff954e0fd34,59009253,0,0x0,8
tick,0x7ff954e0fd34,59024257,0,0x0,8
tick,0x7ff954e0fd34,59040177,0,0x0,8
tick,0x7ff954e0fd34,59055374,0,0x0,8
tick,0x7ff954e0fd34,59071313,0,0x0,8
tick,0x7ff954e0fd34,59087333,0,0x0,8
tick,0x7ff954e0fd34,59103406,0,0x0,8
tick,0x7ff954e0fd34,59118677,0,0x0,8
tick,0x7ff954e0fd34,59134431,0,0x0,8
tick,0x7ff954e0fd34,59150348,0,0x0,8
tick,0x7ff954e0fd34,59166379,0,0x0,8
tick,0x7ff954e0fd34,59181822,0,0x0,8
tick,0x7ff954e0fd34,59197790,0,0x0,8
tick,0x7ff954e0fd34,59212891,0,0x0,8
tick,0x7ff954e0fd34,59227812,0,0x0,8
tick,0x7ff954e0fd34,59243775,0,0x0,8
tick,0x7ff954e0fd34,59259247,0,0x0,8
tick,0x7ff954e0fd34,59274800,0,0x0,8
tick,0x7ff954e0fd34,59290297,0,0x0,8
tick,0x7ff954e0fd34,59306036,0,0x0,8
tick,0x7ff954e0fd34,59321605,0,0x0,8
tick,0x7ff954e0fd34,59337576,0,0x0,8
tick,0x7ff954e0fd34,59352521,0,0x0,8
tick,0x7ff954e0fd34,59368600,0,0x0,8
tick,0x7ff954e0fd34,59384386,0,0x0,8
tick,0x7ff954e0fd34,59400065,0,0x0,8
tick,0x7ff954e0fd34,59415794,0,0x0,8
tick,0x7ff954e0fd34,59431175,0,0x0,8
tick,0x7ff954e0fd34,59447114,0,0x0,8
tick,0x7ff954e0fd34,59462124,0,0x0,8
tick,0x7ff954e0fd34,59477247,0,0x0,8
tick,0x7ff954e0fd34,59493219,0,0x0,8
tick,0x7ff954e0fd34,59508204,0,0x0,8
tick,0x7ff954e0fd34,59524184,0,0x0,8
tick,0x7ff954e0fd34,59540012,0,0x0,8
tick,0x7ff954e0fd34,59556064,0,0x0,8
tick,0x7ff954e0fd34,59571914,0,0x0,8
tick,0x7ff954e0fd34,59586859,0,0x0,8
tick,0x7ff954e0fd34,59601844,0,0x0,8
tick,0x7ff954e0fd34,59616842,0,0x0,8
tick,0x7ff954e0fd34,59631766,0,0x0,8
tick,0x7ff954e0fd34,59647719,0,0x0,8
tick,0x7ff954e0fd34,59662665,0,0x0,8
tick,0x7ff954e0fd34,59677755,0,0x0,8
tick,0x7ff954e0fd34,59692716,0,0x0,8
tick,0x7ff954e0fd34,59707537,0,0x0,8
tick,0x7ff954e0fd34,59723081,0,0x0,8
tick,0x7ff954e0fd34,59738733,0,0x0,8
tick,0x7ff954e0fd34,59753697,0,0x0,8
tick,0x7ff954e0fd34,59769545,0,0x0,8
tick,0x7ff954e0fd34,59785495,0,0x0,8
tick,0x7ff954e0fd34,59801243,0,0x0,8
tick,0x7ff954e0fd34,59817146,0,0x0,8
tick,0x7ff954e0fd34,59833107,0,0x0,8
tick,0x7ff954e0fd34,59848027,0,0x0,8
tick,0x7ff954e0fd34,59863024,0,0x0,8
tick,0x7ff954e0fd34,59877992,0,0x0,8
tick,0x7ff954e0fd34,59892925,0,0x0,8
tick,0x7ff954e0fd34,59908914,0,0x0,8
tick,0x7ff954e0fd34,59924863,0,0x0,8
tick,0x7ff954e0fd34,59940366,0,0x0,8
tick,0x7ff954e0fd34,59956322,0,0x0,8
tick,0x7ff954e0fd34,59972274,0,0x0,8
tick,0x7ff954e0fd34,59988219,0,0x0,8
tick,0x7ff954e0fd34,60003223,0,0x0,8
tick,0x7ff954e0fd34,60018126,0,0x0,8
tick,0x7ff954e0fd34,60033518,0,0x0,8
tick,0x7ff954e0fd34,60048511,0,0x0,8
tick,0x7ff954e0fd34,60064280,0,0x0,8
tick,0x7ff954e0fd34,60079913,0,0x0,8
tick,0x7ff954e0fd34,60095611,0,0x0,8
tick,0x7ff954e0fd34,60110583,0,0x0,8
tick,0x7ff954e0fd34,60126533,0,0x0,8
tick,0x7ff954e0fd34,60141466,0,0x0,8
tick,0x7ff954e0fd34,60157192,0,0x0,8
tick,0x7ff954e0fd34,60172158,0,0x0,8
tick,0x7ff954e0fd34,60188027,0,0x0,8
tick,0x7ff954e0fd34,60203552,0,0x0,8
tick,0x7ff954e0fd34,60219097,0,0x0,8
tick,0x7ff954e0fd34,60234602,0,0x0,8
tick,0x7ff954e0fd34,60249968,0,0x0,8
tick,0x7ff954e0fd34,60265364,0,0x0,8
tick,0x7ff954e0fd34,60281402,0,0x0,8
tick,0x7ff954e0fd34,60297374,0,0x0,8
tick,0x7ff954e0fd34,60312506,0,0x0,8
tick,0x7ff954e0fd34,60327462,0,0x0,8
tick,0x7ff954e0fd34,60343460,0,0x0,8
tick,0x7ff954e0fd34,60358400,0,0x0,8
tick,0x7ff954e0fd34,60374336,0,0x0,8
tick,0x7ff954e0fd34,60389679,0,0x0,8
tick,0x7ff954e0fd34,60404634,0,0x0,8
tick,0x7ff954e0fd34,60419923,0,0x0,8
tick,0x7ff954e0fd34,60435914,0,0x0,8
tick,0x7ff954e0fd34,60451658,0,0x0,8
tick,0x7ff954e0fd34,60467649,0,0x0,8
tick,0x7ff954e0fd34,60483661,0,0x0,8
tick,0x7ff954e0fd34,60499047,0,0x0,8
tick,0x7ff954e0fd34,60514998,0,0x0,8
tick,0x7ff954e0fd34,60531034,0,0x0,8
tick,0x7ff954e0fd34,60546935,0,0x0,8
tick,0x7ff954e0fd34,60561862,0,0x0,8
tick,0x7ff954e0fd34,60577818,0,0x0,8
tick,0x7ff954e0fd34,60592787,0,0x0,8
tick,0x7ff954e0fd34,60607734,0,0x0,8
tick,0x7ff954e0fd34,60623706,0,0x0,8
tick,0x7ff954e0fd34,60638671,0,0x0,8
tick,0x7ff954e0fd34,60654659,0,0x0,8
tick,0x7ff954e0fd34,60670762,0,0x0,8
tick,0x7ff954e0fd34,60686751,0,0x0,8
tick,0x7ff954e0fd34,60701976,0,0x0,8
tick,0x7ff954e0fd34,60717611,0,0x0,8
tick,0x7ff954e0fd34,60732601,0,0x0,8
tick,0x7ff954e0fd34,60747609,0,0x0,8
tick,0x7ff954e0fd34,60762649,0,0x0,8
tick,0x7ff954e0fd34,60778461,0,0x0,8
tick,0x7ff954e0fd34,60794410,0,0x0,8
tick,0x7ff954e0fd34,60810402,0,0x0,8
tick,0x7ff954e0fd34,60826332,0,0x0,8
tick,0x7ff954e0fd34,60842326,0,0x0,8
tick,0x7ff954e0fd34,60858252,0,0x0,8
tick,0x7ff954e0fd34,60874255,0,0x0,8
tick,0x7ff954e0fd34,60890179,0,0x0,8
tick,0x7ff954e0fd34,60906185,0,0x0,8
tick,0x7ff954e0fd34,60921102,0,0x0,8
tick,0x7ff954e0fd34,60936738,0,0x0,8
tick,0x7ff954e0fd34,60952502,0,0x0,8
tick,0x7ff954e0fd34,60968135,0,0x0,8
tick,0x7ff954e0fd34,60984149,0,0x0,8
tick,0x7ff954e0fd34,61000083,0,0x0,8
tick,0x7ff954e0fd34,61015998,0,0x0,8
tick,0x7ff954e0fd34,61031961,0,0x0,8
tick,0x7ff954e0fd34,61047940,0,0x0,8
tick,0x7ff954e0fd34,61063867,0,0x0,8
tick,0x7ff954e0fd34,61079805,0,0x0,8
tick,0x7ff954e0fd34,61094788,0,0x0,8
tick,0x7ff954e0fd34,61109873,0,0x0,8
tick,0x7ff954e0fd34,61125262,0,0x0,8
tick,0x7ff954e0fd34,61140756,0,0x0,8
tick,0x7ff954e0fd34,61155749,0,0x0,8
tick,0x7ff954e0fd34,61170562,0,0x0,8
tick,0x7ff954e0fd34,61185621,0,0x0,8
tick,0x7ff954e0fd34,61200510,0,0x0,8
tick,0x7ff954e0fd34,61215482,0,0x0,8
tick,0x7ff954e0fd34,61231514,0,0x0,8
tick,0x7ff954e0fd34,61246394,0,0x0,8
tick,0x7ff954e0fd34,61261924,0,0x0,8
tick,0x7ff954e0fd34,61277864,0,0x0,8
tick,0x7ff954e0fd34,61293820,0,0x0,8
tick,0x7ff954e0fd34,61309784,0,0x0,8
tick,0x7ff954e0fd34,61325802,0,0x0,8
tick,0x7ff954e0fd34,61340861,0,0x0,8
tick,0x7ff954e0fd34,61355893,0,0x0,8
tick,0x7ff954e0fd34,61370744,0,0x0,8
tick,0x7ff954e0fd34,61386672,0,0x0,8
tick,0x7ff954e0fd34,61401563,0,0x0,8
tick,0x7ff954e0fd34,61417514,0,0x0,8
tick,0x7ff954e0fd34,61433472,0,0x0,8
tick,0x7ff954e0fd34,61448430,0,0x0,8
tick,0x7ff954e0fd34,61464366,0,0x0,8
tick,0x7ff954e0fd34,61479367,0,0x0,8
tick,0x7ff954e0fd34,61494767,0,0x0,8
tick,0x7ff954e0fd34,61510390,0,0x0,8
tick,0x7ff954e0fd34,61525304,0,0x0,8
tick,0x7ff954e0fd34,61541278,0,0x0,8
tick,0x7ff954e0fd34,61557201,0,0x0,8
tick,0x7ff954e0fd34,61573249,0,0x0,8
tick,0x7ff954e0fd34,61588254,0,0x0,8
tick,0x7ff954e0fd34,61604010,0,0x0,8
tick,0x7ff954e0fd34,61619986,0,0x0,8
tick,0x7ff954e0fd34,61635924,0,0x0,8
tick,0x7ff954e0fd34,61650871,0,0x0,8
tick,0x7ff954e0fd34,61666835,0,0x0,8
tick,0x7ff954e0fd34,61681783,0,0x0,8
tick,0x7ff954e0fd34,61697764,0,0x0,8
tick,0x7ff954e0fd34,61713725,0,0x0,8
tick,0x7ff954e0fd34,61728709,0,0x0,8
tick,0x7ff954e0fd34,61744636,0,0x0,8
tick,0x7ff954e0fd34,61759611,0,0x0,8
tick,0x7ff954e0fd34,61775589,0,0x0,8
tick,0x7ff954e0fd34,61791506,0,0x0,8
tick,0x7ff954e0fd34,61807471,0,0x0,8
tick,0x7ff954e0fd34,61823423,0,0x0,8
tick,0x7ff954e0fd34,61838900,0,0x0,8
tick,0x7ff954e0fd34,61854843,0,0x0,8
tick,0x7ff954e0fd34,61870804,0,0x0,8
tick,0x7ff954e0fd34,61886770,0,0x0,8
tick,0x7ff954e0fd34,61902301,0,0x0,8
tick,0x7ff954e0fd34,61917692,0,0x0,8
tick,0x7ff954e0fd34,61933644,0,0x0,8
tick,0x7ff954e0fd34,61949067,0,0x0,8
tick,0x7ff954e0fd34,61964226,0,0x0,8
tick,0x7ff954e0fd34,61980182,0,0x0,8
tick,0x7ff954e0fd34,61995382,0,0x0,8
tick,0x7ff954e0fd34,62011329,0,0x0,8
tick,0x7ff954e0fd34,62026281,0,0x0,8
tick,0x7ff954e0fd34,62042274,0,0x0,8
tick,0x7ff954e0fd34,62058206,0,0x0,8
tick,0x7ff954e0fd34,62074203,0,0x0,8
tick,0x7ff954e0fd34,62090121,0,0x0,8
tick,0x7ff954e0fd34,62106112,0,0x0,8
tick,0x7ff954e0fd34,62121771,0,0x0,8
tick,0x7ff954e0fd34,62136324,0,0x0,8
tick,0x7ff954e0fd34,62151587,0,0x0,8
tick,0x7ff954e0fd34,62168111,0,0x0,8
tick,0x7ff954e0fd34,62183504,0,0x0,8
tick,0x7ff954e0fd34,62199430,0,0x0,8
tick,0x7ff954e0fd34,62214399,0,0x0,8
tick,0x7ff954e0fd34,62230357,0,0x0,8
tick,0x7ff954e0fd34,62245622,0,0x0,8
tick,0x7ff954e0fd34,62261587,0,0x0,8
tick,0x7ff954e0fd34,62277569,0,0x0,8
tick,0x7ff954e0fd34,62293474,0,0x0,8
tick,0x7ff954e0fd34,62309451,0,0x0,8
tick,0x7ff954e0fd34,62325393,0,0x0,8
tick,0x7ff954e0fd34,62341237,0,0x0,8
tick,0x7ff954e0fd34,62356231,0,0x0,8
tick,0x7ff954e0fd34,62371452,0,0x0,8
tick,0x7ff954e0fd34,62387415,0,0x0,8
tick,0x7ff954e0fd34,62403429,0,0x0,8
tick,0x7ff954e0fd34,62419461,0,0x0,8
tick,0x7ff954e0fd34,62435337,0,0x0,8
tick,0x7ff954e0fd34,62450856,0,0x0,8
tick,0x7ff954e0fd34,62466809,0,0x0,8
tick,0x7ff954e0fd34,62481761,0,0x0,8
tick,0x7ff954e0fd34,62497102,0,0x0,8
tick,0x7ff954e0fd34,62513066,0,0x0,8
tick,0x7ff954e0fd34,62529034,0,0x0,8
tick,0x7ff954e0fd34,62545092,0,0x0,8
tick,0x7ff954e0fd34,62560990,0,0x0,8
tick,0x7ff954e0fd34,62576893,0,0x0,8
tick,0x7ff954e0fd34,62592857,0,0x0,8
tick,0x7ff954e0fd34,62608898,0,0x0,8
tick,0x7ff954e0fd34,62624474,0,0x0,8
tick,0x7ff954e0fd34,62639457,0,0x0,8
tick,0x7ff954e0fd34,62655379,0,0x0,8
tick,0x7ff954e0fd34,62670356,0,0x0,8
tick,0x7ff954e0fd34,62686326,0,0x0,8
tick,0x7ff954e0fd34,62701156,0,0x0,8
tick,0x7ff954e0fd34,62716173,0,0x0,8
tick,0x7ff954e0fd34,62731120,0,0x0,8
tick,0x7ff954e0fd34,62746978,0,0x0,8
tick,0x7ff954e0fd34,62761946,0,0x0,8
tick,0x7ff954e0fd34,62777591,0,0x0,8
tick,0x7ff954e0fd34,62793566,0,0x0,8
tick,0x7ff954e0fd34,62809515,0,0x0,8
tick,0x7ff954e0fd34,62825189,0,0x0,8
tick,0x7ff954e0fd34,62840658,0,0x0,8
tick,0x7ff954e0fd34,62856751,0,0x0,8
tick,0x7ff954e0fd34,62872740,0,0x0,8
tick,0x7ff954e0fd34,62888682,0,0x0,8
tick,0x7ff954e0fd34,62903844,0,0x0,8
tick,0x7ff954e0fd34,62919327,0,0x0,8
tick,0x7ff954e0fd34,62935332,0,0x0,8
tick,0x7ff954e0fd34,62951286,0,0x0,8
tick,0x7ff954e0fd34,62966717,0,0x0,8
tick,0x7ff954e0fd34,62982373,0,0x0,8
tick,0x7ff954e0fd34,62998333,0,0x0,8
tick,0x7ff954e0fd34,63013692,0,0x0,8
tick,0x7ff954e0fd34,63029163,0,0x0,8
tick,0x7ff954e0fd34,63044919,0,0x0,8
tick,0x7ff954e0fd34,63060444,0,0x0,8
tick,0x7ff954e0fd34,63076353,0,0x0,8
tick,0x7ff954e0fd34,63092335,0,0x0,8
tick,0x7ff954e0fd34,63108283,0,0x0,8
tick,0x7ff954e0fd34,63124235,0,0x0,8
tick,0x7ff954e0fd34,63139531,0,0x0,8
tick,0x7ff954e0fd34,63155569,0,0x0,8
tick,0x7ff954e0fd34,63170460,0,0x0,8
tick,0x7ff954e0fd34,63185399,0,0x0,8
tick,0x7ff954e0fd34,63201356,0,0x0,8
tick,0x7ff954e0fd34,63217319,0,0x0,8
tick,0x7ff954e0fd34,63233270,0,0x0,8
tick,0x7ff954e0fd34,63249270,0,0x0,8
tick,0x7ff954e0fd34,63265203,0,0x0,8
tick,0x7ff954e0fd34,63280169,0,0x0,8
tick,0x7ff954e0fd34,63295181,0,0x0,8
tick,0x7ff954e0fd34,63310067,0,0x0,8
tick,0x7ff954e0fd34,63326050,0,0x0,8
tick,0x7ff954e0fd34,63341001,0,0x0,8
tick,0x7ff954e0fd34,63356973,0,0x0,8
tick,0x7ff954e0fd34,63372025,0,0x0,8
tick,0x7ff954e0fd34,63387895,0,0x0,8
tick,0x7ff954e0fd34,63402774,0,0x0,8
tick,0x7ff954e0fd34,63418757,0,0x0,8
tick,0x7ff954e0fd34,63434206,0,0x0,8
tick,0x7ff954e0fd34,63449117,0,0x0,8
tick,0x7ff954e0fd34,63465073,0,0x0,8
tick,0x7ff954e0fd34,63481004,0,0x0,8
tick,0x7ff954e0fd34,63496942,0,0x0,8
tick,0x7ff954e0fd34,63512892,0,0x0,8
tick,0x7ff954e0fd34,63528863,0,0x0,8
tick,0x7ff954e0fd34,63544794,0,0x0,8
tick,0x7ff954e0fd34,63560824,0,0x0,8
tick,0x7ff954e0fd34,63575897,0,0x0,8
tick,0x7ff954e0fd34,63590748,0,0x0,8
tick,0x7ff954e0fd34,63605663,0,0x0,8
tick,0x7ff954e0fd34,63621597,0,0x0,8
tick,0x7ff954e0fd34,63637640,0,0x0,8
tick,0x7ff954e0fd34,63653489,0,0x0,8
tick,0x7ff954e0fd34,63669467,0,0x0,8
tick,0x7ff954e0fd34,63685438,0,0x0,8
tick,0x7ff954e0fd34,63701220,0,0x0,8
tick,0x7ff954e0fd34,63717189,0,0x0,8
tick,0x7ff954e0fd34,63733151,0,0x0,8
tick,0x7ff954e0fd34,63748104,0,0x0,8
tick,0x7ff954e0fd34,63764141,0,0x0,8
tick,0x7ff954e0fd34,63779094,0,0x0,8
tick,0x7ff954e0fd34,63794094,0,0x0,8
tick,0x7ff954e0fd34,63809025,0,0x0,8
tick,0x7ff954e0fd34,63824155,0,0x0,8
tick,0x7ff954e0fd34,63838877,0,0x0,8
tick,0x7ff954e0fd34,63853882,0,0x0,8
tick,0x7ff954e0fd34,63869842,0,0x0,8
tick,0x7ff954e0fd34,63884787,0,0x0,8
tick,0x7ff954e0fd34,63900750,0,0x0,8
tick,0x7ff954e0fd34,63915774,0,0x0,8
tick,0x7ff954e0fd34,63930740,0,0x0,8
tick,0x7ff954e0fd34,63946684,0,0x0,8
tick,0x7ff954e0fd34,63961547,0,0x0,8
tick,0x7ff954e0fd34,63977517,0,0x0,8
tick,0x7ff954e0fd34,63992572,0,0x0,8
tick,0x7ff954e0fd34,64007418,0,0x0,8
tick,0x7ff954e0fd34,64022478,0,0x0,8
tick,0x7ff954e0fd34,64038394,0,0x0,8
tick,0x7ff954e0fd34,64053302,0,0x0,8
tick,0x7ff954e0fd34,64069256,0,0x0,8
tick,0x7ff954e0fd34,64085217,0,0x0,8
tick,0x7ff954e0fd34,64101169,0,0x0,8
tick,0x7ff954e0fd34,64116109,0,0x0,8
tick,0x7ff954e0fd34,64131141,0,0x0,8
tick,0x7ff954e0fd34,64147059,0,0x0,8
tick,0x7ff954e0fd34,64163013,0,0x0,8
tick,0x7ff954e0fd34,64178992,0,0x0,8
tick,0x7ff954e0fd34,64194961,0,0x0,8
tick,0x7ff954e0fd34,64209898,0,0x0,8
tick,0x7ff954e0fd34,64224923,0,0x0,8
tick,0x7ff954e0fd34,64240601,0,0x0,8
tick,0x7ff954e0fd34,64256559,0,0x0,8
tick,0x7ff954e0fd34,64271529,0,0x0,8
tick,0x7ff954e0fd34,64287199,0,0x0,8
tick,0x7ff954e0fd34,64301936,0,0x0,8
tick,0x7ff954e0fd34,64317870,0,0x0,8
tick,0x7ff954e0fd34,64333901,0,0x0,8
tick,0x7ff954e0fd34,64349889,0,0x0,8
tick,0x7ff954e0fd34,64365929,0,0x0,8
tick,0x7ff954e0fd34,64381174,0,0x0,8
tick,0x7ff954e0fd34,64396159,0,0x0,8
tick,0x7ff954e0fd34,64412160,0,0x0,8
tick,0x7ff954e0fd34,64427891,0,0x0,8
tick,0x7ff954e0fd34,64443837,0,0x0,8
tick,0x7ff954e0fd34,64459643,0,0x0,8
tick,0x7ff954e0fd34,64475140,0,0x0,8
tick,0x7ff954e0fd34,64490358,0,0x0,8
tick,0x7ff954e0fd34,64506440,0,0x0,8
tick,0x7ff954e0fd34,64522021,0,0x0,8
tick,0x7ff954e0fd34,64537441,0,0x0,8
tick,0x7ff954e0fd34,64552413,0,0x0,8
tick,0x7ff954e0fd34,64568166,0,0x0,8
tick,0x7ff954e0fd34,64584048,0,0x0,8
tick,0x7ff954e0fd34,64599999,0,0x0,8
tick,0x7ff954e0fd34,64614710,0,0x0,8
tick,0x7ff954e0fd34,64630627,0,0x0,8
tick,0x7ff954e0fd34,64646383,0,0x0,8
tick,0x7ff954e0fd34,64661671,0,0x0,8
tick,0x7ff954e0fd34,64676668,0,0x0,8
tick,0x7ff954e0fd34,64692584,0,0x0,8
tick,0x7ff954e0fd34,64708513,0,0x0,8
tick,0x7ff954e0fd34,64724236,0,0x0,8
tick,0x7ff954e0fd34,64740106,0,0x0,8
tick,0x7ff954e0fd34,64756103,0,0x0,8
tick,0x7ff954e0fd34,64772101,0,0x0,8
tick,0x7ff954e0fd34,64788016,0,0x0,8
tick,0x7ff954e0fd34,64802943,0,0x0,8
tick,0x7ff954e0fd34,64817988,0,0x0,8
tick,0x7ff954e0fd34,64833856,0,0x0,8
tick,0x7ff954e0fd34,64848549,0,0x0,8
tick,0x7ff954e0fd34,64864484,0,0x0,8
tick,0x7ff954e0fd34,64880288,0,0x0,8
tick,0x7ff954e0fd34,64896266,0,0x0,8
tick,0x7ff954e0fd34,64912215,0,0x0,8
tick,0x7ff954e0fd34,64928200,0,0x0,8
tick,0x7ff954e0fd34,64943566,0,0x0,8
tick,0x7ff954e0fd34,64958547,0,0x0,8
tick,0x7ff954e0fd34,64973454,0,0x0,8
tick,0x7ff954e0fd34,64989367,0,0x0,8
tick,0x7ff954e0fd34,65005020,0,0x0,8
tick,0x7ff954e0fd34,65021027,0,0x0,8
tick,0x7ff954e0fd34,65036998,0,0x0,8
tick,0x7ff954e0fd34,65052626,0,0x0,8
tick,0x7ff954e0fd34,65067898,0,0x0,8
tick,0x7ff954e0fd34,65082908,0,0x0,8
tick,0x7ff954e0fd34,65098826,0,0x0,8
tick,0x7ff954e0fd34,65114911,0,0x0,8
tick,0x7ff954e0fd34,65130185,0,0x0,8
tick,0x7ff954e0fd34,65145188,0,0x0,8
tick,0x7ff954e0fd34,65161002,0,0x0,8
tick,0x7ff954e0fd34,65176307,0,0x0,8
tick,0x7ff954e0fd34,65192293,0,0x0,8
tick,0x7ff954e0fd34,65207886,0,0x0,8
tick,0x7ff954e0fd34,65223677,0,0x0,8
tick,0x7ff954e0fd34,65238977,0,0x0,8
tick,0x7ff954e0fd34,65254338,0,0x0,8
tick,0x7ff954e0fd34,65270281,0,0x0,8
tick,0x7ff954e0fd34,65285734,0,0x0,8
tick,0x7ff954e0fd34,65301688,0,0x0,8
tick,0x7ff954e0fd34,65317680,0,0x0,8
tick,0x7ff954e0fd34,65333497,0,0x0,8
tick,0x7ff954e0fd34,65349477,0,0x0,8
tick,0x7ff954e0fd34,65365396,0,0x0,8
tick,0x7ff954e0fd34,65380379,0,0x0,8
tick,0x7ff954e0fd34,65396380,0,0x0,8
tick,0x7ff954e0fd34,65411366,0,0x0,8
tick,0x7ff954e0fd34,65427432,0,0x0,8
tick,0x7ff954e0fd34,65442961,0,0x0,8
tick,0x7ff954e0fd34,65458908,0,0x0,8
tick,0x7ff954e0fd34,65474935,0,0x0,8
tick,0x7ff954e0fd34,65489999,0,0x0,8
tick,0x7ff954e0fd34,65505226,0,0x0,8
tick,0x7ff954e0fd34,65521168,0,0x0,8
tick,0x7ff954e0fd34,65537131,0,0x0,8
tick,0x7ff954e0fd34,65552145,0,0x0,8
tick,0x7ff954e0fd34,65567810,0,0x0,8
tick,0x7ff954e0fd34,65583841,0,0x0,8
tick,0x7ff954e0fd34,65599754,0,0x0,8
tick,0x7ff954e0fd34,65614992,0,0x0,8
tick,0x7ff954e0fd34,65630989,0,0x0,8
tick,0x7ff954e0fd34,65645952,0,0x0,8
tick,0x7ff954e0fd34,65661978,0,0x0,8
tick,0x7ff954e0fd34,65676842,0,0x0,8
tick,0x7ff954e0fd34,65691795,0,0x0,8
tick,0x7ff954e0fd34,65707761,0,0x0,8
tick,0x7ff954e0fd34,65723724,0,0x0,8
tick,0x7ff954e0fd34,65739687,0,0x0,8
tick,0x7ff954e0fd34,65755620,0,0x0,8
tick,0x7ff954e0fd34,65770749,0,0x0,8
tick,0x7ff954e0fd34,65786566,0,0x0,8
tick,0x7ff954e0fd34,65801597,0,0x0,8
tick,0x7ff954e0fd34,65816529,0,0x0,8
tick,0x7ff954e0fd34,65832442,0,0x0,8
tick,0x7ff954e0fd34,65847416,0,0x0,8
tick,0x7ff954e0fd34,65863111,0,0x0,8
tick,0x7ff954e0fd34,65878995,0,0x0,8
tick,0x7ff954e0fd34,65894912,0,0x0,8
tick,0x7ff954e0fd34,65910251,0,0x0,8
tick,0x7ff954e0fd34,65926183,0,0x0,8
tick,0x7ff954e0fd34,65941491,0,0x0,8
tick,0x7ff954e0fd34,65956733,0,0x0,8
tick,0x7ff954e0fd34,65971621,0,0x0,8
tick,0x7ff954e0fd34,65986604,0,0x0,8
tick,0x7ff954e0fd34,66001576,0,0x0,8
tick,0x7ff954e0fd34,66016512,0,0x0,8
tick,0x7ff954e0fd34,66031498,0,0x0,8
tick,0x7ff954e0fd34,66046492,0,0x0,8
tick,0x7ff954e0fd34,66061467,0,0x0,8
tick,0x7ff954e0fd34,66077150,0,0x0,8
tick,0x7ff954e0fd34,66093251,0,0x0,8
tick,0x7ff954e0fd34,66109238,0,0x0,8
tick,0x7ff954e0fd34,66125231,0,0x0,8
tick,0x7ff954e0fd34,66140429,0,0x0,8
tick,0x7ff954e0fd34,66155232,0,0x0,8
tick,0x7ff954e0fd34,66170367,0,0x0,8
tick,0x7ff954e0fd34,66185380,0,0x0,8
tick,0x7ff954e0fd34,66200968,0,0x0,8
tick,0x7ff954e0fd34,66215992,0,0x0,8
tick,0x7ff954e0fd34,66231935,0,0x0,8
tick,0x7ff954e0fd34,66246879,0,0x0,8
tick,0x7ff954e0fd34,66262824,0,0x0,8
tick,0x7ff954e0fd34,66278846,0,0x0,8
tick,0x7ff954e0fd34,66294831,0,0x0,8
tick,0x7ff954e0fd34,66310727,0,0x0,8
tick,0x7ff954e0fd34,66326683,0,0x0,8
tick,0x7ff954e0fd34,66342599,0,0x0,8
tick,0x7ff954e0fd34,66358621,0,0x0,8
tick,0x7ff954e0fd34,66374794,0,0x0,8
tick,0x7ff954e0fd34,66390564,0,0x0,8
tick,0x7ff954e0fd34,66406483,0,0x0,8
tick,0x7ff954e0fd34,66422549,0,0x0,8
tick,0x7ff954e0fd34,66438450,0,0x0,8
tick,0x7ff954e0fd34,66454313,0,0x0,8
tick,0x7ff954e0fd34,66469878,0,0x0,8
tick,0x7ff954e0fd34,66485522,0,0x0,8
tick,0x7ff954e0fd34,66501402,0,0x0,8
tick,0x7ff954e0fd34,66517420,0,0x0,8
tick,0x7ff954e0fd34,66533360,0,0x0,8
tick,0x7ff954e0fd34,66549307,0,0x0,8
tick,0x7ff954e0fd34,66565341,0,0x0,8
tick,0x7ff954e0fd34,66580578,0,0x0,8
tick,0x7ff954e0fd34,66595545,0,0x0,8
tick,0x7ff954e0fd34,66610444,0,0x0,8
tick,0x7ff954e0fd34,66625401,0,0x0,8
tick,0x7ff954e0fd34,66640469,0,0x0,8
tick,0x7ff954e0fd34,66655594,0,0x0,8
tick,0x7ff954e0fd34,66671560,0,0x0,8
tick,0x7ff954e0fd34,66686527,0,0x0,8
tick,0x7ff954e0fd34,66701479,0,0x0,8
tick,0x7ff954e0fd34,66716469,0,0x0,8
tick,0x7ff954e0fd34,66732408,0,0x0,8
tick,0x7ff954e0fd34,66747614,0,0x0,8
tick,0x7ff954e0fd34,66763463,0,0x0,8
tick,0x7ff954e0fd34,66778476,0,0x0,8
tick,0x7ff954e0fd34,66793452,0,0x0,8
tick,0x7ff954e0fd34,66809353,0,0x0,8
tick,0x7ff954e0fd34,66825297,0,0x0,8
tick,0x7ff954e0fd34,66841326,0,0x0,8
tick,0x7ff954e0fd34,66857289,0,0x0,8
tick,0x7ff954e0fd34,66872849,0,0x0,8
tick,0x7ff954e0fd34,66888836,0,0x0,8
tick,0x7ff954e0fd34,66904074,0,0x0,8
tick,0x7ff954e0fd34,66920139,0,0x0,8
tick,0x7ff954e0fd34,66935044,0,0x0,8
tick,0x7ff954e0fd34,66950446,0,0x0,8
tick,0x7ff954e0fd34,66965962,0,0x0,8
tick,0x7ff954e0fd34,66980885,0,0x0,8
tick,0x7ff954e0fd34,66996853,0,0x0,8
tick,0x7ff954e0fd34,67012782,0,0x0,8
tick,0x7ff954e0fd34,67028757,0,0x0,8
tick,0x7ff954e0fd34,67043766,0,0x0,8
tick,0x7ff954e0fd34,67058601,0,0x0,8
tick,0x7ff954e0fd34,67073592,0,0x0,8
tick,0x7ff954e0fd34,67088544,0,0x0,8
tick,0x7ff954e0fd34,67103465,0,0x0,8
tick,0x7ff954e0fd34,67118862,0,0x0,8
tick,0x7ff954e0fd34,67134816,0,0x0,8
tick,0x7ff954e0fd34,67150803,0,0x0,8
tick,0x7ff954e0fd34,67166734,0,0x0,8
tick,0x7ff954e0fd34,67182660,0,0x0,8
tick,0x7ff954e0fd34,67198692,0,0x0,8
tick,0x7ff954e0fd34,67214675,0,0x0,8
tick,0x7ff954e0fd34,67230352,0,0x0,8
tick,0x7ff954e0fd34,67246242,0,0x0,8
tick,0x7ff954e0fd34,67261248,0,0x0,8
tick,0x7ff954e0fd34,67276188,0,0x0,8
tick,0x7ff954e0fd34,67291181,0,0x0,8
tick,0x7ff954e0fd34,67307112,0,0x0,8
tick,0x7ff954e0fd34,67322060,0,0x0,8
tick,0x7ff954e0fd34,67337848,0,0x0,8
tick,0x7ff954e0fd34,67353824,0,0x0,8
tick,0x7ff954e0fd34,67369338,0,0x0,8
tick,0x7ff954e0fd34,67385264,0,0x0,8
tick,0x7ff954e0fd34,67400252,0,0x0,8
tick,0x7ff954e0fd34,67415189,0,0x0,8
tick,0x7ff954e0fd34,67430210,0,0x0,8
tick,0x7ff954e0fd34,67445151,0,0x0,8
tick,0x7ff954e0fd34,67460771,0,0x0,8
tick,0x7ff954e0fd34,67475789,0,0x0,8
tick,0x7ff954e0fd34,67491632,0,0x0,8
tick,0x7ff954e0fd34,67506631,0,0x0,8
tick,0x7ff954e0fd34,67521553,0,0x0,8
tick,0x7ff954e0fd34,67536547,0,0x0,8
tick,0x7ff954e0fd34,67552467,0,0x0,8
tick,0x7ff954e0fd34,67567457,0,0x0,8
tick,0x7ff954e0fd34,67583392,0,0x0,8
tick,0x7ff954e0fd34,67598457,0,0x0,8
tick,0x7ff954e0fd34,67613323,0,0x0,8
tick,0x7ff954e0fd34,67628263,0,0x0,8
tick,0x7ff954e0fd34,67643260,0,0x0,8
tick,0x7ff954e0fd34,67659197,0,0x0,8
tick,0x7ff954e0fd34,67675190,0,0x0,8
tick,0x7ff954e0fd34,67691114,0,0x0,8
tick,0x7ff954e0fd34,67707094,0,0x0,8
tick,0x7ff954e0fd34,67722073,0,0x0,8
tick,0x7ff954e0fd34,67736996,0,0x0,8
tick,0x7ff954e0fd34,67752023,0,0x0,8
tick,0x7ff954e0fd34,67767950,0,0x0,8
tick,0x7ff954e0fd34,67782857,0,0x0,8
tick,0x7ff954e0fd34,67798862,0,0x0,8
tick,0x7ff954e0fd34,67815285,0,0x0,8
tick,0x7ff954e0fd34,67830738,0,0x0,8
tick,0x7ff954e0fd34,67846754,0,0x0,8
tick,0x7ff954e0fd34,67862735,0,0x0,8
tick,0x7ff954e0fd34,67878682,0,0x0,8
tick,0x7ff954e0fd34,67894574,0,0x0,8
tick,0x7ff954e0fd34,67910519,0,0x0,8
tick,0x7ff954e0fd34,67926487,0,0x0,8
tick,0x7ff954e0fd34,67941472,0,0x0,8
tick,0x7ff954e0fd34,67956439,0,0x0,8
tick,0x7ff954e0fd34,67972353,0,0x0,8
tick,0x7ff954e0fd34,67988379,0,0x0,8
tick,0x7ff954e0fd34,68003322,0,0x0,8
tick,0x7ff954e0fd34,68019250,0,0x0,8
tick,0x7ff954e0fd34,68034249,0,0x0,8
tick,0x7ff954e0fd34,68050170,0,0x0,8
tick,0x7ff954e0fd34,68066111,0,0x0,8
tick,0x7ff954e0fd34,68082158,0,0x0,8
tick,0x7ff954e0fd34,68098065,0,0x0,8
tick,0x7ff954e0fd34,68112973,0,0x0,8
tick,0x7ff954e0fd34,68128953,0,0x0,8
tick,0x7ff954e0fd34,68143926,0,0x0,8
tick,0x7ff954e0fd34,68159962,0,0x0,8
tick,0x7ff954e0fd34,68174831,0,0x0,8
tick,0x7ff954e0fd34,68189852,0,0x0,8
tick,0x7ff954e0fd34,68204813,0,0x0,8
tick,0x7ff954e0fd34,68220774,0,0x0,8
tick,0x7ff954e0fd34,68235794,0,0x0,8
tick,0x7ff954e0fd34,68250622,0,0x0,8
tick,0x7ff954e0fd34,68265701,0,0x0,8
tick,0x7ff954e0fd34,68280547,0,0x0,8
tick,0x7ff954e0fd34,68296512,0,0x0,8
tick,0x7ff954e0fd34,68311445,0,0x0,8
tick,0x7ff954e0fd34,68326438,0,0x0,8
tick,0x7ff954e0fd34,68342352,0,0x0,8
tick,0x7ff954e0fd34,68357373,0,0x0,8
tick,0x7ff954e0fd34,68372294,0,0x0,8
tick,0x7ff954e0fd34,68387270,0,0x0,8
tick,0x7ff954e0fd34,68403207,0,0x0,8
tick,0x7ff954e0fd34,68418163,0,0x0,8
tick,0x7ff954e0fd34,68434184,0,0x0,8
tick,0x7ff954e0fd34,68449123,0,0x0,8
tick,0x7ff954e0fd34,68464090,0,0x0,8
tick,0x7ff954e0fd34,68480059,0,0x0,8
tick,0x7ff954e0fd34,68496065,0,0x0,8
tick,0x7ff954e0fd34,68512002,0,0x0,8
tick,0x7ff954e0fd34,68527990,0,0x0,8
tick,0x7ff954e0fd34,68543830,0,0x0,8
tick,0x7ff954e0fd34,68560089,0,0x0,8
tick,0x7ff954e0fd34,68575744,0,0x0,8
tick,0x7ff954e0fd34,68591934,0,0x0,8
tick,0x7ff954e0fd34,68606668,0,0x0,8
tick,0x7ff954e0fd34,68622647,0,0x0,8
tick,0x7ff954e0fd34,68637617,0,0x0,8
tick,0x7ff954e0fd34,68652550,0,0x0,8
tick,0x7ff954e0fd34,68668525,0,0x0,8
tick,0x7ff954e0fd34,68683470,0,0x0,8
tick,0x7ff954e0fd34,68699441,0,0x0,8
tick,0x7ff954e0fd34,68715444,0,0x0,8
tick,0x7ff954e0fd34,68731333,0,0x0,8
tick,0x7ff954e0fd34,68746535,0,0x0,8
tick,0x7ff954e0fd34,68761448,0,0x0,8
tick,0x7ff954e0fd34,68776410,0,0x0,8
tick,0x7ff954e0fd34,68792208,0,0x0,8
tick,0x7ff954e0fd34,68807124,0,0x0,8
tick,0x7ff954e0fd34,68823311,0,0x0,8
tick,0x7ff954e0fd34,68838056,0,0x0,8
tick,0x7ff954e0fd34,68853011,0,0x0,8
tick,0x7ff954e0fd34,68868960,0,0x0,8
tick,0x7ff954e0fd34,68884948,0,0x0,8
tick,0x7ff954e0fd34,68900884,0,0x0,8
tick,0x7ff954e0fd34,68916862,0,0x0,8
tick,0x7ff954e0fd34,68932830,0,0x0,8
tick,0x7ff954e0fd34,68948781,0,0x0,8
tick,0x7ff954e0fd34,68965793,0,0x0,8
tick,0x7ff954e0fd34,68980220,0,0x0,8
tick,0x7ff954e0fd34,68996142,0,0x0,8
tick,0x7ff954e0fd34,69012644,0,0x0,8
tick,0x7ff954e0fd34,69028255,0,0x0,8
tick,0x7ff954e0fd34,69043248,0,0x0,8
tick,0x7ff954e0fd34,69057971,0,0x0,8
tick,0x7ff954e0fd34,69072954,0,0x0,8
tick,0x7ff954e0fd34,69087918,0,0x0,8
tick,0x7ff954e0fd34,69103873,0,0x0,8
tick,0x7ff954e0fd34,69118860,0,0x0,8
tick,0x7ff954e0fd34,69133750,0,0x0,8
tick,0x7ff954e0fd34,69149121,0,0x0,8
tick,0x7ff954e0fd34,69163731,0,0x0,8
tick,0x7ff954e0fd34,69179726,0,0x0,8
tick,0x7ff954e0fd34,69194671,0,0x0,8
tick,0x7ff954e0fd34,69209595,0,0x0,8
tick,0x7ff954e0fd34,69224553,0,0x0,8
tick,0x7ff954e0fd34,69240524,0,0x0,8
tick,0x7ff954e0fd34,69256431,0,0x0,8
tick,0x7ff954e0fd34,69272395,0,0x0,8
tick,0x7ff954e0fd34,69288363,0,0x0,8
tick,0x7ff954e0fd34,69304930,0,0x0,8
tick,0x7ff954e0fd34,69320586,0,0x0,8
tick,0x7ff954e0fd34,69336208,0,0x0,8
tick,0x7ff954e0fd34,69351270,0,0x0,8
tick,0x7ff954e0fd34,69367152,0,0x0,8
tick,0x7ff954e0fd34,69382114,0,0x0,8
tick,0x7ff954e0fd34,69397122,0,0x0,8
tick,0x7ff954e0fd34,69413054,0,0x0,8
tick,0x7ff954e0fd34,69428013,0,0x0,8
tick,0x7ff954e0fd34,69442972,0,0x0,8
tick,0x7ff954e0fd34,69457950,0,0x0,8
tick,0x7ff954e0fd34,69473859,0,0x0,8
tick,0x7ff954e0fd34,69488833,0,0x0,8
tick,0x7ff954e0fd34,69504803,0,0x0,8
tick,0x7ff954e0fd34,69519813,0,0x0,8
tick,0x7ff954e0fd34,69535091,0,0x0,8
tick,0x7ff954e0fd34,69550655,0,0x0,8
tick,0x7ff954e0fd34,69565690,0,0x0,8
tick,0x7ff954e0fd34,69581590,0,0x0,8
tick,0x7ff954e0fd34,69597534,0,0x0,8
tick,0x7ff954e0fd34,69613517,0,0x0,8
tick,0x7ff954e0fd34,69629514,0,0x0,8
tick,0x7ff954e0fd34,69645417,0,0x0,8
tick,0x7ff954e0fd34,69661374,0,0x0,8
tick,0x7ff954e0fd34,69677453,0,0x0,8
tick,0x7ff954e0fd34,69693279,0,0x0,8
tick,0x7ff954e0fd34,69709248,0,0x0,8
tick,0x7ff954e0fd34,69725209,0,0x0,8
tick,0x7ff954e0fd34,69740160,0,0x0,8
tick,0x7ff954e0fd34,69755119,0,0x0,8
tick,0x7ff954e0fd34,69771063,0,0x0,8
tick,0x7ff954e0fd34,69787049,0,0x0,8
tick,0x7ff954e0fd34,69802987,0,0x0,8
tick,0x7ff954e0fd34,69818964,0,0x0,8
tick,0x7ff954e0fd34,69835042,0,0x0,8
tick,0x7ff954e0fd34,69850982,0,0x0,8
tick,0x7ff954e0fd34,69865969,0,0x0,8
tick,0x7ff954e0fd34,69880913,0,0x0,8
tick,0x7ff954e0fd34,69896877,0,0x0,8
tick,0x7ff954e0fd34,69912114,0,0x0,8
tick,0x7ff954e0fd34,69926900,0,0x0,8
tick,0x7ff954e0fd34,69942074,0,0x0,8
tick,0x7ff954e0fd34,69958261,0,0x0,8
tick,0x7ff954e0fd34,69973036,0,0x0,8
tick,0x7ff954e0fd34,69988953,0,0x0,8
tick,0x7ff954e0fd34,70003782,0,0x0,8
tick,0x7ff954e0fd34,70019551,0,0x0,8
tick,0x7ff954e0fd34,70035398,0,0x0,8
tick,0x7ff954e0fd34,70049663,0,0x0,8
tick,0x7ff954e0fd34,70065086,0,0x0,8
tick,0x7ff954e0fd34,70079967,0,0x0,8
tick,0x7ff954e0fd34,70096118,0,0x0,8
tick,0x7ff954e0fd34,70111010,0,0x0,8
tick,0x7ff954e0fd34,70125790,0,0x0,8
tick,0x7ff954e0fd34,70141717,0,0x0,8
tick,0x7ff954e0fd34,70158146,0,0x0,8
tick,0x7ff954e0fd34,70173650,0,0x0,8
tick,0x7ff954e0fd34,70189607,0,0x0,8
tick,0x7ff954e0fd34,70204614,0,0x0,8
tick,0x7ff954e0fd34,70219538,0,0x0,8
tick,0x7ff954e0fd34,70235685,0,0x0,8
tick,0x7ff954e0fd34,70251424,0,0x0,8
tick,0x7ff954e0fd34,70267394,0,0x0,8
tick,0x7ff954e0fd34,70283270,0,0x0,8
tick,0x7ff954e0fd34,70299227,0,0x0,8
tick,0x7ff954e0fd34,70315193,0,0x0,8
tick,0x7ff954e0fd34,70331140,0,0x0,8
tick,0x7ff954e0fd34,70346083,0,0x0,8
tick,0x7ff954e0fd34,70361029,0,0x0,8
tick,0x7ff954e0fd34,70376017,0,0x0,8
tick,0x7ff954e0fd34,70391946,0,0x0,8
tick,0x7ff954e0fd34,70406923,0,0x0,8
tick,0x7ff954e0fd34,70422896,0,0x0,8
tick,0x7ff954e0fd34,70438887,0,0x0,8
tick,0x7ff954e0fd34,70454829,0,0x0,8
tick,0x7ff954e0fd34,70470728,0,0x0,8
tick,0x7ff954e0fd34,70486705,0,0x0,8
tick,0x7ff954e0fd34,70502654,0,0x0,8
tick,0x7ff954e0fd34,70518688,0,0x0,8
tick,0x7ff954e0fd34,70533671,0,0x0,8
tick,0x7ff954e0fd34,70548643,0,0x0,8
tick,0x7ff954e0fd34,70564535,0,0x0,8
tick,0x7ff954e0fd34,70580439,0,0x0,8
tick,0x7ff954e0fd34,70595424,0,0x0,8
tick,0x7ff954e0fd34,70611375,0,0x0,8
tick,0x7ff954e0fd34,70626401,0,0x0,8
tick,0x7ff954e0fd34,70642307,0,0x0,8
tick,0x7ff954e0fd34,70657295,0,0x0,8
tick,0x7ff954e0fd34,70672232,0,0x0,8
tick,0x7ff954e0fd34,70687697,0,0x0,8
tick,0x7ff954e0fd34,70703659,0,0x0,8
tick,0x7ff954e0fd34,70719632,0,0x0,8
tick,0x7ff954e0fd34,70735616,0,0x0,8
tick,0x7ff954e0fd34,70751506,0,0x0,8
tick,0x7ff954e0fd34,70767536,0,0x0,8
tick,0x7ff954e0fd34,70783444,0,0x0,8
tick,0x7ff954e0fd34,70798392,0,0x0,8
tick,0x7ff954e0fd34,70813363,0,0x0,8
tick,0x7ff954e0fd34,70828353,0,0x0,8
tick,0x7ff954e0fd34,70844554,0,0x0,8
tick,0x7ff954e0fd34,70859293,0,0x0,8
tick,0x7ff954e0fd34,70875220,0,0x0,8
tick,0x7ff954e0fd34,70891189,0,0x0,8
tick,0x7ff954e0fd34,70907109,0,0x0,8
tick,0x7ff954e0fd34,70922078,0,0x0,8
tick,0x7ff954e0fd34,70937301,0,0x0,8
tick,0x7ff954e0fd34,70952997,0,0x0,8
tick,0x7ff954e0fd34,70968965,0,0x0,8
tick,0x7ff954e0fd34,70984893,0,0x0,8
tick,0x7ff954e0fd34,71000846,0,0x0,8
tick,0x7ff954e0fd34,71016842,0,0x0,8
tick,0x7ff954e0fd34,71032360,0,0x0,8
tick,0x7ff954e0fd34,71046734,0,0x0,8
tick,0x7ff954e0fd34,71061706,0,0x0,8
tick,0x7ff954e0fd34,71077665,0,0x0,8
tick,0x7ff954e0fd34,71092667,0,0x0,8
tick,0x7ff954e0fd34,71108566,0,0x0,8
tick,0x7ff954e0fd34,71124592,0,0x0,8
tick,0x7ff954e0fd34,71140517,0,0x0,8
tick,0x7ff954e0fd34,71156433,0,0x0,8
tick,0x7ff954e0fd34,71172394,0,0x0,8
tick,0x7ff954e0fd34,71187390,0,0x0,8
tick,0x7ff954e0fd34,71202373,0,0x0,8
tick,0x7ff954e0fd34,71218344,0,0x0,8
tick,0x7ff954e0fd34,71234265,0,0x0,8
tick,0x7ff954e0fd34,71250185,0,0x0,8
tick,0x7ff954e0fd34,71266182,0,0x0,8
tick,0x7ff954e0fd34,71282157,0,0x0,8
tick,0x7ff954e0fd34,71298091,0,0x0,8
tick,0x7ff954e0fd34,71314059,0,0x0,8
tick,0x7ff954e0fd34,71328975,0,0x0,8
tick,0x7ff954e0fd34,71344801,0,0x0,8
tick,0x7ff954e0fd34,71359341,0,0x0,8
tick,0x7ff954e0fd34,71374880,0,0x0,8
tick,0x7ff954e0fd34,71389931,0,0x0,8
tick,0x7ff954e0fd34,71405818,0,0x0,8
tick,0x7ff954e0fd34,71421711,0,0x0,8
tick,0x7ff954e0fd34,71436885,0,0x0,8
tick,0x7ff954e0fd34,71451708,0,0x0,8
tick,0x7ff954e0fd34,71466749,0,0x0,8
tick,0x7ff954e0fd34,71481564,0,0x0,8
tick,0x7ff954e0fd34,71496518,0,0x0,8
tick,0x7ff954e0fd34,71511554,0,0x0,8
tick,0x7ff954e0fd34,71526445,0,0x0,8
tick,0x7ff954e0fd34,71542409,0,0x0,8
tick,0x7ff954e0fd34,71557342,0,0x0,8
tick,0x7ff954e0fd34,71572392,0,0x0,8
tick,0x7ff954e0fd34,71587299,0,0x0,8
tick,0x7ff954e0fd34,71602243,0,0x0,8
tick,0x7ff954e0fd34,71617336,0,0x0,8
tick,0x7ff954e0fd34,71632471,0,0x0,8
tick,0x7ff954e0fd34,71647197,0,0x0,8
tick,0x7ff954e0fd34,71662142,0,0x0,8
tick,0x7ff954e0fd34,71677028,0,0x0,8
tick,0x7ff954e0fd34,71691996,0,0x0,8
tick,0x7ff954e0fd34,71707937,0,0x0,8
tick,0x7ff954e0fd34,71723910,0,0x0,8
tick,0x7ff954e0fd34,71738907,0,0x0,8
tick,0x7ff954e0fd34,71754862,0,0x0,8
tick,0x7ff954e0fd34,71769788,0,0x0,8
tick,0x7ff954e0fd34,71785761,0,0x0,8
tick,0x7ff954e0fd34,71800718,0,0x0,8
tick,0x7ff954e0fd34,71815642,0,0x0,8
tick,0x7ff954e0fd34,71830648,0,0x0,8
tick,0x7ff954e0fd34,71845655,0,0x0,8
tick,0x7ff954e0fd34,71860579,0,0x0,8
tick,0x7ff954e0fd34,71875555,0,0x0,8
tick,0x7ff954e0fd34,71890494,0,0x0,8
tick,0x7ff954e0fd34,71906449,0,0x0,8
tick,0x7ff954e0fd34,71922397,0,0x0,8
tick,0x7ff954e0fd34,71938351,0,0x0,8
tick,0x7ff954e0fd34,71954279,0,0x0,8
tick,0x7ff954e0fd34,71970355,0,0x0,8
tick,0x7ff954e0fd34,71985213,0,0x0,8
tick,0x7ff954e0fd34,72000664,0,0x0,8
tick,0x7ff954e0fd34,72016721,0,0x0,8
tick,0x7ff954e0fd34,72031633,0,0x0,8
tick,0x7ff954e0fd34,72046594,0,0x0,8
tick,0x7ff954e0fd34,72061935,0,0x0,8
tick,0x7ff954e0fd34,72076459,0,0x0,8
tick,0x7ff954e0fd34,72091972,0,0x0,8
tick,0x7ff954e0fd34,72107006,0,0x0,8
tick,0x7ff954e0fd34,72122886,0,0x0,8
tick,0x7ff954e0fd34,72138906,0,0x0,8
tick,0x7ff954e0fd34,72154825,0,0x0,8
tick,0x7ff954e0fd34,72170788,0,0x0,8
tick,0x7ff954e0fd34,72186733,0,0x0,8
tick,0x7ff954e0fd34,72202781,0,0x0,8
tick,0x7ff954e0fd34,72217685,0,0x0,8
tick,0x7ff954e0fd34,72232625,0,0x0,8
tick,0x7ff954e0fd34,72248613,0,0x0,8
tick,0x7ff954e0fd34,72264540,0,0x0,8
tick,0x7ff954e0fd34,72279781,0,0x0,8
tick,0x7ff954e0fd34,72294515,0,0x0,8
tick,0x7ff954e0fd34,72309435,0,0x0,8
tick,0x7ff954e0fd34,72324390,0,0x0,8
tick,0x7ff954e0fd34,72340345,0,0x0,8
tick,0x7ff954e0fd34,72356282,0,0x0,8
tick,0x7ff954e0fd34,72372289,0,0x0,8
tick,0x7ff954e0fd34,72388209,0,0x0,8
tick,0x7ff954e0fd34,72403756,0,0x0,8
tick,0x7ff954e0fd34,72419607,0,0x0,8
tick,0x7ff954e0fd34,72435539,0,0x0,8
tick,0x7ff954e0fd34,72451474,0,0x0,8
tick,0x7ff954e0fd34,72466453,0,0x0,8
tick,0x7ff954e0fd34,72481375,0,0x0,8
tick,0x7ff954e0fd34,72496332,0,0x0,8
tick,0x7ff954e0fd34,72512351,0,0x0,8
tick,0x7ff954e0fd34,72527291,0,0x0,8
tick,0x7ff954e0fd34,72543214,0,0x0,8
tick,0x7ff954e0fd34,72558189,0,0x0,8
tick,0x7ff954e0fd34,72573137,0,0x0,8
tick,0x7ff954e0fd34,72589112,0,0x0,8
tick,0x7ff954e0fd34,72605087,0,0x0,8
tick,0x7ff954e0fd34,72620097,0,0x0,8
tick,0x7ff954e0fd34,72636022,0,0x0,8
tick,0x7ff954e0fd34,72652045,0,0x0,8
tick,0x7ff954e0fd34,72665964,0,0x0,8
tick,0x7ff954e0fd34,72681144,0,0x0,8
tick,0x7ff954e0fd34,72695836,0,0x0,8
tick,0x7ff954e0fd34,72710838,0,0x0,8
tick,0x7ff954e0fd34,72726731,0,0x0,8
tick,0x7ff954e0fd34,72741695,0,0x0,8
tick,0x7ff954e0fd34,72757700,0,0x0,8
tick,0x7ff954e0fd34,72772642,0,0x0,8
tick,0x7ff954e0fd34,72787678,0,0x0,8
tick,0x7ff954e0fd34,72802512,0,0x0,8
tick,0x7ff954e0fd34,72817472,0,0x0,8
tick,0x7ff954e0fd34,72832405,0,0x0,8
tick,0x7ff954e0fd34,72847618,0,0x0,8
tick,0x7ff954e0fd34,72862368,0,0x0,8
tick,0x7ff954e0fd34,72878312,0,0x0,8
tick,0x7ff954e0fd34,72894251,0,0x0,8
tick,0x7ff954e0fd34,72909206,0,0x0,8
tick,0x7ff954e0fd34,72924191,0,0x0,8
tick,0x7ff954e0fd34,72939160,0,0x0,8
tick,0x7ff954e0fd34,72954281,0,0x0,8
tick,0x7ff954e0fd34,72969079,0,0x0,8
tick,0x7ff954e0fd34,72984038,0,0x0,8
tick,0x7ff954e0fd34,73000266,0,0x0,8
tick,0x7ff954e0fd34,73014272,0,0x0,8
tick,0x7ff954e0fd34,73030286,0,0x0,8
tick,0x7ff954e0fd34,73046215,0,0x0,8
tick,0x7ff954e0fd34,73062168,0,0x0,8
tick,0x7ff954e0fd34,73077090,0,0x0,8
tick,0x7ff954e0fd34,73092082,0,0x0,8
tick,0x7ff954e0fd34,73107047,0,0x0,8
tick,0x7ff954e0fd34,73122177,0,0x0,8
tick,0x7ff954e0fd34,73136949,0,0x0,8
tick,0x7ff954e0fd34,73152002,0,0x0,8
tick,0x7ff954e0fd34,73166876,0,0x0,8
tick,0x7ff954e0fd34,73182832,0,0x0,8
tick,0x7ff954e0fd34,73198814,0,0x0,8
tick,0x7ff954e0fd34,73213770,0,0x0,8
tick,0x7ff954e0fd34,73228703,0,0x0,8
tick,0x7ff954e0fd34,73243769,0,0x0,8
tick,0x7ff954e0fd34,73258630,0,0x0,8
tick,0x7ff954e0fd34,73273603,0,0x0,8
tick,0x7ff954e0fd34,73288563,0,0x0,8
tick,0x7ff954e0fd34,73303503,0,0x0,8
tick,0x7ff954e0fd34,73318458,0,0x0,8
tick,0x7ff954e0fd34,73334411,0,0x0,8
tick,0x7ff954e0fd34,73350316,0,0x0,8
tick,0x7ff954e0fd34,73366191,0,0x0,8
tick,0x7ff954e0fd34,73382174,0,0x0,8
tick,0x7ff954e0fd34,73398156,0,0x0,8
tick,0x7ff954e0fd34,73414111,0,0x0,8
tick,0x7ff954e0fd34,73429060,0,0x0,8
tick,0x7ff954e0fd34,73444984,0,0x0,8
tick,0x7ff954e0fd34,73459988,0,0x0,8
tick,0x7ff954e0fd34,73474919,0,0x0,8
tick,0x7ff954e0fd34,73489885,0,0x0,8
tick,0x7ff954e0fd34,73504845,0,0x0,8
tick,0x7ff954e0fd34,73520793,0,0x0,8
tick,0x7ff954e0fd34,73536725,0,0x0,8
tick,0x7ff954e0fd34,73552724,0,0x0,8
tick,0x7ff954e0fd34,73568205,0,0x0,8
tick,0x7ff954e0fd34,73584071,0,0x0,8
tick,0x7ff954e0fd34,73600110,0,0x0,8
tick,0x7ff954e0fd34,73616004,0,0x0,8
tick,0x7ff954e0fd34,73632018,0,0x0,8
tick,0x7ff954e0fd34,73648012,0,0x0,8
tick,0x7ff954e0fd34,73663835,0,0x0,8
tick,0x7ff954e0fd34,73678803,0,0x0,8
tick,0x7ff954e0fd34,73693786,0,0x0,8
tick,0x7ff954e0fd34,73708770,0,0x0,8
tick,0x7ff954e0fd34,73724709,0,0x0,8
tick,0x7ff954e0fd34,73740623,0,0x0,8
tick,0x7ff954e0fd34,73756661,0,0x0,8
tick,0x7ff954e0fd34,73772620,0,0x0,8
tick,0x7ff954e0fd34,73787535,0,0x0,8
tick,0x7ff954e0fd34,73802372,0,0x0,8
tick,0x7ff954e0fd34,73817354,0,0x0,8
tick,0x7ff954e0fd34,73833295,0,0x0,8
tick,0x7ff954e0fd34,73849365,0,0x0,8
tick,0x7ff954e0fd34,73865253,0,0x0,8
tick,0x7ff954e0fd34,73881171,0,0x0,8
tick,0x7ff954e0fd34,73896209,0,0x0,8
tick,0x7ff954e0fd34,73911942,0,0x0,8
tick,0x7ff954e0fd34,73926869,0,0x0,8
tick,0x7ff954e0fd34,73941817,0,0x0,8
tick,0x7ff954e0fd34,73956796,0,0x0,8
tick,0x7ff954e0fd34,73972759,0,0x0,8
tick,0x7ff954e0fd34,73988723,0,0x0,8
tick,0x7ff954e0fd34,74004045,0,0x0,8
tick,0x7ff954e0fd34,74020008,0,0x0,8
tick,0x7ff954e0fd34,74035971,0,0x0,8
tick,0x7ff954e0fd34,74051323,0,0x0,8
tick,0x7ff954e0fd34,74067239,0,0x0,8
tick,0x7ff954e0fd34,74083232,0,0x0,8
tick,0x7ff954e0fd34,74099183,0,0x0,8
tick,0x7ff954e0fd34,74114123,0,0x0,8
tick,0x7ff954e0fd34,74129127,0,0x0,8
tick,0x7ff954e0fd34,74145096,0,0x0,8
tick,0x7ff954e0fd34,74160008,0,0x0,8
tick,0x7ff954e0fd34,74175478,0,0x0,8
tick,0x7ff954e0fd34,74191450,0,0x0,8
tick,0x7ff954e0fd34,74207105,0,0x0,8
tick,0x7ff954e0fd34,74223010,0,0x0,8
tick,0x7ff954e0fd34,74238927,0,0x0,8
tick,0x7ff954e0fd34,74254900,0,0x0,8
tick,0x7ff954e0fd34,74270880,0,0x0,8
tick,0x7ff954e0fd34,74286809,0,0x0,8
tick,0x7ff954e0fd34,74302268,0,0x0,8
tick,0x7ff954e0fd34,74318265,0,0x0,8
tick,0x7ff954e0fd34,74334196,0,0x0,8
tick,0x7ff954e0fd34,74349210,0,0x0,8
tick,0x7ff954e0fd34,74364190,0,0x0,8
tick,0x7ff954e0fd34,74379086,0,0x0,8
tick,0x7ff954e0fd34,74395145,0,0x0,8
tick,0x7ff954e0fd34,74410047,0,0x0,8
tick,0x7ff954e0fd34,74426001,0,0x0,8
tick,0x7ff954e0fd34,74440956,0,0x0,8
tick,0x7ff954e0fd34,74455854,0,0x0,8
tick,0x7ff954e0fd34,74470907,0,0x0,8
tick,0x7ff954e0fd34,74485986,0,0x0,8
tick,0x7ff954e0fd34,74501983,0,0x0,8
tick,0x7ff954e0fd34,74516928,0,0x0,8
tick,0x7ff954e0fd34,74531861,0,0x0,8
tick,0x7ff954e0fd34,74547850,0,0x0,8
tick,0x7ff954e0fd34,74563756,0,0x0,8
tick,0x7ff954e0fd34,74579759,0,0x0,8
tick,0x7ff954e0fd34,74595690,0,0x0,8
tick,0x7ff954e0fd34,74610730,0,0x0,8
tick,0x7ff954e0fd34,74625622,0,0x0,8
tick,0x7ff954e0fd34,74640608,0,0x0,8
tick,0x7ff954e0fd34,74655669,0,0x0,8
tick,0x7ff954e0fd34,74671218,0,0x0,8
tick,0x7ff954e0fd34,74686553,0,0x0,8
tick,0x7ff954e0fd34,74702523,0,0x0,8
tick,0x7ff954e0fd34,74718359,0,0x0,8
tick,0x7ff954e0fd34,74733421,0,0x0,8
tick,0x7ff954e0fd34,74748297,0,0x0,8
tick,0x7ff954e0fd34,74763274,0,0x0,8
tick,0x7ff954e0fd34,74779342,0,0x0,8
tick,0x7ff954e0fd34,74794209,0,0x0,8
tick,0x7ff954e0fd34,74809176,0,0x0,8
tick,0x7ff954e0fd34,74825121,0,0x0,8
tick,0x7ff954e0fd34,74840068,0,0x0,8
tick,0x7ff954e0fd34,74855044,0,0x0,8
tick,0x7ff954e0fd34,74869983,0,0x0,8
tick,0x7ff954e0fd34,74884907,0,0x0,8
tick,0x7ff954e0fd34,74900887,0,0x0,8
tick,0x7ff954e0fd34,74915843,0,0x0,8
tick,0x7ff954e0fd34,74931321,0,0x0,8
tick,0x7ff954e0fd34,74945884,0,0x0,8
tick,0x7ff954e0fd34,74961812,0,0x0,8
tick,0x7ff954e0fd34,75001147,0,0x0,8
tick,0x7ff954e0fd34,75008998,0,0x0,8
tick,0x7ff954e0fd34,75024627,0,0x0,8
tick,0x7ff954e0fd34,75040542,0,0x0,8
tick,0x7ff954e0fd34,75055503,0,0x0,8
tick,0x7ff954e0fd34,75071478,0,0x0,8
tick,0x7ff954e0fd34,75086641,0,0x0,8
tick,0x7ff954e0fd34,75102522,0,0x0,8
tick,0x7ff954e0fd34,75117472,0,0x0,8
tick,0x7ff954e0fd34,75132403,0,0x0,8
tick,0x7ff954e0fd34,75147341,0,0x0,8
tick,0x7ff954e0fd34,75162234,0,0x0,8
tick,0x7ff954e0fd34,75178183,0,0x0,8
tick,0x7ff954e0fd34,75193174,0,0x0,8
tick,0x7ff954e0fd34,75208326,0,0x0,8
tick,0x7ff954e0fd34,75223451,0,0x0,8
tick,0x7ff954e0fd34,75239531,0,0x0,8
tick,0x7ff954e0fd34,75254361,0,0x0,8
tick,0x7ff954e0fd34,75269350,0,0x0,8
tick,0x7ff954e0fd34,75285259,0,0x0,8
tick,0x7ff954e0fd34,75300417,0,0x0,8
tick,0x7ff954e0fd34,75315243,0,0x0,8
tick,0x7ff954e0fd34,75330521,0,0x0,8
tick,0x7ff954e0fd34,75346094,0,0x0,8
tick,0x7ff954e0fd34,75361194,0,0x0,8
tick,0x7ff954e0fd34,75377135,0,0x0,8
tick,0x7ff954e0fd34,75392123,0,0x0,8
tick,0x7ff954e0fd34,75407116,0,0x0,8
tick,0x7ff954e0fd34,75422083,0,0x0,8
tick,0x7ff954e0fd34,75437070,0,0x0,8
tick,0x7ff954e0fd34,75452037,0,0x0,8
tick,0x7ff954e0fd34,75466886,0,0x0,8
tick,0x7ff954e0fd34,75481887,0,0x0,8
tick,0x7ff954e0fd34,75497792,0,0x0,8
tick,0x7ff954e0fd34,75513934,0,0x0,8
tick,0x7ff954e0fd34,75529694,0,0x0,8
tick,0x7ff954e0fd34,75544882,0,0x0,8
tick,0x7ff954e0fd34,75560986,0,0x0,8
tick,0x7ff954e0fd34,75575907,0,0x0,8
tick,0x7ff954e0fd34,75591690,0,0x0,8
tick,0x7ff954e0fd34,75606482,0,0x0,8
tick,0x7ff954e0fd34,75621702,0,0x0,8
tick,0x7ff954e0fd34,75636354,0,0x0,8
tick,0x7ff954e0fd34,75651365,0,0x0,8
tick,0x7ff954e0fd34,75667366,0,0x0,8
tick,0x7ff954e0fd34,75683460,0,0x0,8
tick,0x7ff954e0fd34,75699180,0,0x0,8
tick,0x7ff954e0fd34,75715164,0,0x0,8
tick,0x7ff954e0fd34,75731297,0,0x0,8
tick,0x7ff954e0fd34,75747273,0,0x0,8
tick,0x7ff954e0fd34,75762147,0,0x0,8
tick,0x7ff954e0fd34,75777128,0,0x0,8
tick,0x7ff954e0fd34,75792021,0,0x0,8
tick,0x7ff954e0fd34,75807235,0,0x0,8
tick,0x7ff954e0fd34,75823001,0,0x0,8
tick,0x7ff954e0fd34,75838997,0,0x0,8
tick,0x7ff954e0fd34,75853897,0,0x0,8
tick,0x7ff954e0fd34,75868871,0,0x0,8
tick,0x7ff954e0fd34,75885122,0,0x0,8
tick,0x7ff954e0fd34,75900073,0,0x0,8
tick,0x7ff954e0fd34,75915301,0,0x0,8
tick,0x7ff954e0fd34,75931350,0,0x0,8
tick,0x7ff954e0fd34,75947329,0,0x0,8
tick,0x7ff954e0fd34,75963162,0,0x0,8
tick,0x7ff954e0fd34,75978144,0,0x0,8
tick,0x7ff954e0fd34,75993095,0,0x0,8
tick,0x7ff954e0fd34,76008131,0,0x0,8
tick,0x7ff954e0fd34,76023116,0,0x0,8
tick,0x7ff954e0fd34,76039064,0,0x0,8
tick,0x7ff954e0fd34,76055041,0,0x0,8
tick,0x7ff954e0fd34,76069981,0,0x0,8
tick,0x7ff954e0fd34,76084977,0,0x0,8
tick,0x7ff954e0fd34,76099969,0,0x0,8
tick,0x7ff954e0fd34,76115096,0,0x0,8
tick,0x7ff954e0fd34,76130116,0,0x0,8
tick,0x7ff954e0fd34,76144990,0,0x0,8
tick,0x7ff954e0fd34,76159957,0,0x0,8
tick,0x7ff954e0fd34,76175103,0,0x0,8
tick,0x7ff954e0fd34,76189914,0,0x0,8
tick,0x7ff954e0fd34,76204843,0,0x0,8
tick,0x7ff954e0fd34,76219946,0,0x0,8
tick,0x7ff954e0fd34,76234885,0,0x0,8
tick,0x7ff954e0fd34,76250005,0,0x0,8
tick,0x7ff954e0fd34,76264858,0,0x0,8
tick,0x7ff954e0fd34,76279795,0,0x0,8
tick,0x7ff954e0fd34,76295108,0,0x0,8
tick,0x7ff954e0fd34,76311155,0,0x0,8
tick,0x7ff954e0fd34,76327104,0,0x0,8
tick,0x7ff954e0fd34,76343034,0,0x0,8
tick,0x7ff954e0fd34,76359012,0,0x0,8
tick,0x7ff954e0fd34,76375011,0,0x0,8
tick,0x7ff954e0fd34,76390908,0,0x0,8
tick,0x7ff954e0fd34,76406911,0,0x0,8
tick,0x7ff954e0fd34,76422823,0,0x0,8
tick,0x7ff954e0fd34,76437979,0,0x0,8
tick,0x7ff954e0fd34,76452752,0,0x0,8
tick,0x7ff954e0fd34,76467771,0,0x0,8
tick,0x7ff954e0fd34,76482693,0,0x0,8
tick,0x7ff954e0fd34,76498643,0,0x0,8
tick,0x7ff954e0fd34,76513602,0,0x0,8
tick,0x7ff954e0fd34,76528530,0,0x0,8
tick,0x7ff954e0fd34,76544538,0,0x0,8
tick,0x7ff954e0fd34,76559458,0,0x0,8
tick,0x7ff954e0fd34,76575447,0,0x0,8
tick,0x7ff954e0fd34,76590388,0,0x0,8
tick,0x7ff954e0fd34,76605326,0,0x0,8
tick,0x7ff954e0fd34,76620304,0,0x0,8
tick,0x7ff954e0fd34,76636250,0,0x0,8
tick,0x7ff954e0fd34,76652298,0,0x0,8
tick,0x7ff954e0fd34,76668203,0,0x0,8
tick,0x7ff954e0fd34,76684140,0,0x0,8
tick,0x7ff954e0fd34,76699341,0,0x0,8
tick,0x7ff954e0fd34,76714217,0,0x0,8
tick,0x7ff954e0fd34,76729208,0,0x0,8
tick,0x7ff954e0fd34,76745125,0,0x0,8
tick,0x7ff954e0fd34,76760077,0,0x0,8
tick,0x7ff954e0fd34,76775017,0,0x0,8
tick,0x7ff954e0fd34,76790019,0,0x0,8
tick,0x7ff954e0fd34,76805008,0,0x0,8
tick,0x7ff954e0fd34,76820932,0,0x0,8
tick,0x7ff954e0fd34,76836853,0,0x0,8
tick,0x7ff954e0fd34,76852894,0,0x0,8
tick,0x7ff954e0fd34,76867852,0,0x0,8
tick,0x7ff954e0fd34,76882931,0,0x0,8
tick,0x7ff954e0fd34,76897733,0,0x0,8
tick,0x7ff954e0fd34,76912711,0,0x0,8
tick,0x7ff954e0fd34,76927524,0,0x0,8
tick,0x7ff954e0fd34,76942467,0,0x0,8
tick,0x7ff954e0fd34,76957445,0,0x0,8
tick,0x7ff954e0fd34,76972361,0,0x0,8
tick,0x7ff954e0fd34,76987375,0,0x0,8
tick,0x7ff954e0fd34,77002277,0,0x0,8
tick,0x7ff954e0fd34,77018301,0,0x0,8
tick,0x7ff954e0fd34,77033204,0,0x0,8
tick,0x7ff954e0fd34,77049184,0,0x0,8
tick,0x7ff954e0fd34,77064141,0,0x0,8
tick,0x7ff954e0fd34,77079116,0,0x0,8
tick,0x7ff954e0fd34,77094030,0,0x0,8
tick,0x7ff954e0fd34,77109002,0,0x0,8
tick,0x7ff954e0fd34,77125035,0,0x0,8
tick,0x7ff954e0fd34,77139909,0,0x0,8
tick,0x7ff954e0fd34,77154918,0,0x0,8
tick,0x7ff954e0fd34,77169852,0,0x0,8
tick,0x7ff954e0fd34,77184785,0,0x0,8
tick,0x7ff954e0fd34,77200729,0,0x0,8
tick,0x7ff954e0fd34,77215705,0,0x0,8
tick,0x7ff954e0fd34,77230731,0,0x0,8
tick,0x7ff954e0fd34,77245663,0,0x0,8
tick,0x7ff954e0fd34,77260591,0,0x0,8
tick,0x7ff954e0fd34,77276548,0,0x0,8
tick,0x7ff954e0fd34,77291499,0,0x0,8
tick,0x7ff954e0fd34,77306510,0,0x0,8
tick,0x7ff954e0fd34,77321425,0,0x0,8
tick,0x7ff954e0fd34,77336421,0,0x0,8
tick,0x7ff954e0fd34,77351616,0,0x0,8
tick,0x7ff954e0fd34,77366854,0,0x0,8
tick,0x7ff954e0fd34,77381268,0,0x0,8
tick,0x7ff954e0fd34,77396252,0,0x0,8
tick,0x7ff954e0fd34,77411199,0,0x0,8
tick,0x7ff954e0fd34,77426657,0,0x0,8
tick,0x7ff954e0fd34,77443152,0,0x0,8
tick,0x7ff954e0fd34,77457586,0,0x0,8
tick,0x7ff954e0fd34,77472761,0,0x0,8
tick,0x7ff954e0fd34,77488710,0,0x0,8
tick,0x7ff954e0fd34,77503646,0,0x0,8
tick,0x7ff954e0fd34,77518620,0,0x0,8
tick,0x7ff954e0fd34,77533561,0,0x0,8
tick,0x7ff954e0fd34,77548582,0,0x0,8
tick,0x7ff954e0fd34,77563483,0,0x0,8
tick,0x7ff954e0fd34,77578439,0,0x0,8
tick,0x7ff954e0fd34,77593617,0,0x0,8
tick,0x7ff954e0fd34,77609403,0,0x0,8
tick,0x7ff954e0fd34,77624959,0,0x0,8
tick,0x7ff954e0fd34,77640808,0,0x0,8
tick,0x7ff954e0fd34,77656790,0,0x0,8
tick,0x7ff954e0fd34,77672801,0,0x0,8
tick,0x7ff954e0fd34,77688735,0,0x0,8
tick,0x7ff954e0fd34,77704684,0,0x0,8
tick,0x7ff954e0fd34,77720651,0,0x0,8
tick,0x7ff954e0fd34,77736570,0,0x0,8
tick,0x7ff954e0fd34,77751580,0,0x0,8
tick,0x7ff954e0fd34,77767504,0,0x0,8
tick,0x7ff954e0fd34,77782460,0,0x0,8
tick,0x7ff954e0fd34,77797425,0,0x0,8
tick,0x7ff954e0fd34,77813381,0,0x0,8
tick,0x7ff954e0fd34,77828363,0,0x0,8
tick,0x7ff954e0fd34,77843309,0,0x0,8
tick,0x7ff954e0fd34,77858366,0,0x0,8
tick,0x7ff954e0fd34,77874598,0,0x0,8
tick,0x7ff954e0fd34,77889193,0,0x0,8
tick,0x7ff954e0fd34,77905147,0,0x0,8
tick,0x7ff954e0fd34,77920184,0,0x0,8
tick,0x7ff954e0fd34,77936069,0,0x0,8
tick,0x7ff954e0fd34,77952064,0,0x0,8
tick,0x7ff954e0fd34,77968028,0,0x0,8
tick,0x7ff954e0fd34,77983928,0,0x0,8
tick,0x7ff954e0fd34,77999939,0,0x0,8
tick,0x7ff954e0fd34,78015072,0,0x0,8
tick,0x7ff954e0fd34,78030093,0,0x0,8
tick,0x7ff954e0fd34,78045037,0,0x0,8
tick,0x7ff954e0fd34,78060036,0,0x0,8
tick,0x7ff954e0fd34,78075967,0,0x0,8
tick,0x7ff954e0fd34,78091981,0,0x0,8
tick,0x7ff954e0fd34,78107910,0,0x0,8
tick,0x7ff954e0fd34,78123841,0,0x0,8
tick,0x7ff954e0fd34,78138850,0,0x0,8
tick,0x7ff954e0fd34,78153881,0,0x0,8
tick,0x7ff954e0fd34,78168772,0,0x0,8
tick,0x7ff954e0fd34,78183786,0,0x0,8
tick,0x7ff954e0fd34,78198780,0,0x0,8
tick,0x7ff954e0fd34,78214594,0,0x0,8
tick,0x7ff954e0fd34,78230105,0,0x0,8
tick,0x7ff954e0fd34,78245753,0,0x0,8
tick,0x7ff954e0fd34,78261735,0,0x0,8
tick,0x7ff954e0fd34,78276812,0,0x0,8
tick,0x7ff954e0fd34,78291668,0,0x0,8
tick,0x7ff954e0fd34,78307621,0,0x0,8
tick,0x7ff954e0fd34,78322612,0,0x0,8
tick,0x7ff954e0fd34,78338675,0,0x0,8
tick,0x7ff954e0fd34,78353535,0,0x0,8
tick,0x7ff954e0fd34,78368531,0,0x0,8
tick,0x7ff954e0fd34,78383433,0,0x0,8
tick,0x7ff954e0fd34,78399405,0,0x0,8
tick,0x7ff954e0fd34,78415375,0,0x0,8
tick,0x7ff954e0fd34,78430842,0,0x0,8
tick,0x7ff954e0fd34,78446825,0,0x0,8
tick,0x7ff954e0fd34,78461724,0,0x0,8
tick,0x7ff954e0fd34,78476768,0,0x0,8
tick,0x7ff954e0fd34,78491685,0,0x0,8
tick,0x7ff954e0fd34,78507671,0,0x0,8
tick,0x7ff954e0fd34,78522616,0,0x0,8
tick,0x7ff954e0fd34,78538546,0,0x0,8
tick,0x7ff954e0fd34,78553490,0,0x0,8
tick,0x7ff954e0fd34,78568472,0,0x0,8
tick,0x7ff954e0fd34,78584448,0,0x0,8
tick,0x7ff954e0fd34,78599448,0,0x0,8
tick,0x7ff954e0fd34,78614352,0,0x0,8
tick,0x7ff954e0fd34,78629326,0,0x0,8
tick,0x7ff954e0fd34,78645265,0,0x0,8
tick,0x7ff954e0fd34,78660282,0,0x0,8
tick,0x7ff954e0fd34,78675346,0,0x0,8
tick,0x7ff954e0fd34,78690259,0,0x0,8
tick,0x7ff954e0fd34,78705139,0,0x0,8
tick,0x7ff954e0fd34,78721115,0,0x0,8
tick,0x7ff954e0fd34,78737078,0,0x0,8
tick,0x7ff954e0fd34,78751978,0,0x0,8
tick,0x7ff954e0fd34,78767940,0,0x0,8
tick,0x7ff954e0fd34,78782947,0,0x0,8
tick,0x7ff954e0fd34,78797911,0,0x0,8
tick,0x7ff954e0fd34,78813033,0,0x0,8
tick,0x7ff954e0fd34,78827812,0,0x0,8
tick,0x7ff954e0fd34,78842958,0,0x0,8
tick,0x7ff954e0fd34,78857931,0,0x0,8
tick,0x7ff954e0fd34,78873974,0,0x0,8
tick,0x7ff954e0fd34,78890915,0,0x0,8
tick,0x7ff954e0fd34,78905789,0,0x0,8
tick,0x7ff954e0fd34,78921842,0,0x0,8
tick,0x7ff954e0fd34,78937742,0,0x0,8
tick,0x7ff954e0fd34,78952688,0,0x0,8
tick,0x7ff954e0fd34,78967709,0,0x0,8
tick,0x7ff954e0fd34,78982598,0,0x0,8
tick,0x7ff954e0fd34,78997619,0,0x0,8
tick,0x7ff954e0fd34,79013490,0,0x0,8
tick,0x7ff954e0fd34,79028469,0,0x0,8
tick,0x7ff954e0fd34,79044447,0,0x0,8
tick,0x7ff954e0fd34,79060699,0,0x0,8
tick,0x7ff954e0fd34,79075329,0,0x0,8
tick,0x7ff954e0fd34,79090312,0,0x0,8
tick,0x7ff954e0fd34,79106315,0,0x0,8
tick,0x7ff954e0fd34,79121301,0,0x0,8
tick,0x7ff954e0fd34,79136180,0,0x0,8
tick,0x7ff954e0fd34,79151167,0,0x0,8
tick,0x7ff954e0fd34,79166125,0,0x0,8
tick,0x7ff954e0fd34,79181061,0,0x0,8
tick,0x7ff954e0fd34,79196066,0,0x0,8
tick,0x7ff954e0fd34,79212019,0,0x0,8
tick,0x7ff954e0fd34,79228008,0,0x0,8
tick,0x7ff954e0fd34,79243763,0,0x0,8
tick,0x7ff954e0fd34,79259810,0,0x0,8
tick,0x7ff954e0fd34,79275707,0,0x0,8
tick,0x7ff954e0fd34,79291596,0,0x0,8
tick,0x7ff954e0fd34,79307602,0,0x0,8
tick,0x7ff954e0fd34,79323523,0,0x0,8
tick,0x7ff954e0fd34,79339609,0,0x0,8
tick,0x7ff954e0fd34,79355484,0,0x0,8
tick,0x7ff954e0fd34,79371396,0,0x0,8
tick,0x7ff954e0fd34,79387344,0,0x0,8
tick,0x7ff954e0fd34,79403331,0,0x0,8
tick,0x7ff954e0fd34,79419318,0,0x0,8
tick,0x7ff954e0fd34,79435291,0,0x0,8
tick,0x7ff954e0fd34,79450185,0,0x0,8
tick,0x7ff954e0fd34,79465163,0,0x0,8
tick,0x7ff954e0fd34,79481096,0,0x0,8
tick,0x7ff954e0fd34,79497057,0,0x0,8
tick,0x7ff954e0fd34,79513083,0,0x0,8
tick,0x7ff954e0fd34,79528566,0,0x0,8
tick,0x7ff954e0fd34,79544504,0,0x0,8
tick,0x7ff954e0fd34,79560421,0,0x0,8
tick,0x7ff954e0fd34,79576408,0,0x0,8
tick,0x7ff954e0fd34,79592321,0,0x0,8
tick,0x7ff954e0fd34,79607281,0,0x0,8
tick,0x7ff954e0fd34,79623377,0,0x0,8
tick,0x7ff954e0fd34,79637935,0,0x0,8
tick,0x7ff954e0fd34,79653877,0,0x0,8
tick,0x7ff954e0fd34,79669839,0,0x0,8
tick,0x7ff954e0fd34,79685850,0,0x0,8
tick,0x7ff954e0fd34,79700774,0,0x0,8
tick,0x7ff954e0fd34,79715782,0,0x0,8
tick,0x7ff954e0fd34,79731654,0,0x0,8
tick,0x7ff954e0fd34,79747641,0,0x0,8
tick,0x7ff954e0fd34,79763620,0,0x0,8
tick,0x7ff954e0fd34,79779588,0,0x0,8
tick,0x7ff954e0fd34,79795514,0,0x0,8
tick,0x7ff954e0fd34,79810539,0,0x0,8
tick,0x7ff954e0fd34,79825531,0,0x0,8
tick,0x7ff954e0fd34,79840951,0,0x0,8
tick,0x7ff954e0fd34,79856361,0,0x0,8
tick,0x7ff954e0fd34,79871316,0,0x0,8
tick,0x7ff954e0fd34,79887280,0,0x0,8
tick,0x7ff954e0fd34,79902299,0,0x0,8
tick,0x7ff954e0fd34,79917192,0,0x0,8
tick,0x7ff954e0fd34,79932747,0,0x0,8
tick,0x7ff954e0fd34,79948656,0,0x0,8
tick,0x7ff954e0fd34,79964651,0,0x0,8
tick,0x7ff954e0fd34,79980806,0,0x0,8
tick,0x7ff954e0fd34,79995591,0,0x0,8
tick,0x7ff954e0fd34,80011585,0,0x0,8
tick,0x7ff954e0fd34,80026513,0,0x0,8
tick,0x7ff954e0fd34,80042481,0,0x0,8
tick,0x7ff954e0fd34,80057441,0,0x0,8
tick,0x7ff954e0fd34,80072370,0,0x0,8
tick,0x7ff954e0fd34,80088323,0,0x0,8
tick,0x7ff954e0fd34,80103297,0,0x0,8
tick,0x7ff954e0fd34,80118277,0,0x0,8
tick,0x7ff954e0fd34,80133737,0,0x0,8
tick,0x7ff954e0fd34,80149693,0,0x0,8
tick,0x7ff954e0fd34,80164666,0,0x0,8
tick,0x7ff954e0fd34,80179722,0,0x0,8
tick,0x7ff954e0fd34,80195666,0,0x0,8
tick,0x7ff954e0fd34,80211632,0,0x0,8
tick,0x7ff954e0fd34,80226606,0,0x0,8
tick,0x7ff954e0fd34,80241518,0,0x0,8
tick,0x7ff954e0fd34,80257662,0,0x0,8
tick,0x7ff954e0fd34,80272642,0,0x0,8
tick,0x7ff954e0fd34,80315571,0,0x0,8
tick,0x7ff954e0fd34,80320526,0,0x0,8
tick,0x7ff954e0fd34,80333303,0,0x0,8
tick,0x7ff954e0fd34,80349305,0,0x0,8
tick,0x7ff954e0fd34,80364552,0,0x0,8
tick,0x7ff954e0fd34,80379931,0,0x0,8
tick,0x7ff954e0fd34,80395304,0,0x0,8
tick,0x7ff954e0fd34,80411076,0,0x0,8
tick,0x7ff954e0fd34,80426084,0,0x0,8
tick,0x7ff954e0fd34,80442372,0,0x0,8
tick,0x7ff954e0fd34,80457067,0,0x0,8
tick,0x7ff954e0fd34,80472927,0,0x0,8
tick,0x7ff954e0fd34,80489307,0,0x0,8
tick,0x7ff954e0fd34,80505030,0,0x0,8
tick,0x7ff954e0fd34,80520951,0,0x0,8
tick,0x7ff954e0fd34,80536909,0,0x0,8
tick,0x7ff954e0fd34,80551730,0,0x0,8
tick,0x7ff954e0fd34,80566744,0,0x0,8
tick,0x7ff954e0fd34,80581722,0,0x0,8
tick,0x7ff954e0fd34,80596624,0,0x0,8
tick,0x7ff954e0fd34,80611658,0,0x0,8
tick,0x7ff954e0fd34,80628188,0,0x0,8
tick,0x7ff954e0fd34,80643124,0,0x0,8
tick,0x7ff954e0fd34,80658644,0,0x0,8
tick,0x7ff954e0fd34,80672505,0,0x0,8
tick,0x7ff954e0fd34,80688554,0,0x0,8
tick,0x7ff954e0fd34,80703377,0,0x0,8
tick,0x7ff954e0fd34,80719317,0,0x0,8
tick,0x7ff954e0fd34,80734324,0,0x0,8
tick,0x7ff954e0fd34,80749302,0,0x0,8
tick,0x7ff954e0fd34,80765263,0,0x0,8
tick,0x7ff954e0fd34,80780662,0,0x0,8
tick,0x7ff954e0fd34,80795170,0,0x0,8
tick,0x7ff954e0fd34,80810108,0,0x0,8
tick,0x7ff954e0fd34,80826038,0,0x0,8
tick,0x7ff954e0fd34,80841049,0,0x0,8
tick,0x7ff954e0fd34,80856214,0,0x0,8
tick,0x7ff954e0fd34,80871247,0,0x0,8
tick,0x7ff954e0fd34,80885949,0,0x0,8
tick,0x7ff954e0fd34,80902144,0,0x0,8
tick,0x7ff954e0fd34,80916874,0,0x0,8
tick,0x7ff954e0fd34,80931801,0,0x0,8
tick,0x7ff954e0fd34,80947710,0,0x0,8
tick,0x7ff954e0fd34,80963661,0,0x0,8
tick,0x7ff954e0fd34,80979874,0,0x0,8
tick,0x7ff954e0fd34,80995636,0,0x0,8
tick,0x7ff954e0fd34,81010557,0,0x0,8
tick,0x7ff954e0fd34,81026630,0,0x0,8
tick,0x7ff954e0fd34,81042022,0,0x0,8
tick,0x7ff954e0fd34,81058008,0,0x0,8
tick,0x7ff954e0fd34,81073963,0,0x0,8
tick,0x7ff954e0fd34,81089973,0,0x0,8
tick,0x7ff954e0fd34,81105828,0,0x0,8
tick,0x7ff954e0fd34,81120871,0,0x0,8
tick,0x7ff954e0fd34,81136712,0,0x0,8
tick,0x7ff954e0fd34,81151676,0,0x0,8
tick,0x7ff954e0fd34,81167729,0,0x0,8
tick,0x7ff954e0fd34,81182590,0,0x0,8
tick,0x7ff954e0fd34,81197587,0,0x0,8
tick,0x7ff954e0fd34,81212533,0,0x0,8
tick,0x7ff954e0fd34,81228455,0,0x0,8
tick,0x7ff954e0fd34,81244005,0,0x0,8
tick,0x7ff954e0fd34,81260031,0,0x0,8
tick,0x7ff954e0fd34,81275884,0,0x0,8
tick,0x7ff954e0fd34,81290885,0,0x0,8
tick,0x7ff954e0fd34,81306809,0,0x0,8
tick,0x7ff954e0fd34,81321790,0,0x0,8
tick,0x7ff954e0fd34,81337788,0,0x0,8
tick,0x7ff954e0fd34,81353681,0,0x0,8
tick,0x7ff954e0fd34,81369707,0,0x0,8
tick,0x7ff954e0fd34,81385629,0,0x0,8
tick,0x7ff954e0fd34,81401579,0,0x0,8
tick,0x7ff954e0fd34,81416522,0,0x0,8
tick,0x7ff954e0fd34,81431523,0,0x0,8
tick,0x7ff954e0fd34,81446449,0,0x0,8
tick,0x7ff954e0fd34,81462392,0,0x0,8
tick,0x7ff954e0fd34,81477366,0,0x0,8
tick,0x7ff954e0fd34,81493330,0,0x0,8
tick,0x7ff954e0fd34,81509268,0,0x0,8
tick,0x7ff954e0fd34,81525221,0,0x0,8
tick,0x7ff954e0fd34,81541227,0,0x0,8
tick,0x7ff954e0fd34,81557175,0,0x0,8
tick,0x7ff954e0fd34,81572300,0,0x0,8
tick,0x7ff954e0fd34,81587137,0,0x0,8
tick,0x7ff954e0fd34,81603040,0,0x0,8
tick,0x7ff954e0fd34,81618040,0,0x0,8
tick,0x7ff954e0fd34,81633012,0,0x0,8
tick,0x7ff954e0fd34,81648073,0,0x0,8
tick,0x7ff954e0fd34,81662907,0,0x0,8
tick,0x7ff954e0fd34,81678881,0,0x0,8
tick,0x7ff954e0fd34,81695046,0,0x0,8
tick,0x7ff954e0fd34,81710775,0,0x0,8
tick,0x7ff954e0fd34,81725733,0,0x0,8
tick,0x7ff954e0fd34,81741668,0,0x0,8
tick,0x7ff954e0fd34,81756656,0,0x0,8
tick,0x7ff954e0fd34,81773169,0,0x0,8
tick,0x7ff954e0fd34,81788587,0,0x0,8
tick,0x7ff954e0fd34,81803529,0,0x0,8
tick,0x7ff954e0fd34,81819482,0,0x0,8
tick,0x7ff954e0fd34,81834430,0,0x0,8
tick,0x7ff954e0fd34,81850401,0,0x0,8
tick,0x7ff954e0fd34,81866363,0,0x0,8
tick,0x7ff954e0fd34,81882334,0,0x0,8
tick,0x7ff954e0fd34,81898298,0,0x0,8
tick,0x7ff954e0fd34,81914243,0,0x0,8
tick,0x7ff954e0fd34,81929309,0,0x0,8
tick,0x7ff954e0fd34,81944127,0,0x0,8
tick,0x7ff954e0fd34,81959660,0,0x0,8
tick,0x7ff954e0fd34,81975554,0,0x0,8
tick,0x7ff954e0fd34,81991513,0,0x0,8
tick,0x7ff954e0fd34,82007467,0,0x0,8
tick,0x7ff954e0fd34,82023543,0,0x0,8
tick,0x7ff954e0fd34,82039394,0,0x0,8
tick,0x7ff954e0fd34,82055317,0,0x0,8
tick,0x7ff954e0fd34,82070504,0,0x0,8
tick,0x7ff954e0fd34,82085244,0,0x0,8
tick,0x7ff954e0fd34,82100247,0,0x0,8
tick,0x7ff954e0fd34,82115270,0,0x0,8
tick,0x7ff954e0fd34,82131120,0,0x0,8
tick,0x7ff954e0fd34,82146079,0,0x0,8
tick,0x7ff954e0fd34,82162044,0,0x0,8
tick,0x7ff954e0fd34,82177052,0,0x0,8
tick,0x7ff954e0fd34,82193005,0,0x0,8
tick,0x7ff954e0fd34,82208957,0,0x0,8
tick,0x7ff954e0fd34,82225025,0,0x0,8
tick,0x7ff954e0fd34,82239921,0,0x0,8
tick,0x7ff954e0fd34,82254788,0,0x0,8
tick,0x7ff954e0fd34,82269791,0,0x0,8
tick,0x7ff954e0fd34,82285717,0,0x0,8
tick,0x7ff954e0fd34,82300691,0,0x0,8
tick,0x7ff954e0fd34,82315656,0,0x0,8
tick,0x7ff954e0fd34,82331612,0,0x0,8
tick,0x7ff954e0fd34,82346602,0,0x0,8
tick,0x7ff954e0fd34,82362547,0,0x0,8
tick,0x7ff954e0fd34,82377466,0,0x0,8
tick,0x7ff954e0fd34,82392442,0,0x0,8
tick,0x7ff954e0fd34,82407392,0,0x0,8
tick,0x7ff954e0fd34,82422368,0,0x0,8
tick,0x7ff954e0fd34,82437323,0,0x0,8
tick,0x7ff954e0fd34,82452269,0,0x0,8
tick,0x7ff954e0fd34,82467253,0,0x0,8
tick,0x7ff954e0fd34,82482170,0,0x0,8
tick,0x7ff954e0fd34,82497154,0,0x0,8
tick,0x7ff954e0fd34,82513099,0,0x0,8
tick,0x7ff954e0fd34,82528051,0,0x0,8
tick,0x7ff954e0fd34,82544078,0,0x0,8
tick,0x7ff954e0fd34,82559968,0,0x0,8
tick,0x7ff954e0fd34,82575925,0,0x0,8
tick,0x7ff954e0fd34,82592663,0,0x0,8
tick,0x7ff954e0fd34,82607864,0,0x0,8
tick,0x7ff954e0fd34,82622792,0,0x0,8
tick,0x7ff954e0fd34,82637756,0,0x0,8
tick,0x7ff954e0fd34,82652738,0,0x0,8
tick,0x7ff954e0fd34,82667709,0,0x0,8
tick,0x7ff954e0fd34,82682677,0,0x0,8
tick,0x7ff954e0fd34,82698620,0,0x0,8
tick,0x7ff954e0fd34,82713512,0,0x0,8
tick,0x7ff954e0fd34,82729463,0,0x0,8
tick,0x7ff954e0fd34,82745411,0,0x0,8
tick,0x7ff954e0fd34,82760820,0,0x0,8
tick,0x7ff954e0fd34,82776721,0,0x0,8
tick,0x7ff954e0fd34,82792677,0,0x0,8
tick,0x7ff954e0fd34,82808642,0,0x0,8
tick,0x7ff954e0fd34,82824640,0,0x0,8
tick,0x7ff954e0fd34,82840671,0,0x0,8
tick,0x7ff954e0fd34,82856501,0,0x0,8
tick,0x7ff954e0fd34,82872635,0,0x0,8
tick,0x7ff954e0fd34,82887506,0,0x0,8
tick,0x7ff954e0fd34,82902408,0,0x0,8
tick,0x7ff954e0fd34,82917368,0,0x0,8
tick,0x7ff954e0fd34,82932409,0,0x0,8
tick,0x7ff954e0fd34,82948261,0,0x0,8
tick,0x7ff954e0fd34,82964220,0,0x0,8
tick,0x7ff954e0fd34,82980286,0,0x0,8
tick,0x7ff954e0fd34,82995162,0,0x0,8
tick,0x7ff954e0fd34,83011092,0,0x0,8
tick,0x7ff954e0fd34,83026047,0,0x0,8
tick,0x7ff954e0fd34,83041097,0,0x0,8
tick,0x7ff954e0fd34,83056064,0,0x0,8
tick,0x7ff954e0fd34,83071019,0,0x0,8
tick,0x7ff954e0fd34,83086000,0,0x0,8
tick,0x7ff954e0fd34,83100922,0,0x0,8
tick,0x7ff954e0fd34,83115954,0,0x0,8
tick,0x7ff954e0fd34,83130886,0,0x0,8
tick,0x7ff954e0fd34,83145826,0,0x0,8
tick,0x7ff954e0fd34,83161456,0,0x0,8
tick,0x7ff954e0fd34,83177348,0,0x0,8
tick,0x7ff954e0fd34,83193286,0,0x0,8
tick,0x7ff954e0fd34,83209224,0,0x0,8
tick,0x7ff954e0fd34,83225208,0,0x0,8
tick,0x7ff954e0fd34,83241145,0,0x0,8
tick,0x7ff954e0fd34,83257148,0,0x0,8
tick,0x7ff954e0fd34,83273054,0,0x0,8
tick,0x7ff954e0fd34,83289055,0,0x0,8
tick,0x7ff954e0fd34,83304990,0,0x0,8
tick,0x7ff954e0fd34,83320973,0,0x0,8
tick,0x7ff954e0fd34,83336917,0,0x0,8
tick,0x7ff954e0fd34,83352908,0,0x0,8
tick,0x7ff954e0fd34,83367836,0,0x0,8
tick,0x7ff954e0fd34,83382787,0,0x0,8
tick,0x7ff954e0fd34,83397757,0,0x0,8
tick,0x7ff954e0fd34,83412717,0,0x0,8
tick,0x7ff954e0fd34,83428666,0,0x0,8
tick,0x7ff954e0fd34,83443640,0,0x0,8
tick,0x7ff954e0fd34,83459573,0,0x0,8
tick,0x7ff954e0fd34,83474555,0,0x0,8
tick,0x7ff954e0fd34,83489505,0,0x0,8
tick,0x7ff954e0fd34,83504462,0,0x0,8
tick,0x7ff954e0fd34,83519468,0,0x0,8
tick,0x7ff954e0fd34,83535205,0,0x0,8
tick,0x7ff954e0fd34,83551154,0,0x0,8
tick,0x7ff954e0fd34,83567112,0,0x0,8
tick,0x7ff954e0fd34,83583092,0,0x0,8
tick,0x7ff954e0fd34,83599083,0,0x0,8
tick,0x7ff954e0fd34,83615012,0,0x0,8
tick,0x7ff954e0fd34,83630987,0,0x0,8
tick,0x7ff954e0fd34,83646918,0,0x0,8
tick,0x7ff954e0fd34,83662422,0,0x0,8
tick,0x7ff954e0fd34,83678336,0,0x0,8
tick,0x7ff954e0fd34,83694317,0,0x0,8
tick,0x7ff954e0fd34,83710228,0,0x0,8
tick,0x7ff954e0fd34,83726172,0,0x0,8
tick,0x7ff954e0fd34,83742276,0,0x0,8
tick,0x7ff954e0fd34,83758074,0,0x0,8
tick,0x7ff954e0fd34,83774076,0,0x0,8
tick,0x7ff954e0fd34,83790030,0,0x0,8
tick,0x7ff954e0fd34,83804966,0,0x0,8
tick,0x7ff954e0fd34,83820983,0,0x0,8
tick,0x7ff954e0fd34,83835939,0,0x0,8
tick,0x7ff954e0fd34,83850897,0,0x0,8
tick,0x7ff954e0fd34,83865852,0,0x0,8
tick,0x7ff954e0fd34,83880813,0,0x0,8
tick,0x7ff954e0fd34,83895737,0,0x0,8
tick,0x7ff954e0fd34,83910776,0,0x0,8
tick,0x7ff954e0fd34,83925672,0,0x0,8
tick,0x7ff954e0fd34,83941757,0,0x0,8
tick,0x7ff954e0fd34,83957659,0,0x0,8
tick,0x7ff954e0fd34,83973857,0,0x0,8
tick,0x7ff954e0fd34,83988521,0,0x0,8
tick,0x7ff954e0fd34,84003483,0,0x0,8
tick,0x7ff954e0fd34,84018416,0,0x0,8
tick,0x7ff954e0fd34,84033444,0,0x0,8
tick,0x7ff954e0fd34,84048354,0,0x0,8
tick,0x7ff954e0fd34,84063315,0,0x0,8
tick,0x7ff954e0fd34,84079356,0,0x0,8
tick,0x7ff954e0fd34,84094249,0,0x0,8
tick,0x7ff954e0fd34,84110351,0,0x0,8
tick,0x7ff954e0fd34,84126148,0,0x0,8
tick,0x7ff954e0fd34,84142185,0,0x0,8
tick,0x7ff954e0fd34,84158050,0,0x0,8
tick,0x7ff954e0fd34,84173029,0,0x0,8
tick,0x7ff954e0fd34,84187959,0,0x0,8
tick,0x7ff954e0fd34,84202963,0,0x0,8
tick,0x7ff954e0fd34,84217969,0,0x0,8
tick,0x7ff954e0fd34,84232847,0,0x0,8
tick,0x7ff954e0fd34,84247966,0,0x0,8
tick,0x7ff954e0fd34,84262874,0,0x0,8
tick,0x7ff954e0fd34,84277730,0,0x0,8
tick,0x7ff954e0fd34,84292803,0,0x0,8
tick,0x7ff954e0fd34,84307776,0,0x0,8
tick,0x7ff954e0fd34,84322923,0,0x0,8
tick,0x7ff954e0fd34,84338916,0,0x0,8
tick,0x7ff954e0fd34,84354874,0,0x0,8
tick,0x7ff954e0fd34,84370752,0,0x0,8
tick,0x7ff954e0fd34,84386704,0,0x0,8
tick,0x7ff954e0fd34,84402717,0,0x0,8
tick,0x7ff954e0fd34,84418631,0,0x0,8
tick,0x7ff954e0fd34,84434656,0,0x0,8
tick,0x7ff954e0fd34,84450554,0,0x0,8
tick,0x7ff954e0fd34,84465546,0,0x0,8
tick,0x7ff954e0fd34,84480817,0,0x0,8
tick,0x7ff954e0fd34,84495445,0,0x0,8
tick,0x7ff954e0fd34,84510399,0,0x0,8
tick,0x7ff954e0fd34,84526368,0,0x0,8
tick,0x7ff954e0fd34,84542306,0,0x0,8
tick,0x7ff954e0fd34,84557938,0,0x0,8
tick,0x7ff954e0fd34,84574037,0,0x0,8
tick,0x7ff954e0fd34,84589846,0,0x0,8
tick,0x7ff954e0fd34,84605807,0,0x0,8
tick,0x7ff954e0fd34,84621748,0,0x0,8
tick,0x7ff954e0fd34,84637717,0,0x0,8
tick,0x7ff954e0fd34,84652687,0,0x0,8
tick,0x7ff954e0fd34,84667634,0,0x0,8
tick,0x7ff954e0fd34,84682562,0,0x0,8
tick,0x7ff954e0fd34,84697320,0,0x0,8
tick,0x7ff954e0fd34,84713562,0,0x0,8
tick,0x7ff954e0fd34,84728365,0,0x0,8
tick,0x7ff954e0fd34,84744179,0,0x0,8
tick,0x7ff954e0fd34,84759173,0,0x0,8
tick,0x7ff954e0fd34,84775155,0,0x0,8
tick,0x7ff954e0fd34,84791154,0,0x0,8
tick,0x7ff954e0fd34,84807036,0,0x0,8
tick,0x7ff954e0fd34,84823103,0,0x0,8
tick,0x7ff954e0fd34,84838969,0,0x0,8
tick,0x7ff954e0fd34,84853930,0,0x0,8
tick,0x7ff954e0fd34,84869093,0,0x0,8
tick,0x7ff954e0fd34,84884057,0,0x0,8
tick,0x7ff954e0fd34,84898983,0,0x0,8
tick,0x7ff954e0fd34,84913985,0,0x0,8
tick,0x7ff954e0fd34,84928966,0,0x0,8
tick,0x7ff954e0fd34,84944856,0,0x0,8
tick,0x7ff954e0fd34,84959839,0,0x0,8
tick,0x7ff954e0fd34,84974788,0,0x0,8
tick,0x7ff954e0fd34,84989733,0,0x0,8
tick,0x7ff954e0fd34,85004730,0,0x0,8
tick,0x7ff954e0fd34,85020664,0,0x0,8
tick,0x7ff954e0fd34,85035734,0,0x0,8
tick,0x7ff954e0fd34,85050629,0,0x0,8
tick,0x7ff954e0fd34,85066529,0,0x0,8
tick,0x7ff954e0fd34,85082155,0,0x0,8
tick,0x7ff954e0fd34,85098118,0,0x0,8
tick,0x7ff954e0fd34,85114060,0,0x0,8
tick,0x7ff954e0fd34,85129014,0,0x0,8
tick,0x7ff954e0fd34,85143987,0,0x0,8
tick,0x7ff954e0fd34,85159977,0,0x0,8
tick,0x7ff954e0fd34,85175864,0,0x0,8
tick,0x7ff954e0fd34,85191852,0,0x0,8
tick,0x7ff954e0fd34,85207822,0,0x0,8
tick,0x7ff954e0fd34,85223803,0,0x0,8
tick,0x7ff954e0fd34,85238714,0,0x0,8
tick,0x7ff954e0fd34,85253700,0,0x0,8
tick,0x7ff954e0fd34,85268640,0,0x0,8
tick,0x7ff954e0fd34,85284579,0,0x0,8
tick,0x7ff954e0fd34,85300559,0,0x0,8
tick,0x7ff954e0fd34,85316500,0,0x0,8
tick,0x7ff954e0fd34,85331478,0,0x0,8
tick,0x7ff954e0fd34,85346452,0,0x0,8
tick,0x7ff954e0fd34,85361452,0,0x0,8
tick,0x7ff954e0fd34,85376349,0,0x0,8
tick,0x7ff954e0fd34,85392293,0,0x0,8
tick,0x7ff954e0fd34,85407259,0,0x0,8
tick,0x7ff954e0fd34,85423233,0,0x0,8
tick,0x7ff954e0fd34,85438170,0,0x0,8
tick,0x7ff954e0fd34,85454137,0,0x0,8
tick,0x7ff954e0fd34,85469108,0,0x0,8
tick,0x7ff954e0fd34,85484039,0,0x0,8
tick,0x7ff954e0fd34,85500010,0,0x0,8
tick,0x7ff954e0fd34,85514980,0,0x0,8
tick,0x7ff954e0fd34,85529969,0,0x0,8
tick,0x7ff954e0fd34,85544919,0,0x0,8
tick,0x7ff954e0fd34,85561044,0,0x0,8
tick,0x7ff954e0fd34,85575797,0,0x0,8
tick,0x7ff954e0fd34,85591815,0,0x0,8
tick,0x7ff954e0fd34,85607752,0,0x0,8
tick,0x7ff954e0fd34,85623711,0,0x0,8
tick,0x7ff954e0fd34,85639715,0,0x0,8
tick,0x7ff954e0fd34,85655575,0,0x0,8
tick,0x7ff954e0fd34,85671589,0,0x0,8
tick,0x7ff954e0fd34,85687594,0,0x0,8
tick,0x7ff954e0fd34,85702758,0,0x0,8
tick,0x7ff954e0fd34,85717867,0,0x0,8
tick,0x7ff954e0fd34,85732611,0,0x0,8
tick,0x7ff954e0fd34,85747621,0,0x0,8
tick,0x7ff954e0fd34,85762561,0,0x0,8
tick,0x7ff954e0fd34,85778507,0,0x0,8
tick,0x7ff954e0fd34,85793608,0,0x0,8
tick,0x7ff954e0fd34,85808430,0,0x0,8
tick,0x7ff954e0fd34,85823392,0,0x0,8
tick,0x7ff954e0fd34,85839378,0,0x0,8
tick,0x7ff954e0fd34,85854281,0,0x0,8
tick,0x7ff954e0fd34,85869268,0,0x0,8
tick,0x7ff954e0fd34,85885402,0,0x0,8
tick,0x7ff954e0fd34,85900217,0,0x0,8
tick,0x7ff954e0fd34,85916140,0,0x0,8
tick,0x7ff954e0fd34,85931158,0,0x0,8
tick,0x7ff954e0fd34,85946140,0,0x0,8
tick,0x7ff954e0fd34,85961045,0,0x0,8
tick,0x7ff954e0fd34,85976511,0,0x0,8
tick,0x7ff954e0fd34,85992474,0,0x0,8
tick,0x7ff954e0fd34,86008428,0,0x0,8
tick,0x7ff954e0fd34,86023385,0,0x0,8
tick,0x7ff954e0fd34,86038316,0,0x0,8
tick,0x7ff954e0fd34,86054393,0,0x0,8
tick,0x7ff954e0fd34,86069773,0,0x0,8
tick,0x7ff954e0fd34,86084788,0,0x0,8
tick,0x7ff954e0fd34,86100697,0,0x0,8
tick,0x7ff954e0fd34,86115613,0,0x0,8
tick,0x7ff954e0fd34,86131648,0,0x0,8
tick,0x7ff954e0fd34,86147563,0,0x0,8
tick,0x7ff954e0fd34,86163515,0,0x0,8
tick,0x7ff954e0fd34,86179523,0,0x0,8
tick,0x7ff954e0fd34,86194811,0,0x0,8
tick,0x7ff954e0fd34,86209829,0,0x0,8
tick,0x7ff954e0fd34,86225714,0,0x0,8
tick,0x7ff954e0fd34,86240647,0,0x0,8
tick,0x7ff954e0fd34,86256627,0,0x0,8
tick,0x7ff954e0fd34,86271665,0,0x0,8
tick,0x7ff954e0fd34,86286566,0,0x0,8
tick,0x7ff954e0fd34,86302494,0,0x0,8
tick,0x7ff954e0fd34,86317492,0,0x0,8
tick,0x7ff954e0fd34,86332478,0,0x0,8
tick,0x7ff954e0fd34,86347374,0,0x0,8
tick,0x7ff954e0fd34,86363306,0,0x0,8
tick,0x7ff954e0fd34,86378317,0,0x0,8
tick,0x7ff954e0fd34,86394278,0,0x0,8
tick,0x7ff954e0fd34,86409211,0,0x0,8
tick,0x7ff954e0fd34,86425237,0,0x0,8
tick,0x7ff954e0fd34,86441175,0,0x0,8
tick,0x7ff954e0fd34,86456080,0,0x0,8
tick,0x7ff954e0fd34,86472071,0,0x0,8
tick,0x7ff954e0fd34,86486992,0,0x0,8
tick,0x7ff954e0fd34,86503028,0,0x0,8
tick,0x7ff954e0fd34,86518957,0,0x0,8
tick,0x7ff954e0fd34,86534907,0,0x0,8
tick,0x7ff954e0fd34,86550170,0,0x0,8
tick,0x7ff954e0fd34,86565146,0,0x0,8
tick,0x7ff954e0fd34,86581094,0,0x0,8
tick,0x7ff954e0fd34,86596055,0,0x0,8
tick,0x7ff954e0fd34,86610998,0,0x0,8
tick,0x7ff954e0fd34,86626956,0,0x0,8
tick,0x7ff954e0fd34,86642941,0,0x0,8
tick,0x7ff954e0fd34,86658876,0,0x0,8
tick,0x7ff954e0fd34,86673995,0,0x0,8
tick,0x7ff954e0fd34,86689000,0,0x0,8
tick,0x7ff954e0fd34,86703923,0,0x0,8
tick,0x7ff954e0fd34,86719955,0,0x0,8
tick,0x7ff954e0fd34,86734912,0,0x0,8
tick,0x7ff954e0fd34,86750838,0,0x0,8
tick,0x7ff954e0fd34,86766815,0,0x0,8
tick,0x7ff954e0fd34,86781735,0,0x0,8
tick,0x7ff954e0fd34,86797718,0,0x0,8
tick,0x7ff954e0fd34,86812724,0,0x0,8
tick,0x7ff954e0fd34,86828655,0,0x0,8
tick,0x7ff954e0fd34,86843578,0,0x0,8
tick,0x7ff954e0fd34,86858547,0,0x0,8
tick,0x7ff954e0fd34,86873560,0,0x0,8
tick,0x7ff954e0fd34,86888513,0,0x0,8
tick,0x7ff954e0fd34,86904438,0,0x0,8
tick,0x7ff954e0fd34,86919463,0,0x0,8
tick,0x7ff954e0fd34,86934359,0,0x0,8
tick,0x7ff954e0fd34,86949309,0,0x0,8
tick,0x7ff954e0fd34,86964275,0,0x0,8
tick,0x7ff954e0fd34,86980217,0,0x0,8
tick,0x7ff954e0fd34,86995164,0,0x0,8
tick,0x7ff954e0fd34,87011152,0,0x0,8
tick,0x7ff954e0fd34,87026114,0,0x0,8
tick,0x7ff954e0fd34,87041092,0,0x0,8
tick,0x7ff954e0fd34,87056033,0,0x0,8
tick,0x7ff954e0fd34,87071006,0,0x0,8
tick,0x7ff954e0fd34,87085941,0,0x0,8
tick,0x7ff954e0fd34,87100888,0,0x0,8
tick,0x7ff954e0fd34,87115860,0,0x0,8
tick,0x7ff954e0fd34,87130807,0,0x0,8
tick,0x7ff954e0fd34,87146791,0,0x0,8
tick,0x7ff954e0fd34,87162745,0,0x0,8
tick,0x7ff954e0fd34,87178956,0,0x0,8
tick,0x7ff954e0fd34,87194648,0,0x0,8
tick,0x7ff954e0fd34,87209654,0,0x0,8
tick,0x7ff954e0fd34,87225568,0,0x0,8
tick,0x7ff954e0fd34,87240530,0,0x0,8
tick,0x7ff954e0fd34,87255538,0,0x0,8
tick,0x7ff954e0fd34,87270562,0,0x0,8
tick,0x7ff954e0fd34,87285441,0,0x0,8
tick,0x7ff954e0fd34,87301451,0,0x0,8
tick,0x7ff954e0fd34,87317377,0,0x0,8
tick,0x7ff954e0fd34,87333351,0,0x0,8
tick,0x7ff954e0fd34,87349247,0,0x0,8
tick,0x7ff954e0fd34,87365194,0,0x0,8
tick,0x7ff954e0fd34,87381177,0,0x0,8
tick,0x7ff954e0fd34,87397111,0,0x0,8
tick,0x7ff954e0fd34,87412141,0,0x0,8
tick,0x7ff954e0fd34,87427163,0,0x0,8
tick,0x7ff954e0fd34,87443058,0,0x0,8
tick,0x7ff954e0fd34,87458093,0,0x0,8
tick,0x7ff954e0fd34,87473014,0,0x0,8
tick,0x7ff954e0fd34,87487983,0,0x0,8
tick,0x7ff954e0fd34,87502921,0,0x0,8
tick,0x7ff954e0fd34,87518918,0,0x0,8
tick,0x7ff954e0fd34,87534837,0,0x0,8
tick,0x7ff954e0fd34,87550905,0,0x0,8
tick,0x7ff954e0fd34,87566738,0,0x0,8
tick,0x7ff954e0fd34,87581706,0,0x0,8
tick,0x7ff954e0fd34,87596697,0,0x0,8
tick,0x7ff954e0fd34,87611630,0,0x0,8
tick,0x7ff954e0fd34,87626602,0,0x0,8
tick,0x7ff954e0fd34,87642579,0,0x0,8
tick,0x7ff954e0fd34,87657493,0,0x0,8
tick,0x7ff954e0fd34,87673460,0,0x0,8
tick,0x7ff954e0fd34,87688462,0,0x0,8
tick,0x7ff954e0fd34,87703388,0,0x0,8
tick,0x7ff954e0fd34,87719316,0,0x0,8
tick,0x7ff954e0fd34,87734392,0,0x0,8
tick,0x7ff954e0fd34,87750277,0,0x0,8
tick,0x7ff954e0fd34,87766202,0,0x0,8
tick,0x7ff954e0fd34,87782169,0,0x0,8
tick,0x7ff954e0fd34,87798171,0,0x0,8
tick,0x7ff954e0fd34,87814066,0,0x0,8
tick,0x7ff954e0fd34,87829074,0,0x0,8
tick,0x7ff954e0fd34,87844001,0,0x0,8
tick,0x7ff954e0fd34,87858977,0,0x0,8
tick,0x7ff954e0fd34,87874998,0,0x0,8
tick,0x7ff954e0fd34,87890298,0,0x0,8
tick,0x7ff954e0fd34,87906263,0,0x0,8
tick,0x7ff954e0fd34,87921201,0,0x0,8
tick,0x7ff954e0fd34,87936119,0,0x0,8
tick,0x7ff954e0fd34,87952085,0,0x0,8
tick,0x7ff954e0fd34,87968031,0,0x0,8
tick,0x7ff954e0fd34,87983570,0,0x0,8
tick,0x7ff954e0fd34,87998555,0,0x0,8
tick,0x7ff954e0fd34,88014532,0,0x0,8
tick,0x7ff954e0fd34,88029466,0,0x0,8
tick,0x7ff954e0fd34,88045435,0,0x0,8
tick,0x7ff954e0fd34,88061026,0,0x0,8
tick,0x7ff954e0fd34,88076983,0,0x0,8
tick,0x7ff954e0fd34,88091932,0,0x0,8
tick,0x7ff954e0fd34,88106951,0,0x0,8
tick,0x7ff954e0fd34,88121868,0,0x0,8
tick,0x7ff954e0fd34,88136814,0,0x0,8
tick,0x7ff954e0fd34,88152789,0,0x0,8
tick,0x7ff954e0fd34,88168754,0,0x0,8
tick,0x7ff954e0fd34,88184666,0,0x0,8
tick,0x7ff954e0fd34,88199837,0,0x0,8
tick,0x7ff954e0fd34,88215732,0,0x0,8
tick,0x7ff954e0fd34,88230574,0,0x0,8
tick,0x7ff954e0fd34,88245540,0,0x0,8
tick,0x7ff954e0fd34,88260496,0,0x0,8
tick,0x7ff954e0fd34,88276464,0,0x0,8
tick,0x7ff954e0fd34,88292400,0,0x0,8
tick,0x7ff954e0fd34,88307381,0,0x0,8
tick,0x7ff954e0fd34,88322359,0,0x0,8
tick,0x7ff954e0fd34,88337301,0,0x0,8
tick,0x7ff954e0fd34,88353285,0,0x0,8
tick,0x7ff954e0fd34,88368198,0,0x0,8
tick,0x7ff954e0fd34,88383999,0,0x0,8
tick,0x7ff954e0fd34,88399936,0,0x0,8
tick,0x7ff954e0fd34,88415178,0,0x0,8
tick,0x7ff954e0fd34,88431126,0,0x0,8
tick,0x7ff954e0fd34,88446088,0,0x0,8
tick,0x7ff954e0fd34,88462031,0,0x0,8
tick,0x7ff954e0fd34,88477986,0,0x0,8
tick,0x7ff954e0fd34,88493974,0,0x0,8
tick,0x7ff954e0fd34,88509936,0,0x0,8
tick,0x7ff954e0fd34,88525860,0,0x0,8
tick,0x7ff954e0fd34,88541841,0,0x0,8
tick,0x7ff954e0fd34,88557841,0,0x0,8
tick,0x7ff954e0fd34,88573876,0,0x0,8
tick,0x7ff954e0fd34,88589745,0,0x0,8
tick,0x7ff954e0fd34,88605758,0,0x0,8
tick,0x7ff954e0fd34,88621647,0,0x0,8
tick,0x7ff954e0fd34,88637614,0,0x0,8
tick,0x7ff954e0fd34,88653566,0,0x0,8
tick,0x7ff954e0fd34,88668544,0,0x0,8
tick,0x7ff954e0fd34,88683521,0,0x0,8
tick,0x7ff954e0fd34,88698456,0,0x0,8
tick,0x7ff954e0fd34,88714444,0,0x0,8
tick,0x7ff954e0fd34,88729369,0,0x0,8
tick,0x7ff954e0fd34,88745467,0,0x0,8
tick,0x7ff954e0fd34,88761279,0,0x0,8
tick,0x7ff954e0fd34,88776651,0,0x0,8
tick,0x7ff954e0fd34,88792719,0,0x0,8
tick,0x7ff954e0fd34,88808621,0,0x0,8
tick,0x7ff954e0fd34,88824475,0,0x0,8
tick,0x7ff954e0fd34,88839513,0,0x0,8
tick,0x7ff954e0fd34,88855414,0,0x0,8
tick,0x7ff954e0fd34,88870516,0,0x0,8
tick,0x7ff954e0fd34,88886308,0,0x0,8
tick,0x7ff954e0fd34,88902374,0,0x0,8
tick,0x7ff954e0fd34,88918251,0,0x0,8
tick,0x7ff954e0fd34,88934277,0,0x0,8
tick,0x7ff954e0fd34,88949220,0,0x0,8
tick,0x7ff954e0fd34,88965227,0,0x0,8
tick,0x7ff954e0fd34,88980316,0,0x0,8
tick,0x7ff954e0fd34,88996329,0,0x0,8
tick,0x7ff954e0fd34,89012021,0,0x0,8
tick,0x7ff954e0fd34,89027995,0,0x0,8
tick,0x7ff954e0fd34,89043281,0,0x0,8
tick,0x7ff954e0fd34,89057969,0,0x0,8
tick,0x7ff954e0fd34,89073817,0,0x0,8
tick,0x7ff954e0fd34,89088863,0,0x0,8
tick,0x7ff954e0fd34,89104063,0,0x0,8
tick,0x7ff954e0fd34,89118931,0,0x0,8
tick,0x7ff954e0fd34,89134713,0,0x0,8
tick,0x7ff954e0fd34,89149696,0,0x0,8
tick,0x7ff954e0fd34,89165911,0,0x0,8
tick,0x7ff954e0fd34,89181683,0,0x0,8
tick,0x7ff954e0fd34,89196620,0,0x0,8
tick,0x7ff954e0fd34,89211688,0,0x0,8
tick,0x7ff954e0fd34,89226537,0,0x0,8
tick,0x7ff954e0fd34,89242580,0,0x0,8
tick,0x7ff954e0fd34,89257474,0,0x0,8
tick,0x7ff954e0fd34,89272389,0,0x0,8
tick,0x7ff954e0fd34,89287395,0,0x0,8
tick,0x7ff954e0fd34,89302422,0,0x0,8
tick,0x7ff954e0fd34,89318199,0,0x0,8
tick,0x7ff954e0fd34,89333123,0,0x0,8
tick,0x7ff954e0fd34,89348224,0,0x0,8
tick,0x7ff954e0fd34,89364349,0,0x0,8
tick,0x7ff954e0fd34,89379284,0,0x0,8
tick,0x7ff954e0fd34,89395151,0,0x0,8
tick,0x7ff954e0fd34,89410266,0,0x0,8
tick,0x7ff954e0fd34,89425893,0,0x0,8
tick,0x7ff954e0fd34,89441913,0,0x0,8
tick,0x7ff954e0fd34,89457907,0,0x0,8
tick,0x7ff954e0fd34,89473885,0,0x0,8
tick,0x7ff954e0fd34,89489741,0,0x0,8
tick,0x7ff954e0fd34,89505811,0,0x0,8
tick,0x7ff954e0fd34,89521719,0,0x0,8
tick,0x7ff954e0fd34,89536741,0,0x0,8
tick,0x7ff954e0fd34,89551625,0,0x0,8
tick,0x7ff954e0fd34,89566750,0,0x0,8
tick,0x7ff954e0fd34,89581614,0,0x0,8
tick,0x7ff954e0fd34,89597455,0,0x0,8
tick,0x7ff954e0fd34,89613511,0,0x0,8
tick,0x7ff954e0fd34,89629469,0,0x0,8
tick,0x7ff954e0fd34,89644502,0,0x0,8
tick,0x7ff954e0fd34,89660359,0,0x0,8
tick,0x7ff954e0fd34,89675331,0,0x0,8
tick,0x7ff954e0fd34,89690956,0,0x0,8
tick,0x7ff954e0fd34,89706880,0,0x0,8
tick,0x7ff954e0fd34,89722727,0,0x0,8
tick,0x7ff954e0fd34,89738791,0,0x0,8
tick,0x7ff954e0fd34,89753889,0,0x0,8
tick,0x7ff954e0fd34,89769800,0,0x0,8
tick,0x7ff954e0fd34,89784638,0,0x0,8
tick,0x7ff954e0fd34,89800759,0,0x0,8
tick,0x7ff954e0fd34,89816520,0,0x0,8
tick,0x7ff954e0fd34,89832501,0,0x0,8
tick,0x7ff954e0fd34,89848953,0,0x0,8
tick,0x7ff954e0fd34,89863458,0,0x0,8
tick,0x7ff954e0fd34,89879261,0,0x0,8
tick,0x7ff954e0fd34,89894254,0,0x0,8
tick,0x7ff954e0fd34,89910401,0,0x0,8
tick,0x7ff954e0fd34,89925607,0,0x0,8
tick,0x7ff954e0fd34,89940490,0,0x0,8
tick,0x7ff954e0fd34,89956399,0,0x0,8
tick,0x7ff954e0fd34,89972579,0,0x0,8
tick,0x7ff954e0fd34,89988394,0,0x0,8
tick,0x7ff954e0fd34,90004254,0,0x0,8
tick,0x7ff954e0fd34,90020211,0,0x0,8
tick,0x7ff954e0fd34,90036202,0,0x0,8
tick,0x7ff954e0fd34,90052132,0,0x0,8
tick,0x7ff954e0fd34,90068058,0,0x0,8
tick,0x7ff954e0fd34,90083039,0,0x0,8
tick,0x7ff954e0fd34,90099157,0,0x0,8
tick,0x7ff954e0fd34,90114088,0,0x0,8
tick,0x7ff954e0fd34,90129018,0,0x0,8
tick,0x7ff954e0fd34,90143875,0,0x0,8
tick,0x7ff954e0fd34,90159865,0,0x0,8
tick,0x7ff954e0fd34,90174787,0,0x0,8
tick,0x7ff954e0fd34,90190272,0,0x0,8
tick,0x7ff954e0fd34,90206257,0,0x0,8
tick,0x7ff954e0fd34,90221189,0,0x0,8
tick,0x7ff954e0fd34,90236710,0,0x0,8
tick,0x7ff954e0fd34,90251599,0,0x0,8
tick,0x7ff954e0fd34,90267722,0,0x0,8
tick,0x7ff954e0fd34,90283547,0,0x0,8
tick,0x7ff954e0fd34,90299605,0,0x0,8
tick,0x7ff954e0fd34,90315780,0,0x0,8
tick,0x7ff954e0fd34,90330466,0,0x0,8
tick,0x7ff954e0fd34,90346567,0,0x0,8
tick,0x7ff954e0fd34,90361483,0,0x0,8
tick,0x7ff954e0fd34,90377323,0,0x0,8
tick,0x7ff954e0fd34,90393236,0,0x0,8
tick,0x7ff954e0fd34,90409217,0,0x0,8
tick,0x7ff954e0fd34,90425138,0,0x0,8
tick,0x7ff954e0fd34,90441188,0,0x0,8
tick,0x7ff954e0fd34,90456056,0,0x0,8
tick,0x7ff954e0fd34,90471032,0,0x0,8
tick,0x7ff954e0fd34,90486968,0,0x0,8
tick,0x7ff954e0fd34,90501969,0,0x0,8
tick,0x7ff954e0fd34,90516906,0,0x0,8
tick,0x7ff954e0fd34,90531980,0,0x0,8
tick,0x7ff954e0fd34,90547851,0,0x0,8
tick,0x7ff954e0fd34,90562804,0,0x0,8
tick,0x7ff954e0fd34,90578769,0,0x0,8
tick,0x7ff954e0fd34,90594725,0,0x0,8
tick,0x7ff954e0fd34,90610655,0,0x0,8
tick,0x7ff954e0fd34,90625982,0,0x0,8
tick,0x7ff954e0fd34,90642024,0,0x0,8
tick,0x7ff954e0fd34,90657048,0,0x0,8
tick,0x7ff954e0fd34,90671974,0,0x0,8
tick,0x7ff954e0fd34,90686827,0,0x0,8
tick,0x7ff954e0fd34,90701887,0,0x0,8
tick,0x7ff954e0fd34,90717852,0,0x0,8
tick,0x7ff954e0fd34,90733523,0,0x0,8
tick,0x7ff954e0fd34,90749488,0,0x0,8
tick,0x7ff954e0fd34,90765475,0,0x0,8
tick,0x7ff954e0fd34,90781438,0,0x0,8
tick,0x7ff954e0fd34,90797439,0,0x0,8
tick,0x7ff954e0fd34,90812328,0,0x0,8
tick,0x7ff954e0fd34,90827278,0,0x0,8
tick,0x7ff954e0fd34,90842320,0,0x0,8
tick,0x7ff954e0fd34,90858270,0,0x0,8
tick,0x7ff954e0fd34,90873214,0,0x0,8
tick,0x7ff954e0fd34,90889197,0,0x0,8
tick,0x7ff954e0fd34,90904262,0,0x0,8
tick,0x7ff954e0fd34,90919995,0,0x0,8
tick,0x7ff954e0fd34,90935137,0,0x0,8
tick,0x7ff954e0fd34,90950311,0,0x0,8
tick,0x7ff954e0fd34,90965564,0,0x0,8
tick,0x7ff954e0fd34,90981051,0,0x0,8
tick,0x7ff954e0fd34,90997006,0,0x0,8
tick,0x7ff954e0fd34,91012985,0,0x0,8
tick,0x7ff954e0fd34,91028906,0,0x0,8
tick,0x7ff954e0fd34,91044867,0,0x0,8
tick,0x7ff954e0fd34,91060894,0,0x0,8
tick,0x7ff954e0fd34,91075767,0,0x0,8
tick,0x7ff954e0fd34,91091300,0,0x0,8
tick,0x7ff954e0fd34,91107278,0,0x0,8
tick,0x7ff954e0fd34,91123200,0,0x0,8
tick,0x7ff954e0fd34,91139164,0,0x0,8
tick,0x7ff954e0fd34,91154160,0,0x0,8
tick,0x7ff954e0fd34,91170189,0,0x0,8
tick,0x7ff954e0fd34,91185140,0,0x0,8
tick,0x7ff954e0fd34,91200518,0,0x0,8
tick,0x7ff954e0fd34,91216116,0,0x0,8
tick,0x7ff954e0fd34,91231035,0,0x0,8
tick,0x7ff954e0fd34,91247018,0,0x0,8
tick,0x7ff954e0fd34,91262561,0,0x0,8
tick,0x7ff954e0fd34,91278483,0,0x0,8
tick,0x7ff954e0fd34,91294008,0,0x0,8
tick,0x7ff954e0fd34,91309977,0,0x0,8
tick,0x7ff954e0fd34,91325926,0,0x0,8
tick,0x7ff954e0fd34,91341200,0,0x0,8
tick,0x7ff954e0fd34,91356511,0,0x0,8
tick,0x7ff954e0fd34,91372468,0,0x0,8
tick,0x7ff954e0fd34,91387880,0,0x0,8
tick,0x7ff954e0fd34,91402996,0,0x0,8
tick,0x7ff954e0fd34,91418043,0,0x0,8
tick,0x7ff954e0fd34,91433976,0,0x0,8
tick,0x7ff954e0fd34,91449872,0,0x0,8
tick,0x7ff954e0fd34,91465864,0,0x0,8
tick,0x7ff954e0fd34,91481845,0,0x0,8
tick,0x7ff954e0fd34,91496745,0,0x0,8
tick,0x7ff954e0fd34,91512729,0,0x0,8
tick,0x7ff954e0fd34,91527666,0,0x0,8
tick,0x7ff954e0fd34,91543621,0,0x0,8
tick,0x7ff954e0fd34,91558575,0,0x0,8
tick,0x7ff954e0fd34,91573545,0,0x0,8
tick,0x7ff954e0fd34,91588691,0,0x0,8
tick,0x7ff954e0fd34,91604094,0,0x0,8
tick,0x7ff954e0fd34,91620044,0,0x0,8
tick,0x7ff954e0fd34,91635402,0,0x0,8
tick,0x7ff954e0fd34,91651328,0,0x0,8
tick,0x7ff954e0fd34,91667327,0,0x0,8
tick,0x7ff954e0fd34,91683265,0,0x0,8
tick,0x7ff954e0fd34,91699244,0,0x0,8
tick,0x7ff954e0fd34,91715280,0,0x0,8
tick,0x7ff954e0fd34,91731118,0,0x0,8
tick,0x7ff954e0fd34,91746106,0,0x0,8
tick,0x7ff954e0fd34,91761077,0,0x0,8
tick,0x7ff954e0fd34,91777055,0,0x0,8
tick,0x7ff954e0fd34,91793051,0,0x0,8
tick,0x7ff954e0fd34,91809007,0,0x0,8
tick,0x7ff954e0fd34,91823675,0,0x0,8
tick,0x7ff954e0fd34,91838602,0,0x0,8
tick,0x7ff954e0fd34,91854586,0,0x0,8
tick,0x7ff954e0fd34,91869559,0,0x0,8
tick,0x7ff954e0fd34,91884512,0,0x0,8
tick,0x7ff954e0fd34,91899483,0,0x0,8
tick,0x7ff954e0fd34,91915436,0,0x0,8
tick,0x7ff954e0fd34,91930429,0,0x0,8
tick,0x7ff954e0fd34,91946385,0,0x0,8
tick,0x7ff954e0fd34,91962287,0,0x0,8
tick,0x7ff954e0fd34,91978255,0,0x0,8
tick,0x7ff954e0fd34,91994279,0,0x0,8
tick,0x7ff954e0fd34,92010228,0,0x0,8
tick,0x7ff954e0fd34,92025140,0,0x0,8
tick,0x7ff954e0fd34,92040079,0,0x0,8
tick,0x7ff954e0fd34,92056088,0,0x0,8
tick,0x7ff954e0fd34,92071005,0,0x0,8
tick,0x7ff954e0fd34,92085963,0,0x0,8
tick,0x7ff954e0fd34,92101537,0,0x0,8
tick,0x7ff954e0fd34,92117483,0,0x0,8
tick,0x7ff954e0fd34,92133604,0,0x0,8
tick,0x7ff954e0fd34,92149405,0,0x0,8
tick,0x7ff954e0fd34,92164104,0,0x0,8
tick,0x7ff954e0fd34,92180046,0,0x0,8
tick,0x7ff954e0fd34,92196023,0,0x0,8
tick,0x7ff954e0fd34,92211725,0,0x0,8
tick,0x7ff954e0fd34,92227627,0,0x0,8
tick,0x7ff954e0fd34,92242735,0,0x0,8
tick,0x7ff954e0fd34,92258707,0,0x0,8
tick,0x7ff954e0fd34,92274544,0,0x0,8
tick,0x7ff954e0fd34,92290432,0,0x0,8
tick,0x7ff954e0fd34,92305691,0,0x0,8
tick,0x7ff954e0fd34,92320750,0,0x0,8
tick,0x7ff954e0fd34,92335940,0,0x0,8
tick,0x7ff954e0fd34,92351278,0,0x0,8
tick,0x7ff954e0fd34,92367250,0,0x0,8
tick,0x7ff954e0fd34,92382221,0,0x0,8
tick,0x7ff954e0fd34,92397500,0,0x0,8
tick,0x7ff954e0fd34,92413456,0,0x0,8
tick,0x7ff954e0fd34,92429438,0,0x0,8
tick,0x7ff954e0fd34,92445338,0,0x0,8
tick,0x7ff954e0fd34,92461335,0,0x0,8
tick,0x7ff954e0fd34,92477243,0,0x0,8
tick,0x7ff954e0fd34,92493001,0,0x0,8
tick,0x7ff954e0fd34,92508740,0,0x0,8
tick,0x7ff954e0fd34,92524715,0,0x0,8
tick,0x7ff954e0fd34,92540729,0,0x0,8
tick,0x7ff954e0fd34,92556634,0,0x0,8
tick,0x7ff954e0fd34,92572281,0,0x0,8
tick,0x7ff954e0fd34,92587873,0,0x0,8
tick,0x7ff954e0fd34,92603250,0,0x0,8
tick,0x7ff954e0fd34,92618307,0,0x0,8
tick,0x7ff954e0fd34,92634356,0,0x0,8
tick,0x7ff954e0fd34,92650388,0,0x0,8
tick,0x7ff954e0fd34,92666310,0,0x0,8
tick,0x7ff954e0fd34,92682302,0,0x0,8
tick,0x7ff954e0fd34,92697840,0,0x0,8
tick,0x7ff954e0fd34,92713794,0,0x0,8
tick,0x7ff954e0fd34,92728778,0,0x0,8
tick,0x7ff954e0fd34,92744699,0,0x0,8
tick,0x7ff954e0fd34,92759673,0,0x0,8
tick,0x7ff954e0fd34,92775614,0,0x0,8
tick,0x7ff954e0fd34,92791563,0,0x0,8
tick,0x7ff954e0fd34,92806517,0,0x0,8
tick,0x7ff954e0fd34,92821481,0,0x0,8
tick,0x7ff954e0fd34,92836474,0,0x0,8
tick,0x7ff954e0fd34,92852419,0,0x0,8
tick,0x7ff954e0fd34,92868425,0,0x0,8
tick,0x7ff954e0fd34,92883970,0,0x0,8
tick,0x7ff954e0fd34,92899876,0,0x0,8
tick,0x7ff954e0fd34,92915854,0,0x0,8
tick,0x7ff954e0fd34,92931549,0,0x0,8
tick,0x7ff954e0fd34,92947517,0,0x0,8
tick,0x7ff954e0fd34,92962485,0,0x0,8
tick,0x7ff954e0fd34,92977895,0,0x0,8
tick,0x7ff954e0fd34,92993325,0,0x0,8
tick,0x7ff954e0fd34,93009333,0,0x0,8
tick,0x7ff954e0fd34,93024756,0,0x0,8
tick,0x7ff954e0fd34,93040028,0,0x0,8
tick,0x7ff954e0fd34,93055063,0,0x0,8
tick,0x7ff954e0fd34,93070992,0,0x0,8
tick,0x7ff954e0fd34,93086021,0,0x0,8
tick,0x7ff954e0fd34,93101217,0,0x0,8
tick,0x7ff954e0fd34,93117118,0,0x0,8
tick,0x7ff954e0fd34,93132662,0,0x0,8
tick,0x7ff954e0fd34,93148094,0,0x0,8
tick,0x7ff954e0fd34,93164140,0,0x0,8
tick,0x7ff954e0fd34,93180021,0,0x0,8
tick,0x7ff954e0fd34,93196029,0,0x0,8
tick,0x7ff954e0fd34,93211942,0,0x0,8
tick,0x7ff954e0fd34,93227876,0,0x0,8
tick,0x7ff954e0fd34,93243467,0,0x0,8
tick,0x7ff954e0fd34,93259454,0,0x0,8
tick,0x7ff954e0fd34,93275154,0,0x0,8
tick,0x7ff954e0fd34,93290659,0,0x0,8
tick,0x7ff954e0fd34,93306073,0,0x0,8
tick,0x7ff954e0fd34,93322063,0,0x0,8
tick,0x7ff954e0fd34,93337489,0,0x0,8
tick,0x7ff954e0fd34,93352814,0,0x0,8
tick,0x7ff954e0fd34,93368728,0,0x0,8
tick,0x7ff954e0fd34,93384744,0,0x0,8
tick,0x7ff954e0fd34,93400380,0,0x0,8
tick,0x7ff954e0fd34,93416366,0,0x0,8
tick,0x7ff954e0fd34,93432294,0,0x0,8
tick,0x7ff954e0fd34,93448279,0,0x0,8
tick,0x7ff954e0fd34,93464228,0,0x0,8
tick,0x7ff954e0fd34,93480183,0,0x0,8
tick,0x7ff954e0fd34,93496105,0,0x0,8
tick,0x7ff954e0fd34,93511570,0,0x0,8
tick,0x7ff954e0fd34,93526513,0,0x0,8
tick,0x7ff954e0fd34,93542464,0,0x0,8
tick,0x7ff954e0fd34,93558099,0,0x0,8
tick,0x7ff954e0fd34,93574051,0,0x0,8
tick,0x7ff954e0fd34,93589979,0,0x0,8
tick,0x7ff954e0fd34,93605491,0,0x0,8
tick,0x7ff954e0fd34,93621425,0,0x0,8
tick,0x7ff954e0fd34,93637416,0,0x0,8
tick,0x7ff954e0fd34,93653416,0,0x0,8
tick,0x7ff954e0fd34,93669355,0,0x0,8
tick,0x7ff954e0fd34,93684638,0,0x0,8
tick,0x7ff954e0fd34,93700353,0,0x0,8
tick,0x7ff954e0fd34,93715315,0,0x0,8
tick,0x7ff954e0fd34,93731244,0,0x0,8
tick,0x7ff954e0fd34,93746217,0,0x0,8
tick,0x7ff954e0fd34,93761493,0,0x0,8
tick,0x7ff954e0fd34,93776749,0,0x0,8
tick,0x7ff954e0fd34,93793057,0,0x0,8
tick,0x7ff954e0fd34,93808167,0,0x0,8
tick,0x7ff954e0fd34,93824116,0,0x0,8
tick,0x7ff954e0fd34,93839063,0,0x0,8
tick,0x7ff954e0fd34,93855077,0,0x0,8
tick,0x7ff954e0fd34,93869986,0,0x0,8
tick,0x7ff954e0fd34,93885401,0,0x0,8
tick,0x7ff954e0fd34,93901181,0,0x0,8
tick,0x7ff954e0fd34,93916113,0,0x0,8
tick,0x7ff954e0fd34,93932087,0,0x0,8
tick,0x7ff954e0fd34,93947049,0,0x0,8
tick,0x7ff954e0fd34,93962008,0,0x0,8
tick,0x7ff954e0fd34,93977001,0,0x0,8
tick,0x7ff954e0fd34,93992922,0,0x0,8
tick,0x7ff954e0fd34,94008291,0,0x0,8
tick,0x7ff954e0fd34,94024380,0,0x0,8
tick,0x7ff954e0fd34,94039299,0,0x0,8
tick,0x7ff954e0fd34,94054247,0,0x0,8
tick,0x7ff954e0fd34,94069188,0,0x0,8
tick,0x7ff954e0fd34,94084112,0,0x0,8
tick,0x7ff954e0fd34,94100048,0,0x0,8
tick,0x7ff954e0fd34,94114998,0,0x0,8
tick,0x7ff954e0fd34,94129973,0,0x0,8
tick,0x7ff954e0fd34,94144962,0,0x0,8
tick,0x7ff954e0fd34,94159923,0,0x0,8
tick,0x7ff954e0fd34,94174841,0,0x0,8
tick,0x7ff954e0fd34,94190792,0,0x0,8
tick,0x7ff954e0fd34,94205790,0,0x0,8
tick,0x7ff954e0fd34,94220904,0,0x0,8
tick,0x7ff954e0fd34,94235817,0,0x0,8
tick,0x7ff954e0fd34,94251003,0,0x0,8
tick,0x7ff954e0fd34,94266728,0,0x0,8
tick,0x7ff954e0fd34,94281644,0,0x0,8
tick,0x7ff954e0fd34,94297602,0,0x0,8
tick,0x7ff954e0fd34,94313574,0,0x0,8
tick,0x7ff954e0fd34,94329566,0,0x0,8
tick,0x7ff954e0fd34,94345498,0,0x0,8
tick,0x7ff954e0fd34,94361411,0,0x0,8
tick,0x7ff954e0fd34,94377396,0,0x0,8
tick,0x7ff954e0fd34,94393354,0,0x0,8
tick,0x7ff954e0fd34,94409300,0,0x0,8
tick,0x7ff954e0fd34,94424272,0,0x0,8
tick,0x7ff954e0fd34,94440285,0,0x0,8
tick,0x7ff954e0fd34,94455441,0,0x0,8
tick,0x7ff954e0fd34,94471305,0,0x0,8
tick,0x7ff954e0fd34,94486126,0,0x0,8
tick,0x7ff954e0fd34,94502178,0,0x0,8
tick,0x7ff954e0fd34,94518061,0,0x0,8
tick,0x7ff954e0fd34,94533023,0,0x0,8
tick,0x7ff954e0fd34,94547979,0,0x0,8
tick,0x7ff954e0fd34,94562916,0,0x0,8
tick,0x7ff954e0fd34,94578460,0,0x0,8
tick,0x7ff954e0fd34,94593722,0,0x0,8
tick,0x7ff954e0fd34,94609654,0,0x0,8
tick,0x7ff954e0fd34,94625609,0,0x0,8
tick,0x7ff954e0fd34,94641566,0,0x0,8
tick,0x7ff954e0fd34,94657491,0,0x0,8
tick,0x7ff954e0fd34,94673337,0,0x0,8
tick,0x7ff954e0fd34,94688325,0,0x0,8
tick,0x7ff954e0fd34,94703944,0,0x0,8
tick,0x7ff954e0fd34,94719477,0,0x0,8
tick,0x7ff954e0fd34,94735026,0,0x0,8
tick,0x7ff954e0fd34,94750598,0,0x0,8
tick,0x7ff954e0fd34,94766554,0,0x0,8
tick,0x7ff954e0fd34,94781477,0,0x0,8
tick,0x7ff954e0fd34,94796469,0,0x0,8
tick,0x7ff954e0fd34,94811436,0,0x0,8
tick,0x7ff954e0fd34,94826401,0,0x0,8
tick,0x7ff954e0fd34,94842483,0,0x0,8
tick,0x7ff954e0fd34,94858431,0,0x0,8
tick,0x7ff954e0fd34,94874397,0,0x0,8
tick,0x7ff954e0fd34,94889585,0,0x0,8
tick,0x7ff954e0fd34,94905467,0,0x0,8
tick,0x7ff954e0fd34,94920477,0,0x0,8
tick,0x7ff954e0fd34,94936383,0,0x0,8
tick,0x7ff954e0fd34,94951388,0,0x0,8
tick,0x7ff954e0fd34,94966798,0,0x0,8
tick,0x7ff954e0fd34,94981782,0,0x0,8
tick,0x7ff954e0fd34,94996915,0,0x0,8
tick,0x7ff954e0fd34,95012981,0,0x0,8
tick,0x7ff954e0fd34,95028391,0,0x0,8
tick,0x7ff954e0fd34,95044072,0,0x0,8
tick,0x7ff954e0fd34,95059422,0,0x0,8
tick,0x7ff954e0fd34,95074601,0,0x0,8
tick,0x7ff954e0fd34,95089676,0,0x0,8
tick,0x7ff954e0fd34,95105560,0,0x0,8
tick,0x7ff954e0fd34,95121502,0,0x0,8
tick,0x7ff954e0fd34,95137486,0,0x0,8
tick,0x7ff954e0fd34,95153392,0,0x0,8
tick,0x7ff954e0fd34,95169363,0,0x0,8
tick,0x7ff954e0fd34,95185360,0,0x0,8
tick,0x7ff954e0fd34,95201307,0,0x0,8
tick,0x7ff954e0fd34,95216760,0,0x0,8
tick,0x7ff954e0fd34,95232703,0,0x0,8
tick,0x7ff954e0fd34,95248690,0,0x0,8
tick,0x7ff954e0fd34,95264649,0,0x0,8
tick,0x7ff954e0fd34,95280604,0,0x0,8
tick,0x7ff954e0fd34,95296550,0,0x0,8
tick,0x7ff954e0fd34,95311542,0,0x0,8
tick,0x7ff954e0fd34,95327114,0,0x0,8
tick,0x7ff954e0fd34,95342443,0,0x0,8
tick,0x7ff954e0fd34,95357412,0,0x0,8
tick,0x7ff954e0fd34,95373398,0,0x0,8
tick,0x7ff954e0fd34,95388325,0,0x0,8
tick,0x7ff954e0fd34,95404349,0,0x0,8
tick,0x7ff954e0fd34,95419277,0,0x0,8
tick,0x7ff954e0fd34,95434332,0,0x0,8
tick,0x7ff954e0fd34,95449341,0,0x0,8
tick,0x7ff954e0fd34,95464877,0,0x0,8
tick,0x7ff954e0fd34,95480826,0,0x0,8
tick,0x7ff954e0fd34,95496760,0,0x0,8
tick,0x7ff954e0fd34,95511720,0,0x0,8
tick,0x7ff954e0fd34,95526681,0,0x0,8
tick,0x7ff954e0fd34,95542669,0,0x0,8
tick,0x7ff954e0fd34,95558596,0,0x0,8
tick,0x7ff954e0fd34,95574568,0,0x0,8
tick,0x7ff954e0fd34,95589871,0,0x0,8
tick,0x7ff954e0fd34,95605870,0,0x0,8
tick,0x7ff954e0fd34,95621767,0,0x0,8
tick,0x7ff954e0fd34,95637759,0,0x0,8
tick,0x7ff954e0fd34,95653764,0,0x0,8
tick,0x7ff954e0fd34,95669631,0,0x0,8
tick,0x7ff954e0fd34,95684904,0,0x0,8
tick,0x7ff954e0fd34,95699873,0,0x0,8
tick,0x7ff954e0fd34,95715428,0,0x0,8
tick,0x7ff954e0fd34,95731353,0,0x0,8
tick,0x7ff954e0fd34,95747234,0,0x0,8
tick,0x7ff954e0fd34,95762635,0,0x0,8
tick,0x7ff954e0fd34,95777621,0,0x0,8
tick,0x7ff954e0fd34,95793305,0,0x0,8
tick,0x7ff954e0fd34,95809350,0,0x0,8
tick,0x7ff954e0fd34,95824355,0,0x0,8
tick,0x7ff954e0fd34,95840331,0,0x0,8
tick,0x7ff954e0fd34,95855496,0,0x0,8
tick,0x7ff954e0fd34,95871404,0,0x0,8
tick,0x7ff954e0fd34,95887506,0,0x0,8
tick,0x7ff954e0fd34,95903489,0,0x0,8
tick,0x7ff954e0fd34,95919380,0,0x0,8
tick,0x7ff954e0fd34,95934395,0,0x0,8
tick,0x7ff954e0fd34,95949326,0,0x0,8
tick,0x7ff954e0fd34,95964273,0,0x0,8
tick,0x7ff954e0fd34,95979282,0,0x0,8
tick,0x7ff954e0fd34,95994174,0,0x0,8
tick,0x7ff954e0fd34,96009699,0,0x0,8
tick,0x7ff954e0fd34,96024616,0,0x0,8
tick,0x7ff954e0fd34,96039603,0,0x0,8
tick,0x7ff954e0fd34,96054536,0,0x0,8
tick,0x7ff954e0fd34,96070527,0,0x0,8
tick,0x7ff954e0fd34,96086448,0,0x0,8
tick,0x7ff954e0fd34,96102451,0,0x0,8
tick,0x7ff954e0fd34,96117698,0,0x0,8
tick,0x7ff954e0fd34,96132597,0,0x0,8
tick,0x7ff954e0fd34,96147582,0,0x0,8
tick,0x7ff954e0fd34,96162516,0,0x0,8
tick,0x7ff954e0fd34,96177499,0,0x0,8
tick,0x7ff954e0fd34,96193426,0,0x0,8
tick,0x7ff954e0fd34,96209405,0,0x0,8
tick,0x7ff954e0fd34,96224560,0,0x0,8
tick,0x7ff954e0fd34,96240534,0,0x0,8
tick,0x7ff954e0fd34,96255812,0,0x0,8
tick,0x7ff954e0fd34,96271712,0,0x0,8
tick,0x7ff954e0fd34,96287726,0,0x0,8
tick,0x7ff954e0fd34,96303655,0,0x0,8
tick,0x7ff954e0fd34,96319217,0,0x0,8
tick,0x7ff954e0fd34,96335153,0,0x0,8
tick,0x7ff954e0fd34,96351124,0,0x0,8
tick,0x7ff954e0fd34,96367075,0,0x0,8
tick,0x7ff954e0fd34,96383009,0,0x0,8
tick,0x7ff954e0fd34,96398005,0,0x0,8
tick,0x7ff954e0fd34,96413925,0,0x0,8
tick,0x7ff954e0fd34,96428924,0,0x0,8
tick,0x7ff954e0fd34,96444899,0,0x0,8
tick,0x7ff954e0fd34,96459967,0,0x0,8
tick,0x7ff954e0fd34,96474757,0,0x0,8
tick,0x7ff954e0fd34,96489816,0,0x0,8
tick,0x7ff954e0fd34,96505792,0,0x0,8
tick,0x7ff954e0fd34,96521007,0,0x0,8
tick,0x7ff954e0fd34,96537058,0,0x0,8
tick,0x7ff954e0fd34,96552550,0,0x0,8
tick,0x7ff954e0fd34,96568615,0,0x0,8
tick,0x7ff954e0fd34,96584482,0,0x0,8
tick,0x7ff954e0fd34,96600500,0,0x0,8
tick,0x7ff954e0fd34,96615424,0,0x0,8
tick,0x7ff954e0fd34,96630379,0,0x0,8
tick,0x7ff954e0fd34,96645293,0,0x0,8
tick,0x7ff954e0fd34,96660301,0,0x0,8
tick,0x7ff954e0fd34,96676253,0,0x0,8
tick,0x7ff954e0fd34,96692169,0,0x0,8
tick,0x7ff954e0fd34,96708171,0,0x0,8
tick,0x7ff954e0fd34,96723095,0,0x0,8
tick,0x7ff954e0fd34,96738412,0,0x0,8
tick,0x7ff954e0fd34,96754416,0,0x0,8
tick,0x7ff954e0fd34,96770920,0,0x0,8
tick,0x7ff954e0fd34,96786239,0,0x0,8
tick,0x7ff954e0fd34,96802211,0,0x0,8
tick,0x7ff954e0fd34,96817251,0,0x0,8
tick,0x7ff954e0fd34,96832163,0,0x0,8
tick,0x7ff954e0fd34,96848068,0,0x0,8
tick,0x7ff954e0fd34,96864045,0,0x0,8
tick,0x7ff954e0fd34,96880018,0,0x0,8
tick,0x7ff954e0fd34,96895969,0,0x0,8
tick,0x7ff954e0fd34,96911913,0,0x0,8
tick,0x7ff954e0fd34,96926893,0,0x0,8
tick,0x7ff954e0fd34,96941831,0,0x0,8
tick,0x7ff954e0fd34,96956611,0,0x0,8
tick,0x7ff954e0fd34,96972680,0,0x0,8
tick,0x7ff954e0fd34,96987648,0,0x0,8
tick,0x7ff954e0fd34,97003602,0,0x0,8
tick,0x7ff954e0fd34,97019544,0,0x0,8
tick,0x7ff954e0fd34,97034527,0,0x0,8
tick,0x7ff954e0fd34,97050475,0,0x0,8
tick,0x7ff954e0fd34,97065455,0,0x0,8
tick,0x7ff954e0fd34,97080421,0,0x0,8
tick,0x7ff954e0fd34,97095374,0,0x0,8
tick,0x7ff954e0fd34,97111343,0,0x0,8
tick,0x7ff954e0fd34,97127284,0,0x0,8
tick,0x7ff954e0fd34,97143224,0,0x0,8
tick,0x7ff954e0fd34,97159231,0,0x0,8
tick,0x7ff954e0fd34,97175243,0,0x0,8
tick,0x7ff954e0fd34,97190266,0,0x0,8
tick,0x7ff954e0fd34,97206169,0,0x0,8
tick,0x7ff954e0fd34,97221023,0,0x0,8
tick,0x7ff954e0fd34,97236978,0,0x0,8
tick,0x7ff954e0fd34,97252960,0,0x0,8
tick,0x7ff954e0fd34,97268412,0,0x0,8
tick,0x7ff954e0fd34,97284388,0,0x0,8
tick,0x7ff954e0fd34,97299508,0,0x0,8
tick,0x7ff954e0fd34,97315464,0,0x0,8
tick,0x7ff954e0fd34,97330440,0,0x0,8
tick,0x7ff954e0fd34,97346370,0,0x0,8
tick,0x7ff954e0fd34,97362332,0,0x0,8
tick,0x7ff954e0fd34,97378290,0,0x0,8
tick,0x7ff954e0fd34,97394242,0,0x0,8
tick,0x7ff954e0fd34,97410230,0,0x0,8
tick,0x7ff954e0fd34,97425922,0,0x0,8
tick,0x7ff954e0fd34,97441513,0,0x0,8
tick,0x7ff954e0fd34,97457439,0,0x0,8
tick,0x7ff954e0fd34,97472700,0,0x0,8
tick,0x7ff954e0fd34,97488535,0,0x0,8
tick,0x7ff954e0fd34,97503474,0,0x0,8
tick,0x7ff954e0fd34,97518632,0,0x0,8
tick,0x7ff954e0fd34,97534576,0,0x0,8
tick,0x7ff954e0fd34,97549560,0,0x0,8
tick,0x7ff954e0fd34,97565005,0,0x0,8
tick,0x7ff954e0fd34,97579957,0,0x0,8
tick,0x7ff954e0fd34,97595927,0,0x0,8
tick,0x7ff954e0fd34,97611864,0,0x0,8
tick,0x7ff954e0fd34,97627403,0,0x0,8
tick,0x7ff954e0fd34,97642395,0,0x0,8
tick,0x7ff954e0fd34,97657332,0,0x0,8
tick,0x7ff954e0fd34,97672310,0,0x0,8
tick,0x7ff954e0fd34,97688051,0,0x0,8
tick,0x7ff954e0fd34,97704030,0,0x0,8
tick,0x7ff954e0fd34,97718971,0,0x0,8
tick,0x7ff954e0fd34,97734892,0,0x0,8
tick,0x7ff954e0fd34,97749888,0,0x0,8
tick,0x7ff954e0fd34,97765877,0,0x0,8
tick,0x7ff954e0fd34,97780775,0,0x0,8
tick,0x7ff954e0fd34,97795717,0,0x0,8
tick,0x7ff954e0fd34,97810710,0,0x0,8
tick,0x7ff954e0fd34,97826330,0,0x0,8
tick,0x7ff954e0fd34,97842205,0,0x0,8
tick,0x7ff954e0fd34,97857268,0,0x0,8
tick,0x7ff954e0fd34,97873135,0,0x0,8
tick,0x7ff954e0fd34,97888156,0,0x0,8
tick,0x7ff954e0fd34,97903616,0,0x0,8
tick,0x7ff954e0fd34,97919572,0,0x0,8
tick,0x7ff954e0fd34,97935507,0,0x0,8
tick,0x7ff954e0fd34,97951549,0,0x0,8
tick,0x7ff954e0fd34,97967563,0,0x0,8
tick,0x7ff954e0fd34,97982545,0,0x0,8
tick,0x7ff954e0fd34,97997904,0,0x0,8
tick,0x7ff954e0fd34,98013180,0,0x0,8
tick,0x7ff954e0fd34,98029212,0,0x0,8
tick,0x7ff954e0fd34,98045191,0,0x0,8
tick,0x7ff954e0fd34,98061121,0,0x0,8
tick,0x7ff954e0fd34,98076625,0,0x0,8
tick,0x7ff954e0fd34,98091587,0,0x0,8
tick,0x7ff954e0fd34,98107567,0,0x0,8
tick,0x7ff954e0fd34,98122677,0,0x0,8
tick,0x7ff954e0fd34,98138343,0,0x0,8
tick,0x7ff954e0fd34,98153831,0,0x0,8
tick,0x7ff954e0fd34,98169847,0,0x0,8
tick,0x7ff954e0fd34,98185396,0,0x0,8
tick,0x7ff954e0fd34,98201336,0,0x0,8
tick,0x7ff954e0fd34,98216640,0,0x0,8
tick,0x7ff954e0fd34,98232593,0,0x0,8
tick,0x7ff954e0fd34,98248265,0,0x0,8
tick,0x7ff954e0fd34,98264231,0,0x0,8
tick,0x7ff954e0fd34,98280202,0,0x0,8
tick,0x7ff954e0fd34,98296292,0,0x0,8
tick,0x7ff954e0fd34,98312228,0,0x0,8
tick,0x7ff954e0fd34,98328337,0,0x0,8
tick,0x7ff954e0fd34,98344105,0,0x0,8
tick,0x7ff954e0fd34,98359858,0,0x0,8
tick,0x7ff954e0fd34,98375515,0,0x0,8
tick,0x7ff954e0fd34,98391499,0,0x0,8
tick,0x7ff954e0fd34,98406458,0,0x0,8
tick,0x7ff954e0fd34,98421509,0,0x0,8
tick,0x7ff954e0fd34,98437440,0,0x0,8
tick,0x7ff954e0fd34,98453366,0,0x0,8
tick,0x7ff954e0fd34,98469312,0,0x0,8
tick,0x7ff954e0fd34,98485287,0,0x0,8
tick,0x7ff954e0fd34,98501241,0,0x0,8
tick,0x7ff954e0fd34,98516220,0,0x0,8
tick,0x7ff954e0fd34,98531155,0,0x0,8
tick,0x7ff954e0fd34,98546123,0,0x0,8
tick,0x7ff954e0fd34,98561112,0,0x0,8
tick,0x7ff954e0fd34,98577029,0,0x0,8
tick,0x7ff954e0fd34,98592971,0,0x0,8
tick,0x7ff954e0fd34,98607925,0,0x0,8
tick,0x7ff954e0fd34,98623894,0,0x0,8
tick,0x7ff954e0fd34,98638856,0,0x0,8
tick,0x7ff954e0fd34,98654810,0,0x0,8
tick,0x7ff954e0fd34,98669851,0,0x0,8
tick,0x7ff954e0fd34,98684755,0,0x0,8
tick,0x7ff954e0fd34,98700668,0,0x0,8
tick,0x7ff954e0fd34,98716628,0,0x0,8
tick,0x7ff954e0fd34,98732550,0,0x0,8
tick,0x7ff954e0fd34,98748524,0,0x0,8
tick,0x7ff954e0fd34,98764452,0,0x0,8
tick,0x7ff954e0fd34,98780422,0,0x0,8
tick,0x7ff954e0fd34,98796383,0,0x0,8
tick,0x7ff954e0fd34,98811355,0,0x0,8
tick,0x7ff954e0fd34,98826325,0,0x0,8
tick,0x7ff954e0fd34,98841669,0,0x0,8
tick,0x7ff954e0fd34,98857598,0,0x0,8
tick,0x7ff954e0fd34,98873548,0,0x0,8
tick,0x7ff954e0fd34,98889513,0,0x0,8
tick,0x7ff954e0fd34,98904921,0,0x0,8
tick,0x7ff954e0fd34,98920705,0,0x0,8
tick,0x7ff954e0fd34,98936185,0,0x0,8
tick,0x7ff954e0fd34,98952163,0,0x0,8
tick,0x7ff954e0fd34,98968087,0,0x0,8
tick,0x7ff954e0fd34,98983592,0,0x0,8
tick,0x7ff954e0fd34,98999583,0,0x0,8
tick,0x7ff954e0fd34,99015515,0,0x0,8
tick,0x7ff954e0fd34,99031577,0,0x0,8
tick,0x7ff954e0fd34,99047142,0,0x0,8
tick,0x7ff954e0fd34,99063069,0,0x0,8
tick,0x7ff954e0fd34,99078460,0,0x0,8
tick,0x7ff954e0fd34,99094093,0,0x0,8
tick,0x7ff954e0fd34,99109077,0,0x0,8
tick,0x7ff954e0fd34,99124983,0,0x0,8
tick,0x7ff954e0fd34,99140636,0,0x0,8
tick,0x7ff954e0fd34,99156372,0,0x0,8
tick,0x7ff954e0fd34,99172350,0,0x0,8
tick,0x7ff954e0fd34,99187287,0,0x0,8
tick,0x7ff954e0fd34,99203251,0,0x0,8
tick,0x7ff954e0fd34,99218200,0,0x0,8
tick,0x7ff954e0fd34,99234225,0,0x0,8
tick,0x7ff954e0fd34,99249661,0,0x0,8
tick,0x7ff954e0fd34,99265105,0,0x0,8
tick,0x7ff954e0fd34,99281060,0,0x0,8
tick,0x7ff954e0fd34,99297023,0,0x0,8
tick,0x7ff954e0fd34,99312999,0,0x0,8
tick,0x7ff954e0fd34,99328139,0,0x0,8
tick,0x7ff954e0fd34,99342906,0,0x0,8
tick,0x7ff954e0fd34,99357866,0,0x0,8
tick,0x7ff954e0fd34,99373472,0,0x0,8
tick,0x7ff954e0fd34,99389424,0,0x0,8
tick,0x7ff954e0fd34,99405380,0,0x0,8
tick,0x7ff954e0fd34,99421348,0,0x0,8
tick,0x7ff954e0fd34,99436354,0,0x0,8
tick,0x7ff954e0fd34,99452291,0,0x0,8
tick,0x7ff954e0fd34,99468177,0,0x0,8
tick,0x7ff954e0fd34,99484112,0,0x0,8
tick,0x7ff954e0fd34,99499101,0,0x0,8
tick,0x7ff954e0fd34,99514036,0,0x0,8
tick,0x7ff954e0fd34,99529041,0,0x0,8
tick,0x7ff954e0fd34,99544981,0,0x0,8
tick,0x7ff954e0fd34,99559920,0,0x0,8
tick,0x7ff954e0fd34,99575220,0,0x0,8
tick,0x7ff954e0fd34,99590370,0,0x0,8
tick,0x7ff954e0fd34,99606347,0,0x0,8
tick,0x7ff954e0fd34,99622287,0,0x0,8
tick,0x7ff954e0fd34,99637052,0,0x0,8
tick,0x7ff954e0fd34,99652054,0,0x0,8
tick,0x7ff954e0fd34,99666997,0,0x0,8
tick,0x7ff954e0fd34,99682494,0,0x0,8
tick,0x7ff954e0fd34,99698086,0,0x0,8
tick,0x7ff954e0fd34,99713107,0,0x0,8
tick,0x7ff954e0fd34,99729172,0,0x0,8
tick,0x7ff954e0fd34,99744513,0,0x0,8
tick,0x7ff954e0fd34,99760465,0,0x0,8
tick,0x7ff954e0fd34,99776457,0,0x0,8
tick,0x7ff954e0fd34,99792354,0,0x0,8
tick,0x7ff954e0fd34,99808377,0,0x0,8
tick,0x7ff954e0fd34,99824322,0,0x0,8
tick,0x7ff954e0fd34,99840311,0,0x0,8
tick,0x7ff954e0fd34,99855268,0,0x0,8
tick,0x7ff954e0fd34,99870227,0,0x0,8
tick,0x7ff954e0fd34,99886159,0,0x0,8
tick,0x7ff954e0fd34,99901148,0,0x0,8
tick,0x7ff954e0fd34,99917089,0,0x0,8
tick,0x7ff954e0fd34,99932110,0,0x0,8
tick,0x7ff954e0fd34,99947308,0,0x0,8
tick,0x7ff954e0fd34,99963073,0,0x0,8
tick,0x7ff954e0fd34,99978094,0,0x0,8
tick,0x7ff954e0fd34,99993151,0,0x0,8
tick,0x7ff954e0fd34,100008016,0,0x0,8
tick,0x7ff954e0fd34,100023020,0,0x0,8
tick,0x7ff954e0fd34,100038240,0,0x0,8
tick,0x7ff954e0fd34,100054147,0,0x0,8
tick,0x7ff954e0fd34,100069112,0,0x0,8
tick,0x7ff954e0fd34,100085104,0,0x0,8
tick,0x7ff954e0fd34,100100033,0,0x0,8
tick,0x7ff954e0fd34,100114974,0,0x0,8
tick,0x7ff954e0fd34,100129982,0,0x0,8
tick,0x7ff954e0fd34,100145962,0,0x0,8
tick,0x7ff954e0fd34,100160845,0,0x0,8
tick,0x7ff954e0fd34,100176979,0,0x0,8
tick,0x7ff954e0fd34,100192984,0,0x0,8
tick,0x7ff954e0fd34,100209012,0,0x0,8
tick,0x7ff954e0fd34,100224777,0,0x0,8
tick,0x7ff954e0fd34,100240652,0,0x0,8
tick,0x7ff954e0fd34,100256691,0,0x0,8
tick,0x7ff954e0fd34,100272047,0,0x0,8
tick,0x7ff954e0fd34,100288015,0,0x0,8
tick,0x7ff954e0fd34,100302982,0,0x0,8
tick,0x7ff954e0fd34,100318231,0,0x0,8
tick,0x7ff954e0fd34,100334265,0,0x0,8
tick,0x7ff954e0fd34,100349087,0,0x0,8
tick,0x7ff954e0fd34,100365195,0,0x0,8
tick,0x7ff954e0fd34,100380148,0,0x0,8
tick,0x7ff954e0fd34,100396085,0,0x0,8
tick,0x7ff954e0fd34,100411331,0,0x0,8
tick,0x7ff954e0fd34,100426285,0,0x0,8
tick,0x7ff954e0fd34,100441287,0,0x0,8
tick,0x7ff954e0fd34,100456204,0,0x0,8
tick,0x7ff954e0fd34,100472178,0,0x0,8
tick,0x7ff954e0fd34,100488129,0,0x0,8
tick,0x7ff954e0fd34,100504097,0,0x0,8
tick,0x7ff954e0fd34,100520081,0,0x0,8
tick,0x7ff954e0fd34,100536032,0,0x0,8
tick,0x7ff954e0fd34,100551220,0,0x0,8
tick,0x7ff954e0fd34,100567212,0,0x0,8
tick,0x7ff954e0fd34,100581913,0,0x0,8
tick,0x7ff954e0fd34,100597705,0,0x0,8
tick,0x7ff954e0fd34,100613693,0,0x0,8
tick,0x7ff954e0fd34,100629639,0,0x0,8
tick,0x7ff954e0fd34,100645618,0,0x0,8
tick,0x7ff954e0fd34,100661563,0,0x0,8
tick,0x7ff954e0fd34,100677265,0,0x0,8
tick,0x7ff954e0fd34,100692832,0,0x0,8
tick,0x7ff954e0fd34,100707449,0,0x0,8
tick,0x7ff954e0fd34,100723500,0,0x0,8
tick,0x7ff954e0fd34,100739430,0,0x0,8
tick,0x7ff954e0fd34,100754574,0,0x0,8
tick,0x7ff954e0fd34,100769516,0,0x0,8
tick,0x7ff954e0fd34,100784568,0,0x0,8
tick,0x7ff954e0fd34,100800280,0,0x0,8
tick,0x7ff954e0fd34,100816278,0,0x0,8
tick,0x7ff954e0fd34,100831623,0,0x0,8
tick,0x7ff954e0fd34,100847609,0,0x0,8
tick,0x7ff954e0fd34,100863061,0,0x0,8
tick,0x7ff954e0fd34,100878581,0,0x0,8
tick,0x7ff954e0fd34,100893517,0,0x0,8
tick,0x7ff954e0fd34,100909525,0,0x0,8
tick,0x7ff954e0fd34,100925439,0,0x0,8
tick,0x7ff954e0fd34,100941400,0,0x0,8
tick,0x7ff954e0fd34,100957314,0,0x0,8
tick,0x7ff954e0fd34,100972316,0,0x0,8
tick,0x7ff954e0fd34,100988280,0,0x0,8
tick,0x7ff954e0fd34,101003218,0,0x0,8
tick,0x7ff954e0fd34,101018145,0,0x0,8
tick,0x7ff954e0fd34,101033151,0,0x0,8
tick,0x7ff954e0fd34,101048416,0,0x0,8
tick,0x7ff954e0fd34,101064365,0,0x0,8
tick,0x7ff954e0fd34,101080348,0,0x0,8
tick,0x7ff954e0fd34,101096271,0,0x0,8
tick,0x7ff954e0fd34,101111282,0,0x0,8
tick,0x7ff954e0fd34,101127109,0,0x0,8
tick,0x7ff954e0fd34,101142157,0,0x0,8
tick,0x7ff954e0fd34,101157995,0,0x0,8
tick,0x7ff954e0fd34,101173561,0,0x0,8
tick,0x7ff954e0fd34,101188982,0,0x0,8
tick,0x7ff954e0fd34,101204915,0,0x0,8
tick,0x7ff954e0fd34,101220248,0,0x0,8
tick,0x7ff954e0fd34,101236152,0,0x0,8
tick,0x7ff954e0fd34,101251412,0,0x0,8
tick,0x7ff954e0fd34,101267296,0,0x0,8
tick,0x7ff954e0fd34,101283266,0,0x0,8
tick,0x7ff954e0fd34,101299211,0,0x0,8
tick,0x7ff954e0fd34,101315151,0,0x0,8
tick,0x7ff954e0fd34,101330687,0,0x0,8
tick,0x7ff954e0fd34,101346240,0,0x0,8
tick,0x7ff954e0fd34,101361490,0,0x0,8
tick,0x7ff954e0fd34,101377362,0,0x0,8
tick,0x7ff954e0fd34,101392686,0,0x0,8
tick,0x7ff954e0fd34,101407695,0,0x0,8
tick,0x7ff954e0fd34,101423669,0,0x0,8
tick,0x7ff954e0fd34,101438462,0,0x0,8
tick,0x7ff954e0fd34,101454422,0,0x0,8
tick,0x7ff954e0fd34,101470360,0,0x0,8
tick,0x7ff954e0fd34,101486338,0,0x0,8
tick,0x7ff954e0fd34,101502307,0,0x0,8
tick,0x7ff954e0fd34,101517229,0,0x0,8
tick,0x7ff954e0fd34,101532174,0,0x0,8
tick,0x7ff954e0fd34,101547173,0,0x0,8
tick,0x7ff954e0fd34,101562122,0,0x0,8
tick,0x7ff954e0fd34,101578044,0,0x0,8
tick,0x7ff954e0fd34,101593019,0,0x0,8
tick,0x7ff954e0fd34,101607985,0,0x0,8
tick,0x7ff954e0fd34,101622947,0,0x0,8
tick,0x7ff954e0fd34,101637923,0,0x0,8
tick,0x7ff954e0fd34,101653862,0,0x0,8
tick,0x7ff954e0fd34,101668883,0,0x0,8
tick,0x7ff954e0fd34,101684845,0,0x0,8
tick,0x7ff954e0fd34,101699787,0,0x0,8
tick,0x7ff954e0fd34,101714786,0,0x0,8
tick,0x7ff954e0fd34,101729802,0,0x0,8
tick,0x7ff954e0fd34,101745720,0,0x0,8
tick,0x7ff954e0fd34,101760644,0,0x0,8
tick,0x7ff954e0fd34,101776656,0,0x0,8
tick,0x7ff954e0fd34,101792875,0,0x0,8
tick,0x7ff954e0fd34,101809127,0,0x0,8
tick,0x7ff954e0fd34,101823494,0,0x0,8
tick,0x7ff954e0fd34,101838538,0,0x0,8
tick,0x7ff954e0fd34,101854409,0,0x0,8
tick,0x7ff954e0fd34,101870477,0,0x0,8
tick,0x7ff954e0fd34,101886017,0,0x0,8
tick,0x7ff954e0fd34,101900858,0,0x0,8
tick,0x7ff954e0fd34,101915999,0,0x0,8
tick,0x7ff954e0fd34,101931720,0,0x0,8
tick,0x7ff954e0fd34,101947711,0,0x0,8
tick,0x7ff954e0fd34,101963377,0,0x0,8
tick,0x7ff954e0fd34,101978798,0,0x0,8
tick,0x7ff954e0fd34,101993832,0,0x0,8
tick,0x7ff954e0fd34,102009783,0,0x0,8
tick,0x7ff954e0fd34,102024434,0,0x0,8
tick,0x7ff954e0fd34,102040335,0,0x0,8
tick,0x7ff954e0fd34,102056477,0,0x0,8
tick,0x7ff954e0fd34,102072343,0,0x0,8
tick,0x7ff954e0fd34,102087209,0,0x0,8
tick,0x7ff954e0fd34,102102999,0,0x0,8
tick,0x7ff954e0fd34,102118050,0,0x0,8
tick,0x7ff954e0fd34,102134002,0,0x0,8
tick,0x7ff954e0fd34,102149962,0,0x0,8
tick,0x7ff954e0fd34,102165841,0,0x0,8
tick,0x7ff954e0fd34,102181808,0,0x0,8
tick,0x7ff954e0fd34,102196756,0,0x0,8
tick,0x7ff954e0fd34,102212715,0,0x0,8
tick,0x7ff954e0fd34,102227669,0,0x0,8
tick,0x7ff954e0fd34,102243659,0,0x0,8
tick,0x7ff954e0fd34,102259632,0,0x0,8
tick,0x7ff954e0fd34,102275545,0,0x0,8
tick,0x7ff954e0fd34,102291493,0,0x0,8
tick,0x7ff954e0fd34,102306476,0,0x0,8
tick,0x7ff954e0fd34,102321449,0,0x0,8
tick,0x7ff954e0fd34,102336426,0,0x0,8
tick,0x7ff954e0fd34,102351616,0,0x0,8
tick,0x7ff954e0fd34,102367612,0,0x0,8
tick,0x7ff954e0fd34,102382545,0,0x0,8
tick,0x7ff954e0fd34,102397504,0,0x0,8
tick,0x7ff954e0fd34,102412791,0,0x0,8
tick,0x7ff954e0fd34,102428779,0,0x0,8
tick,0x7ff954e0fd34,102444697,0,0x0,8
tick,0x7ff954e0fd34,102459952,0,0x0,8
tick,0x7ff954e0fd34,102475556,0,0x0,8
tick,0x7ff954e0fd34,102491507,0,0x0,8
tick,0x7ff954e0fd34,102507430,0,0x0,8
tick,0x7ff954e0fd34,102523401,0,0x0,8
tick,0x7ff954e0fd34,102539322,0,0x0,8
tick,0x7ff954e0fd34,102555261,0,0x0,8
tick,0x7ff954e0fd34,102570544,0,0x0,8
tick,0x7ff954e0fd34,102586147,0,0x0,8
tick,0x7ff954e0fd34,102601432,0,0x0,8
tick,0x7ff954e0fd34,102616723,0,0x0,8
tick,0x7ff954e0fd34,102631686,0,0x0,8
tick,0x7ff954e0fd34,102647652,0,0x0,8
tick,0x7ff954e0fd34,102663611,0,0x0,8
tick,0x7ff954e0fd34,102679547,0,0x0,8
tick,0x7ff954e0fd34,102694789,0,0x0,8
tick,0x7ff954e0fd34,102709737,0,0x0,8
tick,0x7ff954e0fd34,102725754,0,0x0,8
tick,0x7ff954e0fd34,102741685,0,0x0,8
tick,0x7ff954e0fd34,102757610,0,0x0,8
tick,0x7ff954e0fd34,102772571,0,0x0,8
tick,0x7ff954e0fd34,102788079,0,0x0,8
tick,0x7ff954e0fd34,102803438,0,0x0,8
tick,0x7ff954e0fd34,102819163,0,0x0,8
tick,0x7ff954e0fd34,102834497,0,0x0,8
tick,0x7ff954e0fd34,102850305,0,0x0,8
tick,0x7ff954e0fd34,102865699,0,0x0,8
tick,0x7ff954e0fd34,102880651,0,0x0,8
tick,0x7ff954e0fd34,102896626,0,0x0,8
tick,0x7ff954e0fd34,102911472,0,0x0,8
tick,0x7ff954e0fd34,102927290,0,0x0,8
tick,0x7ff954e0fd34,102942410,0,0x0,8
tick,0x7ff954e0fd34,102958361,0,0x0,8
tick,0x7ff954e0fd34,102973323,0,0x0,8
tick,0x7ff954e0fd34,102988888,0,0x0,8
tick,0x7ff954e0fd34,103004877,0,0x0,8
tick,0x7ff954e0fd34,103019827,0,0x0,8
tick,0x7ff954e0fd34,103035775,0,0x0,8
tick,0x7ff954e0fd34,103051795,0,0x0,8
tick,0x7ff954e0fd34,103067691,0,0x0,8
tick,0x7ff954e0fd34,103083691,0,0x0,8
tick,0x7ff954e0fd34,103099307,0,0x0,8
tick,0x7ff954e0fd34,103115271,0,0x0,8
tick,0x7ff954e0fd34,103130474,0,0x0,8
tick,0x7ff954e0fd34,103146464,0,0x0,8
tick,0x7ff954e0fd34,103161455,0,0x0,8
tick,0x7ff954e0fd34,103177376,0,0x0,8
tick,0x7ff954e0fd34,103192316,0,0x0,8
tick,0x7ff954e0fd34,103207278,0,0x0,8
tick,0x7ff954e0fd34,103223247,0,0x0,8
tick,0x7ff954e0fd34,103239223,0,0x0,8
tick,0x7ff954e0fd34,103255153,0,0x0,8
tick,0x7ff954e0fd34,103271109,0,0x0,8
tick,0x7ff954e0fd34,103287068,0,0x0,8
tick,0x7ff954e0fd34,103302320,0,0x0,8
tick,0x7ff954e0fd34,103317836,0,0x0,8
tick,0x7ff954e0fd34,103333824,0,0x0,8
tick,0x7ff954e0fd34,103349788,0,0x0,8
tick,0x7ff954e0fd34,103365720,0,0x0,8
tick,0x7ff954e0fd34,103380673,0,0x0,8
tick,0x7ff954e0fd34,103395658,0,0x0,8
tick,0x7ff954e0fd34,103411641,0,0x0,8
tick,0x7ff954e0fd34,103426668,0,0x0,8
tick,0x7ff954e0fd34,103441593,0,0x0,8
tick,0x7ff954e0fd34,103456546,0,0x0,8
tick,0x7ff954e0fd34,103471686,0,0x0,8
tick,0x7ff954e0fd34,103487610,0,0x0,8
tick,0x7ff954e0fd34,103503642,0,0x0,8
tick,0x7ff954e0fd34,103519092,0,0x0,8
tick,0x7ff954e0fd34,103535069,0,0x0,8
tick,0x7ff954e0fd34,103551043,0,0x0,8
tick,0x7ff954e0fd34,103566437,0,0x0,8
tick,0x7ff954e0fd34,103582409,0,0x0,8
tick,0x7ff954e0fd34,103598342,0,0x0,8
tick,0x7ff954e0fd34,103614306,0,0x0,8
tick,0x7ff954e0fd34,103629457,0,0x0,8
tick,0x7ff954e0fd34,103644889,0,0x0,8
tick,0x7ff954e0fd34,103660260,0,0x0,8
tick,0x7ff954e0fd34,103675418,0,0x0,8
tick,0x7ff954e0fd34,103691062,0,0x0,8
tick,0x7ff954e0fd34,103706001,0,0x0,8
tick,0x7ff954e0fd34,103720754,0,0x0,8
tick,0x7ff954e0fd34,103736591,0,0x0,8
tick,0x7ff954e0fd34,103752398,0,0x0,8
tick,0x7ff954e0fd34,103767971,0,0x0,8
tick,0x7ff954e0fd34,103783622,0,0x0,8
tick,0x7ff954e0fd34,103798533,0,0x0,8
tick,0x7ff954e0fd34,103813500,0,0x0,8
tick,0x7ff954e0fd34,103828451,0,0x0,8
tick,0x7ff954e0fd34,103843462,0,0x0,8
tick,0x7ff954e0fd34,103859404,0,0x0,8
tick,0x7ff954e0fd34,103875385,0,0x0,8
tick,0x7ff954e0fd34,103891289,0,0x0,8
tick,0x7ff954e0fd34,103907296,0,0x0,8
tick,0x7ff954e0fd34,103923222,0,0x0,8
tick,0x7ff954e0fd34,103939181,0,0x0,8
tick,0x7ff954e0fd34,103954129,0,0x0,8
tick,0x7ff954e0fd34,103970081,0,0x0,8
tick,0x7ff954e0fd34,103985828,0,0x0,8
tick,0x7ff954e0fd34,104001069,0,0x0,8
tick,0x7ff954e0fd34,104017139,0,0x0,8
tick,0x7ff954e0fd34,104032898,0,0x0,8
tick,0x7ff954e0fd34,104048784,0,0x0,8
tick,0x7ff954e0fd34,104064353,0,0x0,8
tick,0x7ff954e0fd34,104080374,0,0x0,8
tick,0x7ff954e0fd34,104096259,0,0x0,8
tick,0x7ff954e0fd34,104111521,0,0x0,8
tick,0x7ff954e0fd34,104126405,0,0x0,8
tick,0x7ff954e0fd34,104142351,0,0x0,8
tick,0x7ff954e0fd34,104157877,0,0x0,8
tick,0x7ff954e0fd34,104172922,0,0x0,8
tick,0x7ff954e0fd34,104187905,0,0x0,8
tick,0x7ff954e0fd34,104202909,0,0x0,8
tick,0x7ff954e0fd34,104217674,0,0x0,8
tick,0x7ff954e0fd34,104232659,0,0x0,8
tick,0x7ff954e0fd34,104247788,0,0x0,8
tick,0x7ff954e0fd34,104263442,0,0x0,8
tick,0x7ff954e0fd34,104278550,0,0x0,8
tick,0x7ff954e0fd34,104294506,0,0x0,8
tick,0x7ff954e0fd34,104310176,0,0x0,8
tick,0x7ff954e0fd34,104325146,0,0x0,8
tick,0x7ff954e0fd34,104341064,0,0x0,8
tick,0x7ff954e0fd34,104356008,0,0x0,8
tick,0x7ff954e0fd34,104371331,0,0x0,8
tick,0x7ff954e0fd34,104386888,0,0x0,8
tick,0x7ff954e0fd34,104402862,0,0x0,8
tick,0x7ff954e0fd34,104418816,0,0x0,8
tick,0x7ff954e0fd34,104434810,0,0x0,8
tick,0x7ff954e0fd34,104450316,0,0x0,8
tick,0x7ff954e0fd34,104466260,0,0x0,8
tick,0x7ff954e0fd34,104482234,0,0x0,8
tick,0x7ff954e0fd34,104497661,0,0x0,8
tick,0x7ff954e0fd34,104513715,0,0x0,8
tick,0x7ff954e0fd34,104529359,0,0x0,8
tick,0x7ff954e0fd34,104544853,0,0x0,8
tick,0x7ff954e0fd34,104559836,0,0x0,8
tick,0x7ff954e0fd34,104574763,0,0x0,8
tick,0x7ff954e0fd34,104589814,0,0x0,8
tick,0x7ff954e0fd34,104605494,0,0x0,8
tick,0x7ff954e0fd34,104621482,0,0x0,8
tick,0x7ff954e0fd34,104636974,0,0x0,8
tick,0x7ff954e0fd34,104651892,0,0x0,8
tick,0x7ff954e0fd34,104667008,0,0x0,8
tick,0x7ff954e0fd34,104681756,0,0x0,8
tick,0x7ff954e0fd34,104696754,0,0x0,8
tick,0x7ff954e0fd34,104712811,0,0x0,8
tick,0x7ff954e0fd34,104728437,0,0x0,8
tick,0x7ff954e0fd34,104743599,0,0x0,8
tick,0x7ff954e0fd34,104758837,0,0x0,8
tick,0x7ff954e0fd34,104774576,0,0x0,8
tick,0x7ff954e0fd34,104789566,0,0x0,8
tick,0x7ff954e0fd34,104805267,0,0x0,8
tick,0x7ff954e0fd34,104820659,0,0x0,8
tick,0x7ff954e0fd34,104836611,0,0x0,8
tick,0x7ff954e0fd34,104851780,0,0x0,8
tick,0x7ff954e0fd34,104867035,0,0x0,8
tick,0x7ff954e0fd34,104882481,0,0x0,8
tick,0x7ff954e0fd34,104897629,0,0x0,8
tick,0x7ff954e0fd34,104913180,0,0x0,8
tick,0x7ff954e0fd34,104928443,0,0x0,8
tick,0x7ff954e0fd34,104943366,0,0x0,8
tick,0x7ff954e0fd34,104959329,0,0x0,8
tick,0x7ff954e0fd34,104975240,0,0x0,8
tick,0x7ff954e0fd34,104991204,0,0x0,8
tick,0x7ff954e0fd34,105007152,0,0x0,8
tick,0x7ff954e0fd34,105023111,0,0x0,8
tick,0x7ff954e0fd34,105039063,0,0x0,8
tick,0x7ff954e0fd34,105054030,0,0x0,8
tick,0x7ff954e0fd34,105068968,0,0x0,8
tick,0x7ff954e0fd34,105083992,0,0x0,8
tick,0x7ff954e0fd34,105098909,0,0x0,8
tick,0x7ff954e0fd34,105114883,0,0x0,8
tick,0x7ff954e0fd34,105130339,0,0x0,8
tick,0x7ff954e0fd34,105146015,0,0x0,8
tick,0x7ff954e0fd34,105161398,0,0x0,8
tick,0x7ff954e0fd34,105176607,0,0x0,8
tick,0x7ff954e0fd34,105192361,0,0x0,8
tick,0x7ff954e0fd34,105208208,0,0x0,8
tick,0x7ff954e0fd34,105224135,0,0x0,8
tick,0x7ff954e0fd34,105240201,0,0x0,8
tick,0x7ff954e0fd34,105256160,0,0x0,8
tick,0x7ff954e0fd34,105272135,0,0x0,8
tick,0x7ff954e0fd34,105287553,0,0x0,8
tick,0x7ff954e0fd34,105303517,0,0x0,8
tick,0x7ff954e0fd34,105319235,0,0x0,8
tick,0x7ff954e0fd34,105335087,0,0x0,8
tick,0x7ff954e0fd34,105351027,0,0x0,8
tick,0x7ff954e0fd34,105365965,0,0x0,8
tick,0x7ff954e0fd34,105381965,0,0x0,8
tick,0x7ff954e0fd34,105397926,0,0x0,8
tick,0x7ff954e0fd34,105413542,0,0x0,8
tick,0x7ff954e0fd34,105429504,0,0x0,8
tick,0x7ff954e0fd34,105445464,0,0x0,8
tick,0x7ff954e0fd34,105461420,0,0x0,8
tick,0x7ff954e0fd34,105477388,0,0x0,8
tick,0x7ff954e0fd34,105493349,0,0x0,8
tick,0x7ff954e0fd34,105509311,0,0x0,8
tick,0x7ff954e0fd34,105525287,0,0x0,8
tick,0x7ff954e0fd34,105541198,0,0x0,8
tick,0x7ff954e0fd34,105557153,0,0x0,8
tick,0x7ff954e0fd34,105572672,0,0x0,8
tick,0x7ff954e0fd34,105588724,0,0x0,8
tick,0x7ff954e0fd34,105604624,0,0x0,8
tick,0x7ff954e0fd34,105620212,0,0x0,8
tick,0x7ff954e0fd34,105636129,0,0x0,8
tick,0x7ff954e0fd34,105652071,0,0x0,8
tick,0x7ff954e0fd34,105668037,0,0x0,8
tick,0x7ff954e0fd34,105683456,0,0x0,8
tick,0x7ff954e0fd34,105699460,0,0x0,8
tick,0x7ff954e0fd34,105715434,0,0x0,8
tick,0x7ff954e0fd34,105731384,0,0x0,8
tick,0x7ff954e0fd34,105746071,0,0x0,8
tick,0x7ff954e0fd34,105762078,0,0x0,8
tick,0x7ff954e0fd34,105777823,0,0x0,8
tick,0x7ff954e0fd34,105793218,0,0x0,8
tick,0x7ff954e0fd34,105808163,0,0x0,8
tick,0x7ff954e0fd34,105824093,0,0x0,8
tick,0x7ff954e0fd34,105839551,0,0x0,8
tick,0x7ff954e0fd34,105855142,0,0x0,8
tick,0x7ff954e0fd34,105870073,0,0x0,8
tick,0x7ff954e0fd34,105885710,0,0x0,8
tick,0x7ff954e0fd34,105901606,0,0x0,8
tick,0x7ff954e0fd34,105917637,0,0x0,8
tick,0x7ff954e0fd34,105933495,0,0x0,8
tick,0x7ff954e0fd34,105948671,0,0x0,8
tick,0x7ff954e0fd34,105964628,0,0x0,8
tick,0x7ff954e0fd34,105979570,0,0x0,8
tick,0x7ff954e0fd34,105995024,0,0x0,8
tick,0x7ff954e0fd34,106009931,0,0x0,8
tick,0x7ff954e0fd34,106025659,0,0x0,8
tick,0x7ff954e0fd34,106041111,0,0x0,8
tick,0x7ff954e0fd34,106057038,0,0x0,8
tick,0x7ff954e0fd34,106072366,0,0x0,8
tick,0x7ff954e0fd34,106088324,0,0x0,8
tick,0x7ff954e0fd34,106103673,0,0x0,8
tick,0x7ff954e0fd34,106119502,0,0x0,8
tick,0x7ff954e0fd34,106135459,0,0x0,8
tick,0x7ff954e0fd34,106150409,0,0x0,8
tick,0x7ff954e0fd34,106165335,0,0x0,8
tick,0x7ff954e0fd34,106180281,0,0x0,8
tick,0x7ff954e0fd34,106195261,0,0x0,8
tick,0x7ff954e0fd34,106210195,0,0x0,8
tick,0x7ff954e0fd34,106226161,0,0x0,8
tick,0x7ff954e0fd34,106242126,0,0x0,8
tick,0x7ff954e0fd34,106258071,0,0x0,8
tick,0x7ff954e0fd34,106274034,0,0x0,8
tick,0x7ff954e0fd34,106289085,0,0x0,8
tick,0x7ff954e0fd34,106304043,0,0x0,8
tick,0x7ff954e0fd34,106319398,0,0x0,8
tick,0x7ff954e0fd34,106334384,0,0x0,8
tick,0x7ff954e0fd34,106350338,0,0x0,8
tick,0x7ff954e0fd34,106366272,0,0x0,8
tick,0x7ff954e0fd34,106382378,0,0x0,8
tick,0x7ff954e0fd34,106398319,0,0x0,8
tick,0x7ff954e0fd34,106414238,0,0x0,8
tick,0x7ff954e0fd34,106429720,0,0x0,8
tick,0x7ff954e0fd34,106445626,0,0x0,8
tick,0x7ff954e0fd34,106461586,0,0x0,8
tick,0x7ff954e0fd34,106476504,0,0x0,8
tick,0x7ff954e0fd34,106492537,0,0x0,8
tick,0x7ff954e0fd34,106508452,0,0x0,8
tick,0x7ff954e0fd34,106524451,0,0x0,8
tick,0x7ff954e0fd34,106539366,0,0x0,8
tick,0x7ff954e0fd34,106555316,0,0x0,8
tick,0x7ff954e0fd34,106570254,0,0x0,8
tick,0x7ff954e0fd34,106585235,0,0x0,8
tick,0x7ff954e0fd34,106601176,0,0x0,8
tick,0x7ff954e0fd34,106616150,0,0x0,8
tick,0x7ff954e0fd34,106631138,0,0x0,8
tick,0x7ff954e0fd34,106646066,0,0x0,8
tick,0x7ff954e0fd34,106662043,0,0x0,8
tick,0x7ff954e0fd34,106677058,0,0x0,8
tick,0x7ff954e0fd34,106692957,0,0x0,8
tick,0x7ff954e0fd34,106707914,0,0x0,8
tick,0x7ff954e0fd34,106723866,0,0x0,8
tick,0x7ff954e0fd34,106739220,0,0x0,8
tick,0x7ff954e0fd34,106754124,0,0x0,8
tick,0x7ff954e0fd34,106770217,0,0x0,8
tick,0x7ff954e0fd34,106785215,0,0x0,8
tick,0x7ff954e0fd34,106801141,0,0x0,8
tick,0x7ff954e0fd34,106817002,0,0x0,8
tick,0x7ff954e0fd34,106832963,0,0x0,8
tick,0x7ff954e0fd34,106847687,0,0x0,8
tick,0x7ff954e0fd34,106863291,0,0x0,8
tick,0x7ff954e0fd34,106879404,0,0x0,8
tick,0x7ff954e0fd34,106895331,0,0x0,8
tick,0x7ff954e0fd34,106910844,0,0x0,8
tick,0x7ff954e0fd34,106926802,0,0x0,8
tick,0x7ff954e0fd34,106941767,0,0x0,8
tick,0x7ff954e0fd34,106957731,0,0x0,8
tick,0x7ff954e0fd34,106972632,0,0x0,8
tick,0x7ff954e0fd34,106988599,0,0x0,8
tick,0x7ff954e0fd34,107004557,0,0x0,8
tick,0x7ff954e0fd34,107020561,0,0x0,8
tick,0x7ff954e0fd34,107036477,0,0x0,8
tick,0x7ff954e0fd34,107051428,0,0x0,8
tick,0x7ff954e0fd34,107067494,0,0x0,8
tick,0x7ff954e0fd34,107082621,0,0x0,8
tick,0x7ff954e0fd34,107098066,0,0x0,8
tick,0x7ff954e0fd34,107114033,0,0x0,8
tick,0x7ff954e0fd34,107129404,0,0x0,8
tick,0x7ff954e0fd34,107145294,0,0x0,8
tick,0x7ff954e0fd34,107161340,0,0x0,8
tick,0x7ff954e0fd34,107176252,0,0x0,8
tick,0x7ff954e0fd34,107191181,0,0x0,8
tick,0x7ff954e0fd34,107206793,0,0x0,8
tick,0x7ff954e0fd34,107222277,0,0x0,8
tick,0x7ff954e0fd34,107237103,0,0x0,8
tick,0x7ff954e0fd34,107253053,0,0x0,8
tick,0x7ff954e0fd34,107268987,0,0x0,8
tick,0x7ff954e0fd34,107284940,0,0x0,8
tick,0x7ff954e0fd34,107300270,0,0x0,8
tick,0x7ff954e0fd34,107316259,0,0x0,8
tick,0x7ff954e0fd34,107332223,0,0x0,8
tick,0x7ff954e0fd34,107347670,0,0x0,8
tick,0x7ff954e0fd34,107363646,0,0x0,8
tick,0x7ff954e0fd34,107379615,0,0x0,8
tick,0x7ff954e0fd34,107395527,0,0x0,8
tick,0x7ff954e0fd34,107411483,0,0x0,8
tick,0x7ff954e0fd34,107426430,0,0x0,8
tick,0x7ff954e0fd34,107441410,0,0x0,8
tick,0x7ff954e0fd34,107456354,0,0x0,8
tick,0x7ff954e0fd34,107471318,0,0x0,8
tick,0x7ff954e0fd34,107486272,0,0x0,8
tick,0x7ff954e0fd34,107501223,0,0x0,8
tick,0x7ff954e0fd34,107516861,0,0x0,8
tick,0x7ff954e0fd34,107532835,0,0x0,8
tick,0x7ff954e0fd34,107547809,0,0x0,8
tick,0x7ff954e0fd34,107563758,0,0x0,8
tick,0x7ff954e0fd34,107578706,0,0x0,8
tick,0x7ff954e0fd34,107594657,0,0x0,8
tick,0x7ff954e0fd34,107609883,0,0x0,8
tick,0x7ff954e0fd34,107624907,0,0x0,8
tick,0x7ff954e0fd34,107640820,0,0x0,8
tick,0x7ff954e0fd34,107656777,0,0x0,8
tick,0x7ff954e0fd34,107672754,0,0x0,8
tick,0x7ff954e0fd34,107688722,0,0x0,8
tick,0x7ff954e0fd34,107704639,0,0x0,8
tick,0x7ff954e0fd34,107720595,0,0x0,8
tick,0x7ff954e0fd34,107736579,0,0x0,8
tick,0x7ff954e0fd34,107751774,0,0x0,8
tick,0x7ff954e0fd34,107766589,0,0x0,8
tick,0x7ff954e0fd34,107781277,0,0x0,8
tick,0x7ff954e0fd34,107796929,0,0x0,8
tick,0x7ff954e0fd34,107812782,0,0x0,8
tick,0x7ff954e0fd34,107828809,0,0x0,8
tick,0x7ff954e0fd34,107844434,0,0x0,8
tick,0x7ff954e0fd34,107859823,0,0x0,8
tick,0x7ff954e0fd34,107875739,0,0x0,8
tick,0x7ff954e0fd34,107890704,0,0x0,8
tick,0x7ff954e0fd34,107906666,0,0x0,8
tick,0x7ff954e0fd34,107921445,0,0x0,8
tick,0x7ff954e0fd34,107937366,0,0x0,8
tick,0x7ff954e0fd34,107953352,0,0x0,8
tick,0x7ff954e0fd34,107969418,0,0x0,8
tick,0x7ff954e0fd34,107984396,0,0x0,8
tick,0x7ff954e0fd34,107999346,0,0x0,8
tick,0x7ff954e0fd34,108014286,0,0x0,8
tick,0x7ff954e0fd34,108029898,0,0x0,8
tick,0x7ff954e0fd34,108045943,0,0x0,8
tick,0x7ff954e0fd34,108061893,0,0x0,8
tick,0x7ff954e0fd34,108077848,0,0x0,8
tick,0x7ff954e0fd34,108093835,0,0x0,8
tick,0x7ff954e0fd34,108109769,0,0x0,8
tick,0x7ff954e0fd34,108125721,0,0x0,8
tick,0x7ff954e0fd34,108141682,0,0x0,8
tick,0x7ff954e0fd34,108157721,0,0x0,8
tick,0x7ff954e0fd34,108173587,0,0x0,8
tick,0x7ff954e0fd34,108189553,0,0x0,8
tick,0x7ff954e0fd34,108205514,0,0x0,8
tick,0x7ff954e0fd34,108221462,0,0x0,8
tick,0x7ff954e0fd34,108236164,0,0x0,8
tick,0x7ff954e0fd34,108251737,0,0x0,8
tick,0x7ff954e0fd34,108266696,0,0x0,8
tick,0x7ff954e0fd34,108282682,0,0x0,8
tick,0x7ff954e0fd34,108297644,0,0x0,8
tick,0x7ff954e0fd34,108312986,0,0x0,8
tick,0x7ff954e0fd34,108327826,0,0x0,8
tick,0x7ff954e0fd34,108343029,0,0x0,8
tick,0x7ff954e0fd34,108358460,0,0x0,8
tick,0x7ff954e0fd34,108373629,0,0x0,8
tick,0x7ff954e0fd34,108389613,0,0x0,8
tick,0x7ff954e0fd34,108405564,0,0x0,8
tick,0x7ff954e0fd34,108421515,0,0x0,8
tick,0x7ff954e0fd34,108437528,0,0x0,8
tick,0x7ff954e0fd34,108453467,0,0x0,8
tick,0x7ff954e0fd34,108468382,0,0x0,8
tick,0x7ff954e0fd34,108483602,0,0x0,8
tick,0x7ff954e0fd34,108499354,0,0x0,8
tick,0x7ff954e0fd34,108515315,0,0x0,8
tick,0x7ff954e0fd34,108531341,0,0x0,8
tick,0x7ff954e0fd34,108547322,0,0x0,8
tick,0x7ff954e0fd34,108562572,0,0x0,8
tick,0x7ff954e0fd34,108577837,0,0x0,8
tick,0x7ff954e0fd34,108593319,0,0x0,8
tick,0x7ff954e0fd34,108609253,0,0x0,8
tick,0x7ff954e0fd34,108625099,0,0x0,8
tick,0x7ff954e0fd34,108641081,0,0x0,8
tick,0x7ff954e0fd34,108657018,0,0x0,8
tick,0x7ff954e0fd34,108672058,0,0x0,8
tick,0x7ff954e0fd34,108687487,0,0x0,8
tick,0x7ff954e0fd34,108703430,0,0x0,8
tick,0x7ff954e0fd34,108719465,0,0x0,8
tick,0x7ff954e0fd34,108734633,0,0x0,8
tick,0x7ff954e0fd34,108750638,0,0x0,8
tick,0x7ff954e0fd34,108765770,0,0x0,8
tick,0x7ff954e0fd34,108781707,0,0x0,8
tick,0x7ff954e0fd34,108797362,0,0x0,8
tick,0x7ff954e0fd34,108812344,0,0x0,8
tick,0x7ff954e0fd34,108827290,0,0x0,8
tick,0x7ff954e0fd34,108842263,0,0x0,8
tick,0x7ff954e0fd34,108857213,0,0x0,8
tick,0x7ff954e0fd34,108873161,0,0x0,8
tick,0x7ff954e0fd34,108888133,0,0x0,8
tick,0x7ff954e0fd34,108904074,0,0x0,8
tick,0x7ff954e0fd34,108920105,0,0x0,8
tick,0x7ff954e0fd34,108935044,0,0x0,8
tick,0x7ff954e0fd34,108950967,0,0x0,8
tick,0x7ff954e0fd34,108965910,0,0x0,8
tick,0x7ff954e0fd34,108981951,0,0x0,8
tick,0x7ff954e0fd34,108997834,0,0x0,8
tick,0x7ff954e0fd34,109013782,0,0x0,8
tick,0x7ff954e0fd34,109028751,0,0x0,8
tick,0x7ff954e0fd34,109043698,0,0x0,8
tick,0x7ff954e0fd34,109059423,0,0x0,8
tick,0x7ff954e0fd34,109075178,0,0x0,8
tick,0x7ff954e0fd34,109091095,0,0x0,8
tick,0x7ff954e0fd34,109106659,0,0x0,8
tick,0x7ff954e0fd34,109122684,0,0x0,8
tick,0x7ff954e0fd34,109138518,0,0x0,8
tick,0x7ff954e0fd34,109154484,0,0x0,8
tick,0x7ff954e0fd34,109170411,0,0x0,8
tick,0x7ff954e0fd34,109186360,0,0x0,8
tick,0x7ff954e0fd34,109202322,0,0x0,8
tick,0x7ff954e0fd34,109217978,0,0x0,8
tick,0x7ff954e0fd34,109233998,0,0x0,8
tick,0x7ff954e0fd34,109249713,0,0x0,8
tick,0x7ff954e0fd34,109265573,0,0x0,8
tick,0x7ff954e0fd34,109280924,0,0x0,8
tick,0x7ff954e0fd34,109296870,0,0x0,8
tick,0x7ff954e0fd34,109312840,0,0x0,8
tick,0x7ff954e0fd34,109328700,0,0x0,8
tick,0x7ff954e0fd34,109343828,0,0x0,8
tick,0x7ff954e0fd34,109359814,0,0x0,8
tick,0x7ff954e0fd34,109375303,0,0x0,8
tick,0x7ff954e0fd34,109391361,0,0x0,8
tick,0x7ff954e0fd34,109406881,0,0x0,8
tick,0x7ff954e0fd34,109421855,0,0x0,8
tick,0x7ff954e0fd34,109437553,0,0x0,8
tick,0x7ff954e0fd34,109453600,0,0x0,8
tick,0x7ff954e0fd34,109468831,0,0x0,8
tick,0x7ff954e0fd34,109484221,0,0x0,8
tick,0x7ff954e0fd34,109499337,0,0x0,8
tick,0x7ff954e0fd34,109514139,0,0x0,8
tick,0x7ff954e0fd34,109530066,0,0x0,8
tick,0x7ff954e0fd34,109546054,0,0x0,8
tick,0x7ff954e0fd34,109561515,0,0x0,8
tick,0x7ff954e0fd34,109577444,0,0x0,8
tick,0x7ff954e0fd34,109593399,0,0x0,8
tick,0x7ff954e0fd34,109609113,0,0x0,8
tick,0x7ff954e0fd34,109624609,0,0x0,8
tick,0x7ff954e0fd34,109640558,0,0x0,8
tick,0x7ff954e0fd34,109656470,0,0x0,8
tick,0x7ff954e0fd34,109672473,0,0x0,8
tick,0x7ff954e0fd34,109687399,0,0x0,8
tick,0x7ff954e0fd34,109703367,0,0x0,8
tick,0x7ff954e0fd34,109718844,0,0x0,8
tick,0x7ff954e0fd34,109734904,0,0x0,8
tick,0x7ff954e0fd34,109750749,0,0x0,8
tick,0x7ff954e0fd34,109765715,0,0x0,8
tick,0x7ff954e0fd34,109781698,0,0x0,8
tick,0x7ff954e0fd34,109796639,0,0x0,8
tick,0x7ff954e0fd34,109811592,0,0x0,8
tick,0x7ff954e0fd34,109826591,0,0x0,8
tick,0x7ff954e0fd34,109842515,0,0x0,8
tick,0x7ff954e0fd34,109858454,0,0x0,8
tick,0x7ff954e0fd34,109874793,0,0x0,8
tick,0x7ff954e0fd34,109890392,0,0x0,8
tick,0x7ff954e0fd34,109906373,0,0x0,8
tick,0x7ff954e0fd34,109922087,0,0x0,8
tick,0x7ff954e0fd34,109937008,0,0x0,8
tick,0x7ff954e0fd34,109952970,0,0x0,8
tick,0x7ff954e0fd34,109968935,0,0x0,8
tick,0x7ff954e0fd34,109984921,0,0x0,8
tick,0x7ff954e0fd34,110000974,0,0x0,8
tick,0x7ff954e0fd34,110016829,0,0x0,8
tick,0x7ff954e0fd34,110032718,0,0x0,8
tick,0x7ff954e0fd34,110048689,0,0x0,8
tick,0x7ff954e0fd34,110064669,0,0x0,8
tick,0x7ff954e0fd34,110080603,0,0x0,8
tick,0x7ff954e0fd34,110095545,0,0x0,8
tick,0x7ff954e0fd34,110110523,0,0x0,8
tick,0x7ff954e0fd34,110125513,0,0x0,8
tick,0x7ff954e0fd34,110141487,0,0x0,8
tick,0x7ff954e0fd34,110156398,0,0x0,8
tick,0x7ff954e0fd34,110171400,0,0x0,8
tick,0x7ff954e0fd34,110187304,0,0x0,8
tick,0x7ff954e0fd34,110202359,0,0x0,8
tick,0x7ff954e0fd34,110218179,0,0x0,8
tick,0x7ff954e0fd34,110234063,0,0x0,8
tick,0x7ff954e0fd34,110249109,0,0x0,8
tick,0x7ff954e0fd34,110264017,0,0x0,8
tick,0x7ff954e0fd34,110279959,0,0x0,8
tick,0x7ff954e0fd34,110295776,0,0x0,8
tick,0x7ff954e0fd34,110311848,0,0x0,8
tick,0x7ff954e0fd34,110327152,0,0x0,8
tick,0x7ff954e0fd34,110343129,0,0x0,8
tick,0x7ff954e0fd34,110358299,0,0x0,8
tick,0x7ff954e0fd34,110373280,0,0x0,8
tick,0x7ff954e0fd34,110389248,0,0x0,8
tick,0x7ff954e0fd34,110404640,0,0x0,8
tick,0x7ff954e0fd34,110420445,0,0x0,8
tick,0x7ff954e0fd34,110435661,0,0x0,8
tick,0x7ff954e0fd34,110450929,0,0x0,8
tick,0x7ff954e0fd34,110466828,0,0x0,8
tick,0x7ff954e0fd34,110482590,0,0x0,8
tick,0x7ff954e0fd34,110497537,0,0x0,8
tick,0x7ff954e0fd34,110513516,0,0x0,8
tick,0x7ff954e0fd34,110528521,0,0x0,8
tick,0x7ff954e0fd34,110543694,0,0x0,8
tick,0x7ff954e0fd34,110559676,0,0x0,8
tick,0x7ff954e0fd34,110574798,0,0x0,8
tick,0x7ff954e0fd34,110589943,0,0x0,8
tick,0x7ff954e0fd34,110605871,0,0x0,8
tick,0x7ff954e0fd34,110621883,0,0x0,8
tick,0x7ff954e0fd34,110637799,0,0x0,8
tick,0x7ff954e0fd34,110653768,0,0x0,8
tick,0x7ff954e0fd34,110669797,0,0x0,8
tick,0x7ff954e0fd34,110684671,0,0x0,8
tick,0x7ff954e0fd34,110699630,0,0x0,8
tick,0x7ff954e0fd34,110715612,0,0x0,8
tick,0x7ff954e0fd34,110731044,0,0x0,8
tick,0x7ff954e0fd34,110746994,0,0x0,8
tick,0x7ff954e0fd34,110762992,0,0x0,8
tick,0x7ff954e0fd34,110778920,0,0x0,8
tick,0x7ff954e0fd34,110794896,0,0x0,8
tick,0x7ff954e0fd34,110809859,0,0x0,8
tick,0x7ff954e0fd34,110824819,0,0x0,8
tick,0x7ff954e0fd34,110839796,0,0x0,8
tick,0x7ff954e0fd34,110854725,0,0x0,8
tick,0x7ff954e0fd34,110870659,0,0x0,8
tick,0x7ff954e0fd34,110885655,0,0x0,8
tick,0x7ff954e0fd34,110901604,0,0x0,8
tick,0x7ff954e0fd34,110917139,0,0x0,8
tick,0x7ff954e0fd34,110932878,0,0x0,8
tick,0x7ff954e0fd34,110948274,0,0x0,8
tick,0x7ff954e0fd34,110963236,0,0x0,8
tick,0x7ff954e0fd34,110978668,0,0x0,8
tick,0x7ff954e0fd34,110994635,0,0x0,8
tick,0x7ff954e0fd34,111009599,0,0x0,8
tick,0x7ff954e0fd34,111025177,0,0x0,8
tick,0x7ff954e0fd34,111040621,0,0x0,8
tick,0x7ff954e0fd34,111056650,0,0x0,8
tick,0x7ff954e0fd34,111071771,0,0x0,8
tick,0x7ff954e0fd34,111086616,0,0x0,8
tick,0x7ff954e0fd34,111102601,0,0x0,8
tick,0x7ff954e0fd34,111117791,0,0x0,8
tick,0x7ff954e0fd34,111132540,0,0x0,8
tick,0x7ff954e0fd34,111148004,0,0x0,8
tick,0x7ff954e0fd34,111163294,0,0x0,8
tick,0x7ff954e0fd34,111179116,0,0x0,8
tick,0x7ff954e0fd34,111194245,0,0x0,8
tick,0x7ff954e0fd34,111209394,0,0x0,8
tick,0x7ff954e0fd34,111224365,0,0x0,8
tick,0x7ff954e0fd34,111240323,0,0x0,8
tick,0x7ff954e0fd34,111256305,0,0x0,8
tick,0x7ff954e0fd34,111272239,0,0x0,8
tick,0x7ff954e0fd34,111288203,0,0x0,8
tick,0x7ff954e0fd34,111303459,0,0x0,8
tick,0x7ff954e0fd34,111319473,0,0x0,8
tick,0x7ff954e0fd34,111334389,0,0x0,8
tick,0x7ff954e0fd34,111349745,0,0x0,8
tick,0x7ff954e0fd34,111365430,0,0x0,8
tick,0x7ff954e0fd34,111380784,0,0x0,8
tick,0x7ff954e0fd34,111396513,0,0x0,8
tick,0x7ff954e0fd34,111411469,0,0x0,8
tick,0x7ff954e0fd34,111427446,0,0x0,8
tick,0x7ff954e0fd34,111443382,0,0x0,8
tick,0x7ff954e0fd34,111459343,0,0x0,8
tick,0x7ff954e0fd34,111475333,0,0x0,8
tick,0x7ff954e0fd34,111491289,0,0x0,8
tick,0x7ff954e0fd34,111507204,0,0x0,8
tick,0x7ff954e0fd34,111523192,0,0x0,8
tick,0x7ff954e0fd34,111538126,0,0x0,8
tick,0x7ff954e0fd34,111553072,0,0x0,8
tick,0x7ff954e0fd34,111568169,0,0x0,8
tick,0x7ff954e0fd34,111584211,0,0x0,8
tick,0x7ff954e0fd34,111600079,0,0x0,8
tick,0x7ff954e0fd34,111615716,0,0x0,8
tick,0x7ff954e0fd34,111630707,0,0x0,8
tick,0x7ff954e0fd34,111646641,0,0x0,8
tick,0x7ff954e0fd34,111661628,0,0x0,8
tick,0x7ff954e0fd34,111677530,0,0x0,8
tick,0x7ff954e0fd34,111692514,0,0x0,8
tick,0x7ff954e0fd34,111708485,0,0x0,8
tick,0x7ff954e0fd34,111724412,0,0x0,8
tick,0x7ff954e0fd34,111740465,0,0x0,8
tick,0x7ff954e0fd34,111756481,0,0x0,8
tick,0x7ff954e0fd34,111772403,0,0x0,8
tick,0x7ff954e0fd34,111788339,0,0x0,8
tick,0x7ff954e0fd34,111803932,0,0x0,8
tick,0x7ff954e0fd34,111819944,0,0x0,8
tick,0x7ff954e0fd34,111835184,0,0x0,8
tick,0x7ff954e0fd34,111851132,0,0x0,8
tick,0x7ff954e0fd34,111866968,0,0x0,8
tick,0x7ff954e0fd34,111882944,0,0x0,8
tick,0x7ff954e0fd34,111898914,0,0x0,8
tick,0x7ff954e0fd34,111913627,0,0x0,8
tick,0x7ff954e0fd34,111928671,0,0x0,8
tick,0x7ff954e0fd34,111944664,0,0x0,8
tick,0x7ff954e0fd34,111960178,0,0x0,8
tick,0x7ff954e0fd34,111975506,0,0x0,8
tick,0x7ff954e0fd34,111991364,0,0x0,8
tick,0x7ff954e0fd34,112006305,0,0x0,8
tick,0x7ff954e0fd34,112022314,0,0x0,8
tick,0x7ff954e0fd34,112037273,0,0x0,8
tick,0x7ff954e0fd34,112052187,0,0x0,8
tick,0x7ff954e0fd34,112068180,0,0x0,8
tick,0x7ff954e0fd34,112084144,0,0x0,8
tick,0x7ff954e0fd34,112100059,0,0x0,8
tick,0x7ff954e0fd34,112116074,0,0x0,8
tick,0x7ff954e0fd34,112132027,0,0x0,8
tick,0x7ff954e0fd34,112147867,0,0x0,8
tick,0x7ff954e0fd34,112163896,0,0x0,8
tick,0x7ff954e0fd34,112179808,0,0x0,8
tick,0x7ff954e0fd34,112194767,0,0x0,8
tick,0x7ff954e0fd34,112209771,0,0x0,8
tick,0x7ff954e0fd34,112225660,0,0x0,8
tick,0x7ff954e0fd34,112241630,0,0x0,8
tick,0x7ff954e0fd34,112257595,0,0x0,8
tick,0x7ff954e0fd34,112273625,0,0x0,8
tick,0x7ff954e0fd34,112289546,0,0x0,8
tick,0x7ff954e0fd34,112305458,0,0x0,8
tick,0x7ff954e0fd34,112321585,0,0x0,8
tick,0x7ff954e0fd34,112337380,0,0x0,8
tick,0x7ff954e0fd34,112352344,0,0x0,8
tick,0x7ff954e0fd34,112367274,0,0x0,8
tick,0x7ff954e0fd34,112383235,0,0x0,8
tick,0x7ff954e0fd34,112398197,0,0x0,8
tick,0x7ff954e0fd34,112413143,0,0x0,8
tick,0x7ff954e0fd34,112428788,0,0x0,8
tick,0x7ff954e0fd34,112444717,0,0x0,8
tick,0x7ff954e0fd34,112460653,0,0x0,8
tick,0x7ff954e0fd34,112476621,0,0x0,8
tick,0x7ff954e0fd34,112491858,0,0x0,8
tick,0x7ff954e0fd34,112506939,0,0x0,8
tick,0x7ff954e0fd34,112522772,0,0x0,8
tick,0x7ff954e0fd34,112538820,0,0x0,8
tick,0x7ff954e0fd34,112554686,0,0x0,8
tick,0x7ff954e0fd34,112570704,0,0x0,8
tick,0x7ff954e0fd34,112586626,0,0x0,8
tick,0x7ff954e0fd34,112602542,0,0x0,8
tick,0x7ff954e0fd34,112618516,0,0x0,8
tick,0x7ff954e0fd34,112633981,0,0x0,8
tick,0x7ff954e0fd34,112649907,0,0x0,8
tick,0x7ff954e0fd34,112665857,0,0x0,8
tick,0x7ff954e0fd34,112681812,0,0x0,8
tick,0x7ff954e0fd34,112697790,0,0x0,8
tick,0x7ff954e0fd34,112713751,0,0x0,8
tick,0x7ff954e0fd34,112728733,0,0x0,8
tick,0x7ff954e0fd34,112744652,0,0x0,8
tick,0x7ff954e0fd34,112760614,0,0x0,8
tick,0x7ff954e0fd34,112775592,0,0x0,8
tick,0x7ff954e0fd34,112791537,0,0x0,8
tick,0x7ff954e0fd34,112806517,0,0x0,8
tick,0x7ff954e0fd34,112822591,0,0x0,8
tick,0x7ff954e0fd34,112838411,0,0x0,8
tick,0x7ff954e0fd34,112854348,0,0x0,8
tick,0x7ff954e0fd34,112870355,0,0x0,8
tick,0x7ff954e0fd34,112886369,0,0x0,8
tick,0x7ff954e0fd34,112902227,0,0x0,8
tick,0x7ff954e0fd34,112918182,0,0x0,8
tick,0x7ff954e0fd34,112933190,0,0x0,8
tick,0x7ff954e0fd34,112948110,0,0x0,8
tick,0x7ff954e0fd34,112963823,0,0x0,8
tick,0x7ff954e0fd34,112978834,0,0x0,8
tick,0x7ff954e0fd34,112993777,0,0x0,8
tick,0x7ff954e0fd34,113008683,0,0x0,8
tick,0x7ff954e0fd34,113024620,0,0x0,8
tick,0x7ff954e0fd34,113040458,0,0x0,8
tick,0x7ff954e0fd34,113056116,0,0x0,8
tick,0x7ff954e0fd34,113071617,0,0x0,8
tick,0x7ff954e0fd34,113086486,0,0x0,8
tick,0x7ff954e0fd34,113101444,0,0x0,8
tick,0x7ff954e0fd34,113116435,0,0x0,8
tick,0x7ff954e0fd34,113132400,0,0x0,8
tick,0x7ff954e0fd34,113148350,0,0x0,8
tick,0x7ff954e0fd34,113163796,0,0x0,8
tick,0x7ff954e0fd34,113178748,0,0x0,8
tick,0x7ff954e0fd34,113194753,0,0x0,8
tick,0x7ff954e0fd34,113209673,0,0x0,8
tick,0x7ff954e0fd34,113225394,0,0x0,8
tick,0x7ff954e0fd34,113240382,0,0x0,8
tick,0x7ff954e0fd34,113255689,0,0x0,8
tick,0x7ff954e0fd34,113271067,0,0x0,8
tick,0x7ff954e0fd34,113287049,0,0x0,8
tick,0x7ff954e0fd34,113302973,0,0x0,8
tick,0x7ff954e0fd34,113318170,0,0x0,8
tick,0x7ff954e0fd34,113333145,0,0x0,8
tick,0x7ff954e0fd34,113347940,0,0x0,8
tick,0x7ff954e0fd34,113363908,0,0x0,8
tick,0x7ff954e0fd34,113378859,0,0x0,8
tick,0x7ff954e0fd34,113394843,0,0x0,8
tick,0x7ff954e0fd34,113410757,0,0x0,8
tick,0x7ff954e0fd34,113426113,0,0x0,8
tick,0x7ff954e0fd34,113442024,0,0x0,8
tick,0x7ff954e0fd34,113457232,0,0x0,8
tick,0x7ff954e0fd34,113473188,0,0x0,8
tick,0x7ff954e0fd34,113488256,0,0x0,8
tick,0x7ff954e0fd34,113504217,0,0x0,8
tick,0x7ff954e0fd34,113520186,0,0x0,8
tick,0x7ff954e0fd34,113535395,0,0x0,8
tick,0x7ff954e0fd34,113551448,0,0x0,8
tick,0x7ff954e0fd34,113567242,0,0x0,8
tick,0x7ff954e0fd34,113583172,0,0x0,8
tick,0x7ff954e0fd34,113599097,0,0x0,8
tick,0x7ff954e0fd34,113615042,0,0x0,8
tick,0x7ff954e0fd34,113631035,0,0x0,8
tick,0x7ff954e0fd34,113647002,0,0x0,8
tick,0x7ff954e0fd34,113662851,0,0x0,8
tick,0x7ff954e0fd34,113678353,0,0x0,8
tick,0x7ff954e0fd34,113693778,0,0x0,8
tick,0x7ff954e0fd34,113709795,0,0x0,8
tick,0x7ff954e0fd34,113724983,0,0x0,8
tick,0x7ff954e0fd34,113740999,0,0x0,8
tick,0x7ff954e0fd34,113756904,0,0x0,8
tick,0x7ff954e0fd34,113772676,0,0x0,8
tick,0x7ff954e0fd34,113788646,0,0x0,8
tick,0x7ff954e0fd34,113804625,0,0x0,8
tick,0x7ff954e0fd34,113819743,0,0x0,8
tick,0x7ff954e0fd34,113835651,0,0x0,8
tick,0x7ff954e0fd34,113850614,0,0x0,8
tick,0x7ff954e0fd34,113866534,0,0x0,8
tick,0x7ff954e0fd34,113882086,0,0x0,8
tick,0x7ff954e0fd34,113898024,0,0x0,8
tick,0x7ff954e0fd34,113913289,0,0x0,8
tick,0x7ff954e0fd34,113928689,0,0x0,8
tick,0x7ff954e0fd34,113944645,0,0x0,8
tick,0x7ff954e0fd34,113960349,0,0x0,8
tick,0x7ff954e0fd34,113976282,0,0x0,8
tick,0x7ff954e0fd34,113992228,0,0x0,8
tick,0x7ff954e0fd34,114008201,0,0x0,8
tick,0x7ff954e0fd34,114024133,0,0x0,8
tick,0x7ff954e0fd34,114039713,0,0x0,8
tick,0x7ff954e0fd34,114055675,0,0x0,8
tick,0x7ff954e0fd34,114071657,0,0x0,8
tick,0x7ff954e0fd34,114087728,0,0x0,8
tick,0x7ff954e0fd34,114102552,0,0x0,8
tick,0x7ff954e0fd34,114118499,0,0x0,8
tick,0x7ff954e0fd34,114133527,0,0x0,8
tick,0x7ff954e0fd34,114149438,0,0x0,8
tick,0x7ff954e0fd34,114165367,0,0x0,8
tick,0x7ff954e0fd34,114181379,0,0x0,8
tick,0x7ff954e0fd34,114197330,0,0x0,8
tick,0x7ff954e0fd34,114213269,0,0x0,8
tick,0x7ff954e0fd34,114229257,0,0x0,8
tick,0x7ff954e0fd34,114244669,0,0x0,8
tick,0x7ff954e0fd34,114260588,0,0x0,8
tick,0x7ff954e0fd34,114276461,0,0x0,8
tick,0x7ff954e0fd34,114292409,0,0x0,8
tick,0x7ff954e0fd34,114308365,0,0x0,8
tick,0x7ff954e0fd34,114324354,0,0x0,8
tick,0x7ff954e0fd34,114339859,0,0x0,8
tick,0x7ff954e0fd34,114355743,0,0x0,8
tick,0x7ff954e0fd34,114371718,0,0x0,8
tick,0x7ff954e0fd34,114386660,0,0x0,8
tick,0x7ff954e0fd34,114401623,0,0x0,8
tick,0x7ff954e0fd34,114416601,0,0x0,8
tick,0x7ff954e0fd34,114431565,0,0x0,8
tick,0x7ff954e0fd34,114447492,0,0x0,8
tick,0x7ff954e0fd34,114462747,0,0x0,8
tick,0x7ff954e0fd34,114477662,0,0x0,8
tick,0x7ff954e0fd34,114493637,0,0x0,8
tick,0x7ff954e0fd34,114508618,0,0x0,8
tick,0x7ff954e0fd34,114524676,0,0x0,8
tick,0x7ff954e0fd34,114540201,0,0x0,8
tick,0x7ff954e0fd34,114555298,0,0x0,8
tick,0x7ff954e0fd34,114570946,0,0x0,8
tick,0x7ff954e0fd34,114585894,0,0x0,8
tick,0x7ff954e0fd34,114601859,0,0x0,8
tick,0x7ff954e0fd34,114617172,0,0x0,8
tick,0x7ff954e0fd34,114633147,0,0x0,8
tick,0x7ff954e0fd34,114648726,0,0x0,8
tick,0x7ff954e0fd34,114664679,0,0x0,8
tick,0x7ff954e0fd34,114680643,0,0x0,8
tick,0x7ff954e0fd34,114696719,0,0x0,8
tick,0x7ff954e0fd34,114712714,0,0x0,8
tick,0x7ff954e0fd34,114728188,0,0x0,8
tick,0x7ff954e0fd34,114743803,0,0x0,8
tick,0x7ff954e0fd34,114758788,0,0x0,8
tick,0x7ff954e0fd34,114774044,0,0x0,8
tick,0x7ff954e0fd34,114790002,0,0x0,8
tick,0x7ff954e0fd34,114804746,0,0x0,8
tick,0x7ff954e0fd34,114819745,0,0x0,8
tick,0x7ff954e0fd34,114834702,0,0x0,8
tick,0x7ff954e0fd34,114849625,0,0x0,8
tick,0x7ff954e0fd34,114864567,0,0x0,8
tick,0x7ff954e0fd34,114880145,0,0x0,8
tick,0x7ff954e0fd34,114896147,0,0x0,8
tick,0x7ff954e0fd34,114911376,0,0x0,8
tick,0x7ff954e0fd34,114927479,0,0x0,8
tick,0x7ff954e0fd34,114943346,0,0x0,8
tick,0x7ff954e0fd34,114959271,0,0x0,8
tick,0x7ff954e0fd34,114974417,0,0x0,8
tick,0x7ff954e0fd34,114990413,0,0x0,8
tick,0x7ff954e0fd34,115005357,0,0x0,8
tick,0x7ff954e0fd34,115021317,0,0x0,8
tick,0x7ff954e0fd34,115037270,0,0x0,8
tick,0x7ff954e0fd34,115053234,0,0x0,8
tick,0x7ff954e0fd34,115069171,0,0x0,8
tick,0x7ff954e0fd34,115085119,0,0x0,8
tick,0x7ff954e0fd34,115101103,0,0x0,8
tick,0x7ff954e0fd34,115117060,0,0x0,8
tick,0x7ff954e0fd34,115133017,0,0x0,8
tick,0x7ff954e0fd34,115148503,0,0x0,8
tick,0x7ff954e0fd34,115164455,0,0x0,8
tick,0x7ff954e0fd34,115180438,0,0x0,8
tick,0x7ff954e0fd34,115196370,0,0x0,8
tick,0x7ff954e0fd34,115211340,0,0x0,8
tick,0x7ff954e0fd34,115227308,0,0x0,8
tick,0x7ff954e0fd34,115242980,0,0x0,8
tick,0x7ff954e0fd34,115258948,0,0x0,8
tick,0x7ff954e0fd34,115273810,0,0x0,8
tick,0x7ff954e0fd34,115288788,0,0x0,8
tick,0x7ff954e0fd34,115303754,0,0x0,8
tick,0x7ff954e0fd34,115319722,0,0x0,8
tick,0x7ff954e0fd34,115334632,0,0x0,8
tick,0x7ff954e0fd34,115349609,0,0x0,8
tick,0x7ff954e0fd34,115365546,0,0x0,8
tick,0x7ff954e0fd34,115380534,0,0x0,8
tick,0x7ff954e0fd34,115396465,0,0x0,8
tick,0x7ff954e0fd34,115412440,0,0x0,8
tick,0x7ff954e0fd34,115428423,0,0x0,8
tick,0x7ff954e0fd34,115444391,0,0x0,8
tick,0x7ff954e0fd34,115459536,0,0x0,8
tick,0x7ff954e0fd34,115475553,0,0x0,8
tick,0x7ff954e0fd34,115490927,0,0x0,8
tick,0x7ff954e0fd34,115506244,0,0x0,8
tick,0x7ff954e0fd34,115522241,0,0x0,8
tick,0x7ff954e0fd34,115538164,0,0x0,8
tick,0x7ff954e0fd34,115554084,0,0x0,8
tick,0x7ff954e0fd34,115569618,0,0x0,8
tick,0x7ff954e0fd34,115584603,0,0x0,8
tick,0x7ff954e0fd34,115600534,0,0x0,8
tick,0x7ff954e0fd34,115616514,0,0x0,8
tick,0x7ff954e0fd34,115632569,0,0x0,8
tick,0x7ff954e0fd34,115648446,0,0x0,8
tick,0x7ff954e0fd34,115663431,0,0x0,8
tick,0x7ff954e0fd34,115678337,0,0x0,8
tick,0x7ff954e0fd34,115693941,0,0x0,8
tick,0x7ff954e0fd34,115709507,0,0x0,8
tick,0x7ff954e0fd34,115724418,0,0x0,8
tick,0x7ff954e0fd34,115740310,0,0x0,8
tick,0x7ff954e0fd34,115756246,0,0x0,8
tick,0x7ff954e0fd34,115771826,0,0x0,8
tick,0x7ff954e0fd34,115787883,0,0x0,8
tick,0x7ff954e0fd34,115803860,0,0x0,8
tick,0x7ff954e0fd34,115819647,0,0x0,8
tick,0x7ff954e0fd34,115835470,0,0x0,8
tick,0x7ff954e0fd34,115851469,0,0x0,8
tick,0x7ff954e0fd34,115866393,0,0x0,8
tick,0x7ff954e0fd34,115882361,0,0x0,8
tick,0x7ff954e0fd34,115897515,0,0x0,8
tick,0x7ff954e0fd34,115912968,0,0x0,8
tick,0x7ff954e0fd34,115928185,0,0x0,8
tick,0x7ff954e0fd34,115943151,0,0x0,8
tick,0x7ff954e0fd34,115959156,0,0x0,8
tick,0x7ff954e0fd34,115974617,0,0x0,8
tick,0x7ff954e0fd34,115990472,0,0x0,8
tick,0x7ff954e0fd34,116006137,0,0x0,8
tick,0x7ff954e0fd34,116021340,0,0x0,8
tick,0x7ff954e0fd34,116036953,0,0x0,8
tick,0x7ff954e0fd34,116052958,0,0x0,8
tick,0x7ff954e0fd34,116067914,0,0x0,8
tick,0x7ff954e0fd34,116083888,0,0x0,8
tick,0x7ff954e0fd34,116099276,0,0x0,8
tick,0x7ff954e0fd34,116115205,0,0x0,8
tick,0x7ff954e0fd34,116130453,0,0x0,8
tick,0x7ff954e0fd34,116145582,0,0x0,8
tick,0x7ff954e0fd34,116160502,0,0x0,8
tick,0x7ff954e0fd34,116175560,0,0x0,8
tick,0x7ff954e0fd34,116190974,0,0x0,8
tick,0x7ff954e0fd34,116206218,0,0x0,8
tick,0x7ff954e0fd34,116222170,0,0x0,8
tick,0x7ff954e0fd34,116237119,0,0x0,8
tick,0x7ff954e0fd34,116253089,0,0x0,8
tick,0x7ff954e0fd34,116269043,0,0x0,8
tick,0x7ff954e0fd34,116285001,0,0x0,8
tick,0x7ff954e0fd34,116300977,0,0x0,8
tick,0x7ff954e0fd34,116316811,0,0x0,8
tick,0x7ff954e0fd34,116331768,0,0x0,8
tick,0x7ff954e0fd34,116347739,0,0x0,8
tick,0x7ff954e0fd34,116362715,0,0x0,8
tick,0x7ff954e0fd34,116378658,0,0x0,8
tick,0x7ff954e0fd34,116393740,0,0x0,8
tick,0x7ff954e0fd34,116408562,0,0x0,8
tick,0x7ff954e0fd34,116423551,0,0x0,8
tick,0x7ff954e0fd34,116438522,0,0x0,8
tick,0x7ff954e0fd34,116453460,0,0x0,8
tick,0x7ff954e0fd34,116468396,0,0x0,8
tick,0x7ff954e0fd34,116483365,0,0x0,8
tick,0x7ff954e0fd34,116498605,0,0x0,8
tick,0x7ff954e0fd34,116514628,0,0x0,8
tick,0x7ff954e0fd34,116530584,0,0x0,8
tick,0x7ff954e0fd34,116545544,0,0x0,8
tick,0x7ff954e0fd34,116560505,0,0x0,8
tick,0x7ff954e0fd34,116575608,0,0x0,8
tick,0x7ff954e0fd34,116590514,0,0x0,8
tick,0x7ff954e0fd34,116605486,0,0x0,8
tick,0x7ff954e0fd34,116620343,0,0x0,8
tick,0x7ff954e0fd34,116636382,0,0x0,8
tick,0x7ff954e0fd34,116651310,0,0x0,8
tick,0x7ff954e0fd34,116666250,0,0x0,8
tick,0x7ff954e0fd34,116681191,0,0x0,8
tick,0x7ff954e0fd34,116696178,0,0x0,8
tick,0x7ff954e0fd34,116712125,0,0x0,8
tick,0x7ff954e0fd34,116728165,0,0x0,8
tick,0x7ff954e0fd34,116744131,0,0x0,8
tick,0x7ff954e0fd34,116759551,0,0x0,8
tick,0x7ff954e0fd34,116774512,0,0x0,8
tick,0x7ff954e0fd34,116790435,0,0x0,8
tick,0x7ff954e0fd34,116805407,0,0x0,8
tick,0x7ff954e0fd34,116820402,0,0x0,8
tick,0x7ff954e0fd34,116835331,0,0x0,8
tick,0x7ff954e0fd34,116850521,0,0x0,8
tick,0x7ff954e0fd34,116866287,0,0x0,8
tick,0x7ff954e0fd34,116881225,0,0x0,8
tick,0x7ff954e0fd34,116897220,0,0x0,8
tick,0x7ff954e0fd34,116913091,0,0x0,8
tick,0x7ff954e0fd34,116928069,0,0x0,8
tick,0x7ff954e0fd34,116943737,0,0x0,8
tick,0x7ff954e0fd34,116958931,0,0x0,8
tick,0x7ff954e0fd34,116974862,0,0x0,8
tick,0x7ff954e0fd34,116990270,0,0x0,8
tick,0x7ff954e0fd34,117005472,0,0x0,8
tick,0x7ff954e0fd34,117021549,0,0x0,8
tick,0x7ff954e0fd34,117036886,0,0x0,8
tick,0x7ff954e0fd34,117052830,0,0x0,8
tick,0x7ff954e0fd34,117068870,0,0x0,8
tick,0x7ff954e0fd34,117084058,0,0x0,8
tick,0x7ff954e0fd34,117098996,0,0x0,8
tick,0x7ff954e0fd34,117113949,0,0x0,8
tick,0x7ff954e0fd34,117129204,0,0x0,8
tick,0x7ff954e0fd34,117145160,0,0x0,8
tick,0x7ff954e0fd34,117161146,0,0x0,8
tick,0x7ff954e0fd34,117177096,0,0x0,8
tick,0x7ff954e0fd34,117193046,0,0x0,8
tick,0x7ff954e0fd34,117209077,0,0x0,8
tick,0x7ff954e0fd34,117223977,0,0x0,8
tick,0x7ff954e0fd34,117239792,0,0x0,8
tick,0x7ff954e0fd34,117255037,0,0x0,8
tick,0x7ff954e0fd34,117271080,0,0x0,8
tick,0x7ff954e0fd34,117285976,0,0x0,8
tick,0x7ff954e0fd34,117301659,0,0x0,8
tick,0x7ff954e0fd34,117317573,0,0x0,8
tick,0x7ff954e0fd34,117333560,0,0x0,8
tick,0x7ff954e0fd34,117348763,0,0x0,8
tick,0x7ff954e0fd34,117364138,0,0x0,8
tick,0x7ff954e0fd34,117378779,0,0x0,8
tick,0x7ff954e0fd34,117394004,0,0x0,8
tick,0x7ff954e0fd34,117409911,0,0x0,8
tick,0x7ff954e0fd34,117424700,0,0x0,8
tick,0x7ff954e0fd34,117440199,0,0x0,8
tick,0x7ff954e0fd34,117455520,0,0x0,8
tick,0x7ff954e0fd34,117470604,0,0x0,8
tick,0x7ff954e0fd34,117486575,0,0x0,8
tick,0x7ff954e0fd34,117502518,0,0x0,8
tick,0x7ff954e0fd34,117518490,0,0x0,8
tick,0x7ff954e0fd34,117534447,0,0x0,8
tick,0x7ff954e0fd34,117550418,0,0x0,8
tick,0x7ff954e0fd34,117566344,0,0x0,8
tick,0x7ff954e0fd34,117582344,0,0x0,8
tick,0x7ff954e0fd34,117598293,0,0x0,8
tick,0x7ff954e0fd34,117614224,0,0x0,8
tick,0x7ff954e0fd34,117629198,0,0x0,8
tick,0x7ff954e0fd34,117644170,0,0x0,8
tick,0x7ff954e0fd34,117659063,0,0x0,8
tick,0x7ff954e0fd34,117674076,0,0x0,8
tick,0x7ff954e0fd34,117689971,0,0x0,8
tick,0x7ff954e0fd34,117705914,0,0x0,8
tick,0x7ff954e0fd34,117720871,0,0x0,8
tick,0x7ff954e0fd34,117736792,0,0x0,8
tick,0x7ff954e0fd34,117752489,0,0x0,8
tick,0x7ff954e0fd34,117767415,0,0x0,8
tick,0x7ff954e0fd34,117782858,0,0x0,8
tick,0x7ff954e0fd34,117798911,0,0x0,8
tick,0x7ff954e0fd34,117814899,0,0x0,8
tick,0x7ff954e0fd34,117830873,0,0x0,8
tick,0x7ff954e0fd34,117846179,0,0x0,8
tick,0x7ff954e0fd34,117861745,0,0x0,8
tick,0x7ff954e0fd34,117877783,0,0x0,8
tick,0x7ff954e0fd34,117892977,0,0x0,8
tick,0x7ff954e0fd34,117908787,0,0x0,8
tick,0x7ff954e0fd34,117923751,0,0x0,8
tick,0x7ff954e0fd34,117938693,0,0x0,8
tick,0x7ff954e0fd34,117953654,0,0x0,8
tick,0x7ff954e0fd34,117968603,0,0x0,8
tick,0x7ff954e0fd34,117984577,0,0x0,8
tick,0x7ff954e0fd34,118000497,0,0x0,8
tick,0x7ff954e0fd34,118016488,0,0x0,8
tick,0x7ff954e0fd34,118032422,0,0x0,8
tick,0x7ff954e0fd34,118048393,0,0x0,8
tick,0x7ff954e0fd34,118064325,0,0x0,8
tick,0x7ff954e0fd34,118079299,0,0x0,8
tick,0x7ff954e0fd34,118095325,0,0x0,8
tick,0x7ff954e0fd34,118110230,0,0x0,8
tick,0x7ff954e0fd34,118125878,0,0x0,8
tick,0x7ff954e0fd34,118141449,0,0x0,8
tick,0x7ff954e0fd34,118157019,0,0x0,8
tick,0x7ff954e0fd34,118172983,0,0x0,8
tick,0x7ff954e0fd34,118188925,0,0x0,8
tick,0x7ff954e0fd34,118204445,0,0x0,8
tick,0x7ff954e0fd34,118220609,0,0x0,8
tick,0x7ff954e0fd34,118236413,0,0x0,8
tick,0x7ff954e0fd34,118251709,0,0x0,8
tick,0x7ff954e0fd34,118267684,0,0x0,8
tick,0x7ff954e0fd34,118283188,0,0x0,8
tick,0x7ff954e0fd34,118299179,0,0x0,8
tick,0x7ff954e0fd34,118315106,0,0x0,8
tick,0x7ff954e0fd34,118330601,0,0x0,8
tick,0x7ff954e0fd34,118345922,0,0x0,8
tick,0x7ff954e0fd34,118361889,0,0x0,8
tick,0x7ff954e0fd34,118377247,0,0x0,8
tick,0x7ff954e0fd34,118393133,0,0x0,8
tick,0x7ff954e0fd34,118409096,0,0x0,8
tick,0x7ff954e0fd34,118425131,0,0x0,8
tick,0x7ff954e0fd34,118440274,0,0x0,8
tick,0x7ff954e0fd34,118455778,0,0x0,8
tick,0x7ff954e0fd34,118471501,0,0x0,8
tick,0x7ff954e0fd34,118486779,0,0x0,8
tick,0x7ff954e0fd34,118502340,0,0x0,8
tick,0x7ff954e0fd34,118517324,0,0x0,8
tick,0x7ff954e0fd34,118533196,0,0x0,8
tick,0x7ff954e0fd34,118548993,0,0x0,8
tick,0x7ff954e0fd34,118564925,0,0x0,8
tick,0x7ff954e0fd34,118580901,0,0x0,8
tick,0x7ff954e0fd34,118596929,0,0x0,8
tick,0x7ff954e0fd34,118612888,0,0x0,8
tick,0x7ff954e0fd34,118628805,0,0x0,8
tick,0x7ff954e0fd34,118644102,0,0x0,8
tick,0x7ff954e0fd34,118659065,0,0x0,8
tick,0x7ff954e0fd34,118674983,0,0x0,8
tick,0x7ff954e0fd34,118690859,0,0x0,8
tick,0x7ff954e0fd34,118705817,0,0x0,8
tick,0x7ff954e0fd34,118721792,0,0x0,8
tick,0x7ff954e0fd34,118736748,0,0x0,8
tick,0x7ff954e0fd34,118751688,0,0x0,8
tick,0x7ff954e0fd34,118766857,0,0x0,8
tick,0x7ff954e0fd34,118781799,0,0x0,8
tick,0x7ff954e0fd34,118796747,0,0x0,8
tick,0x7ff954e0fd34,118811722,0,0x0,8
tick,0x7ff954e0fd34,118826683,0,0x0,8
tick,0x7ff954e0fd34,118841656,0,0x0,8
tick,0x7ff954e0fd34,118856614,0,0x0,8
tick,0x7ff954e0fd34,118871553,0,0x0,8
tick,0x7ff954e0fd34,118887523,0,0x0,8
tick,0x7ff954e0fd34,118903486,0,0x0,8
tick,0x7ff954e0fd34,118919437,0,0x0,8
tick,0x7ff954e0fd34,118934414,0,0x0,8
tick,0x7ff954e0fd34,118949382,0,0x0,8
tick,0x7ff954e0fd34,118964316,0,0x0,8
tick,0x7ff954e0fd34,118979259,0,0x0,8
tick,0x7ff954e0fd34,118995253,0,0x0,8
tick,0x7ff954e0fd34,119011189,0,0x0,8
tick,0x7ff954e0fd34,119026470,0,0x0,8
tick,0x7ff954e0fd34,119041428,0,0x0,8
tick,0x7ff954e0fd34,119057382,0,0x0,8
tick,0x7ff954e0fd34,119073333,0,0x0,8
tick,0x7ff954e0fd34,119089286,0,0x0,8
tick,0x7ff954e0fd34,119105284,0,0x0,8
tick,0x7ff954e0fd34,119121182,0,0x0,8
tick,0x7ff954e0fd34,119137139,0,0x0,8
tick,0x7ff954e0fd34,119153112,0,0x0,8
tick,0x7ff954e0fd34,119169114,0,0x0,8
tick,0x7ff954e0fd34,119185041,0,0x0,8
tick,0x7ff954e0fd34,119200996,0,0x0,8
tick,0x7ff954e0fd34,119217108,0,0x0,8
tick,0x7ff954e0fd34,119232913,0,0x0,8
tick,0x7ff954e0fd34,119248901,0,0x0,8
tick,0x7ff954e0fd34,119264818,0,0x0,8
tick,0x7ff954e0fd34,119279794,0,0x0,8
tick,0x7ff954e0fd34,119294876,0,0x0,8
tick,0x7ff954e0fd34,119309840,0,0x0,8
tick,0x7ff954e0fd34,119324696,0,0x0,8
tick,0x7ff954e0fd34,119340248,0,0x0,8
tick,0x7ff954e0fd34,119356175,0,0x0,8
tick,0x7ff954e0fd34,119372256,0,0x0,8
tick,0x7ff954e0fd34,119388243,0,0x0,8
tick,0x7ff954e0fd34,119403188,0,0x0,8
tick,0x7ff954e0fd34,119418623,0,0x0,8
tick,0x7ff954e0fd34,119433506,0,0x0,8
tick,0x7ff954e0fd34,119449004,0,0x0,8
tick,0x7ff954e0fd34,119463940,0,0x0,8
tick,0x7ff954e0fd34,119480508,0,0x0,8
tick,0x7ff954e0fd34,119497919,0,0x0,8
tick,0x7ff954e0fd34,119513478,0,0x0,8
tick,0x7ff954e0fd34,119525300,0,0x0,8
tick,0x7ff954e0fd34,119540851,0,0x0,8
tick,0x7ff954e0fd34,119556769,0,0x0,8
tick,0x7ff954e0fd34,119572666,0,0x0,8
tick,0x7ff954e0fd34,119588631,0,0x0,8
tick,0x7ff954e0fd34,119604237,0,0x0,8
tick,0x7ff954e0fd34,119620120,0,0x0,8
tick,0x7ff954e0fd34,119635810,0,0x0,8
tick,0x7ff954e0fd34,119650755,0,0x0,8
tick,0x7ff954e0fd34,119666192,0,0x0,8
tick,0x7ff954e0fd34,119681165,0,0x0,8
tick,0x7ff954e0fd34,119696731,0,0x0,8
tick,0x7ff954e0fd34,119712530,0,0x0,8
tick,0x7ff954e0fd34,119727687,0,0x0,8
tick,0x7ff954e0fd34,119743566,0,0x0,8
tick,0x7ff954e0fd34,119759350,0,0x0,8
tick,0x7ff954e0fd34,119775282,0,0x0,8
tick,0x7ff954e0fd34,119791229,0,0x0,8
tick,0x7ff954e0fd34,119807174,0,0x0,8
tick,0x7ff954e0fd34,119822313,0,0x0,8
tick,0x7ff954e0fd34,119837234,0,0x0,8
tick,0x7ff954e0fd34,119852196,0,0x0,8
tick,0x7ff954e0fd34,119868319,0,0x0,8
tick,0x7ff954e0fd34,119883264,0,0x0,8
tick,0x7ff954e0fd34,119899216,0,0x0,8
tick,0x7ff954e0fd34,119915193,0,0x0,8
tick,0x7ff954e0fd34,119930173,0,0x0,8
tick,0x7ff954e0fd34,119946087,0,0x0,8
tick,0x7ff954e0fd34,119961218,0,0x0,8
tick,0x7ff954e0fd34,119977196,0,0x0,8
tick,0x7ff954e0fd34,119992117,0,0x0,8
tick,0x7ff954e0fd34,120007132,0,0x0,8
tick,0x7ff954e0fd34,120022052,0,0x0,8
tick,0x7ff954e0fd34,120037019,0,0x0,8
tick,0x7ff954e0fd34,120053148,0,0x0,8
tick,0x7ff954e0fd34,120068237,0,0x0,8
tick,0x7ff954e0fd34,120083516,0,0x0,8
tick,0x7ff954e0fd34,120098765,0,0x0,8
tick,0x7ff954e0fd34,120113655,0,0x0,8
tick,0x7ff954e0fd34,120129217,0,0x0,8
tick,0x7ff954e0fd34,120143902,0,0x0,8
tick,0x7ff954e0fd34,120159848,0,0x0,8
tick,0x7ff954e0fd34,120175893,0,0x0,8
tick,0x7ff954e0fd34,120190842,0,0x0,8
tick,0x7ff954e0fd34,120205794,0,0x0,8
tick,0x7ff954e0fd34,120221766,0,0x0,8
tick,0x7ff954e0fd34,120237748,0,0x0,8
tick,0x7ff954e0fd34,120253656,0,0x0,8
tick,0x7ff954e0fd34,120269659,0,0x0,8
tick,0x7ff954e0fd34,120285583,0,0x0,8
tick,0x7ff954e0fd34,120301378,0,0x0,8
tick,0x7ff954e0fd34,120316902,0,0x0,8
tick,0x7ff954e0fd34,120332900,0,0x0,8
tick,0x7ff954e0fd34,120348846,0,0x0,8
tick,0x7ff954e0fd34,120364909,0,0x0,8
tick,0x7ff954e0fd34,120380321,0,0x0,8
tick,0x7ff954e0fd34,120396272,0,0x0,8
tick,0x7ff954e0fd34,120412263,0,0x0,8
tick,0x7ff954e0fd34,120427195,0,0x0,8
tick,0x7ff954e0fd34,120442471,0,0x0,8
tick,0x7ff954e0fd34,120458472,0,0x0,8
tick,0x7ff954e0fd34,120473701,0,0x0,8
tick,0x7ff954e0fd34,120489466,0,0x0,8
tick,0x7ff954e0fd34,120504521,0,0x0,8
tick,0x7ff954e0fd34,120519508,0,0x0,8
tick,0x7ff954e0fd34,120535470,0,0x0,8
tick,0x7ff954e0fd34,120550430,0,0x0,8
tick,0x7ff954e0fd34,120566408,0,0x0,8
tick,0x7ff954e0fd34,120582115,0,0x0,8
tick,0x7ff954e0fd34,120598093,0,0x0,8
tick,0x7ff954e0fd34,120613900,0,0x0,8
tick,0x7ff954e0fd34,120629412,0,0x0,8
tick,0x7ff954e0fd34,120644640,0,0x0,8
tick,0x7ff954e0fd34,120660605,0,0x0,8
tick,0x7ff954e0fd34,120676505,0,0x0,8
tick,0x7ff954e0fd34,120691474,0,0x0,8
tick,0x7ff954e0fd34,120707010,0,0x0,8
tick,0x7ff954e0fd34,120722749,0,0x0,8
tick,0x7ff954e0fd34,120738726,0,0x0,8
tick,0x7ff954e0fd34,120754721,0,0x0,8
tick,0x7ff954e0fd34,120770643,0,0x0,8
tick,0x7ff954e0fd34,120786206,0,0x0,8
tick,0x7ff954e0fd34,120801522,0,0x0,8
tick,0x7ff954e0fd34,120817502,0,0x0,8
tick,0x7ff954e0fd34,120833298,0,0x0,8
tick,0x7ff954e0fd34,120849387,0,0x0,8
tick,0x7ff954e0fd34,120864729,0,0x0,8
tick,0x7ff954e0fd34,120880675,0,0x0,8
tick,0x7ff954e0fd34,120896637,0,0x0,8
tick,0x7ff954e0fd34,120912580,0,0x0,8
tick,0x7ff954e0fd34,120928580,0,0x0,8
tick,0x7ff954e0fd34,120944657,0,0x0,8
tick,0x7ff954e0fd34,120960644,0,0x0,8
tick,0x7ff954e0fd34,120976354,0,0x0,8
tick,0x7ff954e0fd34,120992408,0,0x0,8
tick,0x7ff954e0fd34,121008291,0,0x0,8
tick,0x7ff954e0fd34,121023237,0,0x0,8
tick,0x7ff954e0fd34,121038197,0,0x0,8
tick,0x7ff954e0fd34,121053167,0,0x0,8
tick,0x7ff954e0fd34,121069110,0,0x0,8
tick,0x7ff954e0fd34,121085087,0,0x0,8
tick,0x7ff954e0fd34,121101054,0,0x0,8
tick,0x7ff954e0fd34,121115970,0,0x0,8
tick,0x7ff954e0fd34,121131006,0,0x0,8
tick,0x7ff954e0fd34,121146909,0,0x0,8
tick,0x7ff954e0fd34,121162859,0,0x0,8
tick,0x7ff954e0fd34,121177852,0,0x0,8
tick,0x7ff954e0fd34,121193807,0,0x0,8
tick,0x7ff954e0fd34,121208751,0,0x0,8
tick,0x7ff954e0fd34,121223763,0,0x0,8
tick,0x7ff954e0fd34,121239705,0,0x0,8
tick,0x7ff954e0fd34,121254636,0,0x0,8
tick,0x7ff954e0fd34,121270665,0,0x0,8
tick,0x7ff954e0fd34,121286548,0,0x0,8
tick,0x7ff954e0fd34,121302500,0,0x0,8
tick,0x7ff954e0fd34,121318492,0,0x0,8
tick,0x7ff954e0fd34,121334452,0,0x0,8
tick,0x7ff954e0fd34,121349373,0,0x0,8
tick,0x7ff954e0fd34,121364310,0,0x0,8
tick,0x7ff954e0fd34,121379301,0,0x0,8
tick,0x7ff954e0fd34,121395268,0,0x0,8
tick,0x7ff954e0fd34,121415567,0,0x0,8
tick,0x7ff954e0fd34,121425164,0,0x0,8
tick,0x7ff954e0fd34,121440171,0,0x0,8
tick,0x7ff954e0fd34,121455140,0,0x0,8
tick,0x7ff954e0fd34,121471037,0,0x0,8
tick,0x7ff954e0fd34,121487290,0,0x0,8
tick,0x7ff954e0fd34,121503062,0,0x0,8
tick,0x7ff954e0fd34,121518959,0,0x0,8
tick,0x7ff954e0fd34,121534908,0,0x0,8
tick,0x7ff954e0fd34,121550822,0,0x0,8
tick,0x7ff954e0fd34,121566798,0,0x0,8
tick,0x7ff954e0fd34,121582745,0,0x0,8
tick,0x7ff954e0fd34,121598743,0,0x0,8
tick,0x7ff954e0fd34,121634563,0,0x0,8
tick,0x7ff954e0fd34,121644632,0,0x0,8
tick,0x7ff954e0fd34,121659628,0,0x0,8
tick,0x7ff954e0fd34,121674505,0,0x0,8
tick,0x7ff954e0fd34,121689466,0,0x0,8
tick,0x7ff954e0fd34,121704519,0,0x0,8
tick,0x7ff954e0fd34,121720410,0,0x0,8
tick,0x7ff954e0fd34,121735336,0,0x0,8
tick,0x7ff954e0fd34,121750349,0,0x0,8
tick,0x7ff954e0fd34,121765298,0,0x0,8
tick,0x7ff954e0fd34,121780415,0,0x0,8
tick,0x7ff954e0fd34,121796238,0,0x0,8
tick,0x7ff954e0fd34,121811151,0,0x0,8
tick,0x7ff954e0fd34,121826376,0,0x0,8
tick,0x7ff954e0fd34,121841915,0,0x0,8
tick,0x7ff954e0fd34,121856038,0,0x0,8
tick,0x7ff954e0fd34,121871020,0,0x0,8
tick,0x7ff954e0fd34,121886051,0,0x0,8
tick,0x7ff954e0fd34,121901236,0,0x0,8
tick,0x7ff954e0fd34,121916857,0,0x0,8
tick,0x7ff954e0fd34,121931973,0,0x0,8
tick,0x7ff954e0fd34,121947833,0,0x0,8
tick,0x7ff954e0fd34,121964083,0,0x0,8
tick,0x7ff954e0fd34,121978825,0,0x0,8
tick,0x7ff954e0fd34,121994913,0,0x0,8
tick,0x7ff954e0fd34,122009646,0,0x0,8
tick,0x7ff954e0fd34,122037718,0,0x0,8
tick,0x7ff954e0fd34,122042850,0,0x0,8
tick,0x7ff954e0fd34,122057482,0,0x0,8
tick,0x7ff954e0fd34,122073599,0,0x0,8
tick,0x7ff954e0fd34,122094302,0,0x0,8
tick,0x7ff954e0fd34,122105576,0,0x0,8
tick,0x7ff954e0fd34,122124352,0,0x0,8
tick,0x7ff954e0fd34,122136791,0,0x0,8
tick,0x7ff954e0fd34,122156384,0,0x0,8
tick,0x7ff954e0fd34,122169241,0,0x0,8
tick,0x7ff954e0fd34,122188300,0,0x0,8
tick,0x7ff954e0fd34,122202592,0,0x0,8
tick,0x7ff954e0fd34,122214642,0,0x0,8
tick,0x7ff954e0fd34,122229890,0,0x0,8
tick,0x7ff954e0fd34,122249040,0,0x0,8
tick,0x7ff954e0fd34,122260212,0,0x0,8
tick,0x7ff954e0fd34,122277027,0,0x0,8
tick,0x7ff954e0fd34,122291716,0,0x0,8
tick,0x7ff954e0fd34,122307545,0,0x0,8
tick,0x7ff954e0fd34,122321119,0,0x0,8
tick,0x7ff954e0fd34,122337567,0,0x0,8
tick,0x7ff954e0fd34,122353752,0,0x0,8
tick,0x7ff954e0fd34,122369205,0,0x0,8
tick,0x7ff954e0fd34,122385037,0,0x0,8
tick,0x7ff954e0fd34,122399243,0,0x0,8
tick,0x7ff954e0fd34,122414037,0,0x0,8
tick,0x7ff954e0fd34,122429350,0,0x0,8
tick,0x7ff954e0fd34,122444319,0,0x0,8
tick,0x7ff954e0fd34,122460392,0,0x0,8
tick,0x7ff954e0fd34,122476756,0,0x0,8
tick,0x7ff954e0fd34,122495534,0,0x0,8
tick,0x7ff954e0fd34,122509321,0,0x0,8
tick,0x7ff954e0fd34,122523614,0,0x0,8
tick,0x7ff954e0fd34,122541921,0,0x0,8
tick,0x7ff954e0fd34,122555347,0,0x0,8
tick,0x7ff954e0fd34,122573781,0,0x0,8
tick,0x7ff954e0fd34,122584885,0,0x0,8
tick,0x7ff954e0fd34,122600172,0,0x0,8
tick,0x7ff954e0fd34,122615327,0,0x0,8
tick,0x7ff954e0fd34,122630765,0,0x0,8
tick,0x7ff954e0fd34,122645501,0,0x0,8
tick,0x7ff954e0fd34,122660224,0,0x0,8
tick,0x7ff954e0fd34,122675302,0,0x0,8
tick,0x7ff954e0fd34,122692319,0,0x0,8
tick,0x7ff954e0fd34,122705355,0,0x0,8
tick,0x7ff954e0fd34,122720485,0,0x0,8
tick,0x7ff954e0fd34,122736009,0,0x0,8
tick,0x7ff954e0fd34,122751961,0,0x0,8
tick,0x7ff954e0fd34,122767057,0,0x0,8
tick,0x7ff954e0fd34,122781991,0,0x0,8
tick,0x7ff954e0fd34,122797141,0,0x0,8
tick,0x7ff954e0fd34,122813158,0,0x0,8
tick,0x7ff954e0fd34,122827820,0,0x0,8
tick,0x7ff954e0fd34,122843791,0,0x0,8
tick,0x7ff954e0fd34,122859882,0,0x0,8
tick,0x7ff954e0fd34,122875690,0,0x0,8
tick,0x7ff954e0fd34,122891622,0,0x0,8
tick,0x7ff954e0fd34,122906551,0,0x0,8
tick,0x7ff954e0fd34,122921590,0,0x0,8
tick,0x7ff954e0fd34,122936624,0,0x0,8
tick,0x7ff954e0fd34,122952478,0,0x0,8
tick,0x7ff954e0fd34,122968440,0,0x0,8
tick,0x7ff954e0fd34,122984512,0,0x0,8
tick,0x7ff954e0fd34,122999368,0,0x0,8
tick,0x7ff954e0fd34,123014377,0,0x0,8
tick,0x7ff954e0fd34,123030585,0,0x0,8
tick,0x7ff954e0fd34,123046519,0,0x0,8
tick,0x7ff954e0fd34,123061287,0,0x0,8
tick,0x7ff954e0fd34,123077287,0,0x0,8
tick,0x7ff954e0fd34,123092163,0,0x0,8
tick,0x7ff954e0fd34,123108166,0,0x0,8
tick,0x7ff954e0fd34,123124041,0,0x0,8
tick,0x7ff954e0fd34,123140015,0,0x0,8
tick,0x7ff954e0fd34,123156019,0,0x0,8
tick,0x7ff954e0fd34,123171889,0,0x0,8
tick,0x7ff954e0fd34,123188216,0,0x0,8
tick,0x7ff954e0fd34,123203948,0,0x0,8
tick,0x7ff954e0fd34,123219835,0,0x0,8
tick,0x7ff954e0fd34,123235746,0,0x0,8
tick,0x7ff954e0fd34,123251596,0,0x0,8
tick,0x7ff954e0fd34,123267761,0,0x0,8
tick,0x7ff954e0fd34,123283550,0,0x0,8
tick,0x7ff954e0fd34,123299520,0,0x0,8
tick,0x7ff954e0fd34,123315511,0,0x0,8
tick,0x7ff954e0fd34,123330742,0,0x0,8
tick,0x7ff954e0fd34,123346388,0,0x0,8
tick,0x7ff954e0fd34,123361478,0,0x0,8
tick,0x7ff954e0fd34,123377287,0,0x0,8
tick,0x7ff954e0fd34,123393261,0,0x0,8
tick,0x7ff954e0fd34,123409208,0,0x0,8
tick,0x7ff954e0fd34,123425229,0,0x0,8
tick,0x7ff954e0fd34,123440297,0,0x0,8
tick,0x7ff954e0fd34,123456151,0,0x0,8
tick,0x7ff954e0fd34,123471074,0,0x0,8
tick,0x7ff954e0fd34,123487134,0,0x0,8
tick,0x7ff954e0fd34,123502949,0,0x0,8
tick,0x7ff954e0fd34,123518915,0,0x0,8
tick,0x7ff954e0fd34,123533865,0,0x0,8
tick,0x7ff954e0fd34,123549192,0,0x0,8
tick,0x7ff954e0fd34,123564055,0,0x0,8
tick,0x7ff954e0fd34,123580014,0,0x0,8
tick,0x7ff954e0fd34,123594965,0,0x0,8
tick,0x7ff954e0fd34,123611008,0,0x0,8
tick,0x7ff954e0fd34,123626884,0,0x0,8
tick,0x7ff954e0fd34,123642885,0,0x0,8
tick,0x7ff954e0fd34,123657958,0,0x0,8
tick,0x7ff954e0fd34,123673648,0,0x0,8
tick,0x7ff954e0fd34,123689554,0,0x0,8
tick,0x7ff954e0fd34,123704548,0,0x0,8
tick,0x7ff954e0fd34,123719484,0,0x0,8
tick,0x7ff954e0fd34,123734468,0,0x0,8
tick,0x7ff954e0fd34,123750235,0,0x0,8
tick,0x7ff954e0fd34,123766162,0,0x0,8
tick,0x7ff954e0fd34,123781204,0,0x0,8
tick,0x7ff954e0fd34,123797087,0,0x0,8
tick,0x7ff954e0fd34,123812630,0,0x0,8
tick,0x7ff954e0fd34,123828022,0,0x0,8
tick,0x7ff954e0fd34,123842980,0,0x0,8
tick,0x7ff954e0fd34,123857931,0,0x0,8
tick,0x7ff954e0fd34,123872916,0,0x0,8
tick,0x7ff954e0fd34,123887864,0,0x0,8
tick,0x7ff954e0fd34,123902855,0,0x0,8
tick,0x7ff954e0fd34,123917765,0,0x0,8
tick,0x7ff954e0fd34,123934022,0,0x0,8
tick,0x7ff954e0fd34,123949206,0,0x0,8
tick,0x7ff954e0fd34,123965249,0,0x0,8
tick,0x7ff954e0fd34,123982301,0,0x0,8
tick,0x7ff954e0fd34,123997079,0,0x0,8
tick,0x7ff954e0fd34,124013070,0,0x0,8
tick,0x7ff954e0fd34,124030093,0,0x0,8
tick,0x7ff954e0fd34,124043988,0,0x0,8
tick,0x7ff954e0fd34,124059514,0,0x0,8
tick,0x7ff954e0fd34,124074449,0,0x0,8
tick,0x7ff954e0fd34,124090392,0,0x0,8
tick,0x7ff954e0fd34,124105323,0,0x0,8
tick,0x7ff954e0fd34,124120307,0,0x0,8
tick,0x7ff954e0fd34,124135318,0,0x0,8
tick,0x7ff954e0fd34,124150609,0,0x0,8
tick,0x7ff954e0fd34,124166182,0,0x0,8
tick,0x7ff954e0fd34,124181319,0,0x0,8
tick,0x7ff954e0fd34,124196284,0,0x0,8
tick,0x7ff954e0fd34,124212259,0,0x0,8
tick,0x7ff954e0fd34,124226132,0,0x0,8
tick,0x7ff954e0fd34,124242154,0,0x0,8
tick,0x7ff954e0fd34,124257663,0,0x0,8
tick,0x7ff954e0fd34,124273499,0,0x0,8
tick,0x7ff954e0fd34,124288402,0,0x0,8
tick,0x7ff954e0fd34,124304332,0,0x0,8
tick,0x7ff954e0fd34,124319304,0,0x0,8
tick,0x7ff954e0fd34,124334288,0,0x0,8
tick,0x7ff954e0fd34,124349232,0,0x0,8
tick,0x7ff954e0fd34,124364455,0,0x0,8
tick,0x7ff954e0fd34,124380209,0,0x0,8
tick,0x7ff954e0fd34,124395114,0,0x0,8
tick,0x7ff954e0fd34,124410085,0,0x0,8
tick,0x7ff954e0fd34,124425018,0,0x0,8
tick,0x7ff954e0fd34,124440375,0,0x0,8
tick,0x7ff954e0fd34,124454924,0,0x0,8
tick,0x7ff954e0fd34,124469849,0,0x0,8
tick,0x7ff954e0fd34,124484796,0,0x0,8
tick,0x7ff954e0fd34,124500751,0,0x0,8
tick,0x7ff954e0fd34,124516705,0,0x0,8
tick,0x7ff954e0fd34,124532676,0,0x0,8
tick,0x7ff954e0fd34,124548595,0,0x0,8
tick,0x7ff954e0fd34,124564599,0,0x0,8
tick,0x7ff954e0fd34,124579550,0,0x0,8
tick,0x7ff954e0fd34,124595483,0,0x0,8
tick,0x7ff954e0fd34,124610541,0,0x0,8
tick,0x7ff954e0fd34,124625408,0,0x0,8
tick,0x7ff954e0fd34,124640370,0,0x0,8
tick,0x7ff954e0fd34,124655352,0,0x0,8
tick,0x7ff954e0fd34,124671336,0,0x0,8
tick,0x7ff954e0fd34,124687249,0,0x0,8
tick,0x7ff954e0fd34,124703205,0,0x0,8
tick,0x7ff954e0fd34,124718179,0,0x0,8
tick,0x7ff954e0fd34,124733118,0,0x0,8
tick,0x7ff954e0fd34,124748140,0,0x0,8
tick,0x7ff954e0fd34,124763488,0,0x0,8
tick,0x7ff954e0fd34,124779417,0,0x0,8
tick,0x7ff954e0fd34,124794378,0,0x0,8
tick,0x7ff954e0fd34,124810334,0,0x0,8
tick,0x7ff954e0fd34,124825324,0,0x0,8
tick,0x7ff954e0fd34,124840263,0,0x0,8
tick,0x7ff954e0fd34,124855231,0,0x0,8
tick,0x7ff954e0fd34,124870180,0,0x0,8
tick,0x7ff954e0fd34,124885134,0,0x0,8
tick,0x7ff954e0fd34,124900103,0,0x0,8
tick,0x7ff954e0fd34,124915084,0,0x0,8
tick,0x7ff954e0fd34,124931066,0,0x0,8
tick,0x7ff954e0fd34,124945963,0,0x0,8
tick,0x7ff954e0fd34,124960959,0,0x0,8
tick,0x7ff954e0fd34,124975943,0,0x0,8
tick,0x7ff954e0fd34,124990873,0,0x0,8
tick,0x7ff954e0fd34,125006840,0,0x0,8
tick,0x7ff954e0fd34,125022781,0,0x0,8
tick,0x7ff954e0fd34,125038824,0,0x0,8
tick,0x7ff954e0fd34,125054681,0,0x0,8
tick,0x7ff954e0fd34,125069763,0,0x0,8
tick,0x7ff954e0fd34,125084606,0,0x0,8
tick,0x7ff954e0fd34,125099564,0,0x0,8
tick,0x7ff954e0fd34,125114539,0,0x0,8
tick,0x7ff954e0fd34,125129648,0,0x0,8
tick,0x7ff954e0fd34,125145637,0,0x0,8
tick,0x7ff954e0fd34,125161594,0,0x0,8
tick,0x7ff954e0fd34,125177566,0,0x0,8
tick,0x7ff954e0fd34,125192538,0,0x0,8
tick,0x7ff954e0fd34,125207466,0,0x0,8
tick,0x7ff954e0fd34,125222405,0,0x0,8
tick,0x7ff954e0fd34,125237375,0,0x0,8
tick,0x7ff954e0fd34,125253368,0,0x0,8
tick,0x7ff954e0fd34,125269317,0,0x0,8
tick,0x7ff954e0fd34,125285276,0,0x0,8
tick,0x7ff954e0fd34,125301204,0,0x0,8
tick,0x7ff954e0fd34,125316466,0,0x0,8
tick,0x7ff954e0fd34,125331381,0,0x0,8
tick,0x7ff954e0fd34,125347459,0,0x0,8
tick,0x7ff954e0fd34,125362282,0,0x0,8
tick,0x7ff954e0fd34,125377248,0,0x0,8
tick,0x7ff954e0fd34,125392197,0,0x0,8
tick,0x7ff954e0fd34,125407241,0,0x0,8
tick,0x7ff954e0fd34,125423119,0,0x0,8
tick,0x7ff954e0fd34,125439122,0,0x0,8
tick,0x7ff954e0fd34,125455040,0,0x0,8
tick,0x7ff954e0fd34,125470164,0,0x0,8
tick,0x7ff954e0fd34,125485440,0,0x0,8
tick,0x7ff954e0fd34,125500140,0,0x0,8
tick,0x7ff954e0fd34,125514907,0,0x0,8
tick,0x7ff954e0fd34,125530979,0,0x0,8
tick,0x7ff954e0fd34,125545832,0,0x0,8
tick,0x7ff954e0fd34,125560815,0,0x0,8
tick,0x7ff954e0fd34,125576507,0,0x0,8
tick,0x7ff954e0fd34,125591473,0,0x0,8
tick,0x7ff954e0fd34,125607451,0,0x0,8
tick,0x7ff954e0fd34,125623493,0,0x0,8
tick,0x7ff954e0fd34,125639348,0,0x0,8
tick,0x7ff954e0fd34,125655445,0,0x0,8
tick,0x7ff954e0fd34,125672009,0,0x0,8
tick,0x7ff954e0fd34,125686328,0,0x0,8
tick,0x7ff954e0fd34,125701217,0,0x0,8
tick,0x7ff954e0fd34,125716403,0,0x0,8
tick,0x7ff954e0fd34,125732127,0,0x0,8
tick,0x7ff954e0fd34,125747074,0,0x0,8
tick,0x7ff954e0fd34,125762043,0,0x0,8
tick,0x7ff954e0fd34,125777039,0,0x0,8
tick,0x7ff954e0fd34,125791971,0,0x0,8
tick,0x7ff954e0fd34,125806913,0,0x0,8
tick,0x7ff954e0fd34,125822866,0,0x0,8
tick,0x7ff954e0fd34,125837821,0,0x0,8
tick,0x7ff954e0fd34,125852897,0,0x0,8
tick,0x7ff954e0fd34,125867519,0,0x0,8
tick,0x7ff954e0fd34,125883454,0,0x0,8
tick,0x7ff954e0fd34,125899779,0,0x0,8
tick,0x7ff954e0fd34,125915386,0,0x0,8
tick,0x7ff954e0fd34,125930327,0,0x0,8
tick,0x7ff954e0fd34,125946233,0,0x0,8
tick,0x7ff954e0fd34,125961207,0,0x0,8
tick,0x7ff954e0fd34,125977138,0,0x0,8
tick,0x7ff954e0fd34,125993107,0,0x0,8
tick,0x7ff954e0fd34,126009104,0,0x0,8
tick,0x7ff954e0fd34,126025008,0,0x0,8
tick,0x7ff954e0fd34,126041047,0,0x0,8
tick,0x7ff954e0fd34,126056976,0,0x0,8
tick,0x7ff954e0fd34,126072418,0,0x0,8
tick,0x7ff954e0fd34,126088401,0,0x0,8
tick,0x7ff954e0fd34,126104347,0,0x0,8
tick,0x7ff954e0fd34,126119320,0,0x0,8
tick,0x7ff954e0fd34,126134256,0,0x0,8
tick,0x7ff954e0fd34,126150553,0,0x0,8
tick,0x7ff954e0fd34,126166771,0,0x0,8
tick,0x7ff954e0fd34,126182242,0,0x0,8
tick,0x7ff954e0fd34,126198757,0,0x0,8
tick,0x7ff954e0fd34,126213152,0,0x0,8
tick,0x7ff954e0fd34,126230064,0,0x0,8
tick,0x7ff954e0fd34,126245177,0,0x0,8
tick,0x7ff954e0fd34,126261710,0,0x0,8
tick,0x7ff954e0fd34,126277028,0,0x0,8
tick,0x7ff954e0fd34,126293199,0,0x0,8
tick,0x7ff954e0fd34,126308060,0,0x0,8
tick,0x7ff954e0fd34,126323079,0,0x0,8
tick,0x7ff954e0fd34,126338828,0,0x0,8
tick,0x7ff954e0fd34,126353785,0,0x0,8
tick,0x7ff954e0fd34,126368764,0,0x0,8
tick,0x7ff954e0fd34,126383827,0,0x0,8
tick,0x7ff954e0fd34,126399695,0,0x0,8
tick,0x7ff954e0fd34,126414881,0,0x0,8
tick,0x7ff954e0fd34,126429650,0,0x0,8
tick,0x7ff954e0fd34,126445527,0,0x0,8
tick,0x7ff954e0fd34,126460598,0,0x0,8
tick,0x7ff954e0fd34,126475527,0,0x0,8
tick,0x7ff954e0fd34,126490504,0,0x0,8
tick,0x7ff954e0fd34,126506399,0,0x0,8
tick,0x7ff954e0fd34,126522489,0,0x0,8
tick,0x7ff954e0fd34,126537332,0,0x0,8
tick,0x7ff954e0fd34,126552388,0,0x0,8
tick,0x7ff954e0fd34,126567264,0,0x0,8
tick,0x7ff954e0fd34,126583243,0,0x0,8
tick,0x7ff954e0fd34,126598137,0,0x0,8
tick,0x7ff954e0fd34,126614112,0,0x0,8
tick,0x7ff954e0fd34,126629142,0,0x0,8
tick,0x7ff954e0fd34,126644032,0,0x0,8
tick,0x7ff954e0fd34,126660047,0,0x0,8
tick,0x7ff954e0fd34,126675941,0,0x0,8
tick,0x7ff954e0fd34,126691928,0,0x0,8
tick,0x7ff954e0fd34,126707942,0,0x0,8
tick,0x7ff954e0fd34,126723786,0,0x0,8
tick,0x7ff954e0fd34,126739761,0,0x0,8
tick,0x7ff954e0fd34,126755719,0,0x0,8
tick,0x7ff954e0fd34,126771682,0,0x0,8
tick,0x7ff954e0fd34,126787665,0,0x0,8
tick,0x7ff954e0fd34,126803577,0,0x0,8
tick,0x7ff954e0fd34,126819555,0,0x0,8
tick,0x7ff954e0fd34,126835525,0,0x0,8
tick,0x7ff954e0fd34,126850435,0,0x0,8
tick,0x7ff954e0fd34,126866512,0,0x0,8
tick,0x7ff954e0fd34,126881370,0,0x0,8
tick,0x7ff954e0fd34,126897320,0,0x0,8
tick,0x7ff954e0fd34,126913339,0,0x0,8
tick,0x7ff954e0fd34,126929288,0,0x0,8
tick,0x7ff954e0fd34,126945196,0,0x0,8
tick,0x7ff954e0fd34,126961163,0,0x0,8
tick,0x7ff954e0fd34,126976995,0,0x0,8
tick,0x7ff954e0fd34,126991966,0,0x0,8
tick,0x7ff954e0fd34,127007962,0,0x0,8
tick,0x7ff954e0fd34,127022909,0,0x0,8
tick,0x7ff954e0fd34,127038839,0,0x0,8
tick,0x7ff954e0fd34,127054874,0,0x0,8
tick,0x7ff954e0fd34,127070831,0,0x0,8
tick,0x7ff954e0fd34,127086711,0,0x0,8
tick,0x7ff954e0fd34,127102774,0,0x0,8
tick,0x7ff954e0fd34,127118656,0,0x0,8
tick,0x7ff954e0fd34,127134637,0,0x0,8
tick,0x7ff954e0fd34,127150586,0,0x0,8
tick,0x7ff954e0fd34,127166498,0,0x0,8
tick,0x7ff954e0fd34,127182476,0,0x0,8
tick,0x7ff954e0fd34,127198411,0,0x0,8
tick,0x7ff954e0fd34,127213424,0,0x0,8
tick,0x7ff954e0fd34,127229376,0,0x0,8
tick,0x7ff954e0fd34,127245298,0,0x0,8
tick,0x7ff954e0fd34,127260259,0,0x0,8
tick,0x7ff954e0fd34,127275723,0,0x0,8
tick,0x7ff954e0fd34,127291697,0,0x0,8
tick,0x7ff954e0fd34,127307662,0,0x0,8
tick,0x7ff954e0fd34,127323618,0,0x0,8
tick,0x7ff954e0fd34,127339575,0,0x0,8
tick,0x7ff954e0fd34,127355507,0,0x0,8
tick,0x7ff954e0fd34,127371432,0,0x0,8
tick,0x7ff954e0fd34,127387201,0,0x0,8
tick,0x7ff954e0fd34,127402938,0,0x0,8
tick,0x7ff954e0fd34,127418902,0,0x0,8
tick,0x7ff954e0fd34,127434915,0,0x0,8
tick,0x7ff954e0fd34,127450774,0,0x0,8
tick,0x7ff954e0fd34,127465769,0,0x0,8
tick,0x7ff954e0fd34,127481563,0,0x0,8
tick,0x7ff954e0fd34,127497559,0,0x0,8
tick,0x7ff954e0fd34,127512445,0,0x0,8
tick,0x7ff954e0fd34,127527432,0,0x0,8
tick,0x7ff954e0fd34,127543362,0,0x0,8
tick,0x7ff954e0fd34,127559372,0,0x0,8
tick,0x7ff954e0fd34,127575013,0,0x0,8
tick,0x7ff954e0fd34,127591007,0,0x0,8
tick,0x7ff954e0fd34,127606811,0,0x0,8
tick,0x7ff954e0fd34,127621793,0,0x0,8
tick,0x7ff954e0fd34,127636754,0,0x0,8
tick,0x7ff954e0fd34,127651853,0,0x0,8
tick,0x7ff954e0fd34,127667679,0,0x0,8
tick,0x7ff954e0fd34,127682617,0,0x0,8
tick,0x7ff954e0fd34,127698593,0,0x0,8
tick,0x7ff954e0fd34,127714557,0,0x0,8
tick,0x7ff954e0fd34,127729507,0,0x0,8
tick,0x7ff954e0fd34,127745447,0,0x0,8
tick,0x7ff954e0fd34,127760437,0,0x0,8
tick,0x7ff954e0fd34,127776387,0,0x0,8
tick,0x7ff954e0fd34,127792347,0,0x0,8
tick,0x7ff954e0fd34,127808406,0,0x0,8
tick,0x7ff954e0fd34,127823248,0,0x0,8
tick,0x7ff954e0fd34,127838204,0,0x0,8
tick,0x7ff954e0fd34,127853255,0,0x0,8
tick,0x7ff954e0fd34,127868740,0,0x0,8
tick,0x7ff954e0fd34,127884688,0,0x0,8
tick,0x7ff954e0fd34,127899821,0,0x0,8
tick,0x7ff954e0fd34,127915755,0,0x0,8
tick,0x7ff954e0fd34,127930748,0,0x0,8
tick,0x7ff954e0fd34,127945704,0,0x0,8
tick,0x7ff954e0fd34,127960710,0,0x0,8
tick,0x7ff954e0fd34,127976640,0,0x0,8
tick,0x7ff954e0fd34,127992567,0,0x0,8
tick,0x7ff954e0fd34,128008537,0,0x0,8
tick,0x7ff954e0fd34,128023481,0,0x0,8
tick,0x7ff954e0fd34,128038431,0,0x0,8
tick,0x7ff954e0fd34,128054394,0,0x0,8
tick,0x7ff954e0fd34,128070565,0,0x0,8
tick,0x7ff954e0fd34,128085450,0,0x0,8
tick,0x7ff954e0fd34,128100430,0,0x0,8
tick,0x7ff954e0fd34,128115367,0,0x0,8
tick,0x7ff954e0fd34,128130345,0,0x0,8
tick,0x7ff954e0fd34,128146298,0,0x0,8
tick,0x7ff954e0fd34,128162252,0,0x0,8
tick,0x7ff954e0fd34,128178306,0,0x0,8
tick,0x7ff954e0fd34,128193601,0,0x0,8
tick,0x7ff954e0fd34,128208570,0,0x0,8
tick,0x7ff954e0fd34,128224442,0,0x0,8
tick,0x7ff954e0fd34,128240012,0,0x0,8
tick,0x7ff954e0fd34,128254901,0,0x0,8
tick,0x7ff954e0fd34,128269831,0,0x0,8
tick,0x7ff954e0fd34,128285681,0,0x0,8
tick,0x7ff954e0fd34,128300884,0,0x0,8
tick,0x7ff954e0fd34,128315815,0,0x0,8
tick,0x7ff954e0fd34,128331803,0,0x0,8
tick,0x7ff954e0fd34,128347757,0,0x0,8
tick,0x7ff954e0fd34,128363689,0,0x0,8
tick,0x7ff954e0fd34,128378642,0,0x0,8
tick,0x7ff954e0fd34,128393735,0,0x0,8
tick,0x7ff954e0fd34,128408709,0,0x0,8
tick,0x7ff954e0fd34,128423921,0,0x0,8
tick,0x7ff954e0fd34,128438636,0,0x0,8
tick,0x7ff954e0fd34,128454598,0,0x0,8
tick,0x7ff954e0fd34,128469585,0,0x0,8
tick,0x7ff954e0fd34,128484751,0,0x0,8
tick,0x7ff954e0fd34,128499758,0,0x0,8
tick,0x7ff954e0fd34,128515639,0,0x0,8
tick,0x7ff954e0fd34,128531714,0,0x0,8
tick,0x7ff954e0fd34,128546556,0,0x0,8
tick,0x7ff954e0fd34,128562529,0,0x0,8
tick,0x7ff954e0fd34,128577282,0,0x0,8
tick,0x7ff954e0fd34,128593243,0,0x0,8
tick,0x7ff954e0fd34,128608326,0,0x0,8
tick,0x7ff954e0fd34,128623195,0,0x0,8
tick,0x7ff954e0fd34,128639121,0,0x0,8
tick,0x7ff954e0fd34,128655172,0,0x0,8
tick,0x7ff954e0fd34,128671351,0,0x0,8
tick,0x7ff954e0fd34,128687000,0,0x0,8
tick,0x7ff954e0fd34,128703118,0,0x0,8
tick,0x7ff954e0fd34,128719041,0,0x0,8
tick,0x7ff954e0fd34,128734323,0,0x0,8
tick,0x7ff954e0fd34,128750255,0,0x0,8
tick,0x7ff954e0fd34,128765628,0,0x0,8
tick,0x7ff954e0fd34,128781705,0,0x0,8
tick,0x7ff954e0fd34,128797508,0,0x0,8
tick,0x7ff954e0fd34,128813464,0,0x0,8
tick,0x7ff954e0fd34,128828779,0,0x0,8
tick,0x7ff954e0fd34,128844736,0,0x0,8
tick,0x7ff954e0fd34,128860747,0,0x0,8
tick,0x7ff954e0fd34,128876669,0,0x0,8
tick,0x7ff954e0fd34,128892620,0,0x0,8
tick,0x7ff954e0fd34,128907638,0,0x0,8
tick,0x7ff954e0fd34,128926473,0,0x0,8
tick,0x7ff954e0fd34,128939563,0,0x0,8
tick,0x7ff954e0fd34,128955477,0,0x0,8
tick,0x7ff954e0fd34,128971419,0,0x0,8
tick,0x7ff954e0fd34,128987494,0,0x0,8
tick,0x7ff954e0fd34,129002330,0,0x0,8
tick,0x7ff954e0fd34,129017325,0,0x0,8
tick,0x7ff954e0fd34,129032521,0,0x0,8
tick,0x7ff954e0fd34,129048465,0,0x0,8
tick,0x7ff954e0fd34,129063400,0,0x0,8
tick,0x7ff954e0fd34,129079062,0,0x0,8
tick,0x7ff954e0fd34,129093946,0,0x0,8
tick,0x7ff954e0fd34,129109945,0,0x0,8
tick,0x7ff954e0fd34,129125762,0,0x0,8
tick,0x7ff954e0fd34,129141611,0,0x0,8
tick,0x7ff954e0fd34,129157196,0,0x0,8
tick,0x7ff954e0fd34,129173178,0,0x0,8
tick,0x7ff954e0fd34,129189178,0,0x0,8
tick,0x7ff954e0fd34,129205099,0,0x0,8
tick,0x7ff954e0fd34,129221043,0,0x0,8
tick,0x7ff954e0fd34,129236986,0,0x0,8
tick,0x7ff954e0fd34,129253008,0,0x0,8
tick,0x7ff954e0fd34,129268908,0,0x0,8
tick,0x7ff954e0fd34,129284102,0,0x0,8
tick,0x7ff954e0fd34,129299557,0,0x0,8
tick,0x7ff954e0fd34,129315494,0,0x0,8
tick,0x7ff954e0fd34,129331450,0,0x0,8
tick,0x7ff954e0fd34,129346805,0,0x0,8
tick,0x7ff954e0fd34,129362794,0,0x0,8
tick,0x7ff954e0fd34,129378420,0,0x0,8
tick,0x7ff954e0fd34,129393830,0,0x0,8
tick,0x7ff954e0fd34,129409328,0,0x0,8
tick,0x7ff954e0fd34,129425223,0,0x0,8
tick,0x7ff954e0fd34,129440337,0,0x0,8
tick,0x7ff954e0fd34,129456021,0,0x0,8
tick,0x7ff954e0fd34,129471216,0,0x0,8
tick,0x7ff954e0fd34,129487165,0,0x0,8
tick,0x7ff954e0fd34,129503106,0,0x0,8
tick,0x7ff954e0fd34,129519141,0,0x0,8
tick,0x7ff954e0fd34,129535046,0,0x0,8
tick,0x7ff954e0fd34,129551135,0,0x0,8
tick,0x7ff954e0fd34,129566030,0,0x0,8
tick,0x7ff954e0fd34,129581117,0,0x0,8
tick,0x7ff954e0fd34,129596043,0,0x0,8
tick,0x7ff954e0fd34,129611053,0,0x0,8
tick,0x7ff954e0fd34,129627221,0,0x0,8
tick,0x7ff954e0fd34,129642908,0,0x0,8
tick,0x7ff954e0fd34,129658714,0,0x0,8
tick,0x7ff954e0fd34,129674808,0,0x0,8
tick,0x7ff954e0fd34,129690121,0,0x0,8
tick,0x7ff954e0fd34,129706141,0,0x0,8
tick,0x7ff954e0fd34,129723823,0,0x0,8
tick,0x7ff954e0fd34,129736319,0,0x0,8
tick,0x7ff954e0fd34,129751648,0,0x0,8
tick,0x7ff954e0fd34,129767107,0,0x0,8
tick,0x7ff954e0fd34,129781701,0,0x0,8
tick,0x7ff954e0fd34,129796671,0,0x0,8
tick,0x7ff954e0fd34,129812791,0,0x0,8
tick,0x7ff954e0fd34,129827852,0,0x0,8
tick,0x7ff954e0fd34,129843340,0,0x0,8
tick,0x7ff954e0fd34,129858937,0,0x0,8
tick,0x7ff954e0fd34,129874937,0,0x0,8
tick,0x7ff954e0fd34,129890782,0,0x0,8
tick,0x7ff954e0fd34,129905547,0,0x0,8
tick,0x7ff954e0fd34,129920548,0,0x0,8
tick,0x7ff954e0fd34,129935792,0,0x0,8
tick,0x7ff954e0fd34,129950572,0,0x0,8
tick,0x7ff954e0fd34,129966510,0,0x0,8
tick,0x7ff954e0fd34,129981401,0,0x0,8
tick,0x7ff954e0fd34,129997329,0,0x0,8
tick,0x7ff954e0fd34,130012242,0,0x0,8
tick,0x7ff954e0fd34,130028228,0,0x0,8
tick,0x7ff954e0fd34,130044208,0,0x0,8
tick,0x7ff954e0fd34,130059299,0,0x0,8
tick,0x7ff954e0fd34,130075321,0,0x0,8
tick,0x7ff954e0fd34,130090313,0,0x0,8
tick,0x7ff954e0fd34,130106043,0,0x0,8
tick,0x7ff954e0fd34,130121988,0,0x0,8
tick,0x7ff954e0fd34,130137020,0,0x0,8
tick,0x7ff954e0fd34,130151899,0,0x0,8
tick,0x7ff954e0fd34,130166825,0,0x0,8
tick,0x7ff954e0fd34,130181806,0,0x0,8
tick,0x7ff954e0fd34,130197003,0,0x0,8
tick,0x7ff954e0fd34,130212706,0,0x0,8
tick,0x7ff954e0fd34,130228267,0,0x0,8
tick,0x7ff954e0fd34,130244933,0,0x0,8
tick,0x7ff954e0fd34,130259372,0,0x0,8
tick,0x7ff954e0fd34,130274564,0,0x0,8
tick,0x7ff954e0fd34,130288511,0,0x0,8
tick,0x7ff954e0fd34,130304494,0,0x0,8
tick,0x7ff954e0fd34,130320451,0,0x0,8
tick,0x7ff954e0fd34,130336528,0,0x0,8
tick,0x7ff954e0fd34,130351497,0,0x0,8
tick,0x7ff954e0fd34,130367291,0,0x0,8
tick,0x7ff954e0fd34,130382239,0,0x0,8
tick,0x7ff954e0fd34,130398256,0,0x0,8
tick,0x7ff954e0fd34,130414205,0,0x0,8
tick,0x7ff954e0fd34,130430223,0,0x0,8
tick,0x7ff954e0fd34,130446097,0,0x0,8
tick,0x7ff954e0fd34,130462073,0,0x0,8
tick,0x7ff954e0fd34,130478008,0,0x0,8
tick,0x7ff954e0fd34,130535824,0,0x0,8
tick,0x7ff954e0fd34,130561457,0,0x0,8
tick,0x7ff954e0fd34,130578910,0,0x0,8
tick,0x7ff954e0fd34,130586176,0,0x0,8
tick,0x7ff954e0fd34,130601304,0,0x0,8
tick,0x7ff954e0fd34,130616673,0,0x0,8
tick,0x7ff954e0fd34,130632425,0,0x0,8
tick,0x7ff954e0fd34,130646773,0,0x0,8
tick,0x7ff954e0fd34,130666282,0,0x0,8
tick,0x7ff954e0fd34,130678817,0,0x0,8
tick,0x7ff954e0fd34,130694269,0,0x0,8
tick,0x7ff954e0fd34,130710840,0,0x0,8
tick,0x7ff954e0fd34,130724725,0,0x0,8
tick,0x7ff954e0fd34,130741863,0,0x0,8
tick,0x7ff954e0fd34,130755316,0,0x0,8
tick,0x7ff954e0fd34,130770408,0,0x0,8
tick,0x7ff954e0fd34,130786459,0,0x0,8
tick,0x7ff954e0fd34,130802114,0,0x0,8
tick,0x7ff954e0fd34,130817579,0,0x0,8
tick,0x7ff954e0fd34,130831472,0,0x0,8
tick,0x7ff954e0fd34,130849884,0,0x0,8
tick,0x7ff954e0fd34,130863035,0,0x0,8
tick,0x7ff954e0fd34,130879033,0,0x0,8
tick,0x7ff954e0fd34,130895191,0,0x0,8
tick,0x7ff954e0fd34,130912003,0,0x0,8
tick,0x7ff954e0fd34,130926356,0,0x0,8
tick,0x7ff954e0fd34,130941571,0,0x0,8
tick,0x7ff954e0fd34,130955758,0,0x0,8
tick,0x7ff954e0fd34,130972739,0,0x0,8
tick,0x7ff954e0fd34,130985988,0,0x0,8
tick,0x7ff954e0fd34,131001289,0,0x0,8
tick,0x7ff954e0fd34,131015668,0,0x0,8
tick,0x7ff954e0fd34,131030647,0,0x0,8
tick,0x7ff954e0fd34,131045692,0,0x0,8
tick,0x7ff954e0fd34,131060723,0,0x0,8
tick,0x7ff954e0fd34,131075559,0,0x0,8
tick,0x7ff954e0fd34,131090740,0,0x0,8
tick,0x7ff954e0fd34,131106333,0,0x0,8
tick,0x7ff954e0fd34,131122169,0,0x0,8
tick,0x7ff954e0fd34,131138055,0,0x0,8
tick,0x7ff954e0fd34,131154005,0,0x0,8
tick,0x7ff954e0fd34,131169220,0,0x0,8
tick,0x7ff954e0fd34,131184198,0,0x0,8
tick,0x7ff954e0fd34,131200181,0,0x0,8
tick,0x7ff954e0fd34,131216076,0,0x0,8
tick,0x7ff954e0fd34,131232039,0,0x0,8
tick,0x7ff954e0fd34,131246980,0,0x0,8
tick,0x7ff954e0fd34,131262041,0,0x0,8
tick,0x7ff954e0fd34,131277078,0,0x0,8
tick,0x7ff954e0fd34,131292918,0,0x0,8
tick,0x7ff954e0fd34,131307848,0,0x0,8
tick,0x7ff954e0fd34,131322844,0,0x0,8
tick,0x7ff954e0fd34,131338050,0,0x0,8
tick,0x7ff954e0fd34,131352793,0,0x0,8
tick,0x7ff954e0fd34,131368663,0,0x0,8
tick,0x7ff954e0fd34,131384781,0,0x0,8
tick,0x7ff954e0fd34,131400110,0,0x0,8
tick,0x7ff954e0fd34,131416028,0,0x0,8
tick,0x7ff954e0fd34,131431049,0,0x0,8
tick,0x7ff954e0fd34,131446102,0,0x0,8
tick,0x7ff954e0fd34,131460959,0,0x0,8
tick,0x7ff954e0fd34,131476891,0,0x0,8
tick,0x7ff954e0fd34,131491848,0,0x0,8
tick,0x7ff954e0fd34,131508179,0,0x0,8
tick,0x7ff954e0fd34,131523785,0,0x0,8
tick,0x7ff954e0fd34,131539782,0,0x0,8
tick,0x7ff954e0fd34,131555665,0,0x0,8
tick,0x7ff954e0fd34,131572491,0,0x0,8
tick,0x7ff954e0fd34,131587599,0,0x0,8
tick,0x7ff954e0fd34,131603564,0,0x0,8
tick,0x7ff954e0fd34,131619490,0,0x0,8
tick,0x7ff954e0fd34,131634485,0,0x0,8
tick,0x7ff954e0fd34,131649493,0,0x0,8
tick,0x7ff954e0fd34,131664386,0,0x0,8
tick,0x7ff954e0fd34,131680336,0,0x0,8
tick,0x7ff954e0fd34,131696305,0,0x0,8
tick,0x7ff954e0fd34,131712264,0,0x0,8
tick,0x7ff954e0fd34,131728199,0,0x0,8
tick,0x7ff954e0fd34,131744157,0,0x0,8
tick,0x7ff954e0fd34,131759108,0,0x0,8
tick,0x7ff954e0fd34,131774149,0,0x0,8
tick,0x7ff954e0fd34,131790038,0,0x0,8
tick,0x7ff954e0fd34,131806068,0,0x0,8
tick,0x7ff954e0fd34,131821969,0,0x0,8
tick,0x7ff954e0fd34,131836939,0,0x0,8
tick,0x7ff954e0fd34,131851896,0,0x0,8
tick,0x7ff954e0fd34,131866850,0,0x0,8
tick,0x7ff954e0fd34,131882828,0,0x0,8
tick,0x7ff954e0fd34,131897751,0,0x0,8
tick,0x7ff954e0fd34,131913707,0,0x0,8
tick,0x7ff954e0fd34,131929690,0,0x0,8
tick,0x7ff954e0fd34,131944660,0,0x0,8
tick,0x7ff954e0fd34,131959578,0,0x0,8
tick,0x7ff954e0fd34,131974389,0,0x0,8
tick,0x7ff954e0fd34,131990341,0,0x0,8
tick,0x7ff954e0fd34,132005306,0,0x0,8
tick,0x7ff954e0fd34,132020378,0,0x0,8
tick,0x7ff954e0fd34,132036340,0,0x0,8
tick,0x7ff954e0fd34,132052205,0,0x0,8
tick,0x7ff954e0fd34,132068133,0,0x0,8
tick,0x7ff954e0fd34,132084124,0,0x0,8
tick,0x7ff954e0fd34,132100110,0,0x0,8
tick,0x7ff954e0fd34,132115047,0,0x0,8
tick,0x7ff954e0fd34,132130019,0,0x0,8
tick,0x7ff954e0fd34,132144972,0,0x0,8
tick,0x7ff954e0fd34,132160941,0,0x0,8
tick,0x7ff954e0fd34,132175872,0,0x0,8
tick,0x7ff954e0fd34,132191830,0,0x0,8
tick,0x7ff954e0fd34,132207880,0,0x0,8
tick,0x7ff954e0fd34,132223829,0,0x0,8
tick,0x7ff954e0fd34,132239710,0,0x0,8
tick,0x7ff954e0fd34,132255764,0,0x0,8
tick,0x7ff954e0fd34,132271670,0,0x0,8
tick,0x7ff954e0fd34,132287589,0,0x0,8
tick,0x7ff954e0fd34,132302335,0,0x0,8
tick,0x7ff954e0fd34,132318308,0,0x0,8
tick,0x7ff954e0fd34,132334237,0,0x0,8
tick,0x7ff954e0fd34,132349198,0,0x0,8
tick,0x7ff954e0fd34,132365150,0,0x0,8
tick,0x7ff954e0fd34,132381259,0,0x0,8
tick,0x7ff954e0fd34,132397076,0,0x0,8
tick,0x7ff954e0fd34,132413057,0,0x0,8
tick,0x7ff954e0fd34,132428924,0,0x0,8
tick,0x7ff954e0fd34,132444895,0,0x0,8
tick,0x7ff954e0fd34,132459939,0,0x0,8
tick,0x7ff954e0fd34,132474811,0,0x0,8
tick,0x7ff954e0fd34,132518827,0,0x0,8
tick,0x7ff954e0fd34,132520182,0,0x0,8
tick,0x7ff954e0fd34,132536062,0,0x0,8
tick,0x7ff954e0fd34,132550448,0,0x0,8
tick,0x7ff954e0fd34,132565109,0,0x0,8
tick,0x7ff954e0fd34,132580022,0,0x0,8
tick,0x7ff954e0fd34,132595006,0,0x0,8
tick,0x7ff954e0fd34,132610506,0,0x0,8
tick,0x7ff954e0fd34,132626417,0,0x0,8
tick,0x7ff954e0fd34,132642377,0,0x0,8
tick,0x7ff954e0fd34,132658320,0,0x0,8
tick,0x7ff954e0fd34,132675054,0,0x0,8
tick,0x7ff954e0fd34,132690366,0,0x0,8
tick,0x7ff954e0fd34,132706192,0,0x0,8
tick,0x7ff954e0fd34,132722192,0,0x0,8
tick,0x7ff954e0fd34,132738143,0,0x0,8
tick,0x7ff954e0fd34,132754087,0,0x0,8
tick,0x7ff954e0fd34,132769045,0,0x0,8
tick,0x7ff954e0fd34,132784029,0,0x0,8
tick,0x7ff954e0fd34,132798991,0,0x0,8
tick,0x7ff954e0fd34,132814082,0,0x0,8
tick,0x7ff954e0fd34,132828898,0,0x0,8
tick,0x7ff954e0fd34,132843861,0,0x0,8
tick,0x7ff954e0fd34,132858788,0,0x0,8
tick,0x7ff954e0fd34,132874764,0,0x0,8
tick,0x7ff954e0fd34,132889727,0,0x0,8
tick,0x7ff954e0fd34,132906718,0,0x0,8
tick,0x7ff954e0fd34,132920680,0,0x0,8
tick,0x7ff954e0fd34,132937675,0,0x0,8
tick,0x7ff954e0fd34,132963629,0,0x0,8
tick,0x7ff954e0fd34,132968940,0,0x0,8
tick,0x7ff954e0fd34,132986062,0,0x0,8
tick,0x7ff954e0fd34,132997871,0,0x0,8
tick,0x7ff954e0fd34,133012444,0,0x0,8
tick,0x7ff954e0fd34,133028323,0,0x0,8
tick,0x7ff954e0fd34,133045259,0,0x0,8
tick,0x7ff954e0fd34,133061042,0,0x0,8
tick,0x7ff954e0fd34,133076602,0,0x0,8
tick,0x7ff954e0fd34,133091504,0,0x0,8
tick,0x7ff954e0fd34,133104236,0,0x0,8
tick,0x7ff954e0fd34,133119507,0,0x0,8
tick,0x7ff954e0fd34,133134082,0,0x0,8
tick,0x7ff954e0fd34,133150742,0,0x0,8
tick,0x7ff954e0fd34,133166295,0,0x0,8
tick,0x7ff954e0fd34,133181933,0,0x0,8
tick,0x7ff954e0fd34,133198781,0,0x0,8
tick,0x7ff954e0fd34,133211976,0,0x0,8
tick,0x7ff954e0fd34,133226955,0,0x0,8
tick,0x7ff954e0fd34,133242752,0,0x0,8
tick,0x7ff954e0fd34,133258313,0,0x0,8
tick,0x7ff954e0fd34,133274191,0,0x0,8
tick,0x7ff954e0fd34,133289657,0,0x0,8
tick,0x7ff954e0fd34,133305636,0,0x0,8
tick,0x7ff954e0fd34,133320556,0,0x0,8
tick,0x7ff954e0fd34,133335518,0,0x0,8
tick,0x7ff954e0fd34,133350490,0,0x0,8
tick,0x7ff954e0fd34,133365444,0,0x0,8
tick,0x7ff954e0fd34,133381400,0,0x0,8
tick,0x7ff954e0fd34,133402115,0,0x0,8
tick,0x7ff954e0fd34,133412343,0,0x0,8
tick,0x7ff954e0fd34,133427353,0,0x0,8
tick,0x7ff954e0fd34,133442282,0,0x0,8
tick,0x7ff954e0fd34,133457680,0,0x0,8
tick,0x7ff954e0fd34,133474917,0,0x0,8
tick,0x7ff954e0fd34,133489471,0,0x0,8
tick,0x7ff954e0fd34,133505386,0,0x0,8
tick,0x7ff954e0fd34,133520261,0,0x0,8
tick,0x7ff954e0fd34,133534982,0,0x0,8
tick,0x7ff954e0fd34,133550063,0,0x0,8
tick,0x7ff954e0fd34,133565176,0,0x0,8
tick,0x7ff954e0fd34,133579931,0,0x0,8
tick,0x7ff954e0fd34,133594810,0,0x0,8
tick,0x7ff954e0fd34,133609801,0,0x0,8
tick,0x7ff954e0fd34,133624868,0,0x0,8
tick,0x7ff954e0fd34,133639842,0,0x0,8
tick,0x7ff954e0fd34,133655663,0,0x0,8
tick,0x7ff954e0fd34,133671615,0,0x0,8
tick,0x7ff954e0fd34,133687598,0,0x0,8
tick,0x7ff954e0fd34,133703542,0,0x0,8
tick,0x7ff954e0fd34,133719518,0,0x0,8
tick,0x7ff954e0fd34,133734451,0,0x0,8
tick,0x7ff954e0fd34,133749438,0,0x0,8
tick,0x7ff954e0fd34,133765431,0,0x0,8
tick,0x7ff954e0fd34,133781329,0,0x0,8
tick,0x7ff954e0fd34,133797301,0,0x0,8
tick,0x7ff954e0fd34,133813259,0,0x0,8
tick,0x7ff954e0fd34,133829475,0,0x0,8
tick,0x7ff954e0fd34,133844157,0,0x0,8
tick,0x7ff954e0fd34,133859761,0,0x0,8
tick,0x7ff954e0fd34,133875762,0,0x0,8
tick,0x7ff954e0fd34,133891567,0,0x0,8
tick,0x7ff954e0fd34,133905934,0,0x0,8
tick,0x7ff954e0fd34,133921585,0,0x0,8
tick,0x7ff954e0fd34,133937454,0,0x0,8
tick,0x7ff954e0fd34,133953373,0,0x0,8
tick,0x7ff954e0fd34,133969120,0,0x0,8
tick,0x7ff954e0fd34,133983832,0,0x0,8
tick,0x7ff954e0fd34,133999778,0,0x0,8
tick,0x7ff954e0fd34,134014730,0,0x0,8
tick,0x7ff954e0fd34,134030799,0,0x0,8
tick,0x7ff954e0fd34,134045650,0,0x0,8
tick,0x7ff954e0fd34,134060616,0,0x0,8
tick,0x7ff954e0fd34,134076615,0,0x0,8
tick,0x7ff954e0fd34,134091861,0,0x0,8
tick,0x7ff954e0fd34,134106826,0,0x0,8
tick,0x7ff954e0fd34,134122754,0,0x0,8
tick,0x7ff954e0fd34,134138667,0,0x0,8
tick,0x7ff954e0fd34,134154665,0,0x0,8
tick,0x7ff954e0fd34,134170620,0,0x0,8
tick,0x7ff954e0fd34,134186587,0,0x0,8
tick,0x7ff954e0fd34,134202498,0,0x0,8
tick,0x7ff954e0fd34,134218499,0,0x0,8
tick,0x7ff954e0fd34,134234418,0,0x0,8
tick,0x7ff954e0fd34,134250429,0,0x0,8
tick,0x7ff954e0fd34,134265332,0,0x0,8
tick,0x7ff954e0fd34,134280490,0,0x0,8
tick,0x7ff954e0fd34,134296381,0,0x0,8
tick,0x7ff954e0fd34,134312210,0,0x0,8
tick,0x7ff954e0fd34,134328167,0,0x0,8
tick,0x7ff954e0fd34,134345475,0,0x0,8
tick,0x7ff954e0fd34,134360213,0,0x0,8
tick,0x7ff954e0fd34,134376216,0,0x0,8
tick,0x7ff954e0fd34,134390998,0,0x0,8
tick,0x7ff954e0fd34,134407093,0,0x0,8
tick,0x7ff954e0fd34,134421905,0,0x0,8
tick,0x7ff954e0fd34,134436932,0,0x0,8
tick,0x7ff954e0fd34,134452873,0,0x0,8
tick,0x7ff954e0fd34,134468735,0,0x0,8
tick,0x7ff954e0fd34,134483696,0,0x0,8
tick,0x7ff954e0fd34,134498672,0,0x0,8
tick,0x7ff954e0fd34,134514599,0,0x0,8
tick,0x7ff954e0fd34,134530549,0,0x0,8
tick,0x7ff954e0fd34,134546516,0,0x0,8
tick,0x7ff954e0fd34,134562010,0,0x0,8
tick,0x7ff954e0fd34,134577959,0,0x0,8
tick,0x7ff954e0fd34,134593264,0,0x0,8
tick,0x7ff954e0fd34,134609204,0,0x0,8
tick,0x7ff954e0fd34,134624198,0,0x0,8
tick,0x7ff954e0fd34,134639137,0,0x0,8
tick,0x7ff954e0fd34,134654092,0,0x0,8
tick,0x7ff954e0fd34,134670189,0,0x0,8
tick,0x7ff954e0fd34,134686146,0,0x0,8
tick,0x7ff954e0fd34,134702092,0,0x0,8
tick,0x7ff954e0fd34,134718041,0,0x0,8
tick,0x7ff954e0fd34,134733009,0,0x0,8
tick,0x7ff954e0fd34,134748993,0,0x0,8
tick,0x7ff954e0fd34,134764493,0,0x0,8
tick,0x7ff954e0fd34,134779425,0,0x0,8
tick,0x7ff954e0fd34,134795368,0,0x0,8
tick,0x7ff954e0fd34,134811314,0,0x0,8
tick,0x7ff954e0fd34,134827453,0,0x0,8
tick,0x7ff954e0fd34,134843256,0,0x0,8
tick,0x7ff954e0fd34,134858334,0,0x0,8
tick,0x7ff954e0fd34,134873269,0,0x0,8
tick,0x7ff954e0fd34,134888239,0,0x0,8
tick,0x7ff954e0fd34,134904202,0,0x0,8
tick,0x7ff954e0fd34,134919205,0,0x0,8
tick,0x7ff954e0fd34,134935161,0,0x0,8
tick,0x7ff954e0fd34,134951088,0,0x0,8
tick,0x7ff954e0fd34,134967150,0,0x0,8
tick,0x7ff954e0fd34,134983145,0,0x0,8
tick,0x7ff954e0fd34,134999206,0,0x0,8
tick,0x7ff954e0fd34,135015046,0,0x0,8
tick,0x7ff954e0fd34,135030982,0,0x0,8
tick,0x7ff954e0fd34,135045981,0,0x0,8
tick,0x7ff954e0fd34,135060930,0,0x0,8
tick,0x7ff954e0fd34,135075906,0,0x0,8
tick,0x7ff954e0fd34,135090874,0,0x0,8
tick,0x7ff954e0fd34,135106735,0,0x0,8
tick,0x7ff954e0fd34,135122788,0,0x0,8
tick,0x7ff954e0fd34,135137693,0,0x0,8
tick,0x7ff954e0fd34,135152635,0,0x0,8
tick,0x7ff954e0fd34,135167941,0,0x0,8
tick,0x7ff954e0fd34,135183920,0,0x0,8
tick,0x7ff954e0fd34,135198925,0,0x0,8
tick,0x7ff954e0fd34,135214830,0,0x0,8
tick,0x7ff954e0fd34,135229955,0,0x0,8
tick,0x7ff954e0fd34,135253243,0,0x0,8
tick,0x7ff954e0fd34,135261682,0,0x0,8
tick,0x7ff954e0fd34,135277654,0,0x0,8
tick,0x7ff954e0fd34,135293620,0,0x0,8
tick,0x7ff954e0fd34,135309600,0,0x0,8
tick,0x7ff954e0fd34,135325496,0,0x0,8
tick,0x7ff954e0fd34,135341477,0,0x0,8
tick,0x7ff954e0fd34,135357445,0,0x0,8
tick,0x7ff954e0fd34,135373440,0,0x0,8
tick,0x7ff954e0fd34,135389347,0,0x0,8
tick,0x7ff954e0fd34,135405303,0,0x0,8
tick,0x7ff954e0fd34,135421269,0,0x0,8
tick,0x7ff954e0fd34,135437941,0,0x0,8
tick,0x7ff954e0fd34,135452552,0,0x0,8
tick,0x7ff954e0fd34,135467162,0,0x0,8
tick,0x7ff954e0fd34,135483568,0,0x0,8
tick,0x7ff954e0fd34,135499658,0,0x0,8
tick,0x7ff954e0fd34,135513385,0,0x0,8
tick,0x7ff954e0fd34,135528429,0,0x0,8
tick,0x7ff954e0fd34,135544309,0,0x0,8
tick,0x7ff954e0fd34,135559103,0,0x0,8
tick,0x7ff954e0fd34,135575017,0,0x0,8
tick,0x7ff954e0fd34,135589835,0,0x0,8
tick,0x7ff954e0fd34,135604787,0,0x0,8
tick,0x7ff954e0fd34,135620725,0,0x0,8
tick,0x7ff954e0fd34,135635857,0,0x0,8
tick,0x7ff954e0fd34,135650682,0,0x0,8
tick,0x7ff954e0fd34,135665654,0,0x0,8
tick,0x7ff954e0fd34,135681624,0,0x0,8
tick,0x7ff954e0fd34,135696847,0,0x0,8
tick,0x7ff954e0fd34,135712473,0,0x0,8
tick,0x7ff954e0fd34,135728450,0,0x0,8
tick,0x7ff954e0fd34,135744459,0,0x0,8
tick,0x7ff954e0fd34,135759450,0,0x0,8
tick,0x7ff954e0fd34,135774339,0,0x0,8
tick,0x7ff954e0fd34,135790266,0,0x0,8
tick,0x7ff954e0fd34,135805284,0,0x0,8
tick,0x7ff954e0fd34,135820652,0,0x0,8
tick,0x7ff954e0fd34,135835233,0,0x0,8
tick,0x7ff954e0fd34,135850818,0,0x0,8
tick,0x7ff954e0fd34,135866701,0,0x0,8
tick,0x7ff954e0fd34,135882664,0,0x0,8
tick,0x7ff954e0fd34,135898594,0,0x0,8
tick,0x7ff954e0fd34,135914704,0,0x0,8
tick,0x7ff954e0fd34,135929840,0,0x0,8
tick,0x7ff954e0fd34,135945771,0,0x0,8
tick,0x7ff954e0fd34,135960445,0,0x0,8
tick,0x7ff954e0fd34,135975440,0,0x0,8
tick,0x7ff954e0fd34,135990342,0,0x0,8
tick,0x7ff954e0fd34,136005389,0,0x0,8
tick,0x7ff954e0fd34,136021329,0,0x0,8
tick,0x7ff954e0fd34,136036227,0,0x0,8
tick,0x7ff954e0fd34,136052200,0,0x0,8
tick,0x7ff954e0fd34,136067813,0,0x0,8
tick,0x7ff954e0fd34,136083672,0,0x0,8
tick,0x7ff954e0fd34,136099556,0,0x0,8
tick,0x7ff954e0fd34,136115648,0,0x0,8
tick,0x7ff954e0fd34,136131541,0,0x0,8
tick,0x7ff954e0fd34,136147444,0,0x0,8
tick,0x7ff954e0fd34,136163429,0,0x0,8
tick,0x7ff954e0fd34,136178857,0,0x0,8
tick,0x7ff954e0fd34,136193774,0,0x0,8
tick,0x7ff954e0fd34,136209362,0,0x0,8
tick,0x7ff954e0fd34,136224343,0,0x0,8
tick,0x7ff954e0fd34,136239316,0,0x0,8
tick,0x7ff954e0fd34,136255375,0,0x0,8
tick,0x7ff954e0fd34,136270218,0,0x0,8
tick,0x7ff954e0fd34,136285227,0,0x0,8
tick,0x7ff954e0fd34,136300374,0,0x0,8
tick,0x7ff954e0fd34,136315173,0,0x0,8
tick,0x7ff954e0fd34,136331070,0,0x0,8
tick,0x7ff954e0fd34,136345995,0,0x0,8
tick,0x7ff954e0fd34,136361947,0,0x0,8
tick,0x7ff954e0fd34,136377900,0,0x0,8
tick,0x7ff954e0fd34,136393851,0,0x0,8
tick,0x7ff954e0fd34,136409812,0,0x0,8
tick,0x7ff954e0fd34,136425775,0,0x0,8
tick,0x7ff954e0fd34,136441781,0,0x0,8
tick,0x7ff954e0fd34,136457689,0,0x0,8
tick,0x7ff954e0fd34,136473676,0,0x0,8
tick,0x7ff954e0fd34,136489628,0,0x0,8
tick,0x7ff954e0fd34,136504573,0,0x0,8
tick,0x7ff954e0fd34,136519510,0,0x0,8
tick,0x7ff954e0fd34,136535148,0,0x0,8
tick,0x7ff954e0fd34,136551067,0,0x0,8
tick,0x7ff954e0fd34,136567027,0,0x0,8
tick,0x7ff954e0fd34,136581965,0,0x0,8
tick,0x7ff954e0fd34,136596924,0,0x0,8
tick,0x7ff954e0fd34,136611915,0,0x0,8
tick,0x7ff954e0fd34,136626882,0,0x0,8
tick,0x7ff954e0fd34,136641814,0,0x0,8
tick,0x7ff954e0fd34,136656987,0,0x0,8
tick,0x7ff954e0fd34,136672425,0,0x0,8
tick,0x7ff954e0fd34,136688326,0,0x0,8
tick,0x7ff954e0fd34,136703238,0,0x0,8
tick,0x7ff954e0fd34,136718194,0,0x0,8
tick,0x7ff954e0fd34,136733220,0,0x0,8
tick,0x7ff954e0fd34,136749120,0,0x0,8
tick,0x7ff954e0fd34,136765100,0,0x0,8
tick,0x7ff954e0fd34,136780338,0,0x0,8
tick,0x7ff954e0fd34,136795352,0,0x0,8
tick,0x7ff954e0fd34,136811273,0,0x0,8
tick,0x7ff954e0fd34,136827217,0,0x0,8
tick,0x7ff954e0fd34,136843189,0,0x0,8
tick,0x7ff954e0fd34,136859133,0,0x0,8
tick,0x7ff954e0fd34,136874617,0,0x0,8
tick,0x7ff954e0fd34,136889569,0,0x0,8
tick,0x7ff954e0fd34,136905527,0,0x0,8
tick,0x7ff954e0fd34,136920839,0,0x0,8
tick,0x7ff954e0fd34,136936807,0,0x0,8
tick,0x7ff954e0fd34,136952769,0,0x0,8
tick,0x7ff954e0fd34,136968703,0,0x0,8
tick,0x7ff954e0fd34,136984622,0,0x0,8
tick,0x7ff954e0fd34,137000593,0,0x0,8
tick,0x7ff954e0fd34,137016032,0,0x0,8
tick,0x7ff954e0fd34,137031949,0,0x0,8
tick,0x7ff954e0fd34,137047932,0,0x0,8
tick,0x7ff954e0fd34,137062938,0,0x0,8
tick,0x7ff954e0fd34,137078969,0,0x0,8
tick,0x7ff954e0fd34,137093881,0,0x0,8
tick,0x7ff954e0fd34,137109761,0,0x0,8
tick,0x7ff954e0fd34,137125724,0,0x0,8
tick,0x7ff954e0fd34,137141679,0,0x0,8
tick,0x7ff954e0fd34,137157687,0,0x0,8
tick,0x7ff954e0fd34,137173577,0,0x0,8
tick,0x7ff954e0fd34,137189549,0,0x0,8
tick,0x7ff954e0fd34,137205490,0,0x0,8
tick,0x7ff954e0fd34,137221465,0,0x0,8
tick,0x7ff954e0fd34,137237418,0,0x0,8
tick,0x7ff954e0fd34,137252373,0,0x0,8
tick,0x7ff954e0fd34,137267350,0,0x0,8
tick,0x7ff954e0fd34,137282304,0,0x0,8
tick,0x7ff954e0fd34,137298285,0,0x0,8
tick,0x7ff954e0fd34,137313375,0,0x0,8
tick,0x7ff954e0fd34,137328163,0,0x0,8
tick,0x7ff954e0fd34,137344133,0,0x0,8
tick,0x7ff954e0fd34,137359083,0,0x0,8
tick,0x7ff954e0fd34,137375058,0,0x0,8
tick,0x7ff954e0fd34,137391019,0,0x0,8
tick,0x7ff954e0fd34,137406947,0,0x0,8
tick,0x7ff954e0fd34,137422921,0,0x0,8
tick,0x7ff954e0fd34,137438885,0,0x0,8
tick,0x7ff954e0fd34,137454830,0,0x0,8
tick,0x7ff954e0fd34,137470775,0,0x0,8
tick,0x7ff954e0fd34,137485787,0,0x0,8
tick,0x7ff954e0fd34,137500697,0,0x0,8
tick,0x7ff954e0fd34,137515653,0,0x0,8
tick,0x7ff954e0fd34,137531397,0,0x0,8
tick,0x7ff954e0fd34,137547343,0,0x0,8
tick,0x7ff954e0fd34,137563337,0,0x0,8
tick,0x7ff954e0fd34,137579242,0,0x0,8
tick,0x7ff954e0fd34,137594307,0,0x0,8
tick,0x7ff954e0fd34,137609176,0,0x0,8
tick,0x7ff954e0fd34,137624162,0,0x0,8
tick,0x7ff954e0fd34,137640083,0,0x0,8
tick,0x7ff954e0fd34,137655044,0,0x0,8
tick,0x7ff954e0fd34,137670006,0,0x0,8
tick,0x7ff954e0fd34,137685964,0,0x0,8
tick,0x7ff954e0fd34,137701911,0,0x0,8
tick,0x7ff954e0fd34,137717889,0,0x0,8
tick,0x7ff954e0fd34,137733858,0,0x0,8
tick,0x7ff954e0fd34,137748896,0,0x0,8
tick,0x7ff954e0fd34,137763803,0,0x0,8
tick,0x7ff954e0fd34,137779774,0,0x0,8
tick,0x7ff954e0fd34,137795817,0,0x0,8
tick,0x7ff954e0fd34,137811866,0,0x0,8
tick,0x7ff954e0fd34,137827274,0,0x0,8
tick,0x7ff954e0fd34,137842263,0,0x0,8
tick,0x7ff954e0fd34,137857210,0,0x0,8
tick,0x7ff954e0fd34,137873164,0,0x0,8
tick,0x7ff954e0fd34,137889125,0,0x0,8
tick,0x7ff954e0fd34,137905078,0,0x0,8
tick,0x7ff954e0fd34,137921045,0,0x0,8
tick,0x7ff954e0fd34,137935993,0,0x0,8
tick,0x7ff954e0fd34,137951949,0,0x0,8
tick,0x7ff954e0fd34,137966926,0,0x0,8
tick,0x7ff954e0fd34,137982855,0,0x0,8
tick,0x7ff954e0fd34,137998890,0,0x0,8
tick,0x7ff954e0fd34,138014850,0,0x0,8
tick,0x7ff954e0fd34,138030738,0,0x0,8
tick,0x7ff954e0fd34,138046698,0,0x0,8
tick,0x7ff954e0fd34,138061660,0,0x0,8
tick,0x7ff954e0fd34,138077745,0,0x0,8
tick,0x7ff954e0fd34,138093554,0,0x0,8
tick,0x7ff954e0fd34,138109532,0,0x0,8
tick,0x7ff954e0fd34,138125484,0,0x0,8
tick,0x7ff954e0fd34,138141447,0,0x0,8
tick,0x7ff954e0fd34,138157479,0,0x0,8
tick,0x7ff954e0fd34,138172363,0,0x0,8
tick,0x7ff954e0fd34,138187309,0,0x0,8
tick,0x7ff954e0fd34,138202294,0,0x0,8
tick,0x7ff954e0fd34,138218245,0,0x0,8
tick,0x7ff954e0fd34,138233207,0,0x0,8
tick,0x7ff954e0fd34,138249172,0,0x0,8
tick,0x7ff954e0fd34,138265216,0,0x0,8
tick,0x7ff954e0fd34,138281054,0,0x0,8
tick,0x7ff954e0fd34,138297116,0,0x0,8
tick,0x7ff954e0fd34,138312980,0,0x0,8
tick,0x7ff954e0fd34,138328971,0,0x0,8
tick,0x7ff954e0fd34,138344929,0,0x0,8
tick,0x7ff954e0fd34,138360504,0,0x0,8
tick,0x7ff954e0fd34,138376479,0,0x0,8
tick,0x7ff954e0fd34,138392415,0,0x0,8
tick,0x7ff954e0fd34,138407955,0,0x0,8
tick,0x7ff954e0fd34,138423409,0,0x0,8
tick,0x7ff954e0fd34,138438389,0,0x0,8
tick,0x7ff954e0fd34,138454280,0,0x0,8
tick,0x7ff954e0fd34,138469334,0,0x0,8
tick,0x7ff954e0fd34,138484224,0,0x0,8
tick,0x7ff954e0fd34,138499201,0,0x0,8
tick,0x7ff954e0fd34,138514160,0,0x0,8
tick,0x7ff954e0fd34,138530208,0,0x0,8
tick,0x7ff954e0fd34,138545069,0,0x0,8
tick,0x7ff954e0fd34,138561008,0,0x0,8
tick,0x7ff954e0fd34,138576007,0,0x0,8
tick,0x7ff954e0fd34,138592165,0,0x0,8
tick,0x7ff954e0fd34,138607927,0,0x0,8
tick,0x7ff954e0fd34,138622920,0,0x0,8
tick,0x7ff954e0fd34,138638949,0,0x0,8
tick,0x7ff954e0fd34,138653827,0,0x0,8
tick,0x7ff954e0fd34,138669835,0,0x0,8
tick,0x7ff954e0fd34,138685685,0,0x0,8
tick,0x7ff954e0fd34,138701649,0,0x0,8
tick,0x7ff954e0fd34,138717600,0,0x0,8
tick,0x7ff954e0fd34,138733551,0,0x0,8
tick,0x7ff954e0fd34,138748532,0,0x0,8
tick,0x7ff954e0fd34,138763476,0,0x0,8
tick,0x7ff954e0fd34,138779438,0,0x0,8
tick,0x7ff954e0fd34,138795386,0,0x0,8
tick,0x7ff954e0fd34,138810354,0,0x0,8
tick,0x7ff954e0fd34,138826369,0,0x0,8
tick,0x7ff954e0fd34,138841292,0,0x0,8
tick,0x7ff954e0fd34,138857239,0,0x0,8
tick,0x7ff954e0fd34,138873181,0,0x0,8
tick,0x7ff954e0fd34,138888182,0,0x0,8
tick,0x7ff954e0fd34,138903118,0,0x0,8
tick,0x7ff954e0fd34,138918078,0,0x0,8
tick,0x7ff954e0fd34,138934043,0,0x0,8
tick,0x7ff954e0fd34,138949982,0,0x0,8
tick,0x7ff954e0fd34,138965953,0,0x0,8
tick,0x7ff954e0fd34,138981911,0,0x0,8
tick,0x7ff954e0fd34,138997856,0,0x0,8
tick,0x7ff954e0fd34,139013829,0,0x0,8
tick,0x7ff954e0fd34,139028785,0,0x0,8
tick,0x7ff954e0fd34,139044746,0,0x0,8
tick,0x7ff954e0fd34,139059743,0,0x0,8
tick,0x7ff954e0fd34,139074673,0,0x0,8
tick,0x7ff954e0fd34,139089693,0,0x0,8
tick,0x7ff954e0fd34,139105584,0,0x0,8
tick,0x7ff954e0fd34,139121522,0,0x0,8
tick,0x7ff954e0fd34,139137494,0,0x0,8
tick,0x7ff954e0fd34,139153439,0,0x0,8
tick,0x7ff954e0fd34,139169502,0,0x0,8
tick,0x7ff954e0fd34,139184332,0,0x0,8
tick,0x7ff954e0fd34,139199491,0,0x0,8
tick,0x7ff954e0fd34,139215449,0,0x0,8
tick,0x7ff954e0fd34,139231454,0,0x0,8
tick,0x7ff954e0fd34,139247348,0,0x0,8
tick,0x7ff954e0fd34,139263354,0,0x0,8
tick,0x7ff954e0fd34,139279282,0,0x0,8
tick,0x7ff954e0fd34,139295225,0,0x0,8
tick,0x7ff954e0fd34,139310301,0,0x0,8
tick,0x7ff954e0fd34,139325239,0,0x0,8
tick,0x7ff954e0fd34,139341114,0,0x0,8
tick,0x7ff954e0fd34,139356393,0,0x0,8
tick,0x7ff954e0fd34,139371422,0,0x0,8
tick,0x7ff954e0fd34,139386345,0,0x0,8
tick,0x7ff954e0fd34,139402341,0,0x0,8
tick,0x7ff954e0fd34,139417265,0,0x0,8
tick,0x7ff954e0fd34,139433280,0,0x0,8
tick,0x7ff954e0fd34,139448182,0,0x0,8
tick,0x7ff954e0fd34,139463137,0,0x0,8
tick,0x7ff954e0fd34,139478134,0,0x0,8
tick,0x7ff954e0fd34,139494397,0,0x0,8
tick,0x7ff954e0fd34,139509022,0,0x0,8
tick,0x7ff954e0fd34,139524988,0,0x0,8
tick,0x7ff954e0fd34,139540975,0,0x0,8
tick,0x7ff954e0fd34,139556922,0,0x0,8
tick,0x7ff954e0fd34,139572878,0,0x0,8
tick,0x7ff954e0fd34,139588827,0,0x0,8
tick,0x7ff954e0fd34,139604759,0,0x0,8
tick,0x7ff954e0fd34,139620748,0,0x0,8
tick,0x7ff954e0fd34,139636686,0,0x0,8
tick,0x7ff954e0fd34,139652625,0,0x0,8
tick,0x7ff954e0fd34,139668592,0,0x0,8
tick,0x7ff954e0fd34,139684556,0,0x0,8
tick,0x7ff954e0fd34,139700683,0,0x0,8
tick,0x7ff954e0fd34,139716493,0,0x0,8
tick,0x7ff954e0fd34,139732526,0,0x0,8
tick,0x7ff954e0fd34,139747445,0,0x0,8
tick,0x7ff954e0fd34,139763366,0,0x0,8
tick,0x7ff954e0fd34,139778337,0,0x0,8
tick,0x7ff954e0fd34,139793271,0,0x0,8
tick,0x7ff954e0fd34,139808262,0,0x0,8
tick,0x7ff954e0fd34,139824193,0,0x0,8
tick,0x7ff954e0fd34,139840133,0,0x0,8
tick,0x7ff954e0fd34,139855119,0,0x0,8
tick,0x7ff954e0fd34,139870056,0,0x0,8
tick,0x7ff954e0fd34,139885045,0,0x0,8
tick,0x7ff954e0fd34,139900985,0,0x0,8
tick,0x7ff954e0fd34,139915950,0,0x0,8
tick,0x7ff954e0fd34,139931910,0,0x0,8
tick,0x7ff954e0fd34,139947851,0,0x0,8
tick,0x7ff954e0fd34,139963831,0,0x0,8
tick,0x7ff954e0fd34,139979791,0,0x0,8
tick,0x7ff954e0fd34,139995408,0,0x0,8
tick,0x7ff954e0fd34,140010296,0,0x0,8
tick,0x7ff954e0fd34,140025259,0,0x0,8
tick,0x7ff954e0fd34,140041190,0,0x0,8
tick,0x7ff954e0fd34,140057170,0,0x0,8
tick,0x7ff954e0fd34,140073106,0,0x0,8
tick,0x7ff954e0fd34,140089079,0,0x0,8
tick,0x7ff954e0fd34,140105047,0,0x0,8
tick,0x7ff954e0fd34,140120056,0,0x0,8
tick,0x7ff954e0fd34,140134943,0,0x0,8
tick,0x7ff954e0fd34,140149961,0,0x0,8
tick,0x7ff954e0fd34,140165880,0,0x0,8
tick,0x7ff954e0fd34,140180881,0,0x0,8
tick,0x7ff954e0fd34,140196304,0,0x0,8
tick,0x7ff954e0fd34,140211255,0,0x0,8
tick,0x7ff954e0fd34,140226225,0,0x0,8
tick,0x7ff954e0fd34,140242199,0,0x0,8
tick,0x7ff954e0fd34,140258153,0,0x0,8
tick,0x7ff954e0fd34,140274148,0,0x0,8
tick,0x7ff954e0fd34,140289748,0,0x0,8
tick,0x7ff954e0fd34,140305688,0,0x0,8
tick,0x7ff954e0fd34,140321673,0,0x0,8
tick,0x7ff954e0fd34,140337610,0,0x0,8
tick,0x7ff954e0fd34,140353581,0,0x0,8
tick,0x7ff954e0fd34,140368522,0,0x0,8
tick,0x7ff954e0fd34,140384507,0,0x0,8
tick,0x7ff954e0fd34,140399443,0,0x0,8
tick,0x7ff954e0fd34,140414446,0,0x0,8
tick,0x7ff954e0fd34,140430638,0,0x0,8
tick,0x7ff954e0fd34,140445336,0,0x0,8
tick,0x7ff954e0fd34,140461279,0,0x0,8
tick,0x7ff954e0fd34,140477259,0,0x0,8
tick,0x7ff954e0fd34,140493217,0,0x0,8
tick,0x7ff954e0fd34,140509160,0,0x0,8
tick,0x7ff954e0fd34,140524203,0,0x0,8
tick,0x7ff954e0fd34,140540087,0,0x0,8
tick,0x7ff954e0fd34,140555027,0,0x0,8
tick,0x7ff954e0fd34,140570221,0,0x0,8
tick,0x7ff954e0fd34,140586176,0,0x0,8
tick,0x7ff954e0fd34,140601136,0,0x0,8
tick,0x7ff954e0fd34,140617108,0,0x0,8
tick,0x7ff954e0fd34,140633087,0,0x0,8
tick,0x7ff954e0fd34,140649042,0,0x0,8
tick,0x7ff954e0fd34,140663987,0,0x0,8
tick,0x7ff954e0fd34,140679981,0,0x0,8
tick,0x7ff954e0fd34,140694902,0,0x0,8
tick,0x7ff954e0fd34,140710848,0,0x0,8
tick,0x7ff954e0fd34,140725910,0,0x0,8
tick,0x7ff954e0fd34,140741782,0,0x0,8
tick,0x7ff954e0fd34,140757720,0,0x0,8
tick,0x7ff954e0fd34,140773719,0,0x0,8
tick,0x7ff954e0fd34,140788914,0,0x0,8
tick,0x7ff954e0fd34,140803853,0,0x0,8
tick,0x7ff954e0fd34,140819831,0,0x0,8
tick,0x7ff954e0fd34,140835781,0,0x0,8
tick,0x7ff954e0fd34,140850761,0,0x0,8
tick,0x7ff954e0fd34,140865698,0,0x0,8
tick,0x7ff954e0fd34,140880681,0,0x0,8
tick,0x7ff954e0fd34,140896622,0,0x0,8
tick,0x7ff954e0fd34,140912591,0,0x0,8
tick,0x7ff954e0fd34,140927571,0,0x0,8
tick,0x7ff954e0fd34,140943489,0,0x0,8
tick,0x7ff954e0fd34,140958496,0,0x0,8
tick,0x7ff954e0fd34,140974409,0,0x0,8
tick,0x7ff954e0fd34,140990393,0,0x0,8
tick,0x7ff954e0fd34,141005975,0,0x0,8
tick,0x7ff954e0fd34,141021953,0,0x0,8
tick,0x7ff954e0fd34,141038082,0,0x0,8
tick,0x7ff954e0fd34,141052849,0,0x0,8
tick,0x7ff954e0fd34,141067788,0,0x0,8
tick,0x7ff954e0fd34,141083778,0,0x0,8
tick,0x7ff954e0fd34,141099728,0,0x0,8
tick,0x7ff954e0fd34,141115689,0,0x0,8
tick,0x7ff954e0fd34,141130610,0,0x0,8
tick,0x7ff954e0fd34,141145602,0,0x0,8
tick,0x7ff954e0fd34,141160540,0,0x0,8
tick,0x7ff954e0fd34,141175533,0,0x0,8
tick,0x7ff954e0fd34,141190529,0,0x0,8
tick,0x7ff954e0fd34,141206395,0,0x0,8
tick,0x7ff954e0fd34,141222360,0,0x0,8
tick,0x7ff954e0fd34,141238316,0,0x0,8
tick,0x7ff954e0fd34,141254295,0,0x0,8
tick,0x7ff954e0fd34,141270239,0,0x0,8
tick,0x7ff954e0fd34,141286196,0,0x0,8
tick,0x7ff954e0fd34,141302143,0,0x0,8
tick,0x7ff954e0fd34,141317134,0,0x0,8
tick,0x7ff954e0fd34,141332053,0,0x0,8
tick,0x7ff954e0fd34,141347038,0,0x0,8
tick,0x7ff954e0fd34,141363001,0,0x0,8
tick,0x7ff954e0fd34,141377954,0,0x0,8
tick,0x7ff954e0fd34,141393915,0,0x0,8
tick,0x7ff954e0fd34,141409988,0,0x0,8
tick,0x7ff954e0fd34,141424820,0,0x0,8
tick,0x7ff954e0fd34,141440796,0,0x0,8
tick,0x7ff954e0fd34,141455865,0,0x0,8
tick,0x7ff954e0fd34,141471684,0,0x0,8
tick,0x7ff954e0fd34,141487641,0,0x0,8
tick,0x7ff954e0fd34,141503603,0,0x0,8
tick,0x7ff954e0fd34,141519619,0,0x0,8
tick,0x7ff954e0fd34,141535552,0,0x0,8
tick,0x7ff954e0fd34,141551483,0,0x0,8
tick,0x7ff954e0fd34,141567438,0,0x0,8
tick,0x7ff954e0fd34,141583421,0,0x0,8
tick,0x7ff954e0fd34,141599361,0,0x0,8
tick,0x7ff954e0fd34,141615322,0,0x0,8
tick,0x7ff954e0fd34,141631271,0,0x0,8
tick,0x7ff954e0fd34,141646474,0,0x0,8
tick,0x7ff954e0fd34,141661205,0,0x0,8
tick,0x7ff954e0fd34,141676185,0,0x0,8
tick,0x7ff954e0fd34,141691115,0,0x0,8
tick,0x7ff954e0fd34,141707023,0,0x0,8
tick,0x7ff954e0fd34,141722395,0,0x0,8
tick,0x7ff954e0fd34,141738334,0,0x0,8
tick,0x7ff954e0fd34,141754322,0,0x0,8
tick,0x7ff954e0fd34,141770249,0,0x0,8
tick,0x7ff954e0fd34,141786259,0,0x0,8
tick,0x7ff954e0fd34,141801780,0,0x0,8
tick,0x7ff954e0fd34,141816769,0,0x0,8
tick,0x7ff954e0fd34,141832701,0,0x0,8
tick,0x7ff954e0fd34,141847670,0,0x0,8
tick,0x7ff954e0fd34,141863621,0,0x0,8
tick,0x7ff954e0fd34,141879591,0,0x0,8
tick,0x7ff954e0fd34,141895545,0,0x0,8
tick,0x7ff954e0fd34,141910497,0,0x0,8
tick,0x7ff954e0fd34,141925455,0,0x0,8
tick,0x7ff954e0fd34,141940788,0,0x0,8
tick,0x7ff954e0fd34,141955577,0,0x0,8
tick,0x7ff954e0fd34,141970591,0,0x0,8
tick,0x7ff954e0fd34,141985498,0,0x0,8
tick,0x7ff954e0fd34,142001457,0,0x0,8
tick,0x7ff954e0fd34,142016390,0,0x0,8
tick,0x7ff954e0fd34,142032373,0,0x0,8
tick,0x7ff954e0fd34,142047313,0,0x0,8
tick,0x7ff954e0fd34,142062282,0,0x0,8
tick,0x7ff954e0fd34,142077233,0,0x0,8
tick,0x7ff954e0fd34,142092212,0,0x0,8
tick,0x7ff954e0fd34,142107149,0,0x0,8
tick,0x7ff954e0fd34,142123125,0,0x0,8
tick,0x7ff954e0fd34,142139113,0,0x0,8
tick,0x7ff954e0fd34,142154027,0,0x0,8
tick,0x7ff954e0fd34,142168994,0,0x0,8
tick,0x7ff954e0fd34,142184010,0,0x0,8
tick,0x7ff954e0fd34,142199606,0,0x0,8
tick,0x7ff954e0fd34,142215438,0,0x0,8
tick,0x7ff954e0fd34,142231360,0,0x0,8
tick,0x7ff954e0fd34,142247350,0,0x0,8
tick,0x7ff954e0fd34,142263289,0,0x0,8
tick,0x7ff954e0fd34,142278268,0,0x0,8
tick,0x7ff954e0fd34,142293255,0,0x0,8
tick,0x7ff954e0fd34,142308816,0,0x0,8
tick,0x7ff954e0fd34,142324780,0,0x0,8
tick,0x7ff954e0fd34,142340717,0,0x0,8
tick,0x7ff954e0fd34,142356689,0,0x0,8
tick,0x7ff954e0fd34,142372662,0,0x0,8
tick,0x7ff954e0fd34,142387566,0,0x0,8
tick,0x7ff954e0fd34,142403028,0,0x0,8
tick,0x7ff954e0fd34,142419008,0,0x0,8
tick,0x7ff954e0fd34,142433974,0,0x0,8
tick,0x7ff954e0fd34,142448942,0,0x0,8
tick,0x7ff954e0fd34,142464885,0,0x0,8
tick,0x7ff954e0fd34,142479844,0,0x0,8
tick,0x7ff954e0fd34,142494792,0,0x0,8
tick,0x7ff954e0fd34,142510226,0,0x0,8
tick,0x7ff954e0fd34,142526179,0,0x0,8
tick,0x7ff954e0fd34,142542195,0,0x0,8
tick,0x7ff954e0fd34,142557052,0,0x0,8
tick,0x7ff954e0fd34,142572023,0,0x0,8
tick,0x7ff954e0fd34,142586972,0,0x0,8
tick,0x7ff954e0fd34,142602193,0,0x0,8
tick,0x7ff954e0fd34,142618176,0,0x0,8
tick,0x7ff954e0fd34,142634139,0,0x0,8
tick,0x7ff954e0fd34,142650084,0,0x0,8
tick,0x7ff954e0fd34,142666050,0,0x0,8
tick,0x7ff954e0fd34,142681968,0,0x0,8
tick,0x7ff954e0fd34,142697943,0,0x0,8
tick,0x7ff954e0fd34,142713446,0,0x0,8
tick,0x7ff954e0fd34,142729407,0,0x0,8
tick,0x7ff954e0fd34,142745307,0,0x0,8
tick,0x7ff954e0fd34,142761422,0,0x0,8
tick,0x7ff954e0fd34,142777241,0,0x0,8
tick,0x7ff954e0fd34,142792220,0,0x0,8
tick,0x7ff954e0fd34,142807669,0,0x0,8
tick,0x7ff954e0fd34,142823624,0,0x0,8
tick,0x7ff954e0fd34,142839586,0,0x0,8
tick,0x7ff954e0fd34,142855566,0,0x0,8
tick,0x7ff954e0fd34,142871487,0,0x0,8
tick,0x7ff954e0fd34,142887464,0,0x0,8
tick,0x7ff954e0fd34,142902920,0,0x0,8
tick,0x7ff954e0fd34,142917902,0,0x0,8
tick,0x7ff954e0fd34,142933879,0,0x0,8
tick,0x7ff954e0fd34,142949794,0,0x0,8
tick,0x7ff954e0fd34,142965774,0,0x0,8
tick,0x7ff954e0fd34,142980791,0,0x0,8
tick,0x7ff954e0fd34,142996698,0,0x0,8
tick,0x7ff954e0fd34,143012686,0,0x0,8
tick,0x7ff954e0fd34,143028593,0,0x0,8
tick,0x7ff954e0fd34,143044537,0,0x0,8
tick,0x7ff954e0fd34,143060502,0,0x0,8
tick,0x7ff954e0fd34,143076467,0,0x0,8
tick,0x7ff954e0fd34,143092417,0,0x0,8
tick,0x7ff954e0fd34,143107378,0,0x0,8
tick,0x7ff954e0fd34,143122333,0,0x0,8
tick,0x7ff954e0fd34,143137325,0,0x0,8
tick,0x7ff954e0fd34,143153305,0,0x0,8
tick,0x7ff954e0fd34,143168216,0,0x0,8
tick,0x7ff954e0fd34,143184183,0,0x0,8
tick,0x7ff954e0fd34,143199150,0,0x0,8
tick,0x7ff954e0fd34,143214106,0,0x0,8
tick,0x7ff954e0fd34,143229067,0,0x0,8
tick,0x7ff954e0fd34,143244025,0,0x0,8
tick,0x7ff954e0fd34,143260001,0,0x0,8
tick,0x7ff954e0fd34,143275949,0,0x0,8
tick,0x7ff954e0fd34,143290886,0,0x0,8
tick,0x7ff954e0fd34,143305874,0,0x0,8
tick,0x7ff954e0fd34,143320852,0,0x0,8
tick,0x7ff954e0fd34,143336765,0,0x0,8
tick,0x7ff954e0fd34,143351742,0,0x0,8
tick,0x7ff954e0fd34,143367707,0,0x0,8
tick,0x7ff954e0fd34,143382893,0,0x0,8
tick,0x7ff954e0fd34,143397794,0,0x0,8
tick,0x7ff954e0fd34,143412762,0,0x0,8
tick,0x7ff954e0fd34,143427746,0,0x0,8
tick,0x7ff954e0fd34,143442702,0,0x0,8
tick,0x7ff954e0fd34,143458619,0,0x0,8
tick,0x7ff954e0fd34,143473597,0,0x0,8
tick,0x7ff954e0fd34,143488571,0,0x0,8
tick,0x7ff954e0fd34,143503526,0,0x0,8
tick,0x7ff954e0fd34,143519492,0,0x0,8
tick,0x7ff954e0fd34,143534436,0,0x0,8
tick,0x7ff954e0fd34,143550410,0,0x0,8
tick,0x7ff954e0fd34,143565340,0,0x0,8
tick,0x7ff954e0fd34,143580286,0,0x0,8
tick,0x7ff954e0fd34,143596261,0,0x0,8
tick,0x7ff954e0fd34,143612222,0,0x0,8
tick,0x7ff954e0fd34,143627191,0,0x0,8
tick,0x7ff954e0fd34,143643141,0,0x0,8
tick,0x7ff954e0fd34,143658088,0,0x0,8
tick,0x7ff954e0fd34,143674039,0,0x0,8
tick,0x7ff954e0fd34,143690002,0,0x0,8
tick,0x7ff954e0fd34,143705975,0,0x0,8
tick,0x7ff954e0fd34,143721930,0,0x0,8
tick,0x7ff954e0fd34,143736938,0,0x0,8
tick,0x7ff954e0fd34,143752906,0,0x0,8
tick,0x7ff954e0fd34,143767816,0,0x0,8
tick,0x7ff954e0fd34,143783770,0,0x0,8
tick,0x7ff954e0fd34,143799740,0,0x0,8
tick,0x7ff954e0fd34,143815687,0,0x0,8
tick,0x7ff954e0fd34,143831666,0,0x0,8
tick,0x7ff954e0fd34,143847714,0,0x0,8
tick,0x7ff954e0fd34,143862537,0,0x0,8
tick,0x7ff954e0fd34,143877510,0,0x0,8
tick,0x7ff954e0fd34,143892506,0,0x0,8
tick,0x7ff954e0fd34,143907943,0,0x0,8
tick,0x7ff954e0fd34,143923902,0,0x0,8
tick,0x7ff954e0fd34,143939919,0,0x0,8
tick,0x7ff954e0fd34,143954810,0,0x0,8
tick,0x7ff954e0fd34,143969787,0,0x0,8
tick,0x7ff954e0fd34,143985750,0,0x0,8
tick,0x7ff954e0fd34,144001698,0,0x0,8
tick,0x7ff954e0fd34,144017701,0,0x0,8
tick,0x7ff954e0fd34,144033603,0,0x0,8
tick,0x7ff954e0fd34,144048586,0,0x0,8
tick,0x7ff954e0fd34,144063490,0,0x0,8
tick,0x7ff954e0fd34,144079399,0,0x0,8
tick,0x7ff954e0fd34,144095378,0,0x0,8
tick,0x7ff954e0fd34,144111368,0,0x0,8
tick,0x7ff954e0fd34,144127421,0,0x0,8
tick,0x7ff954e0fd34,144143274,0,0x0,8
tick,0x7ff954e0fd34,144158261,0,0x0,8
tick,0x7ff954e0fd34,144174198,0,0x0,8
tick,0x7ff954e0fd34,144189156,0,0x0,8
tick,0x7ff954e0fd34,144204108,0,0x0,8
tick,0x7ff954e0fd34,144219148,0,0x0,8
tick,0x7ff954e0fd34,144235051,0,0x0,8
tick,0x7ff954e0fd34,144250006,0,0x0,8
tick,0x7ff954e0fd34,144266060,0,0x0,8
tick,0x7ff954e0fd34,144280916,0,0x0,8
tick,0x7ff954e0fd34,144296890,0,0x0,8
tick,0x7ff954e0fd34,144311907,0,0x0,8
tick,0x7ff954e0fd34,144326836,0,0x0,8
tick,0x7ff954e0fd34,144342792,0,0x0,8
tick,0x7ff954e0fd34,144357756,0,0x0,8
tick,0x7ff954e0fd34,144372666,0,0x0,8
tick,0x7ff954e0fd34,144387775,0,0x0,8
tick,0x7ff954e0fd34,144402593,0,0x0,8
tick,0x7ff954e0fd34,144418079,0,0x0,8
tick,0x7ff954e0fd34,144434130,0,0x0,8
tick,0x7ff954e0fd34,144450006,0,0x0,8
tick,0x7ff954e0fd34,144465982,0,0x0,8
tick,0x7ff954e0fd34,144481911,0,0x0,8
tick,0x7ff954e0fd34,144497891,0,0x0,8
tick,0x7ff954e0fd34,144513831,0,0x0,8
tick,0x7ff954e0fd34,144528788,0,0x0,8
tick,0x7ff954e0fd34,144543746,0,0x0,8
tick,0x7ff954e0fd34,144558741,0,0x0,8
tick,0x7ff954e0fd34,144574667,0,0x0,8
tick,0x7ff954e0fd34,144590614,0,0x0,8
tick,0x7ff954e0fd34,144606560,0,0x0,8
tick,0x7ff954e0fd34,144621529,0,0x0,8
tick,0x7ff954e0fd34,144636502,0,0x0,8
tick,0x7ff954e0fd34,144651452,0,0x0,8
tick,0x7ff954e0fd34,144666438,0,0x0,8
tick,0x7ff954e0fd34,144682364,0,0x0,8
tick,0x7ff954e0fd34,144697327,0,0x0,8
tick,0x7ff954e0fd34,144713296,0,0x0,8
tick,0x7ff954e0fd34,144728244,0,0x0,8
tick,0x7ff954e0fd34,144744234,0,0x0,8
tick,0x7ff954e0fd34,144760148,0,0x0,8
tick,0x7ff954e0fd34,144776113,0,0x0,8
tick,0x7ff954e0fd34,144792078,0,0x0,8
tick,0x7ff954e0fd34,144807038,0,0x0,8
tick,0x7ff954e0fd34,144822981,0,0x0,8
tick,0x7ff954e0fd34,144838956,0,0x0,8
tick,0x7ff954e0fd34,144855157,0,0x0,8
tick,0x7ff954e0fd34,144871050,0,0x0,8
tick,0x7ff954e0fd34,144885821,0,0x0,8
tick,0x7ff954e0fd34,144901872,0,0x0,8
tick,0x7ff954e0fd34,144916755,0,0x0,8
tick,0x7ff954e0fd34,144932729,0,0x0,8
tick,0x7ff954e0fd34,144948639,0,0x0,8
tick,0x7ff954e0fd34,144964694,0,0x0,8
tick,0x7ff954e0fd34,144980564,0,0x0,8
tick,0x7ff954e0fd34,144996534,0,0x0,8
tick,0x7ff954e0fd34,145012470,0,0x0,8
tick,0x7ff954e0fd34,145028429,0,0x0,8
tick,0x7ff954e0fd34,145043388,0,0x0,8
tick,0x7ff954e0fd34,145058374,0,0x0,8
tick,0x7ff954e0fd34,145073620,0,0x0,8
tick,0x7ff954e0fd34,145088576,0,0x0,8
tick,0x7ff954e0fd34,145104562,0,0x0,8
tick,0x7ff954e0fd34,145120564,0,0x0,8
tick,0x7ff954e0fd34,145136474,0,0x0,8
tick,0x7ff954e0fd34,145151657,0,0x0,8
tick,0x7ff954e0fd34,145166645,0,0x0,8
tick,0x7ff954e0fd34,145182555,0,0x0,8
tick,0x7ff954e0fd34,145198544,0,0x0,8
tick,0x7ff954e0fd34,145213463,0,0x0,8
tick,0x7ff954e0fd34,145228422,0,0x0,8
tick,0x7ff954e0fd34,145243406,0,0x0,8
tick,0x7ff954e0fd34,145259354,0,0x0,8
tick,0x7ff954e0fd34,145274293,0,0x0,8
tick,0x7ff954e0fd34,145290275,0,0x0,8
tick,0x7ff954e0fd34,145306234,0,0x0,8
tick,0x7ff954e0fd34,145322199,0,0x0,8
tick,0x7ff954e0fd34,145337127,0,0x0,8
tick,0x7ff954e0fd34,145352080,0,0x0,8
tick,0x7ff954e0fd34,145368039,0,0x0,8
tick,0x7ff954e0fd34,145384022,0,0x0,8
tick,0x7ff954e0fd34,145399994,0,0x0,8
tick,0x7ff954e0fd34,145415941,0,0x0,8
tick,0x7ff954e0fd34,145431928,0,0x0,8
tick,0x7ff954e0fd34,145447028,0,0x0,8
tick,0x7ff954e0fd34,145462409,0,0x0,8
tick,0x7ff954e0fd34,145477421,0,0x0,8
tick,0x7ff954e0fd34,145493330,0,0x0,8
tick,0x7ff954e0fd34,145508333,0,0x0,8
tick,0x7ff954e0fd34,145524425,0,0x0,8
tick,0x7ff954e0fd34,145540304,0,0x0,8
tick,0x7ff954e0fd34,145556214,0,0x0,8
tick,0x7ff954e0fd34,145571154,0,0x0,8
tick,0x7ff954e0fd34,145586085,0,0x0,8
tick,0x7ff954e0fd34,145601076,0,0x0,8
tick,0x7ff954e0fd34,145616689,0,0x0,8
tick,0x7ff954e0fd34,145632592,0,0x0,8
tick,0x7ff954e0fd34,145648602,0,0x0,8
tick,0x7ff954e0fd34,145664573,0,0x0,8
tick,0x7ff954e0fd34,145680485,0,0x0,8
tick,0x7ff954e0fd34,145696447,0,0x0,8
tick,0x7ff954e0fd34,145712413,0,0x0,8
tick,0x7ff954e0fd34,145727777,0,0x0,8
tick,0x7ff954e0fd34,145742510,0,0x0,8
tick,0x7ff954e0fd34,145758555,0,0x0,8
tick,0x7ff954e0fd34,145774462,0,0x0,8
tick,0x7ff954e0fd34,145790088,0,0x0,8
tick,0x7ff954e0fd34,145806034,0,0x0,8
tick,0x7ff954e0fd34,145822139,0,0x0,8
tick,0x7ff954e0fd34,145838075,0,0x0,8
tick,0x7ff954e0fd34,145854013,0,0x0,8
tick,0x7ff954e0fd34,145868973,0,0x0,8
tick,0x7ff954e0fd34,145883930,0,0x0,8
tick,0x7ff954e0fd34,145899241,0,0x0,8
tick,0x7ff954e0fd34,145915167,0,0x0,8
tick,0x7ff954e0fd34,145929862,0,0x0,8
tick,0x7ff954e0fd34,145945796,0,0x0,8
tick,0x7ff954e0fd34,145960792,0,0x0,8
tick,0x7ff954e0fd34,145975852,0,0x0,8
tick,0x7ff954e0fd34,145990717,0,0x0,8
tick,0x7ff954e0fd34,146005944,0,0x0,8
tick,0x7ff954e0fd34,146021587,0,0x0,8
tick,0x7ff954e0fd34,146037346,0,0x0,8
tick,0x7ff954e0fd34,146053303,0,0x0,8
tick,0x7ff954e0fd34,146068797,0,0x0,8
tick,0x7ff954e0fd34,146083730,0,0x0,8
tick,0x7ff954e0fd34,146099730,0,0x0,8
tick,0x7ff954e0fd34,146114647,0,0x0,8
tick,0x7ff954e0fd34,146130318,0,0x0,8
tick,0x7ff954e0fd34,146145266,0,0x0,8
tick,0x7ff954e0fd34,146160324,0,0x0,8
tick,0x7ff954e0fd34,146175202,0,0x0,8
tick,0x7ff954e0fd34,146190339,0,0x0,8
tick,0x7ff954e0fd34,146205097,0,0x0,8
tick,0x7ff954e0fd34,146220722,0,0x0,8
tick,0x7ff954e0fd34,146235925,0,0x0,8
tick,0x7ff954e0fd34,146251570,0,0x0,8
tick,0x7ff954e0fd34,146266554,0,0x0,8
tick,0x7ff954e0fd34,146281542,0,0x0,8
tick,0x7ff954e0fd34,146296470,0,0x0,8
tick,0x7ff954e0fd34,146312406,0,0x0,8
tick,0x7ff954e0fd34,146327180,0,0x0,8
tick,0x7ff954e0fd34,146342155,0,0x0,8
tick,0x7ff954e0fd34,146358153,0,0x0,8
tick,0x7ff954e0fd34,146373073,0,0x0,8
tick,0x7ff954e0fd34,146388012,0,0x0,8
tick,0x7ff954e0fd34,146403037,0,0x0,8
tick,0x7ff954e0fd34,146417939,0,0x0,8
tick,0x7ff954e0fd34,146433480,0,0x0,8
tick,0x7ff954e0fd34,146449399,0,0x0,8
tick,0x7ff954e0fd34,146465333,0,0x0,8
tick,0x7ff954e0fd34,146481003,0,0x0,8
tick,0x7ff954e0fd34,146496902,0,0x0,8
tick,0x7ff954e0fd34,146512911,0,0x0,8
tick,0x7ff954e0fd34,146528330,0,0x0,8
tick,0x7ff954e0fd34,146543963,0,0x0,8
tick,0x7ff954e0fd34,146558922,0,0x0,8
tick,0x7ff954e0fd34,146574159,0,0x0,8
tick,0x7ff954e0fd34,146590106,0,0x0,8
tick,0x7ff954e0fd34,146605641,0,0x0,8
tick,0x7ff954e0fd34,146621576,0,0x0,8
tick,0x7ff954e0fd34,146637213,0,0x0,8
tick,0x7ff954e0fd34,146653191,0,0x0,8
tick,0x7ff954e0fd34,146668380,0,0x0,8
tick,0x7ff954e0fd34,146683319,0,0x0,8
tick,0x7ff954e0fd34,146698842,0,0x0,8
tick,0x7ff954e0fd34,146714452,0,0x0,8
tick,0x7ff954e0fd34,146729427,0,0x0,8
tick,0x7ff954e0fd34,146744363,0,0x0,8
tick,0x7ff954e0fd34,146759730,0,0x0,8
tick,0x7ff954e0fd34,146775720,0,0x0,8
tick,0x7ff954e0fd34,146791673,0,0x0,8
tick,0x7ff954e0fd34,146807294,0,0x0,8
tick,0x7ff954e0fd34,146823090,0,0x0,8
tick,0x7ff954e0fd34,146838911,0,0x0,8
tick,0x7ff954e0fd34,146854868,0,0x0,8
tick,0x7ff954e0fd34,146869467,0,0x0,8
tick,0x7ff954e0fd34,146884302,0,0x0,8
tick,0x7ff954e0fd34,146900241,0,0x0,8
tick,0x7ff954e0fd34,146915699,0,0x0,8
tick,0x7ff954e0fd34,146931463,0,0x0,8
tick,0x7ff954e0fd34,146947384,0,0x0,8
tick,0x7ff954e0fd34,146963353,0,0x0,8
tick,0x7ff954e0fd34,146979263,0,0x0,8
tick,0x7ff954e0fd34,146995226,0,0x0,8
tick,0x7ff954e0fd34,147010460,0,0x0,8
tick,0x7ff954e0fd34,147025838,0,0x0,8
tick,0x7ff954e0fd34,147041799,0,0x0,8
tick,0x7ff954e0fd34,147056563,0,0x0,8
tick,0x7ff954e0fd34,147072529,0,0x0,8
tick,0x7ff954e0fd34,147087862,0,0x0,8
tick,0x7ff954e0fd34,147103435,0,0x0,8
tick,0x7ff954e0fd34,147119358,0,0x0,8
tick,0x7ff954e0fd34,147134366,0,0x0,8
tick,0x7ff954e0fd34,147150321,0,0x0,8
tick,0x7ff954e0fd34,147165263,0,0x0,8
tick,0x7ff954e0fd34,147180686,0,0x0,8
tick,0x7ff954e0fd34,147196648,0,0x0,8
tick,0x7ff954e0fd34,147212630,0,0x0,8
tick,0x7ff954e0fd34,147227680,0,0x0,8
tick,0x7ff954e0fd34,147242581,0,0x0,8
tick,0x7ff954e0fd34,147257501,0,0x0,8
tick,0x7ff954e0fd34,147273568,0,0x0,8
tick,0x7ff954e0fd34,147288452,0,0x0,8
tick,0x7ff954e0fd34,147304388,0,0x0,8
tick,0x7ff954e0fd34,147320421,0,0x0,8
tick,0x7ff954e0fd34,147336333,0,0x0,8
tick,0x7ff954e0fd34,147352310,0,0x0,8
tick,0x7ff954e0fd34,147368263,0,0x0,8
tick,0x7ff954e0fd34,147383968,0,0x0,8
tick,0x7ff954e0fd34,147399204,0,0x0,8
tick,0x7ff954e0fd34,147415213,0,0x0,8
tick,0x7ff954e0fd34,147430124,0,0x0,8
tick,0x7ff954e0fd34,147445659,0,0x0,8
tick,0x7ff954e0fd34,147461641,0,0x0,8
tick,0x7ff954e0fd34,147476653,0,0x0,8
tick,0x7ff954e0fd34,147492550,0,0x0,8
tick,0x7ff954e0fd34,147507722,0,0x0,8
tick,0x7ff954e0fd34,147522476,0,0x0,8
tick,0x7ff954e0fd34,147537687,0,0x0,8
tick,0x7ff954e0fd34,147552692,0,0x0,8
tick,0x7ff954e0fd34,147568027,0,0x0,8
tick,0x7ff954e0fd34,147582996,0,0x0,8
tick,0x7ff954e0fd34,147598869,0,0x0,8
tick,0x7ff954e0fd34,147613852,0,0x0,8
tick,0x7ff954e0fd34,147628828,0,0x0,8
tick,0x7ff954e0fd34,147644821,0,0x0,8
tick,0x7ff954e0fd34,147660528,0,0x0,8
tick,0x7ff954e0fd34,147675991,0,0x0,8
tick,0x7ff954e0fd34,147691049,0,0x0,8
tick,0x7ff954e0fd34,147706409,0,0x0,8
tick,0x7ff954e0fd34,147722303,0,0x0,8
tick,0x7ff954e0fd34,147737575,0,0x0,8
tick,0x7ff954e0fd34,147752736,0,0x0,8
tick,0x7ff954e0fd34,147768472,0,0x0,8
tick,0x7ff954e0fd34,147784488,0,0x0,8
tick,0x7ff954e0fd34,147799549,0,0x0,8
tick,0x7ff954e0fd34,147814956,0,0x0,8
tick,0x7ff954e0fd34,147830897,0,0x0,8
tick,0x7ff954e0fd34,147846131,0,0x0,8
tick,0x7ff954e0fd34,147861506,0,0x0,8
tick,0x7ff954e0fd34,147876716,0,0x0,8
tick,0x7ff954e0fd34,147892752,0,0x0,8
tick,0x7ff954e0fd34,147907389,0,0x0,8
tick,0x7ff954e0fd34,147923293,0,0x0,8
tick,0x7ff954e0fd34,147938742,0,0x0,8
tick,0x7ff954e0fd34,147954649,0,0x0,8
tick,0x7ff954e0fd34,147970652,0,0x0,8
tick,0x7ff954e0fd34,147986398,0,0x0,8
tick,0x7ff954e0fd34,148001743,0,0x0,8
tick,0x7ff954e0fd34,148017336,0,0x0,8
tick,0x7ff954e0fd34,148032720,0,0x0,8
tick,0x7ff954e0fd34,148048832,0,0x0,8
tick,0x7ff954e0fd34,148064158,0,0x0,8
tick,0x7ff954e0fd34,148079767,0,0x0,8
tick,0x7ff954e0fd34,148095643,0,0x0,8
tick,0x7ff954e0fd34,148110969,0,0x0,8
tick,0x7ff954e0fd34,148126379,0,0x0,8
tick,0x7ff954e0fd34,148142344,0,0x0,8
tick,0x7ff954e0fd34,148158374,0,0x0,8
tick,0x7ff954e0fd34,148174073,0,0x0,8
tick,0x7ff954e0fd34,148189350,0,0x0,8
tick,0x7ff954e0fd34,148205155,0,0x0,8
tick,0x7ff954e0fd34,148220646,0,0x0,8
tick,0x7ff954e0fd34,148236569,0,0x0,8
tick,0x7ff954e0fd34,148252549,0,0x0,8
tick,0x7ff954e0fd34,148268486,0,0x0,8
tick,0x7ff954e0fd34,148284428,0,0x0,8
tick,0x7ff954e0fd34,148300383,0,0x0,8
tick,0x7ff954e0fd34,148316364,0,0x0,8
tick,0x7ff954e0fd34,148332315,0,0x0,8
tick,0x7ff954e0fd34,148348282,0,0x0,8
tick,0x7ff954e0fd34,148364236,0,0x0,8
tick,0x7ff954e0fd34,148379728,0,0x0,8
tick,0x7ff954e0fd34,148395629,0,0x0,8
tick,0x7ff954e0fd34,148410870,0,0x0,8
tick,0x7ff954e0fd34,148425712,0,0x0,8
tick,0x7ff954e0fd34,148440766,0,0x0,8
tick,0x7ff954e0fd34,148456398,0,0x0,8
tick,0x7ff954e0fd34,148472354,0,0x0,8
tick,0x7ff954e0fd34,148487525,0,0x0,8
tick,0x7ff954e0fd34,148503483,0,0x0,8
tick,0x7ff954e0fd34,148518900,0,0x0,8
tick,0x7ff954e0fd34,148534887,0,0x0,8
tick,0x7ff954e0fd34,148550779,0,0x0,8
tick,0x7ff954e0fd34,148566745,0,0x0,8
tick,0x7ff954e0fd34,148581679,0,0x0,8
tick,0x7ff954e0fd34,148596651,0,0x0,8
tick,0x7ff954e0fd34,148611629,0,0x0,8
tick,0x7ff954e0fd34,148626601,0,0x0,8
tick,0x7ff954e0fd34,148642541,0,0x0,8
tick,0x7ff954e0fd34,148658482,0,0x0,8
tick,0x7ff954e0fd34,148674456,0,0x0,8
tick,0x7ff954e0fd34,148690459,0,0x0,8
tick,0x7ff954e0fd34,148705370,0,0x0,8
tick,0x7ff954e0fd34,148720315,0,0x0,8
tick,0x7ff954e0fd34,148735373,0,0x0,8
tick,0x7ff954e0fd34,148750590,0,0x0,8
tick,0x7ff954e0fd34,148765969,0,0x0,8
tick,0x7ff954e0fd34,148780950,0,0x0,8
tick,0x7ff954e0fd34,148795910,0,0x0,8
tick,0x7ff954e0fd34,148810850,0,0x0,8
tick,0x7ff954e0fd34,148825825,0,0x0,8
tick,0x7ff954e0fd34,148841456,0,0x0,8
tick,0x7ff954e0fd34,148857447,0,0x0,8
tick,0x7ff954e0fd34,148873391,0,0x0,8
tick,0x7ff954e0fd34,148889156,0,0x0,8
tick,0x7ff954e0fd34,148905156,0,0x0,8
tick,0x7ff954e0fd34,148921096,0,0x0,8
tick,0x7ff954e0fd34,148937063,0,0x0,8
tick,0x7ff954e0fd34,148953006,0,0x0,8
tick,0x7ff954e0fd34,148968960,0,0x0,8
tick,0x7ff954e0fd34,148984932,0,0x0,8
tick,0x7ff954e0fd34,149000864,0,0x0,8
tick,0x7ff954e0fd34,149016831,0,0x0,8
tick,0x7ff954e0fd34,149032288,0,0x0,8
tick,0x7ff954e0fd34,149048269,0,0x0,8
tick,0x7ff954e0fd34,149063208,0,0x0,8
tick,0x7ff954e0fd34,149078977,0,0x0,8
tick,0x7ff954e0fd34,149094241,0,0x0,8
tick,0x7ff954e0fd34,149109318,0,0x0,8
tick,0x7ff954e0fd34,149125272,0,0x0,8
tick,0x7ff954e0fd34,149140275,0,0x0,8
tick,0x7ff954e0fd34,149155776,0,0x0,8
tick,0x7ff954e0fd34,149170732,0,0x0,8
tick,0x7ff954e0fd34,149186726,0,0x0,8
tick,0x7ff954e0fd34,149202421,0,0x0,8
tick,0x7ff954e0fd34,149217767,0,0x0,8
tick,0x7ff954e0fd34,149233216,0,0x0,8
tick,0x7ff954e0fd34,149248168,0,0x0,8
tick,0x7ff954e0fd34,149263477,0,0x0,8
tick,0x7ff954e0fd34,149279149,0,0x0,8
tick,0x7ff954e0fd34,149294549,0,0x0,8
tick,0x7ff954e0fd34,149310157,0,0x0,8
tick,0x7ff954e0fd34,149326034,0,0x0,8
tick,0x7ff954e0fd34,149341936,0,0x0,8
tick,0x7ff954e0fd34,149357458,0,0x0,8
tick,0x7ff954e0fd34,149373607,0,0x0,8
tick,0x7ff954e0fd34,149389326,0,0x0,8
tick,0x7ff954e0fd34,149405299,0,0x0,8
tick,0x7ff954e0fd34,149421258,0,0x0,8
tick,0x7ff954e0fd34,149437247,0,0x0,8
tick,0x7ff954e0fd34,149453157,0,0x0,8
tick,0x7ff954e0fd34,149468172,0,0x0,8
tick,0x7ff954e0fd34,149484074,0,0x0,8
tick,0x7ff954e0fd34,149499065,0,0x0,8
tick,0x7ff954e0fd34,149514996,0,0x0,8
tick,0x7ff954e0fd34,149529953,0,0x0,8
tick,0x7ff954e0fd34,149544917,0,0x0,8
tick,0x7ff954e0fd34,149559760,0,0x0,8
tick,0x7ff954e0fd34,149574749,0,0x0,8
tick,0x7ff954e0fd34,149590681,0,0x0,8
tick,0x7ff954e0fd34,149606616,0,0x0,8
tick,0x7ff954e0fd34,149622590,0,0x0,8
tick,0x7ff954e0fd34,149638542,0,0x0,8
tick,0x7ff954e0fd34,149654530,0,0x0,8
tick,0x7ff954e0fd34,149670462,0,0x0,8
tick,0x7ff954e0fd34,149686400,0,0x0,8
tick,0x7ff954e0fd34,149702406,0,0x0,8
tick,0x7ff954e0fd34,149718356,0,0x0,8
tick,0x7ff954e0fd34,149734031,0,0x0,8
tick,0x7ff954e0fd34,149748852,0,0x0,8
tick,0x7ff954e0fd34,149763821,0,0x0,8
tick,0x7ff954e0fd34,149778872,0,0x0,8
tick,0x7ff954e0fd34,149793777,0,0x0,8
tick,0x7ff954e0fd34,149809737,0,0x0,8
tick,0x7ff954e0fd34,149825662,0,0x0,8
tick,0x7ff954e0fd34,149841802,0,0x0,8
tick,0x7ff954e0fd34,149856586,0,0x0,8
tick,0x7ff954e0fd34,149872539,0,0x0,8
tick,0x7ff954e0fd34,149887511,0,0x0,8
tick,0x7ff954e0fd34,149903459,0,0x0,8
tick,0x7ff954e0fd34,149919423,0,0x0,8
tick,0x7ff954e0fd34,149934415,0,0x0,8
tick,0x7ff954e0fd34,149950353,0,0x0,8
tick,0x7ff954e0fd34,149965298,0,0x0,8
tick,0x7ff954e0fd34,149981255,0,0x0,8
tick,0x7ff954e0fd34,149996233,0,0x0,8
tick,0x7ff954e0fd34,150011551,0,0x0,8
tick,0x7ff954e0fd34,150027496,0,0x0,8
tick,0x7ff954e0fd34,150043464,0,0x0,8
tick,0x7ff954e0fd34,150059289,0,0x0,8
tick,0x7ff954e0fd34,150074229,0,0x0,8
tick,0x7ff954e0fd34,150090132,0,0x0,8
tick,0x7ff954e0fd34,150105468,0,0x0,8
tick,0x7ff954e0fd34,150121441,0,0x0,8
tick,0x7ff954e0fd34,150137381,0,0x0,8
tick,0x7ff954e0fd34,150153398,0,0x0,8
tick,0x7ff954e0fd34,150169387,0,0x0,8
tick,0x7ff954e0fd34,150185359,0,0x0,8
tick,0x7ff954e0fd34,150201320,0,0x0,8
tick,0x7ff954e0fd34,150216604,0,0x0,8
tick,0x7ff954e0fd34,150231534,0,0x0,8
tick,0x7ff954e0fd34,150246683,0,0x0,8
tick,0x7ff954e0fd34,150262660,0,0x0,8
tick,0x7ff954e0fd34,150277693,0,0x0,8
tick,0x7ff954e0fd34,150293578,0,0x0,8
tick,0x7ff954e0fd34,150309531,0,0x0,8
tick,0x7ff954e0fd34,150325507,0,0x0,8
tick,0x7ff954e0fd34,150341442,0,0x0,8
tick,0x7ff954e0fd34,150357415,0,0x0,8
tick,0x7ff954e0fd34,150372378,0,0x0,8
tick,0x7ff954e0fd34,150387326,0,0x0,8
tick,0x7ff954e0fd34,150402441,0,0x0,8
tick,0x7ff954e0fd34,150418507,0,0x0,8
tick,0x7ff954e0fd34,150433391,0,0x0,8
tick,0x7ff954e0fd34,150449331,0,0x0,8
tick,0x7ff954e0fd34,150464275,0,0x0,8
tick,0x7ff954e0fd34,150480324,0,0x0,8
tick,0x7ff954e0fd34,150496738,0,0x0,8
tick,0x7ff954e0fd34,150512187,0,0x0,8
tick,0x7ff954e0fd34,150528102,0,0x0,8
tick,0x7ff954e0fd34,150543083,0,0x0,8
tick,0x7ff954e0fd34,150559812,0,0x0,8
tick,0x7ff954e0fd34,150575035,0,0x0,8
tick,0x7ff954e0fd34,150591087,0,0x0,8
tick,0x7ff954e0fd34,150606903,0,0x0,8
tick,0x7ff954e0fd34,150621877,0,0x0,8
tick,0x7ff954e0fd34,150636848,0,0x0,8
tick,0x7ff954e0fd34,150652797,0,0x0,8
tick,0x7ff954e0fd34,150668776,0,0x0,8
tick,0x7ff954e0fd34,150684102,0,0x0,8
tick,0x7ff954e0fd34,150699243,0,0x0,8
tick,0x7ff954e0fd34,150713997,0,0x0,8
tick,0x7ff954e0fd34,150729509,0,0x0,8
tick,0x7ff954e0fd34,150745517,0,0x0,8
tick,0x7ff954e0fd34,150761500,0,0x0,8
tick,0x7ff954e0fd34,150777613,0,0x0,8
tick,0x7ff954e0fd34,150792909,0,0x0,8
tick,0x7ff954e0fd34,150808990,0,0x0,8
tick,0x7ff954e0fd34,150824780,0,0x0,8
tick,0x7ff954e0fd34,150840789,0,0x0,8
tick,0x7ff954e0fd34,150855709,0,0x0,8
tick,0x7ff954e0fd34,150871762,0,0x0,8
tick,0x7ff954e0fd34,150886815,0,0x0,8
tick,0x7ff954e0fd34,150902162,0,0x0,8
tick,0x7ff954e0fd34,150918089,0,0x0,8
tick,0x7ff954e0fd34,150934127,0,0x0,8
tick,0x7ff954e0fd34,150950031,0,0x0,8
tick,0x7ff954e0fd34,150965607,0,0x0,8
tick,0x7ff954e0fd34,150980449,0,0x0,8
tick,0x7ff954e0fd34,150996477,0,0x0,8
tick,0x7ff954e0fd34,151012429,0,0x0,8
tick,0x7ff954e0fd34,151028307,0,0x0,8
tick,0x7ff954e0fd34,151043778,0,0x0,8
tick,0x7ff954e0fd34,151059230,0,0x0,8
tick,0x7ff954e0fd34,151075183,0,0x0,8
tick,0x7ff954e0fd34,151089989,0,0x0,8
tick,0x7ff954e0fd34,151104947,0,0x0,8
tick,0x7ff954e0fd34,151119937,0,0x0,8
tick,0x7ff954e0fd34,151135390,0,0x0,8
tick,0x7ff954e0fd34,151150659,0,0x0,8
tick,0x7ff954e0fd34,151166612,0,0x0,8
tick,0x7ff954e0fd34,151182453,0,0x0,8
tick,0x7ff954e0fd34,151198327,0,0x0,8
tick,0x7ff954e0fd34,151213383,0,0x0,8
tick,0x7ff954e0fd34,151229266,0,0x0,8
tick,0x7ff954e0fd34,151244328,0,0x0,8
tick,0x7ff954e0fd34,151259450,0,0x0,8
tick,0x7ff954e0fd34,151275913,0,0x0,8
tick,0x7ff954e0fd34,151290546,0,0x0,8
tick,0x7ff954e0fd34,151305547,0,0x0,8
tick,0x7ff954e0fd34,151320549,0,0x0,8
tick,0x7ff954e0fd34,151336439,0,0x0,8
tick,0x7ff954e0fd34,151352376,0,0x0,8
tick,0x7ff954e0fd34,151368358,0,0x0,8
tick,0x7ff954e0fd34,151383494,0,0x0,8
tick,0x7ff954e0fd34,151399307,0,0x0,8
tick,0x7ff954e0fd34,151414223,0,0x0,8
tick,0x7ff954e0fd34,151429227,0,0x0,8
tick,0x7ff954e0fd34,151444530,0,0x0,8
tick,0x7ff954e0fd34,151459818,0,0x0,8
tick,0x7ff954e0fd34,151475748,0,0x0,8
tick,0x7ff954e0fd34,151490770,0,0x0,8
tick,0x7ff954e0fd34,151505721,0,0x0,8
tick,0x7ff954e0fd34,151521730,0,0x0,8
tick,0x7ff954e0fd34,151537796,0,0x0,8
tick,0x7ff954e0fd34,151552635,0,0x0,8
tick,0x7ff954e0fd34,151568579,0,0x0,8
tick,0x7ff954e0fd34,151583730,0,0x0,8
tick,0x7ff954e0fd34,151599466,0,0x0,8
tick,0x7ff954e0fd34,151614790,0,0x0,8
tick,0x7ff954e0fd34,151629636,0,0x0,8
tick,0x7ff954e0fd34,151644644,0,0x0,8
tick,0x7ff954e0fd34,151659571,0,0x0,8
tick,0x7ff954e0fd34,151675702,0,0x0,8
tick,0x7ff954e0fd34,151690489,0,0x0,8
tick,0x7ff954e0fd34,151705463,0,0x0,8
tick,0x7ff954e0fd34,151721376,0,0x0,8
tick,0x7ff954e0fd34,151736863,0,0x0,8
tick,0x7ff954e0fd34,151752833,0,0x0,8
tick,0x7ff954e0fd34,151767775,0,0x0,8
tick,0x7ff954e0fd34,151783239,0,0x0,8
tick,0x7ff954e0fd34,151798213,0,0x0,8
tick,0x7ff954e0fd34,151814213,0,0x0,8
tick,0x7ff954e0fd34,151829132,0,0x0,8
tick,0x7ff954e0fd34,151844268,0,0x0,8
tick,0x7ff954e0fd34,151859186,0,0x0,8
tick,0x7ff954e0fd34,151875134,0,0x0,8
tick,0x7ff954e0fd34,151890139,0,0x0,8
tick,0x7ff954e0fd34,151905187,0,0x0,8
tick,0x7ff954e0fd34,151920148,0,0x0,8
tick,0x7ff954e0fd34,151935304,0,0x0,8
tick,0x7ff954e0fd34,151950765,0,0x0,8
tick,0x7ff954e0fd34,151966774,0,0x0,8
tick,0x7ff954e0fd34,151981845,0,0x0,8
tick,0x7ff954e0fd34,151997288,0,0x0,8
tick,0x7ff954e0fd34,152013275,0,0x0,8
tick,0x7ff954e0fd34,152029339,0,0x0,8
tick,0x7ff954e0fd34,152045268,0,0x0,8
tick,0x7ff954e0fd34,152060711,0,0x0,8
tick,0x7ff954e0fd34,152076744,0,0x0,8
tick,0x7ff954e0fd34,152092566,0,0x0,8
tick,0x7ff954e0fd34,152108226,0,0x0,8
tick,0x7ff954e0fd34,152123195,0,0x0,8
tick,0x7ff954e0fd34,152139157,0,0x0,8
tick,0x7ff954e0fd34,152154061,0,0x0,8
tick,0x7ff954e0fd34,152170056,0,0x0,8
tick,0x7ff954e0fd34,152186102,0,0x0,8
tick,0x7ff954e0fd34,152201932,0,0x0,8
tick,0x7ff954e0fd34,152218015,0,0x0,8
tick,0x7ff954e0fd34,152233869,0,0x0,8
tick,0x7ff954e0fd34,152249917,0,0x0,8
tick,0x7ff954e0fd34,152265333,0,0x0,8
tick,0x7ff954e0fd34,152280255,0,0x0,8
tick,0x7ff954e0fd34,152296281,0,0x0,8
tick,0x7ff954e0fd34,152312227,0,0x0,8
tick,0x7ff954e0fd34,152328359,0,0x0,8
tick,0x7ff954e0fd34,152343551,0,0x0,8
tick,0x7ff954e0fd34,152359652,0,0x0,8
tick,0x7ff954e0fd34,152375470,0,0x0,8
tick,0x7ff954e0fd34,152390972,0,0x0,8
tick,0x7ff954e0fd34,152406054,0,0x0,8
tick,0x7ff954e0fd34,152421716,0,0x0,8
tick,0x7ff954e0fd34,152437026,0,0x0,8
tick,0x7ff954e0fd34,152452175,0,0x0,8
tick,0x7ff954e0fd34,152467695,0,0x0,8
tick,0x7ff954e0fd34,152483055,0,0x0,8
tick,0x7ff954e0fd34,152497847,0,0x0,8
tick,0x7ff954e0fd34,152513516,0,0x0,8
tick,0x7ff954e0fd34,152529483,0,0x0,8
tick,0x7ff954e0fd34,152545691,0,0x0,8
tick,0x7ff954e0fd34,152561706,0,0x0,8
tick,0x7ff954e0fd34,152577490,0,0x0,8
tick,0x7ff954e0fd34,152592851,0,0x0,8
tick,0x7ff954e0fd34,152608343,0,0x0,8
tick,0x7ff954e0fd34,152623778,0,0x0,8
tick,0x7ff954e0fd34,152638784,0,0x0,8
tick,0x7ff954e0fd34,152654717,0,0x0,8
tick,0x7ff954e0fd34,152670346,0,0x0,8
tick,0x7ff954e0fd34,152686394,0,0x0,8
tick,0x7ff954e0fd34,152701890,0,0x0,8
tick,0x7ff954e0fd34,152717862,0,0x0,8
tick,0x7ff954e0fd34,152733800,0,0x0,8
tick,0x7ff954e0fd34,152748800,0,0x0,8
tick,0x7ff954e0fd34,152764384,0,0x0,8
tick,0x7ff954e0fd34,152779336,0,0x0,8
tick,0x7ff954e0fd34,152794934,0,0x0,8
tick,0x7ff954e0fd34,152811003,0,0x0,8
tick,0x7ff954e0fd34,152826688,0,0x0,8
tick,0x7ff954e0fd34,152842509,0,0x0,8
tick,0x7ff954e0fd34,152857525,0,0x0,8
tick,0x7ff954e0fd34,152873233,0,0x0,8
tick,0x7ff954e0fd34,152888872,0,0x0,8
tick,0x7ff954e0fd34,152904326,0,0x0,8
tick,0x7ff954e0fd34,152920070,0,0x0,8
tick,0x7ff954e0fd34,152935336,0,0x0,8
tick,0x7ff954e0fd34,152950160,0,0x0,8
tick,0x7ff954e0fd34,152965597,0,0x0,8
tick,0x7ff954e0fd34,152981617,0,0x0,8
tick,0x7ff954e0fd34,152996782,0,0x0,8
tick,0x7ff954e0fd34,153012679,0,0x0,8
tick,0x7ff954e0fd34,153028096,0,0x0,8
tick,0x7ff954e0fd34,153043431,0,0x0,8
tick,0x7ff954e0fd34,153058504,0,0x0,8
tick,0x7ff954e0fd34,153074107,0,0x0,8
tick,0x7ff954e0fd34,153090116,0,0x0,8
tick,0x7ff954e0fd34,153105770,0,0x0,8
tick,0x7ff954e0fd34,153121350,0,0x0,8
tick,0x7ff954e0fd34,153137194,0,0x0,8
tick,0x7ff954e0fd34,153152541,0,0x0,8
tick,0x7ff954e0fd34,153167614,0,0x0,8
tick,0x7ff954e0fd34,153183549,0,0x0,8
tick,0x7ff954e0fd34,153199134,0,0x0,8
tick,0x7ff954e0fd34,153214454,0,0x0,8
tick,0x7ff954e0fd34,153230649,0,0x0,8
tick,0x7ff954e0fd34,153245722,0,0x0,8
tick,0x7ff954e0fd34,153261578,0,0x0,8
tick,0x7ff954e0fd34,153276470,0,0x0,8
tick,0x7ff954e0fd34,153291348,0,0x0,8
tick,0x7ff954e0fd34,153307101,0,0x0,8
tick,0x7ff954e0fd34,153322648,0,0x0,8
tick,0x7ff954e0fd34,153338023,0,0x0,8
tick,0x7ff954e0fd34,153353541,0,0x0,8
tick,0x7ff954e0fd34,153368581,0,0x0,8
tick,0x7ff954e0fd34,153383501,0,0x0,8
tick,0x7ff954e0fd34,153398418,0,0x0,8
tick,0x7ff954e0fd34,153413440,0,0x0,8
tick,0x7ff954e0fd34,153429378,0,0x0,8
tick,0x7ff954e0fd34,153445503,0,0x0,8
tick,0x7ff954e0fd34,153460885,0,0x0,8
tick,0x7ff954e0fd34,153476833,0,0x0,8
tick,0x7ff954e0fd34,153492193,0,0x0,8
tick,0x7ff954e0fd34,153507835,0,0x0,8
tick,0x7ff954e0fd34,153523151,0,0x0,8
tick,0x7ff954e0fd34,153539239,0,0x0,8
tick,0x7ff954e0fd34,153554883,0,0x0,8
tick,0x7ff954e0fd34,153570657,0,0x0,8
tick,0x7ff954e0fd34,153586364,0,0x0,8
tick,0x7ff954e0fd34,153601624,0,0x0,8
tick,0x7ff954e0fd34,153616940,0,0x0,8
tick,0x7ff954e0fd34,153632084,0,0x0,8
tick,0x7ff954e0fd34,153647396,0,0x0,8
tick,0x7ff954e0fd34,153663067,0,0x0,8
tick,0x7ff954e0fd34,153679096,0,0x0,8
tick,0x7ff954e0fd34,153694296,0,0x0,8
tick,0x7ff954e0fd34,153710638,0,0x0,8
tick,0x7ff954e0fd34,153725115,0,0x0,8
tick,0x7ff954e0fd34,153740090,0,0x0,8
tick,0x7ff954e0fd34,153756173,0,0x0,8
tick,0x7ff954e0fd34,153772091,0,0x0,8
tick,0x7ff954e0fd34,153787239,0,0x0,8
tick,0x7ff954e0fd34,153802765,0,0x0,8
tick,0x7ff954e0fd34,153818014,0,0x0,8
tick,0x7ff954e0fd34,153833159,0,0x0,8
tick,0x7ff954e0fd34,153848719,0,0x0,8
tick,0x7ff954e0fd34,153864848,0,0x0,8
tick,0x7ff954e0fd34,153880151,0,0x0,8
tick,0x7ff954e0fd34,153895538,0,0x0,8
tick,0x7ff954e0fd34,153910712,0,0x0,8
tick,0x7ff954e0fd34,153926094,0,0x0,8
tick,0x7ff954e0fd34,153941848,0,0x0,8
tick,0x7ff954e0fd34,153957773,0,0x0,8
tick,0x7ff954e0fd34,153973010,0,0x0,8
tick,0x7ff954e0fd34,153988819,0,0x0,8
tick,0x7ff954e0fd34,154003979,0,0x0,8
tick,0x7ff954e0fd34,154019873,0,0x0,8
tick,0x7ff954e0fd34,154034864,0,0x0,8
tick,0x7ff954e0fd34,154050935,0,0x0,8
tick,0x7ff954e0fd34,154066034,0,0x0,8
tick,0x7ff954e0fd34,154081676,0,0x0,8
tick,0x7ff954e0fd34,154096676,0,0x0,8
tick,0x7ff954e0fd34,154112813,0,0x0,8
tick,0x7ff954e0fd34,154128726,0,0x0,8
tick,0x7ff954e0fd34,154144559,0,0x0,8
tick,0x7ff954e0fd34,154160537,0,0x0,8
tick,0x7ff954e0fd34,154176494,0,0x0,8
tick,0x7ff954e0fd34,154192437,0,0x0,8
tick,0x7ff954e0fd34,154207715,0,0x0,8
tick,0x7ff954e0fd34,154223599,0,0x0,8
tick,0x7ff954e0fd34,154238935,0,0x0,8
tick,0x7ff954e0fd34,154253947,0,0x0,8
tick,0x7ff954e0fd34,154269980,0,0x0,8
tick,0x7ff954e0fd34,154284992,0,0x0,8
tick,0x7ff954e0fd34,154300151,0,0x0,8
tick,0x7ff954e0fd34,154315794,0,0x0,8
tick,0x7ff954e0fd34,154330804,0,0x0,8
tick,0x7ff954e0fd34,154346581,0,0x0,8
tick,0x7ff954e0fd34,154361798,0,0x0,8
tick,0x7ff954e0fd34,154376756,0,0x0,8
tick,0x7ff954e0fd34,154393008,0,0x0,8
tick,0x7ff954e0fd34,154407817,0,0x0,8
tick,0x7ff954e0fd34,154423444,0,0x0,8
tick,0x7ff954e0fd34,154438847,0,0x0,8
tick,0x7ff954e0fd34,154453935,0,0x0,8
tick,0x7ff954e0fd34,154469850,0,0x0,8
tick,0x7ff954e0fd34,154485184,0,0x0,8
tick,0x7ff954e0fd34,154500842,0,0x0,8
tick,0x7ff954e0fd34,154515815,0,0x0,8
tick,0x7ff954e0fd34,154531087,0,0x0,8
tick,0x7ff954e0fd34,154546661,0,0x0,8
tick,0x7ff954e0fd34,154561684,0,0x0,8
tick,0x7ff954e0fd34,154576666,0,0x0,8
tick,0x7ff954e0fd34,154592242,0,0x0,8
tick,0x7ff954e0fd34,154607081,0,0x0,8
tick,0x7ff954e0fd34,154621870,0,0x0,8
tick,0x7ff954e0fd34,154637057,0,0x0,8
tick,0x7ff954e0fd34,154652822,0,0x0,8
tick,0x7ff954e0fd34,154668110,0,0x0,8
tick,0x7ff954e0fd34,154683965,0,0x0,8
tick,0x7ff954e0fd34,154698691,0,0x0,8
tick,0x7ff954e0fd34,154714403,0,0x0,8
tick,0x7ff954e0fd34,154729557,0,0x0,8
tick,0x7ff954e0fd34,154745249,0,0x0,8
tick,0x7ff954e0fd34,154761078,0,0x0,8
tick,0x7ff954e0fd34,154777258,0,0x0,8
tick,0x7ff954e0fd34,154793224,0,0x0,8
tick,0x7ff954e0fd34,154809008,0,0x0,8
tick,0x7ff954e0fd34,154825083,0,0x0,8
tick,0x7ff954e0fd34,154840963,0,0x0,8
tick,0x7ff954e0fd34,154856753,0,0x0,8
tick,0x7ff954e0fd34,154871707,0,0x0,8
tick,0x7ff954e0fd34,154887707,0,0x0,8
tick,0x7ff954e0fd34,154903268,0,0x0,8
tick,0x7ff954e0fd34,154919166,0,0x0,8
tick,0x7ff954e0fd34,154934388,0,0x0,8
tick,0x7ff954e0fd34,154949213,0,0x0,8
tick,0x7ff954e0fd34,154964394,0,0x0,8
tick,0x7ff954e0fd34,154980272,0,0x0,8
tick,0x7ff954e0fd34,154996093,0,0x0,8
tick,0x7ff954e0fd34,155011965,0,0x0,8
tick,0x7ff954e0fd34,155026844,0,0x0,8
tick,0x7ff954e0fd34,155041837,0,0x0,8
tick,0x7ff954e0fd34,155056741,0,0x0,8
tick,0x7ff954e0fd34,155071716,0,0x0,8
tick,0x7ff954e0fd34,155087643,0,0x0,8
tick,0x7ff954e0fd34,155103610,0,0x0,8
tick,0x7ff954e0fd34,155119552,0,0x0,8
tick,0x7ff954e0fd34,155135520,0,0x0,8
tick,0x7ff954e0fd34,155150878,0,0x0,8
tick,0x7ff954e0fd34,155166337,0,0x0,8
tick,0x7ff954e0fd34,155182242,0,0x0,8
tick,0x7ff954e0fd34,155198162,0,0x0,8
tick,0x7ff954e0fd34,155213962,0,0x0,8
tick,0x7ff954e0fd34,155229776,0,0x0,8
tick,0x7ff954e0fd34,155244815,0,0x0,8
tick,0x7ff954e0fd34,155259974,0,0x0,8
tick,0x7ff954e0fd34,155275758,0,0x0,8
tick,0x7ff954e0fd34,155292181,0,0x0,8
tick,0x7ff954e0fd34,155307692,0,0x0,8
tick,0x7ff954e0fd34,155323730,0,0x0,8
tick,0x7ff954e0fd34,155339625,0,0x0,8
tick,0x7ff954e0fd34,155355259,0,0x0,8
tick,0x7ff954e0fd34,155370955,0,0x0,8
tick,0x7ff954e0fd34,155386801,0,0x0,8
tick,0x7ff954e0fd34,155402856,0,0x0,8
tick,0x7ff954e0fd34,155418781,0,0x0,8
tick,0x7ff954e0fd34,155433803,0,0x0,8
tick,0x7ff954e0fd34,155448691,0,0x0,8
tick,0x7ff954e0fd34,155463803,0,0x0,8
tick,0x7ff954e0fd34,155478635,0,0x0,8
tick,0x7ff954e0fd34,155494630,0,0x0,8
tick,0x7ff954e0fd34,155510243,0,0x0,8
tick,0x7ff954e0fd34,155525875,0,0x0,8
tick,0x7ff954e0fd34,155542071,0,0x0,8
tick,0x7ff954e0fd34,155557220,0,0x0,8
tick,0x7ff954e0fd34,155572812,0,0x0,8
tick,0x7ff954e0fd34,155588162,0,0x0,8
tick,0x7ff954e0fd34,155603664,0,0x0,8
tick,0x7ff954e0fd34,155619793,0,0x0,8
tick,0x7ff954e0fd34,155635281,0,0x0,8
tick,0x7ff954e0fd34,155650635,0,0x0,8
tick,0x7ff954e0fd34,155666074,0,0x0,8
tick,0x7ff954e0fd34,155680771,0,0x0,8
tick,0x7ff954e0fd34,155696633,0,0x0,8
tick,0x7ff954e0fd34,155712603,0,0x0,8
tick,0x7ff954e0fd34,155728706,0,0x0,8
tick,0x7ff954e0fd34,155743514,0,0x0,8
tick,0x7ff954e0fd34,155759075,0,0x0,8
tick,0x7ff954e0fd34,155775038,0,0x0,8
tick,0x7ff954e0fd34,155789976,0,0x0,8
tick,0x7ff954e0fd34,155804978,0,0x0,8
tick,0x7ff954e0fd34,155819914,0,0x0,8
tick,0x7ff954e0fd34,155834859,0,0x0,8
tick,0x7ff954e0fd34,155850812,0,0x0,8
tick,0x7ff954e0fd34,155865858,0,0x0,8
tick,0x7ff954e0fd34,155880993,0,0x0,8
tick,0x7ff954e0fd34,155895864,0,0x0,8
tick,0x7ff954e0fd34,155912037,0,0x0,8
tick,0x7ff954e0fd34,155927222,0,0x0,8
tick,0x7ff954e0fd34,155943141,0,0x0,8
tick,0x7ff954e0fd34,155958616,0,0x0,8
tick,0x7ff954e0fd34,155973844,0,0x0,8
tick,0x7ff954e0fd34,155989255,0,0x0,8
tick,0x7ff954e0fd34,156004548,0,0x0,8
tick,0x7ff954e0fd34,156019997,0,0x0,8
tick,0x7ff954e0fd34,156035660,0,0x0,8
tick,0x7ff954e0fd34,156051181,0,0x0,8
tick,0x7ff954e0fd34,156066466,0,0x0,8
tick,0x7ff954e0fd34,156082233,0,0x0,8
tick,0x7ff954e0fd34,156097792,0,0x0,8
tick,0x7ff954e0fd34,156113222,0,0x0,8
tick,0x7ff954e0fd34,156129383,0,0x0,8
tick,0x7ff954e0fd34,156145278,0,0x0,8
tick,0x7ff954e0fd34,156161133,0,0x0,8
tick,0x7ff954e0fd34,156176498,0,0x0,8
tick,0x7ff954e0fd34,156191835,0,0x0,8
tick,0x7ff954e0fd34,156206939,0,0x0,8
tick,0x7ff954e0fd34,156222900,0,0x0,8
tick,0x7ff954e0fd34,156237873,0,0x0,8
tick,0x7ff954e0fd34,156252840,0,0x0,8
tick,0x7ff954e0fd34,156268002,0,0x0,8
tick,0x7ff954e0fd34,156282933,0,0x0,8
tick,0x7ff954e0fd34,156298639,0,0x0,8
tick,0x7ff954e0fd34,156313879,0,0x0,8
tick,0x7ff954e0fd34,156328770,0,0x0,8
tick,0x7ff954e0fd34,156344729,0,0x0,8
tick,0x7ff954e0fd34,156360734,0,0x0,8
tick,0x7ff954e0fd34,156375754,0,0x0,8
tick,0x7ff954e0fd34,156390716,0,0x0,8
tick,0x7ff954e0fd34,156406607,0,0x0,8
tick,0x7ff954e0fd34,156421493,0,0x0,8
tick,0x7ff954e0fd34,156436941,0,0x0,8
tick,0x7ff954e0fd34,156452385,0,0x0,8
tick,0x7ff954e0fd34,156467922,0,0x0,8
tick,0x7ff954e0fd34,156482986,0,0x0,8
tick,0x7ff954e0fd34,156498311,0,0x0,8
tick,0x7ff954e0fd34,156513540,0,0x0,8
tick,0x7ff954e0fd34,156529369,0,0x0,8
tick,0x7ff954e0fd34,156544738,0,0x0,8
tick,0x7ff954e0fd34,156559980,0,0x0,8
tick,0x7ff954e0fd34,156575269,0,0x0,8
tick,0x7ff954e0fd34,156591231,0,0x0,8
tick,0x7ff954e0fd34,156607328,0,0x0,8
tick,0x7ff954e0fd34,156622861,0,0x0,8
tick,0x7ff954e0fd34,156638125,0,0x0,8
tick,0x7ff954e0fd34,156654039,0,0x0,8
tick,0x7ff954e0fd34,156670179,0,0x0,8
tick,0x7ff954e0fd34,156686421,0,0x0,8
tick,0x7ff954e0fd34,156701890,0,0x0,8
tick,0x7ff954e0fd34,156717020,0,0x0,8
tick,0x7ff954e0fd34,156732791,0,0x0,8
tick,0x7ff954e0fd34,156748046,0,0x0,8
tick,0x7ff954e0fd34,156763858,0,0x0,8
tick,0x7ff954e0fd34,156779548,0,0x0,8
tick,0x7ff954e0fd34,156795038,0,0x0,8
tick,0x7ff954e0fd34,156811015,0,0x0,8
tick,0x7ff954e0fd34,156826914,0,0x0,8
tick,0x7ff954e0fd34,156842913,0,0x0,8
tick,0x7ff954e0fd34,156858823,0,0x0,8
tick,0x7ff954e0fd34,156874743,0,0x0,8
tick,0x7ff954e0fd34,156890726,0,0x0,8
tick,0x7ff954e0fd34,156906348,0,0x0,8
tick,0x7ff954e0fd34,156922325,0,0x0,8
tick,0x7ff954e0fd34,156937809,0,0x0,8
tick,0x7ff954e0fd34,156953770,0,0x0,8
tick,0x7ff954e0fd34,156969841,0,0x0,8
tick,0x7ff954e0fd34,156985154,0,0x0,8
tick,0x7ff954e0fd34,157001085,0,0x0,8
tick,0x7ff954e0fd34,157016501,0,0x0,8
tick,0x7ff954e0fd34,157031965,0,0x0,8
tick,0x7ff954e0fd34,157047208,0,0x0,8
tick,0x7ff954e0fd34,157063416,0,0x0,8
tick,0x7ff954e0fd34,157078924,0,0x0,8
tick,0x7ff954e0fd34,157094934,0,0x0,8
tick,0x7ff954e0fd34,157109670,0,0x0,8
tick,0x7ff954e0fd34,157125008,0,0x0,8
tick,0x7ff954e0fd34,157140717,0,0x0,8
tick,0x7ff954e0fd34,157156228,0,0x0,8
tick,0x7ff954e0fd34,157171858,0,0x0,8
tick,0x7ff954e0fd34,157186919,0,0x0,8
tick,0x7ff954e0fd34,157202867,0,0x0,8
tick,0x7ff954e0fd34,157218619,0,0x0,8
tick,0x7ff954e0fd34,157233775,0,0x0,8
tick,0x7ff954e0fd34,157249833,0,0x0,8
tick,0x7ff954e0fd34,157264619,0,0x0,8
tick,0x7ff954e0fd34,157279730,0,0x0,8
tick,0x7ff954e0fd34,157294889,0,0x0,8
tick,0x7ff954e0fd34,157309700,0,0x0,8
tick,0x7ff954e0fd34,157325593,0,0x0,8
tick,0x7ff954e0fd34,157341610,0,0x0,8
tick,0x7ff954e0fd34,157357852,0,0x0,8
tick,0x7ff954e0fd34,157373302,0,0x0,8
tick,0x7ff954e0fd34,157388699,0,0x0,8
tick,0x7ff954e0fd34,157404284,0,0x0,8
tick,0x7ff954e0fd34,157419783,0,0x0,8
tick,0x7ff954e0fd34,157435347,0,0x0,8
tick,0x7ff954e0fd34,157451121,0,0x0,8
tick,0x7ff954e0fd34,157466909,0,0x0,8
tick,0x7ff954e0fd34,157482474,0,0x0,8
tick,0x7ff954e0fd34,157497726,0,0x0,8
tick,0x7ff954e0fd34,157512916,0,0x0,8
tick,0x7ff954e0fd34,157528708,0,0x0,8
tick,0x7ff954e0fd34,157543731,0,0x0,8
tick,0x7ff954e0fd34,157560015,0,0x0,8
tick,0x7ff954e0fd34,157575067,0,0x0,8
tick,0x7ff954e0fd34,157589912,0,0x0,8
tick,0x7ff954e0fd34,157604857,0,0x0,8
tick,0x7ff954e0fd34,157619953,0,0x0,8
tick,0x7ff954e0fd34,157635854,0,0x0,8
tick,0x7ff954e0fd34,157651808,0,0x0,8
tick,0x7ff954e0fd34,157666714,0,0x0,8
tick,0x7ff954e0fd34,157681787,0,0x0,8
tick,0x7ff954e0fd34,157696686,0,0x0,8
tick,0x7ff954e0fd34,157712416,0,0x0,8
tick,0x7ff954e0fd34,157727335,0,0x0,8
tick,0x7ff954e0fd34,157743310,0,0x0,8
tick,0x7ff954e0fd34,157758791,0,0x0,8
tick,0x7ff954e0fd34,157773889,0,0x0,8
tick,0x7ff954e0fd34,157788902,0,0x0,8
tick,0x7ff954e0fd34,157803599,0,0x0,8
tick,0x7ff954e0fd34,157819578,0,0x0,8
tick,0x7ff954e0fd34,157834494,0,0x0,8
tick,0x7ff954e0fd34,157850191,0,0x0,8
tick,0x7ff954e0fd34,157865821,0,0x0,8
tick,0x7ff954e0fd34,157880830,0,0x0,8
tick,0x7ff954e0fd34,157896110,0,0x0,8
tick,0x7ff954e0fd34,157910936,0,0x0,8
tick,0x7ff954e0fd34,157926815,0,0x0,8
tick,0x7ff954e0fd34,157941833,0,0x0,8
tick,0x7ff954e0fd34,157957175,0,0x0,8
tick,0x7ff954e0fd34,157972801,0,0x0,8
tick,0x7ff954e0fd34,157987932,0,0x0,8
tick,0x7ff954e0fd34,158003804,0,0x0,8
tick,0x7ff954e0fd34,158018728,0,0x0,8
tick,0x7ff954e0fd34,158034201,0,0x0,8
tick,0x7ff954e0fd34,158049973,0,0x0,8
tick,0x7ff954e0fd34,158065348,0,0x0,8
tick,0x7ff954e0fd34,158080707,0,0x0,8
tick,0x7ff954e0fd34,158096360,0,0x0,8
tick,0x7ff954e0fd34,158111951,0,0x0,8
tick,0x7ff954e0fd34,158127764,0,0x0,8
tick,0x7ff954e0fd34,158143417,0,0x0,8
tick,0x7ff954e0fd34,158158918,0,0x0,8
tick,0x7ff954e0fd34,158174711,0,0x0,8
tick,0x7ff954e0fd34,158190184,0,0x0,8
tick,0x7ff954e0fd34,158204928,0,0x0,8
tick,0x7ff954e0fd34,158220920,0,0x0,8
tick,0x7ff954e0fd34,158235910,0,0x0,8
tick,0x7ff954e0fd34,158251884,0,0x0,8
tick,0x7ff954e0fd34,158266992,0,0x0,8
tick,0x7ff954e0fd34,158281844,0,0x0,8
tick,0x7ff954e0fd34,158297765,0,0x0,8
tick,0x7ff954e0fd34,158313173,0,0x0,8
tick,0x7ff954e0fd34,158328977,0,0x0,8
tick,0x7ff954e0fd34,158344157,0,0x0,8
tick,0x7ff954e0fd34,158360064,0,0x0,8
tick,0x7ff954e0fd34,158375411,0,0x0,8
tick,0x7ff954e0fd34,158391395,0,0x0,8
tick,0x7ff954e0fd34,158407361,0,0x0,8
tick,0x7ff954e0fd34,158423309,0,0x0,8
tick,0x7ff954e0fd34,158439303,0,0x0,8
tick,0x7ff954e0fd34,158454605,0,0x0,8
tick,0x7ff954e0fd34,158469582,0,0x0,8
tick,0x7ff954e0fd34,158485667,0,0x0,8
tick,0x7ff954e0fd34,158500577,0,0x0,8
tick,0x7ff954e0fd34,158516519,0,0x0,8
tick,0x7ff954e0fd34,158532399,0,0x0,8
tick,0x7ff954e0fd34,158547606,0,0x0,8
tick,0x7ff954e0fd34,158563567,0,0x0,8
tick,0x7ff954e0fd34,158578522,0,0x0,8
tick,0x7ff954e0fd34,158593917,0,0x0,8
tick,0x7ff954e0fd34,158609810,0,0x0,8
tick,0x7ff954e0fd34,158625174,0,0x0,8
tick,0x7ff954e0fd34,158640800,0,0x0,8
tick,0x7ff954e0fd34,158656853,0,0x0,8
tick,0x7ff954e0fd34,158671763,0,0x0,8
tick,0x7ff954e0fd34,158687301,0,0x0,8
tick,0x7ff954e0fd34,158702240,0,0x0,8
tick,0x7ff954e0fd34,158718263,0,0x0,8
tick,0x7ff954e0fd34,158733537,0,0x0,8
tick,0x7ff954e0fd34,158748153,0,0x0,8
tick,0x7ff954e0fd34,158763354,0,0x0,8
tick,0x7ff954e0fd34,158779105,0,0x0,8
tick,0x7ff954e0fd34,158794493,0,0x0,8
tick,0x7ff954e0fd34,158810413,0,0x0,8
tick,0x7ff954e0fd34,158825707,0,0x0,8
tick,0x7ff954e0fd34,158841107,0,0x0,8
tick,0x7ff954e0fd34,158856963,0,0x0,8
tick,0x7ff954e0fd34,158872168,0,0x0,8
tick,0x7ff954e0fd34,158887949,0,0x0,8
tick,0x7ff954e0fd34,158903025,0,0x0,8
tick,0x7ff954e0fd34,158918583,0,0x0,8
tick,0x7ff954e0fd34,158933963,0,0x0,8
tick,0x7ff954e0fd34,158950144,0,0x0,8
tick,0x7ff954e0fd34,158965566,0,0x0,8
tick,0x7ff954e0fd34,158981144,0,0x0,8
tick,0x7ff954e0fd34,158996279,0,0x0,8
tick,0x7ff954e0fd34,159012381,0,0x0,8
tick,0x7ff954e0fd34,159027647,0,0x0,8
tick,0x7ff954e0fd34,159043735,0,0x0,8
tick,0x7ff954e0fd34,159058976,0,0x0,8
tick,0x7ff954e0fd34,159075037,0,0x0,8
tick,0x7ff954e0fd34,159090883,0,0x0,8
tick,0x7ff954e0fd34,159105531,0,0x0,8
tick,0x7ff954e0fd34,159120803,0,0x0,8
tick,0x7ff954e0fd34,159136380,0,0x0,8
tick,0x7ff954e0fd34,159152007,0,0x0,8
tick,0x7ff954e0fd34,159166740,0,0x0,8
tick,0x7ff954e0fd34,159182100,0,0x0,8
tick,0x7ff954e0fd34,159197706,0,0x0,8
tick,0x7ff954e0fd34,159212928,0,0x0,8
tick,0x7ff954e0fd34,159228174,0,0x0,8
tick,0x7ff954e0fd34,159243610,0,0x0,8
tick,0x7ff954e0fd34,159259034,0,0x0,8
tick,0x7ff954e0fd34,159274069,0,0x0,8
tick,0x7ff954e0fd34,159289208,0,0x0,8
tick,0x7ff954e0fd34,159304038,0,0x0,8
tick,0x7ff954e0fd34,159320140,0,0x0,8
tick,0x7ff954e0fd34,159336137,0,0x0,8
tick,0x7ff954e0fd34,159352076,0,0x0,8
tick,0x7ff954e0fd34,159367670,0,0x0,8
tick,0x7ff954e0fd34,159382907,0,0x0,8
tick,0x7ff954e0fd34,159397847,0,0x0,8
tick,0x7ff954e0fd34,159412813,0,0x0,8
tick,0x7ff954e0fd34,159427799,0,0x0,8
tick,0x7ff954e0fd34,159442754,0,0x0,8
tick,0x7ff954e0fd34,159457871,0,0x0,8
tick,0x7ff954e0fd34,159473930,0,0x0,8
tick,0x7ff954e0fd34,159488987,0,0x0,8
tick,0x7ff954e0fd34,159504226,0,0x0,8
tick,0x7ff954e0fd34,159520075,0,0x0,8
tick,0x7ff954e0fd34,159535317,0,0x0,8
tick,0x7ff954e0fd34,159551486,0,0x0,8
tick,0x7ff954e0fd34,159567344,0,0x0,8
tick,0x7ff954e0fd34,159582896,0,0x0,8
tick,0x7ff954e0fd34,159598207,0,0x0,8
tick,0x7ff954e0fd34,159612994,0,0x0,8
tick,0x7ff954e0fd34,159628053,0,0x0,8
tick,0x7ff954e0fd34,159643015,0,0x0,8
tick,0x7ff954e0fd34,159659241,0,0x0,8
tick,0x7ff954e0fd34,159675401,0,0x0,8
tick,0x7ff954e0fd34,159690108,0,0x0,8
tick,0x7ff954e0fd34,159705806,0,0x0,8
tick,0x7ff954e0fd34,159722126,0,0x0,8
tick,0x7ff954e0fd34,159737594,0,0x0,8
tick,0x7ff954e0fd34,159753505,0,0x0,8
tick,0x7ff954e0fd34,159769245,0,0x0,8
tick,0x7ff954e0fd34,159785174,0,0x0,8
tick,0x7ff954e0fd34,159800693,0,0x0,8
tick,0x7ff954e0fd34,159816508,0,0x0,8
tick,0x7ff954e0fd34,159832415,0,0x0,8
tick,0x7ff954e0fd34,159848392,0,0x0,8
tick,0x7ff954e0fd34,159864349,0,0x0,8
tick,0x7ff954e0fd34,159879423,0,0x0,8
tick,0x7ff954e0fd34,159895182,0,0x0,8
tick,0x7ff954e0fd34,159911051,0,0x0,8
tick,0x7ff954e0fd34,159926899,0,0x0,8
tick,0x7ff954e0fd34,159942475,0,0x0,8
tick,0x7ff954e0fd34,159958411,0,0x0,8
tick,0x7ff954e0fd34,159974198,0,0x0,8
tick,0x7ff954e0fd34,159990191,0,0x0,8
tick,0x7ff954e0fd34,160005410,0,0x0,8
tick,0x7ff954e0fd34,160020889,0,0x0,8
tick,0x7ff954e0fd34,160036945,0,0x0,8
tick,0x7ff954e0fd34,160052648,0,0x0,8
tick,0x7ff954e0fd34,160067839,0,0x0,8
tick,0x7ff954e0fd34,160083440,0,0x0,8
tick,0x7ff954e0fd34,160098498,0,0x0,8
tick,0x7ff954e0fd34,160114084,0,0x0,8
tick,0x7ff954e0fd34,160128976,0,0x0,8
tick,0x7ff954e0fd34,160144208,0,0x0,8
tick,0x7ff954e0fd34,160160175,0,0x0,8
tick,0x7ff954e0fd34,160176031,0,0x0,8
tick,0x7ff954e0fd34,160191080,0,0x0,8
tick,0x7ff954e0fd34,160206460,0,0x0,8
tick,0x7ff954e0fd34,160221975,0,0x0,8
tick,0x7ff954e0fd34,160237776,0,0x0,8
tick,0x7ff954e0fd34,160253674,0,0x0,8
tick,0x7ff954e0fd34,160269842,0,0x0,8
tick,0x7ff954e0fd34,160285891,0,0x0,8
tick,0x7ff954e0fd34,160301590,0,0x0,8
tick,0x7ff954e0fd34,160317769,0,0x0,8
tick,0x7ff954e0fd34,160333528,0,0x0,8
tick,0x7ff954e0fd34,160349472,0,0x0,8
tick,0x7ff954e0fd34,160364513,0,0x0,8
tick,0x7ff954e0fd34,160380378,0,0x0,8
tick,0x7ff954e0fd34,160395366,0,0x0,8
tick,0x7ff954e0fd34,160411316,0,0x0,8
tick,0x7ff954e0fd34,160427274,0,0x0,8
tick,0x7ff954e0fd34,160443346,0,0x0,8
tick,0x7ff954e0fd34,160458512,0,0x0,8
tick,0x7ff954e0fd34,160473595,0,0x0,8
tick,0x7ff954e0fd34,160489122,0,0x0,8
tick,0x7ff954e0fd34,160505359,0,0x0,8
tick,0x7ff954e0fd34,160520614,0,0x0,8
tick,0x7ff954e0fd34,160535763,0,0x0,8
tick,0x7ff954e0fd34,160551227,0,0x0,8
tick,0x7ff954e0fd34,160566639,0,0x0,8
tick,0x7ff954e0fd34,160582022,0,0x0,8
tick,0x7ff954e0fd34,160597453,0,0x0,8
tick,0x7ff954e0fd34,160613062,0,0x0,8
tick,0x7ff954e0fd34,160628117,0,0x0,8
tick,0x7ff954e0fd34,160643618,0,0x0,8
tick,0x7ff954e0fd34,160659503,0,0x0,8
tick,0x7ff954e0fd34,160675175,0,0x0,8
tick,0x7ff954e0fd34,160690892,0,0x0,8
tick,0x7ff954e0fd34,160706679,0,0x0,8
tick,0x7ff954e0fd34,160722029,0,0x0,8
tick,0x7ff954e0fd34,160736827,0,0x0,8
tick,0x7ff954e0fd34,160752236,0,0x0,8
tick,0x7ff954e0fd34,160768007,0,0x0,8
tick,0x7ff954e0fd34,160783552,0,0x0,8
tick,0x7ff954e0fd34,160798845,0,0x0,8
tick,0x7ff954e0fd34,160814002,0,0x0,8
tick,0x7ff954e0fd34,160829489,0,0x0,8
tick,0x7ff954e0fd34,160844600,0,0x0,8
tick,0x7ff954e0fd34,160860094,0,0x0,8
tick,0x7ff954e0fd34,160875706,0,0x0,8
tick,0x7ff954e0fd34,160890985,0,0x0,8
tick,0x7ff954e0fd34,160906499,0,0x0,8
tick,0x7ff954e0fd34,160922192,0,0x0,8
tick,0x7ff954e0fd34,160938219,0,0x0,8
tick,0x7ff954e0fd34,160953812,0,0x0,8
tick,0x7ff954e0fd34,160969626,0,0x0,8
tick,0x7ff954e0fd34,160985337,0,0x0,8
tick,0x7ff954e0fd34,161000997,0,0x0,8
tick,0x7ff954e0fd34,161016520,0,0x0,8
tick,0x7ff954e0fd34,161031951,0,0x0,8
tick,0x7ff954e0fd34,161047329,0,0x0,8
tick,0x7ff954e0fd34,161062224,0,0x0,8
tick,0x7ff954e0fd34,161077181,0,0x0,8
tick,0x7ff954e0fd34,161091903,0,0x0,8
tick,0x7ff954e0fd34,161107112,0,0x0,8
tick,0x7ff954e0fd34,161122040,0,0x0,8
tick,0x7ff954e0fd34,161137531,0,0x0,8
tick,0x7ff954e0fd34,161152966,0,0x0,8
tick,0x7ff954e0fd34,161169174,0,0x0,8
tick,0x7ff954e0fd34,161183938,0,0x0,8
tick,0x7ff954e0fd34,161199762,0,0x0,8
tick,0x7ff954e0fd34,161215743,0,0x0,8
tick,0x7ff954e0fd34,161231040,0,0x0,8
tick,0x7ff954e0fd34,161246508,0,0x0,8
tick,0x7ff954e0fd34,161261981,0,0x0,8
tick,0x7ff954e0fd34,161277168,0,0x0,8
tick,0x7ff954e0fd34,161292962,0,0x0,8
tick,0x7ff954e0fd34,161308156,0,0x0,8
tick,0x7ff954e0fd34,161324061,0,0x0,8
tick,0x7ff954e0fd34,161338781,0,0x0,8
tick,0x7ff954e0fd34,161354727,0,0x0,8
tick,0x7ff954e0fd34,161370220,0,0x0,8
tick,0x7ff954e0fd34,161385321,0,0x0,8
tick,0x7ff954e0fd34,161401127,0,0x0,8
tick,0x7ff954e0fd34,161416881,0,0x0,8
tick,0x7ff954e0fd34,161432224,0,0x0,8
tick,0x7ff954e0fd34,161447187,0,0x0,8
tick,0x7ff954e0fd34,161462113,0,0x0,8
tick,0x7ff954e0fd34,161477080,0,0x0,8
tick,0x7ff954e0fd34,161492151,0,0x0,8
tick,0x7ff954e0fd34,161507841,0,0x0,8
tick,0x7ff954e0fd34,161523796,0,0x0,8
tick,0x7ff954e0fd34,161538777,0,0x0,8
tick,0x7ff954e0fd34,161553917,0,0x0,8
tick,0x7ff954e0fd34,161568659,0,0x0,8
tick,0x7ff954e0fd34,161583673,0,0x0,8
tick,0x7ff954e0fd34,161599029,0,0x0,8
tick,0x7ff954e0fd34,161615103,0,0x0,8
tick,0x7ff954e0fd34,161631028,0,0x0,8
tick,0x7ff954e0fd34,161646156,0,0x0,8
tick,0x7ff954e0fd34,161660909,0,0x0,8
tick,0x7ff954e0fd34,161676100,0,0x0,8
tick,0x7ff954e0fd34,161691812,0,0x0,8
tick,0x7ff954e0fd34,161707243,0,0x0,8
tick,0x7ff954e0fd34,161723098,0,0x0,8
tick,0x7ff954e0fd34,161739144,0,0x0,8
tick,0x7ff954e0fd34,161754878,0,0x0,8
tick,0x7ff954e0fd34,161770258,0,0x0,8
tick,0x7ff954e0fd34,161785606,0,0x0,8
tick,0x7ff954e0fd34,161801154,0,0x0,8
tick,0x7ff954e0fd34,161817148,0,0x0,8
tick,0x7ff954e0fd34,161832154,0,0x0,8
tick,0x7ff954e0fd34,161847140,0,0x0,8
tick,0x7ff954e0fd34,161861982,0,0x0,8
tick,0x7ff954e0fd34,161877109,0,0x0,8
tick,0x7ff954e0fd34,161893090,0,0x0,8
tick,0x7ff954e0fd34,161908188,0,0x0,8
tick,0x7ff954e0fd34,161923042,0,0x0,8
tick,0x7ff954e0fd34,161938278,0,0x0,8
tick,0x7ff954e0fd34,161953830,0,0x0,8
tick,0x7ff954e0fd34,161969836,0,0x0,8
tick,0x7ff954e0fd34,161985115,0,0x0,8
tick,0x7ff954e0fd34,162000492,0,0x0,8
tick,0x7ff954e0fd34,162016418,0,0x0,8
tick,0x7ff954e0fd34,162031602,0,0x0,8
tick,0x7ff954e0fd34,162047520,0,0x0,8
tick,0x7ff954e0fd34,162062750,0,0x0,8
tick,0x7ff954e0fd34,162078487,0,0x0,8
tick,0x7ff954e0fd34,162094399,0,0x0,8
tick,0x7ff954e0fd34,162110404,0,0x0,8
tick,0x7ff954e0fd34,162126001,0,0x0,8
tick,0x7ff954e0fd34,162141375,0,0x0,8
tick,0x7ff954e0fd34,162156453,0,0x0,8
tick,0x7ff954e0fd34,162171707,0,0x0,8
tick,0x7ff954e0fd34,162186372,0,0x0,8
tick,0x7ff954e0fd34,162202090,0,0x0,8
tick,0x7ff954e0fd34,162217770,0,0x0,8
tick,0x7ff954e0fd34,162233493,0,0x0,8
tick,0x7ff954e0fd34,162249006,0,0x0,8
tick,0x7ff954e0fd34,162264415,0,0x0,8
tick,0x7ff954e0fd34,162280205,0,0x0,8
tick,0x7ff954e0fd34,162295587,0,0x0,8
tick,0x7ff954e0fd34,162311037,0,0x0,8
tick,0x7ff954e0fd34,162326730,0,0x0,8
tick,0x7ff954e0fd34,162342436,0,0x0,8
tick,0x7ff954e0fd34,162358150,0,0x0,8
tick,0x7ff954e0fd34,162374232,0,0x0,8
tick,0x7ff954e0fd34,162390252,0,0x0,8
tick,0x7ff954e0fd34,162406279,0,0x0,8
tick,0x7ff954e0fd34,162422505,0,0x0,8
tick,0x7ff954e0fd34,162438464,0,0x0,8
tick,0x7ff954e0fd34,162453737,0,0x0,8
tick,0x7ff954e0fd34,162469019,0,0x0,8
tick,0x7ff954e0fd34,162484405,0,0x0,8
tick,0x7ff954e0fd34,162500242,0,0x0,8
tick,0x7ff954e0fd34,162516096,0,0x0,8
tick,0x7ff954e0fd34,162531418,0,0x0,8
tick,0x7ff954e0fd34,162546960,0,0x0,8
tick,0x7ff954e0fd34,162562062,0,0x0,8
tick,0x7ff954e0fd34,162577643,0,0x0,8
tick,0x7ff954e0fd34,162592085,0,0x0,8
tick,0x7ff954e0fd34,162607861,0,0x0,8
tick,0x7ff954e0fd34,162622776,0,0x0,8
tick,0x7ff954e0fd34,162638707,0,0x0,8
tick,0x7ff954e0fd34,162653666,0,0x0,8
tick,0x7ff954e0fd34,162669207,0,0x0,8
tick,0x7ff954e0fd34,162684300,0,0x0,8
tick,0x7ff954e0fd34,162699957,0,0x0,8
tick,0x7ff954e0fd34,162715806,0,0x0,8
tick,0x7ff954e0fd34,162731784,0,0x0,8
tick,0x7ff954e0fd34,162746689,0,0x0,8
tick,0x7ff954e0fd34,162762091,0,0x0,8
tick,0x7ff954e0fd34,162777756,0,0x0,8
tick,0x7ff954e0fd34,162793384,0,0x0,8
tick,0x7ff954e0fd34,162808944,0,0x0,8
tick,0x7ff954e0fd34,162824372,0,0x0,8
tick,0x7ff954e0fd34,162840178,0,0x0,8
tick,0x7ff954e0fd34,162855194,0,0x0,8
tick,0x7ff954e0fd34,162870424,0,0x0,8
tick,0x7ff954e0fd34,162885940,0,0x0,8
tick,0x7ff954e0fd34,162902231,0,0x0,8
tick,0x7ff954e0fd34,162918132,0,0x0,8
tick,0x7ff954e0fd34,162934041,0,0x0,8
tick,0x7ff954e0fd34,162950176,0,0x0,8
tick,0x7ff954e0fd34,162965929,0,0x0,8
tick,0x7ff954e0fd34,162981125,0,0x0,8
tick,0x7ff954e0fd34,162997275,0,0x0,8
tick,0x7ff954e0fd34,163013231,0,0x0,8
tick,0x7ff954e0fd34,163028479,0,0x0,8
tick,0x7ff954e0fd34,163043970,0,0x0,8
tick,0x7ff954e0fd34,163059972,0,0x0,8
tick,0x7ff954e0fd34,163076155,0,0x0,8
tick,0x7ff954e0fd34,163091317,0,0x0,8
tick,0x7ff954e0fd34,163106658,0,0x0,8
tick,0x7ff954e0fd34,163121876,0,0x0,8
tick,0x7ff954e0fd34,163137988,0,0x0,8
tick,0x7ff954e0fd34,163153914,0,0x0,8
tick,0x7ff954e0fd34,163169220,0,0x0,8
tick,0x7ff954e0fd34,163185391,0,0x0,8
tick,0x7ff954e0fd34,163200369,0,0x0,8
tick,0x7ff954e0fd34,163215926,0,0x0,8
tick,0x7ff954e0fd34,163231055,0,0x0,8
tick,0x7ff954e0fd34,163246526,0,0x0,8
tick,0x7ff954e0fd34,163262249,0,0x0,8
tick,0x7ff954e0fd34,163277016,0,0x0,8
tick,0x7ff954e0fd34,163292099,0,0x0,8
tick,0x7ff954e0fd34,163307175,0,0x0,8
tick,0x7ff954e0fd34,163322911,0,0x0,8
tick,0x7ff954e0fd34,163338701,0,0x0,8
tick,0x7ff954e0fd34,163354448,0,0x0,8
tick,0x7ff954e0fd34,163370095,0,0x0,8
tick,0x7ff954e0fd34,163385381,0,0x0,8
tick,0x7ff954e0fd34,163401116,0,0x0,8
tick,0x7ff954e0fd34,163416119,0,0x0,8
tick,0x7ff954e0fd34,163432534,0,0x0,8
tick,0x7ff954e0fd34,163448150,0,0x0,8
tick,0x7ff954e0fd34,163463165,0,0x0,8
tick,0x7ff954e0fd34,163478795,0,0x0,8
tick,0x7ff954e0fd34,163494173,0,0x0,8
tick,0x7ff954e0fd34,163510243,0,0x0,8
tick,0x7ff954e0fd34,163525188,0,0x0,8
tick,0x7ff954e0fd34,163540705,0,0x0,8
tick,0x7ff954e0fd34,163556023,0,0x0,8
tick,0x7ff954e0fd34,163570919,0,0x0,8
tick,0x7ff954e0fd34,163586731,0,0x0,8
tick,0x7ff954e0fd34,163602370,0,0x0,8
tick,0x7ff954e0fd34,163618174,0,0x0,8
tick,0x7ff954e0fd34,163634142,0,0x0,8
tick,0x7ff954e0fd34,163650123,0,0x0,8
tick,0x7ff954e0fd34,163665753,0,0x0,8
tick,0x7ff954e0fd34,163682037,0,0x0,8
tick,0x7ff954e0fd34,163697132,0,0x0,8
tick,0x7ff954e0fd34,163712569,0,0x0,8
tick,0x7ff954e0fd34,163727147,0,0x0,8
tick,0x7ff954e0fd34,163743083,0,0x0,8
tick,0x7ff954e0fd34,163758208,0,0x0,8
tick,0x7ff954e0fd34,163773947,0,0x0,8
tick,0x7ff954e0fd34,163789832,0,0x0,8
tick,0x7ff954e0fd34,163806052,0,0x0,8
tick,0x7ff954e0fd34,163821793,0,0x0,8
tick,0x7ff954e0fd34,163837758,0,0x0,8
tick,0x7ff954e0fd34,163853713,0,0x0,8
tick,0x7ff954e0fd34,163868782,0,0x0,8
tick,0x7ff954e0fd34,163884050,0,0x0,8
tick,0x7ff954e0fd34,163900020,0,0x0,8
tick,0x7ff954e0fd34,163915966,0,0x0,8
tick,0x7ff954e0fd34,163931923,0,0x0,8
tick,0x7ff954e0fd34,163948060,0,0x0,8
tick,0x7ff954e0fd34,163964049,0,0x0,8
tick,0x7ff954e0fd34,163980207,0,0x0,8
tick,0x7ff954e0fd34,163995966,0,0x0,8
tick,0x7ff954e0fd34,164012098,0,0x0,8
tick,0x7ff954e0fd34,164027284,0,0x0,8
tick,0x7ff954e0fd34,164043566,0,0x0,8
tick,0x7ff954e0fd34,164058788,0,0x0,8
tick,0x7ff954e0fd34,164074982,0,0x0,8
tick,0x7ff954e0fd34,164090175,0,0x0,8
tick,0x7ff954e0fd34,164104878,0,0x0,8
tick,0x7ff954e0fd34,164120167,0,0x0,8
tick,0x7ff954e0fd34,164135899,0,0x0,8
tick,0x7ff954e0fd34,164151131,0,0x0,8
tick,0x7ff954e0fd34,164167006,0,0x0,8
tick,0x7ff954e0fd34,164182635,0,0x0,8
tick,0x7ff954e0fd34,164198327,0,0x0,8
tick,0x7ff954e0fd34,164213817,0,0x0,8
tick,0x7ff954e0fd34,164229484,0,0x0,8
tick,0x7ff954e0fd34,164244454,0,0x0,8
tick,0x7ff954e0fd34,164260413,0,0x0,8
tick,0x7ff954e0fd34,164275512,0,0x0,8
tick,0x7ff954e0fd34,164291592,0,0x0,8
tick,0x7ff954e0fd34,164307711,0,0x0,8
tick,0x7ff954e0fd34,164322913,0,0x0,8
tick,0x7ff954e0fd34,164338506,0,0x0,8
tick,0x7ff954e0fd34,164354355,0,0x0,8
tick,0x7ff954e0fd34,164370335,0,0x0,8
tick,0x7ff954e0fd34,164385821,0,0x0,8
tick,0x7ff954e0fd34,164400957,0,0x0,8
tick,0x7ff954e0fd34,164416148,0,0x0,8
tick,0x7ff954e0fd34,164432332,0,0x0,8
tick,0x7ff954e0fd34,164448070,0,0x0,8
tick,0x7ff954e0fd34,164464092,0,0x0,8
tick,0x7ff954e0fd34,164479916,0,0x0,8
tick,0x7ff954e0fd34,164495805,0,0x0,8
tick,0x7ff954e0fd34,164512139,0,0x0,8
tick,0x7ff954e0fd34,164528199,0,0x0,8
tick,0x7ff954e0fd34,164543802,0,0x0,8
tick,0x7ff954e0fd34,164559351,0,0x0,8
tick,0x7ff954e0fd34,164574527,0,0x0,8
tick,0x7ff954e0fd34,164590134,0,0x0,8
tick,0x7ff954e0fd34,164605449,0,0x0,8
tick,0x7ff954e0fd34,164620490,0,0x0,8
tick,0x7ff954e0fd34,164636495,0,0x0,8
tick,0x7ff954e0fd34,164651719,0,0x0,8
tick,0x7ff954e0fd34,164668171,0,0x0,8
tick,0x7ff954e0fd34,164684073,0,0x0,8
tick,0x7ff954e0fd34,164699016,0,0x0,8
tick,0x7ff954e0fd34,164714475,0,0x0,8
tick,0x7ff954e0fd34,164729261,0,0x0,8
tick,0x7ff954e0fd34,164744888,0,0x0,8
tick,0x7ff954e0fd34,164760366,0,0x0,8
tick,0x7ff954e0fd34,164775994,0,0x0,8
tick,0x7ff954e0fd34,164791048,0,0x0,8
tick,0x7ff954e0fd34,164807259,0,0x0,8
tick,0x7ff954e0fd34,164821843,0,0x0,8
tick,0x7ff954e0fd34,164837107,0,0x0,8
tick,0x7ff954e0fd34,164852916,0,0x0,8
tick,0x7ff954e0fd34,164868802,0,0x0,8
tick,0x7ff954e0fd34,164884093,0,0x0,8
tick,0x7ff954e0fd34,164898870,0,0x0,8
tick,0x7ff954e0fd34,164914857,0,0x0,8
tick,0x7ff954e0fd34,164930198,0,0x0,8
tick,0x7ff954e0fd34,164945630,0,0x0,8
tick,0x7ff954e0fd34,164961558,0,0x0,8
tick,0x7ff954e0fd34,164977389,0,0x0,8
tick,0x7ff954e0fd34,164992957,0,0x0,8
tick,0x7ff954e0fd34,165008839,0,0x0,8
tick,0x7ff954e0fd34,165024790,0,0x0,8
tick,0x7ff954e0fd34,165040808,0,0x0,8
tick,0x7ff954e0fd34,165056700,0,0x0,8
tick,0x7ff954e0fd34,165072749,0,0x0,8
tick,0x7ff954e0fd34,165087945,0,0x0,8
tick,0x7ff954e0fd34,165102928,0,0x0,8
tick,0x7ff954e0fd34,165117953,0,0x0,8
tick,0x7ff954e0fd34,165133135,0,0x0,8
tick,0x7ff954e0fd34,165149410,0,0x0,8
tick,0x7ff954e0fd34,165164712,0,0x0,8
tick,0x7ff954e0fd34,165180189,0,0x0,8
tick,0x7ff954e0fd34,165195640,0,0x0,8
tick,0x7ff954e0fd34,165210862,0,0x0,8
tick,0x7ff954e0fd34,165227196,0,0x0,8
tick,0x7ff954e0fd34,165242521,0,0x0,8
tick,0x7ff954e0fd34,165258654,0,0x0,8
tick,0x7ff954e0fd34,165274126,0,0x0,8
tick,0x7ff954e0fd34,165290176,0,0x0,8
tick,0x7ff954e0fd34,165305324,0,0x0,8
tick,0x7ff954e0fd34,165320866,0,0x0,8
tick,0x7ff954e0fd34,165335763,0,0x0,8
tick,0x7ff954e0fd34,165351056,0,0x0,8
tick,0x7ff954e0fd34,165367062,0,0x0,8
tick,0x7ff954e0fd34,165382319,0,0x0,8
tick,0x7ff954e0fd34,165398156,0,0x0,8
tick,0x7ff954e0fd34,165413272,0,0x0,8
tick,0x7ff954e0fd34,165429354,0,0x0,8
tick,0x7ff954e0fd34,165444602,0,0x0,8
tick,0x7ff954e0fd34,165460397,0,0x0,8
tick,0x7ff954e0fd34,165475860,0,0x0,8
tick,0x7ff954e0fd34,165490853,0,0x0,8
tick,0x7ff954e0fd34,165506452,0,0x0,8
tick,0x7ff954e0fd34,165521221,0,0x0,8
tick,0x7ff954e0fd34,165536587,0,0x0,8
tick,0x7ff954e0fd34,165552097,0,0x0,8
tick,0x7ff954e0fd34,165567985,0,0x0,8
tick,0x7ff954e0fd34,165583910,0,0x0,8
tick,0x7ff954e0fd34,165599045,0,0x0,8
tick,0x7ff954e0fd34,165614254,0,0x0,8
tick,0x7ff954e0fd34,165630163,0,0x0,8
tick,0x7ff954e0fd34,165645774,0,0x0,8
tick,0x7ff954e0fd34,165661497,0,0x0,8
tick,0x7ff954e0fd34,165677141,0,0x0,8
tick,0x7ff954e0fd34,165692918,0,0x0,8
tick,0x7ff954e0fd34,165708776,0,0x0,8
tick,0x7ff954e0fd34,165724414,0,0x0,8
tick,0x7ff954e0fd34,165740244,0,0x0,8
tick,0x7ff954e0fd34,165755624,0,0x0,8
tick,0x7ff954e0fd34,165771051,0,0x0,8
tick,0x7ff954e0fd34,165785954,0,0x0,8
tick,0x7ff954e0fd34,165802145,0,0x0,8
tick,0x7ff954e0fd34,165818171,0,0x0,8
tick,0x7ff954e0fd34,165834327,0,0x0,8
tick,0x7ff954e0fd34,165850101,0,0x0,8
tick,0x7ff954e0fd34,165865507,0,0x0,8
tick,0x7ff954e0fd34,165881106,0,0x0,8
tick,0x7ff954e0fd34,165896289,0,0x0,8
tick,0x7ff954e0fd34,165911436,0,0x0,8
tick,0x7ff954e0fd34,165926915,0,0x0,8
tick,0x7ff954e0fd34,165942300,0,0x0,8
tick,0x7ff954e0fd34,165958111,0,0x0,8
tick,0x7ff954e0fd34,165973505,0,0x0,8
tick,0x7ff954e0fd34,165988353,0,0x0,8
tick,0x7ff954e0fd34,166003859,0,0x0,8
tick,0x7ff954e0fd34,166018914,0,0x0,8
tick,0x7ff954e0fd34,166034183,0,0x0,8
tick,0x7ff954e0fd34,166049822,0,0x0,8
tick,0x7ff954e0fd34,166065285,0,0x0,8
tick,0x7ff954e0fd34,166080196,0,0x0,8
tick,0x7ff954e0fd34,166096014,0,0x0,8
tick,0x7ff954e0fd34,166111094,0,0x0,8
tick,0x7ff954e0fd34,166126839,0,0x0,8
tick,0x7ff954e0fd34,166141967,0,0x0,8
tick,0x7ff954e0fd34,166158151,0,0x0,8
tick,0x7ff954e0fd34,166172922,0,0x0,8
tick,0x7ff954e0fd34,166188322,0,0x0,8
tick,0x7ff954e0fd34,166204257,0,0x0,8
tick,0x7ff954e0fd34,166220286,0,0x0,8
tick,0x7ff954e0fd34,166236215,0,0x0,8
tick,0x7ff954e0fd34,166252228,0,0x0,8
tick,0x7ff954e0fd34,166267125,0,0x0,8
tick,0x7ff954e0fd34,166282086,0,0x0,8
tick,0x7ff954e0fd34,166297039,0,0x0,8
tick,0x7ff954e0fd34,166311852,0,0x0,8
tick,0x7ff954e0fd34,166327870,0,0x0,8
tick,0x7ff954e0fd34,166343639,0,0x0,8
tick,0x7ff954e0fd34,166359483,0,0x0,8
tick,0x7ff954e0fd34,166374534,0,0x0,8
tick,0x7ff954e0fd34,166389349,0,0x0,8
tick,0x7ff954e0fd34,166404387,0,0x0,8
tick,0x7ff954e0fd34,166420328,0,0x0,8
tick,0x7ff954e0fd34,166436286,0,0x0,8
tick,0x7ff954e0fd34,166451253,0,0x0,8
tick,0x7ff954e0fd34,166466288,0,0x0,8
tick,0x7ff954e0fd34,166481201,0,0x0,8
tick,0x7ff954e0fd34,166497230,0,0x0,8
tick,0x7ff954e0fd34,166512182,0,0x0,8
tick,0x7ff954e0fd34,166527383,0,0x0,8
tick,0x7ff954e0fd34,166542700,0,0x0,8
tick,0x7ff954e0fd34,166558723,0,0x0,8
tick,0x7ff954e0fd34,166574584,0,0x0,8
tick,0x7ff954e0fd34,166590404,0,0x0,8
tick,0x7ff954e0fd34,166606309,0,0x0,8
tick,0x7ff954e0fd34,166622130,0,0x0,8
tick,0x7ff954e0fd34,166638084,0,0x0,8
tick,0x7ff954e0fd34,166653124,0,0x0,8
tick,0x7ff954e0fd34,166668190,0,0x0,8
tick,0x7ff954e0fd34,166683141,0,0x0,8
tick,0x7ff954e0fd34,166698973,0,0x0,8
tick,0x7ff954e0fd34,166714798,0,0x0,8
tick,0x7ff954e0fd34,166730419,0,0x0,8
tick,0x7ff954e0fd34,166745373,0,0x0,8
tick,0x7ff954e0fd34,166760351,0,0x0,8
tick,0x7ff954e0fd34,166775253,0,0x0,8
tick,0x7ff954e0fd34,166790799,0,0x0,8
tick,0x7ff954e0fd34,166806750,0,0x0,8
tick,0x7ff954e0fd34,166822421,0,0x0,8
tick,0x7ff954e0fd34,166838384,0,0x0,8
tick,0x7ff954e0fd34,166853431,0,0x0,8
tick,0x7ff954e0fd34,166868296,0,0x0,8
tick,0x7ff954e0fd34,166883316,0,0x0,8
tick,0x7ff954e0fd34,166898726,0,0x0,8
tick,0x7ff954e0fd34,166914665,0,0x0,8
tick,0x7ff954e0fd34,166930280,0,0x0,8
tick,0x7ff954e0fd34,166946401,0,0x0,8
tick,0x7ff954e0fd34,166961846,0,0x0,8
tick,0x7ff954e0fd34,166977207,0,0x0,8
tick,0x7ff954e0fd34,166993274,0,0x0,8
tick,0x7ff954e0fd34,167007788,0,0x0,8
tick,0x7ff954e0fd34,167023882,0,0x0,8
tick,0x7ff954e0fd34,167038867,0,0x0,8
tick,0x7ff954e0fd34,167054195,0,0x0,8
tick,0x7ff954e0fd34,167070044,0,0x0,8
tick,0x7ff954e0fd34,167084938,0,0x0,8
tick,0x7ff954e0fd34,167100871,0,0x0,8
tick,0x7ff954e0fd34,167115655,0,0x0,8
tick,0x7ff954e0fd34,167131558,0,0x0,8
tick,0x7ff954e0fd34,167147211,0,0x0,8
tick,0x7ff954e0fd34,167162189,0,0x0,8
tick,0x7ff954e0fd34,167177916,0,0x0,8
tick,0x7ff954e0fd34,167193806,0,0x0,8
tick,0x7ff954e0fd34,167210063,0,0x0,8
tick,0x7ff954e0fd34,167225988,0,0x0,8
tick,0x7ff954e0fd34,167241863,0,0x0,8
tick,0x7ff954e0fd34,167257118,0,0x0,8
tick,0x7ff954e0fd34,167271754,0,0x0,8
tick,0x7ff954e0fd34,167287096,0,0x0,8
tick,0x7ff954e0fd34,167302039,0,0x0,8
tick,0x7ff954e0fd34,167316985,0,0x0,8
tick,0x7ff954e0fd34,167331920,0,0x0,8
tick,0x7ff954e0fd34,167346977,0,0x0,8
tick,0x7ff954e0fd34,167362451,0,0x0,8
tick,0x7ff954e0fd34,167377319,0,0x0,8
tick,0x7ff954e0fd34,167393270,0,0x0,8
tick,0x7ff954e0fd34,167409420,0,0x0,8
tick,0x7ff954e0fd34,167425221,0,0x0,8
tick,0x7ff954e0fd34,167441486,0,0x0,8
tick,0x7ff954e0fd34,167456759,0,0x0,8
tick,0x7ff954e0fd34,167471704,0,0x0,8
tick,0x7ff954e0fd34,167487018,0,0x0,8
tick,0x7ff954e0fd34,167502368,0,0x0,8
tick,0x7ff954e0fd34,167518132,0,0x0,8
tick,0x7ff954e0fd34,167533371,0,0x0,8
tick,0x7ff954e0fd34,167548750,0,0x0,8
tick,0x7ff954e0fd34,167564306,0,0x0,8
tick,0x7ff954e0fd34,167579680,0,0x0,8
tick,0x7ff954e0fd34,167595285,0,0x0,8
tick,0x7ff954e0fd34,167610841,0,0x0,8
tick,0x7ff954e0fd34,167626145,0,0x0,8
tick,0x7ff954e0fd34,167642226,0,0x0,8
tick,0x7ff954e0fd34,167658031,0,0x0,8
tick,0x7ff954e0fd34,167673403,0,0x0,8
tick,0x7ff954e0fd34,167688220,0,0x0,8
tick,0x7ff954e0fd34,167703791,0,0x0,8
tick,0x7ff954e0fd34,167718996,0,0x0,8
tick,0x7ff954e0fd34,167734443,0,0x0,8
tick,0x7ff954e0fd34,167750097,0,0x0,8
tick,0x7ff954e0fd34,167765754,0,0x0,8
tick,0x7ff954e0fd34,167782067,0,0x0,8
tick,0x7ff954e0fd34,167797520,0,0x0,8
tick,0x7ff954e0fd34,167813292,0,0x0,8
tick,0x7ff954e0fd34,167828332,0,0x0,8
tick,0x7ff954e0fd34,167843353,0,0x0,8
tick,0x7ff954e0fd34,167859184,0,0x0,8
tick,0x7ff954e0fd34,167875114,0,0x0,8
tick,0x7ff954e0fd34,167891149,0,0x0,8
tick,0x7ff954e0fd34,167906892,0,0x0,8
tick,0x7ff954e0fd34,167922905,0,0x0,8
tick,0x7ff954e0fd34,167938834,0,0x0,8
tick,0x7ff954e0fd34,167954775,0,0x0,8
tick,0x7ff954e0fd34,167970725,0,0x0,8
tick,0x7ff954e0fd34,167986698,0,0x0,8
tick,0x7ff954e0fd34,168001652,0,0x0,8
tick,0x7ff954e0fd34,168016723,0,0x0,8
tick,0x7ff954e0fd34,168032210,0,0x0,8
tick,0x7ff954e0fd34,168048169,0,0x0,8
tick,0x7ff954e0fd34,168064165,0,0x0,8
tick,0x7ff954e0fd34,168080131,0,0x0,8
tick,0x7ff954e0fd34,168095785,0,0x0,8
tick,0x7ff954e0fd34,168111616,0,0x0,8
tick,0x7ff954e0fd34,168127129,0,0x0,8
tick,0x7ff954e0fd34,168143019,0,0x0,8
tick,0x7ff954e0fd34,168158189,0,0x0,8
tick,0x7ff954e0fd34,168173375,0,0x0,8
tick,0x7ff954e0fd34,168189058,0,0x0,8
tick,0x7ff954e0fd34,168204331,0,0x0,8
tick,0x7ff954e0fd34,168219509,0,0x0,8
tick,0x7ff954e0fd34,168235124,0,0x0,8
tick,0x7ff954e0fd34,168250706,0,0x0,8
tick,0x7ff954e0fd34,168266032,0,0x0,8
tick,0x7ff954e0fd34,168281821,0,0x0,8
tick,0x7ff954e0fd34,168297813,0,0x0,8
tick,0x7ff954e0fd34,168313632,0,0x0,8
tick,0x7ff954e0fd34,168329818,0,0x0,8
tick,0x7ff954e0fd34,168345749,0,0x0,8
tick,0x7ff954e0fd34,168361768,0,0x0,8
tick,0x7ff954e0fd34,168376811,0,0x0,8
tick,0x7ff954e0fd34,168391606,0,0x0,8
tick,0x7ff954e0fd34,168406838,0,0x0,8
tick,0x7ff954e0fd34,168422611,0,0x0,8
tick,0x7ff954e0fd34,168438045,0,0x0,8
tick,0x7ff954e0fd34,168454079,0,0x0,8
tick,0x7ff954e0fd34,168469958,0,0x0,8
tick,0x7ff954e0fd34,168484846,0,0x0,8
tick,0x7ff954e0fd34,168500750,0,0x0,8
tick,0x7ff954e0fd34,168516013,0,0x0,8
tick,0x7ff954e0fd34,168531959,0,0x0,8
tick,0x7ff954e0fd34,168547148,0,0x0,8
tick,0x7ff954e0fd34,168562502,0,0x0,8
tick,0x7ff954e0fd34,168578229,0,0x0,8
tick,0x7ff954e0fd34,168593796,0,0x0,8
tick,0x7ff954e0fd34,168608736,0,0x0,8
tick,0x7ff954e0fd34,168623633,0,0x0,8
tick,0x7ff954e0fd34,168638653,0,0x0,8
tick,0x7ff954e0fd34,168654608,0,0x0,8
tick,0x7ff954e0fd34,168670575,0,0x0,8
tick,0x7ff954e0fd34,168685521,0,0x0,8
tick,0x7ff954e0fd34,168700694,0,0x0,8
tick,0x7ff954e0fd34,168716627,0,0x0,8
tick,0x7ff954e0fd34,168731648,0,0x0,8
tick,0x7ff954e0fd34,168746558,0,0x0,8
tick,0x7ff954e0fd34,168761586,0,0x0,8
tick,0x7ff954e0fd34,168776529,0,0x0,8
tick,0x7ff954e0fd34,168791222,0,0x0,8
tick,0x7ff954e0fd34,168807148,0,0x0,8
tick,0x7ff954e0fd34,168823118,0,0x0,8
tick,0x7ff954e0fd34,168838845,0,0x0,8
tick,0x7ff954e0fd34,168854797,0,0x0,8
tick,0x7ff954e0fd34,168870758,0,0x0,8
tick,0x7ff954e0fd34,168886018,0,0x0,8
tick,0x7ff954e0fd34,168901314,0,0x0,8
tick,0x7ff954e0fd34,168916955,0,0x0,8
tick,0x7ff954e0fd34,168932168,0,0x0,8
tick,0x7ff954e0fd34,168947242,0,0x0,8
tick,0x7ff954e0fd34,168963014,0,0x0,8
tick,0x7ff954e0fd34,168978324,0,0x0,8
tick,0x7ff954e0fd34,168994283,0,0x0,8
tick,0x7ff954e0fd34,169009897,0,0x0,8
tick,0x7ff954e0fd34,169025366,0,0x0,8
tick,0x7ff954e0fd34,169040913,0,0x0,8
tick,0x7ff954e0fd34,169056285,0,0x0,8
tick,0x7ff954e0fd34,169072194,0,0x0,8
tick,0x7ff954e0fd34,169088125,0,0x0,8
tick,0x7ff954e0fd34,169103341,0,0x0,8
tick,0x7ff954e0fd34,169118096,0,0x0,8
tick,0x7ff954e0fd34,169133518,0,0x0,8
tick,0x7ff954e0fd34,169148859,0,0x0,8
tick,0x7ff954e0fd34,169164485,0,0x0,8
tick,0x7ff954e0fd34,169179648,0,0x0,8
tick,0x7ff954e0fd34,169195122,0,0x0,8
tick,0x7ff954e0fd34,169210591,0,0x0,8
tick,0x7ff954e0fd34,169225737,0,0x0,8
tick,0x7ff954e0fd34,169240783,0,0x0,8
tick,0x7ff954e0fd34,169255831,0,0x0,8
tick,0x7ff954e0fd34,169270755,0,0x0,8
tick,0x7ff954e0fd34,169286365,0,0x0,8
tick,0x7ff954e0fd34,169301570,0,0x0,8
tick,0x7ff954e0fd34,169316693,0,0x0,8
tick,0x7ff954e0fd34,169331541,0,0x0,8
tick,0x7ff954e0fd34,169346856,0,0x0,8
tick,0x7ff954e0fd34,169362427,0,0x0,8
tick,0x7ff954e0fd34,169378517,0,0x0,8
tick,0x7ff954e0fd34,169394317,0,0x0,8
tick,0x7ff954e0fd34,169410471,0,0x0,8
tick,0x7ff954e0fd34,169426355,0,0x0,8
tick,0x7ff954e0fd34,169441284,0,0x0,8
tick,0x7ff954e0fd34,169457132,0,0x0,8
tick,0x7ff954e0fd34,169472136,0,0x0,8
tick,0x7ff954e0fd34,169488104,0,0x0,8
tick,0x7ff954e0fd34,169503512,0,0x0,8
tick,0x7ff954e0fd34,169519150,0,0x0,8
tick,0x7ff954e0fd34,169534756,0,0x0,8
tick,0x7ff954e0fd34,169549907,0,0x0,8
tick,0x7ff954e0fd34,169565327,0,0x0,8
tick,0x7ff954e0fd34,169580666,0,0x0,8
tick,0x7ff954e0fd34,169595899,0,0x0,8
tick,0x7ff954e0fd34,169611071,0,0x0,8
tick,0x7ff954e0fd34,169626852,0,0x0,8
tick,0x7ff954e0fd34,169641787,0,0x0,8
tick,0x7ff954e0fd34,169657021,0,0x0,8
tick,0x7ff954e0fd34,169672843,0,0x0,8
tick,0x7ff954e0fd34,169687988,0,0x0,8
tick,0x7ff954e0fd34,169703521,0,0x0,8
tick,0x7ff954e0fd34,169719305,0,0x0,8
tick,0x7ff954e0fd34,169734089,0,0x0,8
tick,0x7ff954e0fd34,169749862,0,0x0,8
tick,0x7ff954e0fd34,169765544,0,0x0,8
tick,0x7ff954e0fd34,169781403,0,0x0,8
tick,0x7ff954e0fd34,169797024,0,0x0,8
tick,0x7ff954e0fd34,169813009,0,0x0,8
tick,0x7ff954e0fd34,169828329,0,0x0,8
tick,0x7ff954e0fd34,169844039,0,0x0,8
tick,0x7ff954e0fd34,169860040,0,0x0,8
tick,0x7ff954e0fd34,169875813,0,0x0,8
tick,0x7ff954e0fd34,169891005,0,0x0,8
tick,0x7ff954e0fd34,169906737,0,0x0,8
tick,0x7ff954e0fd34,169921948,0,0x0,8
tick,0x7ff954e0fd34,169937250,0,0x0,8
tick,0x7ff954e0fd34,169952701,0,0x0,8
tick,0x7ff954e0fd34,169968816,0,0x0,8
tick,0x7ff954e0fd34,169984235,0,0x0,8
tick,0x7ff954e0fd34,170000161,0,0x0,8
tick,0x7ff954e0fd34,170015815,0,0x0,8
tick,0x7ff954e0fd34,170031868,0,0x0,8
tick,0x7ff954e0fd34,170047116,0,0x0,8
tick,0x7ff954e0fd34,170063384,0,0x0,8
tick,0x7ff954e0fd34,170079479,0,0x0,8
tick,0x7ff954e0fd34,170095165,0,0x0,8
tick,0x7ff954e0fd34,170111273,0,0x0,8
tick,0x7ff954e0fd34,170127008,0,0x0,8
tick,0x7ff954e0fd34,170141894,0,0x0,8
tick,0x7ff954e0fd34,170156979,0,0x0,8
tick,0x7ff954e0fd34,170172533,0,0x0,8
tick,0x7ff954e0fd34,170188204,0,0x0,8
tick,0x7ff954e0fd34,170203058,0,0x0,8
tick,0x7ff954e0fd34,170218129,0,0x0,8
tick,0x7ff954e0fd34,170233570,0,0x0,8
tick,0x7ff954e0fd34,170248875,0,0x0,8
tick,0x7ff954e0fd34,170264307,0,0x0,8
tick,0x7ff954e0fd34,170279022,0,0x0,8
tick,0x7ff954e0fd34,170294569,0,0x0,8
tick,0x7ff954e0fd34,170310164,0,0x0,8
tick,0x7ff954e0fd34,170326145,0,0x0,8
tick,0x7ff954e0fd34,170341897,0,0x0,8
tick,0x7ff954e0fd34,170357852,0,0x0,8
tick,0x7ff954e0fd34,170373836,0,0x0,8
tick,0x7ff954e0fd34,170389501,0,0x0,8
tick,0x7ff954e0fd34,170404123,0,0x0,8
tick,0x7ff954e0fd34,170420219,0,0x0,8
tick,0x7ff954e0fd34,170436239,0,0x0,8
tick,0x7ff954e0fd34,170452464,0,0x0,8
tick,0x7ff954e0fd34,170467980,0,0x0,8
tick,0x7ff954e0fd34,170484026,0,0x0,8
tick,0x7ff954e0fd34,170499401,0,0x0,8
tick,0x7ff954e0fd34,170514560,0,0x0,8
tick,0x7ff954e0fd34,170529944,0,0x0,8
tick,0x7ff954e0fd34,170545000,0,0x0,8
tick,0x7ff954e0fd34,170560342,0,0x0,8
tick,0x7ff954e0fd34,170575589,0,0x0,8
tick,0x7ff954e0fd34,170590835,0,0x0,8
tick,0x7ff954e0fd34,170606754,0,0x0,8
tick,0x7ff954e0fd34,170622708,0,0x0,8
tick,0x7ff954e0fd34,170638171,0,0x0,8
tick,0x7ff954e0fd34,170654100,0,0x0,8
tick,0x7ff954e0fd34,170670042,0,0x0,8
tick,0x7ff954e0fd34,170685311,0,0x0,8
tick,0x7ff954e0fd34,170701029,0,0x0,8
tick,0x7ff954e0fd34,170716608,0,0x0,8
tick,0x7ff954e0fd34,170732333,0,0x0,8
tick,0x7ff954e0fd34,170748152,0,0x0,8
tick,0x7ff954e0fd34,170763487,0,0x0,8
tick,0x7ff954e0fd34,170779425,0,0x0,8
tick,0x7ff954e0fd34,170795029,0,0x0,8
tick,0x7ff954e0fd34,170810436,0,0x0,8
tick,0x7ff954e0fd34,170825487,0,0x0,8
tick,0x7ff954e0fd34,170840861,0,0x0,8
tick,0x7ff954e0fd34,170857289,0,0x0,8
tick,0x7ff954e0fd34,170873229,0,0x0,8
tick,0x7ff954e0fd34,170889209,0,0x0,8
tick,0x7ff954e0fd34,170905115,0,0x0,8
tick,0x7ff954e0fd34,170921241,0,0x0,8
tick,0x7ff954e0fd34,170936738,0,0x0,8
tick,0x7ff954e0fd34,170952009,0,0x0,8
tick,0x7ff954e0fd34,170966986,0,0x0,8
tick,0x7ff954e0fd34,170982122,0,0x0,8
tick,0x7ff954e0fd34,170997012,0,0x0,8
tick,0x7ff954e0fd34,171013145,0,0x0,8
tick,0x7ff954e0fd34,171028789,0,0x0,8
tick,0x7ff954e0fd34,171043798,0,0x0,8
tick,0x7ff954e0fd34,171058767,0,0x0,8
tick,0x7ff954e0fd34,171073670,0,0x0,8
tick,0x7ff954e0fd34,171089111,0,0x0,8
tick,0x7ff954e0fd34,171104803,0,0x0,8
tick,0x7ff954e0fd34,171120056,0,0x0,8
tick,0x7ff954e0fd34,171135688,0,0x0,8
tick,0x7ff954e0fd34,171150956,0,0x0,8
tick,0x7ff954e0fd34,171166622,0,0x0,8
tick,0x7ff954e0fd34,171181845,0,0x0,8
tick,0x7ff954e0fd34,171197391,0,0x0,8
tick,0x7ff954e0fd34,171213926,0,0x0,8
tick,0x7ff954e0fd34,171228797,0,0x0,8
tick,0x7ff954e0fd34,171243180,0,0x0,8
tick,0x7ff954e0fd34,171259206,0,0x0,8
tick,0x7ff954e0fd34,171275184,0,0x0,8
tick,0x7ff954e0fd34,171290283,0,0x0,8
tick,0x7ff954e0fd34,171306305,0,0x0,8
tick,0x7ff954e0fd34,171322165,0,0x0,8
tick,0x7ff954e0fd34,171377824,0,0x0,8
tick,0x7ff954e0fd34,171385000,0,0x0,8
tick,0x7ff954e0fd34,171401183,0,0x0,8
tick,0x7ff954e0fd34,171415175,0,0x0,8
tick,0x7ff954e0fd34,171430630,0,0x0,8
tick,0x7ff954e0fd34,171445086,0,0x0,8
tick,0x7ff954e0fd34,171460190,0,0x0,8
tick,0x7ff954e0fd34,171475612,0,0x0,8
tick,0x7ff954e0fd34,171490775,0,0x0,8
tick,0x7ff954e0fd34,171506103,0,0x0,8
tick,0x7ff954e0fd34,171521906,0,0x0,8
tick,0x7ff954e0fd34,171537322,0,0x0,8
tick,0x7ff954e0fd34,171553253,0,0x0,8
tick,0x7ff954e0fd34,171569241,0,0x0,8
tick,0x7ff954e0fd34,171584841,0,0x0,8
tick,0x7ff954e0fd34,171600345,0,0x0,8
tick,0x7ff954e0fd34,171616118,0,0x0,8
tick,0x7ff954e0fd34,171632009,0,0x0,8
tick,0x7ff954e0fd34,171647135,0,0x0,8
tick,0x7ff954e0fd34,171661983,0,0x0,8
tick,0x7ff954e0fd34,171677983,0,0x0,8
tick,0x7ff954e0fd34,171692702,0,0x0,8
tick,0x7ff954e0fd34,171707877,0,0x0,8
tick,0x7ff954e0fd34,171723133,0,0x0,8
tick,0x7ff954e0fd34,171739144,0,0x0,8
tick,0x7ff954e0fd34,171753908,0,0x0,8
tick,0x7ff954e0fd34,171769615,0,0x0,8
tick,0x7ff954e0fd34,171785358,0,0x0,8
tick,0x7ff954e0fd34,171800994,0,0x0,8
tick,0x7ff954e0fd34,171816121,0,0x0,8
tick,0x7ff954e0fd34,171831949,0,0x0,8
tick,0x7ff954e0fd34,171847198,0,0x0,8
tick,0x7ff954e0fd34,171863078,0,0x0,8
tick,0x7ff954e0fd34,171878014,0,0x0,8
tick,0x7ff954e0fd34,171893975,0,0x0,8
tick,0x7ff954e0fd34,171908943,0,0x0,8
tick,0x7ff954e0fd34,171924110,0,0x0,8
tick,0x7ff954e0fd34,171940034,0,0x0,8
tick,0x7ff954e0fd34,171955924,0,0x0,8
tick,0x7ff954e0fd34,171971862,0,0x0,8
tick,0x7ff954e0fd34,171987823,0,0x0,8
tick,0x7ff954e0fd34,172003909,0,0x0,8
tick,0x7ff954e0fd34,172019800,0,0x0,8
tick,0x7ff954e0fd34,172035124,0,0x0,8
tick,0x7ff954e0fd34,172050337,0,0x0,8
tick,0x7ff954e0fd34,172066491,0,0x0,8
tick,0x7ff954e0fd34,172082189,0,0x0,8
tick,0x7ff954e0fd34,172097148,0,0x0,8
tick,0x7ff954e0fd34,172111971,0,0x0,8
tick,0x7ff954e0fd34,172127137,0,0x0,8
tick,0x7ff954e0fd34,172141796,0,0x0,8
tick,0x7ff954e0fd34,172156627,0,0x0,8
tick,0x7ff954e0fd34,172171987,0,0x0,8
tick,0x7ff954e0fd34,172187090,0,0x0,8
tick,0x7ff954e0fd34,172202287,0,0x0,8
tick,0x7ff954e0fd34,172218074,0,0x0,8
tick,0x7ff954e0fd34,172234305,0,0x0,8
tick,0x7ff954e0fd34,172249845,0,0x0,8
tick,0x7ff954e0fd34,172265414,0,0x0,8
tick,0x7ff954e0fd34,172281408,0,0x0,8
tick,0x7ff954e0fd34,172297140,0,0x0,8
tick,0x7ff954e0fd34,172313117,0,0x0,8
tick,0x7ff954e0fd34,172328019,0,0x0,8
tick,0x7ff954e0fd34,172343057,0,0x0,8
tick,0x7ff954e0fd34,172358913,0,0x0,8
tick,0x7ff954e0fd34,172373944,0,0x0,8
tick,0x7ff954e0fd34,172389779,0,0x0,8
tick,0x7ff954e0fd34,172405194,0,0x0,8
tick,0x7ff954e0fd34,172421122,0,0x0,8
tick,0x7ff954e0fd34,172436532,0,0x0,8
tick,0x7ff954e0fd34,172451883,0,0x0,8
tick,0x7ff954e0fd34,172467818,0,0x0,8
tick,0x7ff954e0fd34,172483025,0,0x0,8
tick,0x7ff954e0fd34,172498508,0,0x0,8
tick,0x7ff954e0fd34,172513627,0,0x0,8
tick,0x7ff954e0fd34,172529027,0,0x0,8
tick,0x7ff954e0fd34,172544930,0,0x0,8
tick,0x7ff954e0fd34,172560117,0,0x0,8
tick,0x7ff954e0fd34,172576455,0,0x0,8
tick,0x7ff954e0fd34,172591992,0,0x0,8
tick,0x7ff954e0fd34,172608047,0,0x0,8
tick,0x7ff954e0fd34,172623721,0,0x0,8
tick,0x7ff954e0fd34,172638899,0,0x0,8
tick,0x7ff954e0fd34,172654351,0,0x0,8
tick,0x7ff954e0fd34,172670146,0,0x0,8
tick,0x7ff954e0fd34,172685560,0,0x0,8
tick,0x7ff954e0fd34,172700371,0,0x0,8
tick,0x7ff954e0fd34,172716344,0,0x0,8
tick,0x7ff954e0fd34,172732544,0,0x0,8
tick,0x7ff954e0fd34,172747863,0,0x0,8
tick,0x7ff954e0fd34,172763766,0,0x0,8
tick,0x7ff954e0fd34,172778896,0,0x0,8
tick,0x7ff954e0fd34,172794214,0,0x0,8
tick,0x7ff954e0fd34,172810039,0,0x0,8
tick,0x7ff954e0fd34,172825755,0,0x0,8
tick,0x7ff954e0fd34,172841041,0,0x0,8
tick,0x7ff954e0fd34,172856769,0,0x0,8
tick,0x7ff954e0fd34,172872684,0,0x0,8
tick,0x7ff954e0fd34,172887695,0,0x0,8
tick,0x7ff954e0fd34,172903215,0,0x0,8
tick,0x7ff954e0fd34,172919195,0,0x0,8
tick,0x7ff954e0fd34,172935000,0,0x0,8
tick,0x7ff954e0fd34,172950932,0,0x0,8
tick,0x7ff954e0fd34,172966940,0,0x0,8
tick,0x7ff954e0fd34,172982871,0,0x0,8
tick,0x7ff954e0fd34,172998037,0,0x0,8
tick,0x7ff954e0fd34,173012825,0,0x0,8
tick,0x7ff954e0fd34,173027828,0,0x0,8
tick,0x7ff954e0fd34,173043880,0,0x0,8
tick,0x7ff954e0fd34,173058901,0,0x0,8
tick,0x7ff954e0fd34,173074992,0,0x0,8
tick,0x7ff954e0fd34,173090569,0,0x0,8
tick,0x7ff954e0fd34,173106548,0,0x0,8
tick,0x7ff954e0fd34,173121783,0,0x0,8
tick,0x7ff954e0fd34,173136812,0,0x0,8
tick,0x7ff954e0fd34,173152457,0,0x0,8
tick,0x7ff954e0fd34,173168497,0,0x0,8
tick,0x7ff954e0fd34,173183579,0,0x0,8
tick,0x7ff954e0fd34,173199138,0,0x0,8
tick,0x7ff954e0fd34,173214833,0,0x0,8
tick,0x7ff954e0fd34,173230291,0,0x0,8
tick,0x7ff954e0fd34,173245726,0,0x0,8
tick,0x7ff954e0fd34,173260627,0,0x0,8
tick,0x7ff954e0fd34,173276347,0,0x0,8
tick,0x7ff954e0fd34,173292108,0,0x0,8
tick,0x7ff954e0fd34,173308037,0,0x0,8
tick,0x7ff954e0fd34,173323485,0,0x0,8
tick,0x7ff954e0fd34,173338948,0,0x0,8
tick,0x7ff954e0fd34,173354058,0,0x0,8
tick,0x7ff954e0fd34,173370121,0,0x0,8
tick,0x7ff954e0fd34,173385690,0,0x0,8
tick,0x7ff954e0fd34,173401092,0,0x0,8
tick,0x7ff954e0fd34,173415970,0,0x0,8
tick,0x7ff954e0fd34,173432265,0,0x0,8
tick,0x7ff954e0fd34,173448141,0,0x0,8
tick,0x7ff954e0fd34,173463263,0,0x0,8
tick,0x7ff954e0fd34,173478100,0,0x0,8
tick,0x7ff954e0fd34,173493286,0,0x0,8
tick,0x7ff954e0fd34,173509000,0,0x0,8
tick,0x7ff954e0fd34,173524199,0,0x0,8
tick,0x7ff954e0fd34,173539933,0,0x0,8
tick,0x7ff954e0fd34,173555097,0,0x0,8
tick,0x7ff954e0fd34,173570094,0,0x0,8
tick,0x7ff954e0fd34,173585157,0,0x0,8
tick,0x7ff954e0fd34,173600024,0,0x0,8
tick,0x7ff954e0fd34,173614989,0,0x0,8
tick,0x7ff954e0fd34,173630942,0,0x0,8
tick,0x7ff954e0fd34,173645945,0,0x0,8
tick,0x7ff954e0fd34,173661824,0,0x0,8
tick,0x7ff954e0fd34,173676802,0,0x0,8
tick,0x7ff954e0fd34,173692124,0,0x0,8
tick,0x7ff954e0fd34,173707260,0,0x0,8
tick,0x7ff954e0fd34,173723075,0,0x0,8
tick,0x7ff954e0fd34,173738813,0,0x0,8
tick,0x7ff954e0fd34,173754164,0,0x0,8
tick,0x7ff954e0fd34,173769860,0,0x0,8
tick,0x7ff954e0fd34,173785516,0,0x0,8
tick,0x7ff954e0fd34,173801016,0,0x0,8
tick,0x7ff954e0fd34,173816004,0,0x0,8
tick,0x7ff954e0fd34,173832141,0,0x0,8
tick,0x7ff954e0fd34,173847139,0,0x0,8
tick,0x7ff954e0fd34,173862249,0,0x0,8
tick,0x7ff954e0fd34,173878072,0,0x0,8
tick,0x7ff954e0fd34,173894106,0,0x0,8
tick,0x7ff954e0fd34,173910115,0,0x0,8
tick,0x7ff954e0fd34,173925467,0,0x0,8
tick,0x7ff954e0fd34,173941104,0,0x0,8
tick,0x7ff954e0fd34,173956591,0,0x0,8
tick,0x7ff954e0fd34,173971558,0,0x0,8
tick,0x7ff954e0fd34,173987076,0,0x0,8
tick,0x7ff954e0fd34,174002412,0,0x0,8
tick,0x7ff954e0fd34,174017861,0,0x0,8
tick,0x7ff954e0fd34,174033277,0,0x0,8
tick,0x7ff954e0fd34,174049001,0,0x0,8
tick,0x7ff954e0fd34,174063947,0,0x0,8
tick,0x7ff954e0fd34,174078834,0,0x0,8
tick,0x7ff954e0fd34,174094496,0,0x0,8
tick,0x7ff954e0fd34,174110183,0,0x0,8
tick,0x7ff954e0fd34,174125427,0,0x0,8
tick,0x7ff954e0fd34,174140724,0,0x0,8
tick,0x7ff954e0fd34,174156520,0,0x0,8
tick,0x7ff954e0fd34,174172019,0,0x0,8
tick,0x7ff954e0fd34,174187156,0,0x0,8
tick,0x7ff954e0fd34,174202619,0,0x0,8
tick,0x7ff954e0fd34,174218105,0,0x0,8
tick,0x7ff954e0fd34,174234267,0,0x0,8
tick,0x7ff954e0fd34,174248952,0,0x0,8
tick,0x7ff954e0fd34,174264172,0,0x0,8
tick,0x7ff954e0fd34,174280025,0,0x0,8
tick,0x7ff954e0fd34,174296020,0,0x0,8
tick,0x7ff954e0fd34,174311930,0,0x0,8
tick,0x7ff954e0fd34,174326949,0,0x0,8
tick,0x7ff954e0fd34,174342898,0,0x0,8
tick,0x7ff954e0fd34,174357858,0,0x0,8
tick,0x7ff954e0fd34,174373756,0,0x0,8
tick,0x7ff954e0fd34,174389728,0,0x0,8
tick,0x7ff954e0fd34,174405729,0,0x0,8
tick,0x7ff954e0fd34,174420744,0,0x0,8
tick,0x7ff954e0fd34,174435993,0,0x0,8
tick,0x7ff954e0fd34,174451808,0,0x0,8
tick,0x7ff954e0fd34,174467073,0,0x0,8
tick,0x7ff954e0fd34,174482725,0,0x0,8
tick,0x7ff954e0fd34,174498272,0,0x0,8
tick,0x7ff954e0fd34,174513434,0,0x0,8
tick,0x7ff954e0fd34,174529011,0,0x0,8
tick,0x7ff954e0fd34,174544816,0,0x0,8
tick,0x7ff954e0fd34,174559963,0,0x0,8
tick,0x7ff954e0fd34,174575713,0,0x0,8
tick,0x7ff954e0fd34,174590973,0,0x0,8
tick,0x7ff954e0fd34,174606470,0,0x0,8
tick,0x7ff954e0fd34,174622457,0,0x0,8
tick,0x7ff954e0fd34,174638331,0,0x0,8
tick,0x7ff954e0fd34,174654282,0,0x0,8
tick,0x7ff954e0fd34,174669270,0,0x0,8
tick,0x7ff954e0fd34,174685247,0,0x0,8
tick,0x7ff954e0fd34,174700328,0,0x0,8
tick,0x7ff954e0fd34,174716297,0,0x0,8
tick,0x7ff954e0fd34,174731248,0,0x0,8
tick,0x7ff954e0fd34,174746060,0,0x0,8
tick,0x7ff954e0fd34,174761723,0,0x0,8
tick,0x7ff954e0fd34,174777511,0,0x0,8
tick,0x7ff954e0fd34,174793015,0,0x0,8
tick,0x7ff954e0fd34,174808798,0,0x0,8
tick,0x7ff954e0fd34,174824924,0,0x0,8
tick,0x7ff954e0fd34,174841009,0,0x0,8
tick,0x7ff954e0fd34,174856639,0,0x0,8
tick,0x7ff954e0fd34,174871530,0,0x0,8
tick,0x7ff954e0fd34,174887540,0,0x0,8
tick,0x7ff954e0fd34,174903519,0,0x0,8
tick,0x7ff954e0fd34,174918939,0,0x0,8
tick,0x7ff954e0fd34,174933740,0,0x0,8
tick,0x7ff954e0fd34,174949806,0,0x0,8
tick,0x7ff954e0fd34,174965017,0,0x0,8
tick,0x7ff954e0fd34,174980693,0,0x0,8
tick,0x7ff954e0fd34,174995846,0,0x0,8
tick,0x7ff954e0fd34,175010749,0,0x0,8
tick,0x7ff954e0fd34,175026062,0,0x0,8
tick,0x7ff954e0fd34,175041981,0,0x0,8
tick,0x7ff954e0fd34,175057567,0,0x0,8
tick,0x7ff954e0fd34,175073084,0,0x0,8
tick,0x7ff954e0fd34,175088991,0,0x0,8
tick,0x7ff954e0fd34,175103949,0,0x0,8
tick,0x7ff954e0fd34,175119948,0,0x0,8
tick,0x7ff954e0fd34,175134900,0,0x0,8
tick,0x7ff954e0fd34,175150908,0,0x0,8
tick,0x7ff954e0fd34,175166848,0,0x0,8
tick,0x7ff954e0fd34,175182663,0,0x0,8
tick,0x7ff954e0fd34,175197951,0,0x0,8
tick,0x7ff954e0fd34,175212956,0,0x0,8
tick,0x7ff954e0fd34,175227749,0,0x0,8
tick,0x7ff954e0fd34,175242797,0,0x0,8
tick,0x7ff954e0fd34,175257957,0,0x0,8
tick,0x7ff954e0fd34,175273754,0,0x0,8
tick,0x7ff954e0fd34,175288766,0,0x0,8
tick,0x7ff954e0fd34,175304713,0,0x0,8
tick,0x7ff954e0fd34,175320476,0,0x0,8
tick,0x7ff954e0fd34,175335481,0,0x0,8
tick,0x7ff954e0fd34,175351490,0,0x0,8
tick,0x7ff954e0fd34,175367301,0,0x0,8
tick,0x7ff954e0fd34,175382622,0,0x0,8
tick,0x7ff954e0fd34,175398172,0,0x0,8
tick,0x7ff954e0fd34,175413525,0,0x0,8
tick,0x7ff954e0fd34,175429135,0,0x0,8
tick,0x7ff954e0fd34,175444471,0,0x0,8
tick,0x7ff954e0fd34,175459691,0,0x0,8
tick,0x7ff954e0fd34,175475571,0,0x0,8
tick,0x7ff954e0fd34,175490627,0,0x0,8
tick,0x7ff954e0fd34,175506239,0,0x0,8
tick,0x7ff954e0fd34,175521233,0,0x0,8
tick,0x7ff954e0fd34,175537113,0,0x0,8
tick,0x7ff954e0fd34,175552570,0,0x0,8
tick,0x7ff954e0fd34,175568582,0,0x0,8
tick,0x7ff954e0fd34,175583480,0,0x0,8
tick,0x7ff954e0fd34,175599615,0,0x0,8
tick,0x7ff954e0fd34,175615119,0,0x0,8
tick,0x7ff954e0fd34,175630099,0,0x0,8
tick,0x7ff954e0fd34,175645959,0,0x0,8
tick,0x7ff954e0fd34,175660982,0,0x0,8
tick,0x7ff954e0fd34,175676000,0,0x0,8
tick,0x7ff954e0fd34,175690765,0,0x0,8
tick,0x7ff954e0fd34,175706605,0,0x0,8
tick,0x7ff954e0fd34,175722617,0,0x0,8
tick,0x7ff954e0fd34,175738779,0,0x0,8
tick,0x7ff954e0fd34,175753884,0,0x0,8
tick,0x7ff954e0fd34,175769983,0,0x0,8
tick,0x7ff954e0fd34,175785437,0,0x0,8
tick,0x7ff954e0fd34,175800791,0,0x0,8
tick,0x7ff954e0fd34,175815565,0,0x0,8
tick,0x7ff954e0fd34,175830898,0,0x0,8
tick,0x7ff954e0fd34,175845979,0,0x0,8
tick,0x7ff954e0fd34,175862105,0,0x0,8
tick,0x7ff954e0fd34,175877954,0,0x0,8
tick,0x7ff954e0fd34,175893852,0,0x0,8
tick,0x7ff954e0fd34,175909838,0,0x0,8
tick,0x7ff954e0fd34,175925068,0,0x0,8
tick,0x7ff954e0fd34,175940015,0,0x0,8
tick,0x7ff954e0fd34,175955059,0,0x0,8
tick,0x7ff954e0fd34,175969934,0,0x0,8
tick,0x7ff954e0fd34,175985050,0,0x0,8
tick,0x7ff954e0fd34,176000747,0,0x0,8
tick,0x7ff954e0fd34,176015750,0,0x0,8
tick,0x7ff954e0fd34,176031124,0,0x0,8
tick,0x7ff954e0fd34,176046010,0,0x0,8
tick,0x7ff954e0fd34,176062001,0,0x0,8
tick,0x7ff954e0fd34,176077061,0,0x0,8
tick,0x7ff954e0fd34,176092862,0,0x0,8
tick,0x7ff954e0fd34,176108821,0,0x0,8
tick,0x7ff954e0fd34,176124593,0,0x0,8
tick,0x7ff954e0fd34,176140605,0,0x0,8
tick,0x7ff954e0fd34,176156031,0,0x0,8
tick,0x7ff954e0fd34,176171024,0,0x0,8
tick,0x7ff954e0fd34,176186993,0,0x0,8
tick,0x7ff954e0fd34,176202363,0,0x0,8
tick,0x7ff954e0fd34,176218471,0,0x0,8
tick,0x7ff954e0fd34,176234418,0,0x0,8
tick,0x7ff954e0fd34,176250445,0,0x0,8
tick,0x7ff954e0fd34,176266310,0,0x0,8
tick,0x7ff954e0fd34,176281840,0,0x0,8
tick,0x7ff954e0fd34,176297228,0,0x0,8
tick,0x7ff954e0fd34,176313125,0,0x0,8
tick,0x7ff954e0fd34,176328563,0,0x0,8
tick,0x7ff954e0fd34,176343528,0,0x0,8
tick,0x7ff954e0fd34,176358859,0,0x0,8
tick,0x7ff954e0fd34,176373634,0,0x0,8
tick,0x7ff954e0fd34,176388624,0,0x0,8
tick,0x7ff954e0fd34,176404849,0,0x0,8
tick,0x7ff954e0fd34,176420727,0,0x0,8
tick,0x7ff954e0fd34,176436346,0,0x0,8
tick,0x7ff954e0fd34,176451926,0,0x0,8
tick,0x7ff954e0fd34,176467786,0,0x0,8
tick,0x7ff954e0fd34,176483128,0,0x0,8
tick,0x7ff954e0fd34,176498207,0,0x0,8
tick,0x7ff954e0fd34,176513528,0,0x0,8
tick,0x7ff954e0fd34,176528947,0,0x0,8
tick,0x7ff954e0fd34,176543781,0,0x0,8
tick,0x7ff954e0fd34,176560144,0,0x0,8
tick,0x7ff954e0fd34,176576425,0,0x0,8
tick,0x7ff954e0fd34,176591726,0,0x0,8
tick,0x7ff954e0fd34,176606481,0,0x0,8
tick,0x7ff954e0fd34,176622136,0,0x0,8
tick,0x7ff954e0fd34,176638025,0,0x0,8
tick,0x7ff954e0fd34,176653642,0,0x0,8
tick,0x7ff954e0fd34,176668962,0,0x0,8
tick,0x7ff954e0fd34,176684788,0,0x0,8
tick,0x7ff954e0fd34,176700253,0,0x0,8
tick,0x7ff954e0fd34,176715722,0,0x0,8
tick,0x7ff954e0fd34,176731058,0,0x0,8
tick,0x7ff954e0fd34,176745993,0,0x0,8
tick,0x7ff954e0fd34,176760980,0,0x0,8
tick,0x7ff954e0fd34,176776926,0,0x0,8
tick,0x7ff954e0fd34,176792187,0,0x0,8
tick,0x7ff954e0fd34,176807251,0,0x0,8
tick,0x7ff954e0fd34,176823271,0,0x0,8
tick,0x7ff954e0fd34,176838727,0,0x0,8
tick,0x7ff954e0fd34,176865582,0,0x0,8
tick,0x7ff954e0fd34,176886144,0,0x0,8
tick,0x7ff954e0fd34,176891881,0,0x0,8
tick,0x7ff954e0fd34,176903018,0,0x0,8
tick,0x7ff954e0fd34,176915801,0,0x0,8
tick,0x7ff954e0fd34,176931113,0,0x0,8
tick,0x7ff954e0fd34,176946236,0,0x0,8
tick,0x7ff954e0fd34,176961233,0,0x0,8
tick,0x7ff954e0fd34,176977130,0,0x0,8
tick,0x7ff954e0fd34,176993188,0,0x0,8
tick,0x7ff954e0fd34,177008328,0,0x0,8
tick,0x7ff954e0fd34,177023359,0,0x0,8
tick,0x7ff954e0fd34,177038266,0,0x0,8
tick,0x7ff954e0fd34,177053402,0,0x0,8
tick,0x7ff954e0fd34,177069208,0,0x0,8
tick,0x7ff954e0fd34,177084947,0,0x0,8
tick,0x7ff954e0fd34,177101144,0,0x0,8
tick,0x7ff954e0fd34,177116497,0,0x0,8
tick,0x7ff954e0fd34,177131706,0,0x0,8
tick,0x7ff954e0fd34,177146244,0,0x0,8
tick,0x7ff954e0fd34,177162282,0,0x0,8
tick,0x7ff954e0fd34,177177738,0,0x0,8
tick,0x7ff954e0fd34,177193418,0,0x0,8
tick,0x7ff954e0fd34,177208970,0,0x0,8
tick,0x7ff954e0fd34,177225083,0,0x0,8
tick,0x7ff954e0fd34,177240111,0,0x0,8
tick,0x7ff954e0fd34,177255205,0,0x0,8
tick,0x7ff954e0fd34,177271001,0,0x0,8
tick,0x7ff954e0fd34,177286540,0,0x0,8
tick,0x7ff954e0fd34,177301450,0,0x0,8
tick,0x7ff954e0fd34,177317048,0,0x0,8
tick,0x7ff954e0fd34,177332879,0,0x0,8
tick,0x7ff954e0fd34,177348661,0,0x0,8
tick,0x7ff954e0fd34,177364135,0,0x0,8
tick,0x7ff954e0fd34,177379817,0,0x0,8
tick,0x7ff954e0fd34,177395757,0,0x0,8
tick,0x7ff954e0fd34,177410616,0,0x0,8
tick,0x7ff954e0fd34,177425695,0,0x0,8
tick,0x7ff954e0fd34,177440959,0,0x0,8
tick,0x7ff954e0fd34,177456648,0,0x0,8
tick,0x7ff954e0fd34,177471666,0,0x0,8
tick,0x7ff954e0fd34,177487097,0,0x0,8
tick,0x7ff954e0fd34,177502496,0,0x0,8
tick,0x7ff954e0fd34,177517671,0,0x0,8
tick,0x7ff954e0fd34,177533465,0,0x0,8
tick,0x7ff954e0fd34,177549535,0,0x0,8
tick,0x7ff954e0fd34,177564908,0,0x0,8
tick,0x7ff954e0fd34,177580836,0,0x0,8
tick,0x7ff954e0fd34,177596527,0,0x0,8
tick,0x7ff954e0fd34,177612531,0,0x0,8
tick,0x7ff954e0fd34,177628410,0,0x0,8
tick,0x7ff954e0fd34,177643435,0,0x0,8
tick,0x7ff954e0fd34,177659316,0,0x0,8
tick,0x7ff954e0fd34,177674299,0,0x0,8
tick,0x7ff954e0fd34,177690185,0,0x0,8
tick,0x7ff954e0fd34,177705756,0,0x0,8
tick,0x7ff954e0fd34,177721869,0,0x0,8
tick,0x7ff954e0fd34,177738444,0,0x0,8
tick,0x7ff954e0fd34,177753162,0,0x0,8
tick,0x7ff954e0fd34,177769682,0,0x0,8
tick,0x7ff954e0fd34,177784120,0,0x0,8
tick,0x7ff954e0fd34,177799008,0,0x0,8
tick,0x7ff954e0fd34,177813915,0,0x0,8
tick,0x7ff954e0fd34,177828660,0,0x0,8
tick,0x7ff954e0fd34,177843598,0,0x0,8
tick,0x7ff954e0fd34,177859547,0,0x0,8
tick,0x7ff954e0fd34,177874832,0,0x0,8
tick,0x7ff954e0fd34,177890572,0,0x0,8
tick,0x7ff954e0fd34,177906077,0,0x0,8
tick,0x7ff954e0fd34,177921296,0,0x0,8
tick,0x7ff954e0fd34,177937315,0,0x0,8
tick,0x7ff954e0fd34,177952027,0,0x0,8
tick,0x7ff954e0fd34,177967921,0,0x0,8
tick,0x7ff954e0fd34,177983605,0,0x0,8
tick,0x7ff954e0fd34,177998920,0,0x0,8
tick,0x7ff954e0fd34,178014768,0,0x0,8
tick,0x7ff954e0fd34,178030127,0,0x0,8
tick,0x7ff954e0fd34,178044847,0,0x0,8
tick,0x7ff954e0fd34,178059879,0,0x0,8
tick,0x7ff954e0fd34,178075865,0,0x0,8
tick,0x7ff954e0fd34,178092004,0,0x0,8
tick,0x7ff954e0fd34,178107784,0,0x0,8
tick,0x7ff954e0fd34,178123722,0,0x0,8
tick,0x7ff954e0fd34,178139640,0,0x0,8
tick,0x7ff954e0fd34,178155255,0,0x0,8
tick,0x7ff954e0fd34,178171730,0,0x0,8
tick,0x7ff954e0fd34,178185636,0,0x0,8
tick,0x7ff954e0fd34,178200901,0,0x0,8
tick,0x7ff954e0fd34,178216427,0,0x0,8
tick,0x7ff954e0fd34,178231800,0,0x0,8
tick,0x7ff954e0fd34,178246838,0,0x0,8
tick,0x7ff954e0fd34,178262192,0,0x0,8
tick,0x7ff954e0fd34,178277563,0,0x0,8
tick,0x7ff954e0fd34,178292657,0,0x0,8
tick,0x7ff954e0fd34,178307869,0,0x0,8
tick,0x7ff954e0fd34,178323119,0,0x0,8
tick,0x7ff954e0fd34,178338644,0,0x0,8
tick,0x7ff954e0fd34,178353994,0,0x0,8
tick,0x7ff954e0fd34,178368724,0,0x0,8
tick,0x7ff954e0fd34,178383766,0,0x0,8
tick,0x7ff954e0fd34,178398579,0,0x0,8
tick,0x7ff954e0fd34,178414129,0,0x0,8
tick,0x7ff954e0fd34,178428969,0,0x0,8
tick,0x7ff954e0fd34,178444085,0,0x0,8
tick,0x7ff954e0fd34,178459939,0,0x0,8
tick,0x7ff954e0fd34,178475271,0,0x0,8
tick,0x7ff954e0fd34,178490943,0,0x0,8
tick,0x7ff954e0fd34,178506777,0,0x0,8
tick,0x7ff954e0fd34,178522473,0,0x0,8
tick,0x7ff954e0fd34,178537934,0,0x0,8
tick,0x7ff954e0fd34,178552725,0,0x0,8
tick,0x7ff954e0fd34,178568197,0,0x0,8
tick,0x7ff954e0fd34,178583548,0,0x0,8
tick,0x7ff954e0fd34,178599005,0,0x0,8
tick,0x7ff954e0fd34,178614835,0,0x0,8
tick,0x7ff954e0fd34,178630703,0,0x0,8
tick,0x7ff954e0fd34,178646186,0,0x0,8
tick,0x7ff954e0fd34,178661899,0,0x0,8
tick,0x7ff954e0fd34,178676763,0,0x0,8
tick,0x7ff954e0fd34,178692848,0,0x0,8
tick,0x7ff954e0fd34,178707890,0,0x0,8
tick,0x7ff954e0fd34,178722752,0,0x0,8
tick,0x7ff954e0fd34,178738695,0,0x0,8
tick,0x7ff954e0fd34,178754785,0,0x0,8
tick,0x7ff954e0fd34,178770775,0,0x0,8
tick,0x7ff954e0fd34,178786450,0,0x0,8
tick,0x7ff954e0fd34,178801150,0,0x0,8
tick,0x7ff954e0fd34,178817018,0,0x0,8
tick,0x7ff954e0fd34,178832436,0,0x0,8
tick,0x7ff954e0fd34,178847857,0,0x0,8
tick,0x7ff954e0fd34,178863039,0,0x0,8
tick,0x7ff954e0fd34,178878240,0,0x0,8
tick,0x7ff954e0fd34,178894186,0,0x0,8
tick,0x7ff954e0fd34,178910163,0,0x0,8
tick,0x7ff954e0fd34,178926011,0,0x0,8
tick,0x7ff954e0fd34,178942037,0,0x0,8
tick,0x7ff954e0fd34,178957092,0,0x0,8
tick,0x7ff954e0fd34,178971814,0,0x0,8
tick,0x7ff954e0fd34,178987798,0,0x0,8
tick,0x7ff954e0fd34,179003789,0,0x0,8
tick,0x7ff954e0fd34,179019577,0,0x0,8
tick,0x7ff954e0fd34,179035016,0,0x0,8
tick,0x7ff954e0fd34,179050182,0,0x0,8
tick,0x7ff954e0fd34,179066434,0,0x0,8
tick,0x7ff954e0fd34,179082469,0,0x0,8
tick,0x7ff954e0fd34,179098151,0,0x0,8
tick,0x7ff954e0fd34,179114305,0,0x0,8
tick,0x7ff954e0fd34,179130219,0,0x0,8
tick,0x7ff954e0fd34,179145572,0,0x0,8
tick,0x7ff954e0fd34,179160982,0,0x0,8
tick,0x7ff954e0fd34,179177119,0,0x0,8
tick,0x7ff954e0fd34,179193226,0,0x0,8
tick,0x7ff954e0fd34,179209032,0,0x0,8
tick,0x7ff954e0fd34,179223899,0,0x0,8
tick,0x7ff954e0fd34,179239079,0,0x0,8
tick,0x7ff954e0fd34,179254797,0,0x0,8
tick,0x7ff954e0fd34,179269977,0,0x0,8
tick,0x7ff954e0fd34,179285770,0,0x0,8
tick,0x7ff954e0fd34,179300941,0,0x0,8
tick,0x7ff954e0fd34,179316559,0,0x0,8
tick,0x7ff954e0fd34,179331901,0,0x0,8
tick,0x7ff954e0fd34,179347998,0,0x0,8
tick,0x7ff954e0fd34,179363029,0,0x0,8
tick,0x7ff954e0fd34,179378968,0,0x0,8
tick,0x7ff954e0fd34,179393740,0,0x0,8
tick,0x7ff954e0fd34,179409257,0,0x0,8
tick,0x7ff954e0fd34,179424634,0,0x0,8
tick,0x7ff954e0fd34,179440155,0,0x0,8
tick,0x7ff954e0fd34,179455003,0,0x0,8
tick,0x7ff954e0fd34,179471202,0,0x0,8
tick,0x7ff954e0fd34,179486224,0,0x0,8
tick,0x7ff954e0fd34,179501509,0,0x0,8
tick,0x7ff954e0fd34,179517159,0,0x0,8
tick,0x7ff954e0fd34,179531992,0,0x0,8
tick,0x7ff954e0fd34,179547884,0,0x0,8
tick,0x7ff954e0fd34,179563742,0,0x0,8
tick,0x7ff954e0fd34,179578938,0,0x0,8
tick,0x7ff954e0fd34,179593871,0,0x0,8
tick,0x7ff954e0fd34,179609951,0,0x0,8
tick,0x7ff954e0fd34,179624776,0,0x0,8
tick,0x7ff954e0fd34,179639973,0,0x0,8
tick,0x7ff954e0fd34,179654671,0,0x0,8
tick,0x7ff954e0fd34,179670745,0,0x0,8
tick,0x7ff954e0fd34,179686664,0,0x0,8
tick,0x7ff954e0fd34,179702563,0,0x0,8
tick,0x7ff954e0fd34,179717900,0,0x0,8
tick,0x7ff954e0fd34,179733313,0,0x0,8
tick,0x7ff954e0fd34,179747954,0,0x0,8
tick,0x7ff954e0fd34,179762936,0,0x0,8
tick,0x7ff954e0fd34,179778264,0,0x0,8
tick,0x7ff954e0fd34,179793648,0,0x0,8
tick,0x7ff954e0fd34,179808732,0,0x0,8
tick,0x7ff954e0fd34,179824205,0,0x0,8
tick,0x7ff954e0fd34,179840123,0,0x0,8
tick,0x7ff954e0fd34,179855509,0,0x0,8
tick,0x7ff954e0fd34,179871664,0,0x0,8
tick,0x7ff954e0fd34,179887140,0,0x0,8
tick,0x7ff954e0fd34,179902761,0,0x0,8
tick,0x7ff954e0fd34,179918452,0,0x0,8
tick,0x7ff954e0fd34,179934477,0,0x0,8
tick,0x7ff954e0fd34,179949775,0,0x0,8
tick,0x7ff954e0fd34,179965242,0,0x0,8
tick,0x7ff954e0fd34,179980518,0,0x0,8
tick,0x7ff954e0fd34,179996179,0,0x0,8
tick,0x7ff954e0fd34,180011174,0,0x0,8
tick,0x7ff954e0fd34,180026312,0,0x0,8
tick,0x7ff954e0fd34,180042481,0,0x0,8
tick,0x7ff954e0fd34,180057939,0,0x0,8
tick,0x7ff954e0fd34,180073498,0,0x0,8
tick,0x7ff954e0fd34,180088456,0,0x0,8
tick,0x7ff954e0fd34,180104495,0,0x0,8
tick,0x7ff954e0fd34,180119352,0,0x0,8
tick,0x7ff954e0fd34,180134354,0,0x0,8
tick,0x7ff954e0fd34,180150099,0,0x0,8
tick,0x7ff954e0fd34,180165579,0,0x0,8
tick,0x7ff954e0fd34,180180936,0,0x0,8
tick,0x7ff954e0fd34,180196536,0,0x0,8
tick,0x7ff954e0fd34,180211990,0,0x0,8
tick,0x7ff954e0fd34,180228032,0,0x0,8
tick,0x7ff954e0fd34,180243676,0,0x0,8
tick,0x7ff954e0fd34,180259879,0,0x0,8
tick,0x7ff954e0fd34,180274421,0,0x0,8
tick,0x7ff954e0fd34,180290018,0,0x0,8
tick,0x7ff954e0fd34,180305844,0,0x0,8
tick,0x7ff954e0fd34,180321043,0,0x0,8
tick,0x7ff954e0fd34,180336726,0,0x0,8
tick,0x7ff954e0fd34,180351732,0,0x0,8
tick,0x7ff954e0fd34,180367670,0,0x0,8
tick,0x7ff954e0fd34,180383455,0,0x0,8
tick,0x7ff954e0fd34,180399305,0,0x0,8
tick,0x7ff954e0fd34,180414707,0,0x0,8
tick,0x7ff954e0fd34,180430642,0,0x0,8
tick,0x7ff954e0fd34,180446670,0,0x0,8
tick,0x7ff954e0fd34,180462606,0,0x0,8
tick,0x7ff954e0fd34,180477914,0,0x0,8
tick,0x7ff954e0fd34,180492873,0,0x0,8
tick,0x7ff954e0fd34,180508051,0,0x0,8
tick,0x7ff954e0fd34,180523653,0,0x0,8
tick,0x7ff954e0fd34,180538748,0,0x0,8
tick,0x7ff954e0fd34,180554878,0,0x0,8
tick,0x7ff954e0fd34,180570302,0,0x0,8
tick,0x7ff954e0fd34,180585760,0,0x0,8
tick,0x7ff954e0fd34,180601062,0,0x0,8
tick,0x7ff954e0fd34,180616086,0,0x0,8
tick,0x7ff954e0fd34,180632565,0,0x0,8
tick,0x7ff954e0fd34,180648101,0,0x0,8
tick,0x7ff954e0fd34,180664057,0,0x0,8
tick,0x7ff954e0fd34,180679068,0,0x0,8
tick,0x7ff954e0fd34,180694518,0,0x0,8
tick,0x7ff954e0fd34,180710348,0,0x0,8
tick,0x7ff954e0fd34,180725125,0,0x0,8
tick,0x7ff954e0fd34,180741054,0,0x0,8
tick,0x7ff954e0fd34,180755999,0,0x0,8
tick,0x7ff954e0fd34,180770926,0,0x0,8
tick,0x7ff954e0fd34,180785886,0,0x0,8
tick,0x7ff954e0fd34,180800919,0,0x0,8
tick,0x7ff954e0fd34,180816035,0,0x0,8
tick,0x7ff954e0fd34,180830969,0,0x0,8
tick,0x7ff954e0fd34,180846868,0,0x0,8
tick,0x7ff954e0fd34,180862907,0,0x0,8
tick,0x7ff954e0fd34,180878373,0,0x0,8
tick,0x7ff954e0fd34,180894096,0,0x0,8
tick,0x7ff954e0fd34,180908999,0,0x0,8
tick,0x7ff954e0fd34,180924571,0,0x0,8
tick,0x7ff954e0fd34,180940461,0,0x0,8
tick,0x7ff954e0fd34,180955887,0,0x0,8
tick,0x7ff954e0fd34,180971996,0,0x0,8
tick,0x7ff954e0fd34,180987821,0,0x0,8
tick,0x7ff954e0fd34,181003684,0,0x0,8
tick,0x7ff954e0fd34,181019432,0,0x0,8
tick,0x7ff954e0fd34,181034352,0,0x0,8
tick,0x7ff954e0fd34,181049977,0,0x0,8
tick,0x7ff954e0fd34,181065139,0,0x0,8
tick,0x7ff954e0fd34,181080477,0,0x0,8
tick,0x7ff954e0fd34,181096017,0,0x0,8
tick,0x7ff954e0fd34,181110913,0,0x0,8
tick,0x7ff954e0fd34,181126050,0,0x0,8
tick,0x7ff954e0fd34,181142058,0,0x0,8
tick,0x7ff954e0fd34,181158019,0,0x0,8
tick,0x7ff954e0fd34,181173113,0,0x0,8
tick,0x7ff954e0fd34,181188046,0,0x0,8
tick,0x7ff954e0fd34,181204191,0,0x0,8
tick,0x7ff954e0fd34,181219449,0,0x0,8
tick,0x7ff954e0fd34,181234160,0,0x0,8
tick,0x7ff954e0fd34,181249011,0,0x0,8
tick,0x7ff954e0fd34,181265090,0,0x0,8
tick,0x7ff954e0fd34,181281074,0,0x0,8
tick,0x7ff954e0fd34,181297023,0,0x0,8
tick,0x7ff954e0fd34,181313028,0,0x0,8
tick,0x7ff954e0fd34,181328955,0,0x0,8
tick,0x7ff954e0fd34,181344956,0,0x0,8
tick,0x7ff954e0fd34,181360872,0,0x0,8
tick,0x7ff954e0fd34,181376812,0,0x0,8
tick,0x7ff954e0fd34,181392078,0,0x0,8
tick,0x7ff954e0fd34,181407025,0,0x0,8
tick,0x7ff954e0fd34,181422067,0,0x0,8
tick,0x7ff954e0fd34,181437927,0,0x0,8
tick,0x7ff954e0fd34,181453287,0,0x0,8
tick,0x7ff954e0fd34,181469365,0,0x0,8
tick,0x7ff954e0fd34,181484485,0,0x0,8
tick,0x7ff954e0fd34,181500215,0,0x0,8
tick,0x7ff954e0fd34,181515595,0,0x0,8
tick,0x7ff954e0fd34,181530627,0,0x0,8
tick,0x7ff954e0fd34,181546288,0,0x0,8
tick,0x7ff954e0fd34,181561476,0,0x0,8
tick,0x7ff954e0fd34,181576964,0,0x0,8
tick,0x7ff954e0fd34,181592263,0,0x0,8
tick,0x7ff954e0fd34,181607442,0,0x0,8
tick,0x7ff954e0fd34,181622203,0,0x0,8
tick,0x7ff954e0fd34,181637201,0,0x0,8
tick,0x7ff954e0fd34,181653067,0,0x0,8
tick,0x7ff954e0fd34,181667980,0,0x0,8
tick,0x7ff954e0fd34,181682902,0,0x0,8
tick,0x7ff954e0fd34,181697873,0,0x0,8
tick,0x7ff954e0fd34,181712954,0,0x0,8
tick,0x7ff954e0fd34,181728972,0,0x0,8
tick,0x7ff954e0fd34,181743784,0,0x0,8
tick,0x7ff954e0fd34,181758844,0,0x0,8
tick,0x7ff954e0fd34,181773890,0,0x0,8
tick,0x7ff954e0fd34,181788656,0,0x0,8
tick,0x7ff954e0fd34,181803608,0,0x0,8
tick,0x7ff954e0fd34,181818811,0,0x0,8
tick,0x7ff954e0fd34,181834143,0,0x0,8
tick,0x7ff954e0fd34,181850241,0,0x0,8
tick,0x7ff954e0fd34,181865297,0,0x0,8
tick,0x7ff954e0fd34,181880931,0,0x0,8
tick,0x7ff954e0fd34,181896220,0,0x0,8
tick,0x7ff954e0fd34,181912114,0,0x0,8
tick,0x7ff954e0fd34,181927215,0,0x0,8
tick,0x7ff954e0fd34,181942044,0,0x0,8
tick,0x7ff954e0fd34,181957037,0,0x0,8
tick,0x7ff954e0fd34,181973153,0,0x0,8
tick,0x7ff954e0fd34,181988022,0,0x0,8
tick,0x7ff954e0fd34,182003908,0,0x0,8
tick,0x7ff954e0fd34,182018862,0,0x0,8
tick,0x7ff954e0fd34,182033815,0,0x0,8
tick,0x7ff954e0fd34,182049879,0,0x0,8
tick,0x7ff954e0fd34,182065789,0,0x0,8
tick,0x7ff954e0fd34,182081437,0,0x0,8
tick,0x7ff954e0fd34,182097144,0,0x0,8
tick,0x7ff954e0fd34,182113292,0,0x0,8
tick,0x7ff954e0fd34,182127855,0,0x0,8
tick,0x7ff954e0fd34,182142825,0,0x0,8
tick,0x7ff954e0fd34,182158733,0,0x0,8
tick,0x7ff954e0fd34,182174089,0,0x0,8
tick,0x7ff954e0fd34,182190226,0,0x0,8
tick,0x7ff954e0fd34,182206297,0,0x0,8
tick,0x7ff954e0fd34,182221557,0,0x0,8
tick,0x7ff954e0fd34,182237403,0,0x0,8
tick,0x7ff954e0fd34,182252371,0,0x0,8
tick,0x7ff954e0fd34,182268277,0,0x0,8
tick,0x7ff954e0fd34,182283236,0,0x0,8
tick,0x7ff954e0fd34,182298756,0,0x0,8
tick,0x7ff954e0fd34,182314822,0,0x0,8
tick,0x7ff954e0fd34,182330212,0,0x0,8
tick,0x7ff954e0fd34,182345466,0,0x0,8
tick,0x7ff954e0fd34,182360191,0,0x0,8
tick,0x7ff954e0fd34,182376117,0,0x0,8
tick,0x7ff954e0fd34,182391990,0,0x0,8
tick,0x7ff954e0fd34,182408425,0,0x0,8
tick,0x7ff954e0fd34,182424277,0,0x0,8
tick,0x7ff954e0fd34,182439177,0,0x0,8
tick,0x7ff954e0fd34,182454926,0,0x0,8
tick,0x7ff954e0fd34,182469960,0,0x0,8
tick,0x7ff954e0fd34,182485034,0,0x0,8
tick,0x7ff954e0fd34,182500717,0,0x0,8
tick,0x7ff954e0fd34,182516029,0,0x0,8
tick,0x7ff954e0fd34,182531734,0,0x0,8
tick,0x7ff954e0fd34,182547186,0,0x0,8
tick,0x7ff954e0fd34,182562655,0,0x0,8
tick,0x7ff954e0fd34,182577850,0,0x0,8
tick,0x7ff954e0fd34,182593117,0,0x0,8
tick,0x7ff954e0fd34,182608951,0,0x0,8
tick,0x7ff954e0fd34,182624577,0,0x0,8
tick,0x7ff954e0fd34,182640070,0,0x0,8
tick,0x7ff954e0fd34,182655386,0,0x0,8
tick,0x7ff954e0fd34,182671144,0,0x0,8
tick,0x7ff954e0fd34,182687010,0,0x0,8
tick,0x7ff954e0fd34,182703086,0,0x0,8
tick,0x7ff954e0fd34,182718986,0,0x0,8
tick,0x7ff954e0fd34,182734786,0,0x0,8
tick,0x7ff954e0fd34,182749908,0,0x0,8
tick,0x7ff954e0fd34,182765371,0,0x0,8
tick,0x7ff954e0fd34,182780621,0,0x0,8
tick,0x7ff954e0fd34,182796731,0,0x0,8
tick,0x7ff954e0fd34,182811477,0,0x0,8
tick,0x7ff954e0fd34,182826961,0,0x0,8
tick,0x7ff954e0fd34,182843135,0,0x0,8
tick,0x7ff954e0fd34,182858609,0,0x0,8
tick,0x7ff954e0fd34,182873909,0,0x0,8
tick,0x7ff954e0fd34,182888574,0,0x0,8
tick,0x7ff954e0fd34,182903797,0,0x0,8
tick,0x7ff954e0fd34,182918753,0,0x0,8
tick,0x7ff954e0fd34,182933697,0,0x0,8
tick,0x7ff954e0fd34,182948555,0,0x0,8
tick,0x7ff954e0fd34,182963631,0,0x0,8
tick,0x7ff954e0fd34,182979196,0,0x0,8
tick,0x7ff954e0fd34,182995025,0,0x0,8
tick,0x7ff954e0fd34,183010008,0,0x0,8
tick,0x7ff954e0fd34,183025910,0,0x0,8
tick,0x7ff954e0fd34,183042229,0,0x0,8
tick,0x7ff954e0fd34,183058118,0,0x0,8
tick,0x7ff954e0fd34,183073674,0,0x0,8
tick,0x7ff954e0fd34,183088761,0,0x0,8
tick,0x7ff954e0fd34,183103645,0,0x0,8
tick,0x7ff954e0fd34,183119633,0,0x0,8
tick,0x7ff954e0fd34,183134256,0,0x0,8
tick,0x7ff954e0fd34,183149017,0,0x0,8
tick,0x7ff954e0fd34,183165109,0,0x0,8
tick,0x7ff954e0fd34,183181592,0,0x0,8
tick,0x7ff954e0fd34,183196328,0,0x0,8
tick,0x7ff954e0fd34,183211780,0,0x0,8
tick,0x7ff954e0fd34,183226822,0,0x0,8
tick,0x7ff954e0fd34,183243337,0,0x0,8
tick,0x7ff954e0fd34,183258874,0,0x0,8
tick,0x7ff954e0fd34,183274149,0,0x0,8
tick,0x7ff954e0fd34,183289881,0,0x0,8
tick,0x7ff954e0fd34,183304869,0,0x0,8
tick,0x7ff954e0fd34,183320679,0,0x0,8
tick,0x7ff954e0fd34,183336246,0,0x0,8
tick,0x7ff954e0fd34,183352277,0,0x0,8
tick,0x7ff954e0fd34,183368221,0,0x0,8
tick,0x7ff954e0fd34,183384163,0,0x0,8
tick,0x7ff954e0fd34,183400172,0,0x0,8
tick,0x7ff954e0fd34,183415120,0,0x0,8
tick,0x7ff954e0fd34,183431111,0,0x0,8
tick,0x7ff954e0fd34,183446990,0,0x0,8
tick,0x7ff954e0fd34,183461982,0,0x0,8
tick,0x7ff954e0fd34,183477957,0,0x0,8
tick,0x7ff954e0fd34,183493958,0,0x0,8
tick,0x7ff954e0fd34,183508556,0,0x0,8
tick,0x7ff954e0fd34,183523723,0,0x0,8
tick,0x7ff954e0fd34,183539473,0,0x0,8
tick,0x7ff954e0fd34,183554987,0,0x0,8
tick,0x7ff954e0fd34,183571052,0,0x0,8
tick,0x7ff954e0fd34,183586798,0,0x0,8
tick,0x7ff954e0fd34,183602582,0,0x0,8
tick,0x7ff954e0fd34,183618460,0,0x0,8
tick,0x7ff954e0fd34,183633675,0,0x0,8
tick,0x7ff954e0fd34,183649216,0,0x0,8
tick,0x7ff954e0fd34,183664629,0,0x0,8
tick,0x7ff954e0fd34,183679560,0,0x0,8
tick,0x7ff954e0fd34,183694513,0,0x0,8
tick,0x7ff954e0fd34,183709449,0,0x0,8
tick,0x7ff954e0fd34,183724667,0,0x0,8
tick,0x7ff954e0fd34,183740108,0,0x0,8
tick,0x7ff954e0fd34,183755088,0,0x0,8
tick,0x7ff954e0fd34,183771047,0,0x0,8
tick,0x7ff954e0fd34,183785992,0,0x0,8
tick,0x7ff954e0fd34,183800974,0,0x0,8
tick,0x7ff954e0fd34,183816376,0,0x0,8
tick,0x7ff954e0fd34,183831117,0,0x0,8
tick,0x7ff954e0fd34,183846440,0,0x0,8
tick,0x7ff954e0fd34,183862016,0,0x0,8
tick,0x7ff954e0fd34,183876761,0,0x0,8
tick,0x7ff954e0fd34,183891975,0,0x0,8
tick,0x7ff954e0fd34,183906833,0,0x0,8
tick,0x7ff954e0fd34,183921833,0,0x0,8
tick,0x7ff954e0fd34,183937836,0,0x0,8
tick,0x7ff954e0fd34,183953803,0,0x0,8
tick,0x7ff954e0fd34,183969621,0,0x0,8
tick,0x7ff954e0fd34,183985316,0,0x0,8
tick,0x7ff954e0fd34,184000267,0,0x0,8
tick,0x7ff954e0fd34,184015925,0,0x0,8
tick,0x7ff954e0fd34,184031744,0,0x0,8
tick,0x7ff954e0fd34,184048783,0,0x0,8
tick,0x7ff954e0fd34,184063171,0,0x0,8
tick,0x7ff954e0fd34,184079235,0,0x0,8
tick,0x7ff954e0fd34,184095217,0,0x0,8
tick,0x7ff954e0fd34,184111534,0,0x0,8
tick,0x7ff954e0fd34,184125976,0,0x0,8
tick,0x7ff954e0fd34,184142283,0,0x0,8
tick,0x7ff954e0fd34,184158050,0,0x0,8
tick,0x7ff954e0fd34,184172250,0,0x0,8
tick,0x7ff954e0fd34,184187234,0,0x0,8
tick,0x7ff954e0fd34,184202413,0,0x0,8
tick,0x7ff954e0fd34,184217125,0,0x0,8
tick,0x7ff954e0fd34,184233274,0,0x0,8
tick,0x7ff954e0fd34,184248147,0,0x0,8
tick,0x7ff954e0fd34,184264127,0,0x0,8
tick,0x7ff954e0fd34,184280077,0,0x0,8
tick,0x7ff954e0fd34,184294703,0,0x0,8
tick,0x7ff954e0fd34,184310660,0,0x0,8
tick,0x7ff954e0fd34,184325764,0,0x0,8
tick,0x7ff954e0fd34,184341802,0,0x0,8
tick,0x7ff954e0fd34,184356471,0,0x0,8
tick,0x7ff954e0fd34,184372239,0,0x0,8
tick,0x7ff954e0fd34,184386892,0,0x0,8
tick,0x7ff954e0fd34,184401920,0,0x0,8
tick,0x7ff954e0fd34,184416533,0,0x0,8
tick,0x7ff954e0fd34,184432190,0,0x0,8
tick,0x7ff954e0fd34,184448146,0,0x0,8
tick,0x7ff954e0fd34,184463797,0,0x0,8
tick,0x7ff954e0fd34,184480596,0,0x0,8
tick,0x7ff954e0fd34,184494737,0,0x0,8
tick,0x7ff954e0fd34,184510253,0,0x0,8
tick,0x7ff954e0fd34,184525323,0,0x0,8
tick,0x7ff954e0fd34,184541090,0,0x0,8
tick,0x7ff954e0fd34,184555754,0,0x0,8
tick,0x7ff954e0fd34,184571726,0,0x0,8
tick,0x7ff954e0fd34,184587485,0,0x0,8
tick,0x7ff954e0fd34,184603152,0,0x0,8
tick,0x7ff954e0fd34,184619079,0,0x0,8
tick,0x7ff954e0fd34,184635025,0,0x0,8
tick,0x7ff954e0fd34,184652252,0,0x0,8
tick,0x7ff954e0fd34,184666509,0,0x0,8
tick,0x7ff954e0fd34,184682530,0,0x0,8
tick,0x7ff954e0fd34,184698641,0,0x0,8
tick,0x7ff954e0fd34,184713132,0,0x0,8
tick,0x7ff954e0fd34,184729349,0,0x0,8
tick,0x7ff954e0fd34,184743882,0,0x0,8
tick,0x7ff954e0fd34,184759963,0,0x0,8
tick,0x7ff954e0fd34,184775088,0,0x0,8
tick,0x7ff954e0fd34,184790101,0,0x0,8
tick,0x7ff954e0fd34,184805226,0,0x0,8
tick,0x7ff954e0fd34,184821186,0,0x0,8
tick,0x7ff954e0fd34,184835956,0,0x0,8
tick,0x7ff954e0fd34,184851781,0,0x0,8
tick,0x7ff954e0fd34,184867243,0,0x0,8
tick,0x7ff954e0fd34,184883228,0,0x0,8
tick,0x7ff954e0fd34,184898473,0,0x0,8
tick,0x7ff954e0fd34,184913230,0,0x0,8
tick,0x7ff954e0fd34,184929276,0,0x0,8
tick,0x7ff954e0fd34,184944054,0,0x0,8
tick,0x7ff954e0fd34,184960581,0,0x0,8
tick,0x7ff954e0fd34,184975980,0,0x0,8
tick,0x7ff954e0fd34,184992000,0,0x0,8
tick,0x7ff954e0fd34,185006867,0,0x0,8
tick,0x7ff954e0fd34,185021995,0,0x0,8
tick,0x7ff954e0fd34,185037360,0,0x0,8
tick,0x7ff954e0fd34,185052884,0,0x0,8
tick,0x7ff954e0fd34,185067788,0,0x0,8
tick,0x7ff954e0fd34,185083888,0,0x0,8
tick,0x7ff954e0fd34,185099262,0,0x0,8
tick,0x7ff954e0fd34,185115150,0,0x0,8
tick,0x7ff954e0fd34,185131139,0,0x0,8
tick,0x7ff954e0fd34,185145861,0,0x0,8
tick,0x7ff954e0fd34,185161686,0,0x0,8
tick,0x7ff954e0fd34,185176898,0,0x0,8
tick,0x7ff954e0fd34,185193011,0,0x0,8
tick,0x7ff954e0fd34,185208925,0,0x0,8
tick,0x7ff954e0fd34,185224886,0,0x0,8
tick,0x7ff954e0fd34,185240590,0,0x0,8
tick,0x7ff954e0fd34,185256385,0,0x0,8
tick,0x7ff954e0fd34,185272543,0,0x0,8
tick,0x7ff954e0fd34,185287934,0,0x0,8
tick,0x7ff954e0fd34,185303591,0,0x0,8
tick,0x7ff954e0fd34,185318938,0,0x0,8
tick,0x7ff954e0fd34,185334112,0,0x0,8
tick,0x7ff954e0fd34,185350042,0,0x0,8
tick,0x7ff954e0fd34,185365486,0,0x0,8
tick,0x7ff954e0fd34,185381421,0,0x0,8
tick,0x7ff954e0fd34,185396464,0,0x0,8
tick,0x7ff954e0fd34,185411347,0,0x0,8
tick,0x7ff954e0fd34,185426329,0,0x0,8
tick,0x7ff954e0fd34,185441247,0,0x0,8
tick,0x7ff954e0fd34,185456836,0,0x0,8
tick,0x7ff954e0fd34,185472721,0,0x0,8
tick,0x7ff954e0fd34,185488670,0,0x0,8
tick,0x7ff954e0fd34,185504189,0,0x0,8
tick,0x7ff954e0fd34,185519744,0,0x0,8
tick,0x7ff954e0fd34,185535335,0,0x0,8
tick,0x7ff954e0fd34,185551184,0,0x0,8
tick,0x7ff954e0fd34,185567484,0,0x0,8
tick,0x7ff954e0fd34,185583332,0,0x0,8
tick,0x7ff954e0fd34,185599462,0,0x0,8
tick,0x7ff954e0fd34,185615511,0,0x0,8
tick,0x7ff954e0fd34,185631517,0,0x0,8
tick,0x7ff954e0fd34,185647028,0,0x0,8
tick,0x7ff954e0fd34,185662545,0,0x0,8
tick,0x7ff954e0fd34,185677403,0,0x0,8
tick,0x7ff954e0fd34,185693279,0,0x0,8
tick,0x7ff954e0fd34,185709106,0,0x0,8
tick,0x7ff954e0fd34,185725103,0,0x0,8
tick,0x7ff954e0fd34,185740968,0,0x0,8
tick,0x7ff954e0fd34,185756956,0,0x0,8
tick,0x7ff954e0fd34,185772919,0,0x0,8
tick,0x7ff954e0fd34,185788459,0,0x0,8
tick,0x7ff954e0fd34,185803394,0,0x0,8
tick,0x7ff954e0fd34,185819330,0,0x0,8
tick,0x7ff954e0fd34,185834091,0,0x0,8
tick,0x7ff954e0fd34,185850077,0,0x0,8
tick,0x7ff954e0fd34,185865074,0,0x0,8
tick,0x7ff954e0fd34,185881147,0,0x0,8
tick,0x7ff954e0fd34,185896028,0,0x0,8
tick,0x7ff954e0fd34,185911054,0,0x0,8
tick,0x7ff954e0fd34,185927085,0,0x0,8
tick,0x7ff954e0fd34,185943101,0,0x0,8
tick,0x7ff954e0fd34,185958947,0,0x0,8
tick,0x7ff954e0fd34,185974840,0,0x0,8
tick,0x7ff954e0fd34,185990850,0,0x0,8
tick,0x7ff954e0fd34,186005967,0,0x0,8
tick,0x7ff954e0fd34,186020772,0,0x0,8
tick,0x7ff954e0fd34,186036191,0,0x0,8
tick,0x7ff954e0fd34,186050790,0,0x0,8
tick,0x7ff954e0fd34,186066623,0,0x0,8
tick,0x7ff954e0fd34,186082262,0,0x0,8
tick,0x7ff954e0fd34,186097883,0,0x0,8
tick,0x7ff954e0fd34,186112863,0,0x0,8
tick,0x7ff954e0fd34,186127979,0,0x0,8
tick,0x7ff954e0fd34,186143066,0,0x0,8
tick,0x7ff954e0fd34,186157921,0,0x0,8
tick,0x7ff954e0fd34,186173331,0,0x0,8
tick,0x7ff954e0fd34,186188774,0,0x0,8
tick,0x7ff954e0fd34,186203665,0,0x0,8
tick,0x7ff954e0fd34,186219860,0,0x0,8
tick,0x7ff954e0fd34,186235664,0,0x0,8
tick,0x7ff954e0fd34,186251511,0,0x0,8
tick,0x7ff954e0fd34,186266715,0,0x0,8
tick,0x7ff954e0fd34,186282012,0,0x0,8
tick,0x7ff954e0fd34,186297179,0,0x0,8
tick,0x7ff954e0fd34,186313149,0,0x0,8
tick,0x7ff954e0fd34,186329140,0,0x0,8
tick,0x7ff954e0fd34,186344719,0,0x0,8
tick,0x7ff954e0fd34,186360344,0,0x0,8
tick,0x7ff954e0fd34,186374968,0,0x0,8
tick,0x7ff954e0fd34,186389695,0,0x0,8
tick,0x7ff954e0fd34,186405125,0,0x0,8
tick,0x7ff954e0fd34,186420737,0,0x0,8
tick,0x7ff954e0fd34,186436428,0,0x0,8
tick,0x7ff954e0fd34,186451802,0,0x0,8
tick,0x7ff954e0fd34,186466736,0,0x0,8
tick,0x7ff954e0fd34,186482740,0,0x0,8
tick,0x7ff954e0fd34,186498372,0,0x0,8
tick,0x7ff954e0fd34,186514807,0,0x0,8
tick,0x7ff954e0fd34,186530163,0,0x0,8
tick,0x7ff954e0fd34,186545798,0,0x0,8
tick,0x7ff954e0fd34,186560837,0,0x0,8
tick,0x7ff954e0fd34,186575763,0,0x0,8
tick,0x7ff954e0fd34,186591176,0,0x0,8
tick,0x7ff954e0fd34,186607296,0,0x0,8
tick,0x7ff954e0fd34,186623244,0,0x0,8
tick,0x7ff954e0fd34,186639125,0,0x0,8
tick,0x7ff954e0fd34,186655558,0,0x0,8
tick,0x7ff954e0fd34,186670257,0,0x0,8
tick,0x7ff954e0fd34,186685047,0,0x0,8
tick,0x7ff954e0fd34,186700001,0,0x0,8
tick,0x7ff954e0fd34,186714912,0,0x0,8
tick,0x7ff954e0fd34,186729969,0,0x0,8
tick,0x7ff954e0fd34,186745314,0,0x0,8
tick,0x7ff954e0fd34,186760247,0,0x0,8
tick,0x7ff954e0fd34,186776585,0,0x0,8
tick,0x7ff954e0fd34,186791189,0,0x0,8
tick,0x7ff954e0fd34,186807607,0,0x0,8
tick,0x7ff954e0fd34,186822102,0,0x0,8
tick,0x7ff954e0fd34,186836967,0,0x0,8
tick,0x7ff954e0fd34,186852103,0,0x0,8
tick,0x7ff954e0fd34,186868331,0,0x0,8
tick,0x7ff954e0fd34,186883182,0,0x0,8
tick,0x7ff954e0fd34,186898442,0,0x0,8
tick,0x7ff954e0fd34,186914037,0,0x0,8
tick,0x7ff954e0fd34,186929095,0,0x0,8
tick,0x7ff954e0fd34,186944163,0,0x0,8
tick,0x7ff954e0fd34,186960092,0,0x0,8
tick,0x7ff954e0fd34,186975448,0,0x0,8
tick,0x7ff954e0fd34,186991050,0,0x0,8
tick,0x7ff954e0fd34,187006370,0,0x0,8
tick,0x7ff954e0fd34,187022521,0,0x0,8
tick,0x7ff954e0fd34,187038122,0,0x0,8
tick,0x7ff954e0fd34,187053762,0,0x0,8
tick,0x7ff954e0fd34,187070180,0,0x0,8
tick,0x7ff954e0fd34,187085650,0,0x0,8
tick,0x7ff954e0fd34,187101584,0,0x0,8
tick,0x7ff954e0fd34,187117510,0,0x0,8
tick,0x7ff954e0fd34,187133140,0,0x0,8
tick,0x7ff954e0fd34,187149015,0,0x0,8
tick,0x7ff954e0fd34,187165052,0,0x0,8
tick,0x7ff954e0fd34,187179930,0,0x0,8
tick,0x7ff954e0fd34,187196021,0,0x0,8
tick,0x7ff954e0fd34,187210867,0,0x0,8
tick,0x7ff954e0fd34,187225799,0,0x0,8
tick,0x7ff954e0fd34,187240779,0,0x0,8
tick,0x7ff954e0fd34,187256074,0,0x0,8
tick,0x7ff954e0fd34,187270961,0,0x0,8
tick,0x7ff954e0fd34,187287115,0,0x0,8
tick,0x7ff954e0fd34,187301895,0,0x0,8
tick,0x7ff954e0fd34,187316957,0,0x0,8
tick,0x7ff954e0fd34,187331650,0,0x0,8
tick,0x7ff954e0fd34,187346895,0,0x0,8
tick,0x7ff954e0fd34,187362749,0,0x0,8
tick,0x7ff954e0fd34,187379003,0,0x0,8
tick,0x7ff954e0fd34,187394689,0,0x0,8
tick,0x7ff954e0fd34,187409840,0,0x0,8
tick,0x7ff954e0fd34,187424558,0,0x0,8
tick,0x7ff954e0fd34,187439985,0,0x0,8
tick,0x7ff954e0fd34,187455511,0,0x0,8
tick,0x7ff954e0fd34,187470445,0,0x0,8
tick,0x7ff954e0fd34,187485974,0,0x0,8
tick,0x7ff954e0fd34,187502011,0,0x0,8
tick,0x7ff954e0fd34,187517961,0,0x0,8
tick,0x7ff954e0fd34,187533866,0,0x0,8
tick,0x7ff954e0fd34,187549976,0,0x0,8
tick,0x7ff954e0fd34,187566054,0,0x0,8
tick,0x7ff954e0fd34,187580734,0,0x0,8
tick,0x7ff954e0fd34,187596496,0,0x0,8
tick,0x7ff954e0fd34,187618575,0,0x0,8
tick,0x7ff954e0fd34,187630107,0,0x0,8
tick,0x7ff954e0fd34,187642470,0,0x0,8
tick,0x7ff954e0fd34,187657416,0,0x0,8
tick,0x7ff954e0fd34,187673402,0,0x0,8
tick,0x7ff954e0fd34,187689293,0,0x0,8
tick,0x7ff954e0fd34,187705193,0,0x0,8
tick,0x7ff954e0fd34,187721137,0,0x0,8
tick,0x7ff954e0fd34,187737634,0,0x0,8
tick,0x7ff954e0fd34,187752944,0,0x0,8
tick,0x7ff954e0fd34,187767850,0,0x0,8
tick,0x7ff954e0fd34,187783347,0,0x0,8
tick,0x7ff954e0fd34,187798486,0,0x0,8
tick,0x7ff954e0fd34,187813703,0,0x0,8
tick,0x7ff954e0fd34,187828424,0,0x0,8
tick,0x7ff954e0fd34,187843245,0,0x0,8
tick,0x7ff954e0fd34,187858371,0,0x0,8
tick,0x7ff954e0fd34,187873309,0,0x0,8
tick,0x7ff954e0fd34,187888310,0,0x0,8
tick,0x7ff954e0fd34,187903220,0,0x0,8
tick,0x7ff954e0fd34,187919248,0,0x0,8
tick,0x7ff954e0fd34,187934260,0,0x0,8
tick,0x7ff954e0fd34,187948789,0,0x0,8
tick,0x7ff954e0fd34,187964358,0,0x0,8
tick,0x7ff954e0fd34,187981645,0,0x0,8
tick,0x7ff954e0fd34,187996247,0,0x0,8
tick,0x7ff954e0fd34,188012496,0,0x0,8
tick,0x7ff954e0fd34,188027900,0,0x0,8
tick,0x7ff954e0fd34,188043770,0,0x0,8
tick,0x7ff954e0fd34,188059359,0,0x0,8
tick,0x7ff954e0fd34,188074656,0,0x0,8
tick,0x7ff954e0fd34,188090274,0,0x0,8
tick,0x7ff954e0fd34,188106482,0,0x0,8
tick,0x7ff954e0fd34,188121735,0,0x0,8
tick,0x7ff954e0fd34,188136902,0,0x0,8
tick,0x7ff954e0fd34,188152306,0,0x0,8
tick,0x7ff954e0fd34,188168033,0,0x0,8
tick,0x7ff954e0fd34,188183981,0,0x0,8
tick,0x7ff954e0fd34,188200086,0,0x0,8
tick,0x7ff954e0fd34,188215914,0,0x0,8
tick,0x7ff954e0fd34,188231951,0,0x0,8
tick,0x7ff954e0fd34,188247218,0,0x0,8
tick,0x7ff954e0fd34,188263313,0,0x0,8
tick,0x7ff954e0fd34,188279100,0,0x0,8
tick,0x7ff954e0fd34,188294498,0,0x0,8
tick,0x7ff954e0fd34,188309689,0,0x0,8
tick,0x7ff954e0fd34,188325377,0,0x0,8
tick,0x7ff954e0fd34,188340826,0,0x0,8
tick,0x7ff954e0fd34,188356803,0,0x0,8
tick,0x7ff954e0fd34,188372219,0,0x0,8
tick,0x7ff954e0fd34,188387777,0,0x0,8
tick,0x7ff954e0fd34,188403073,0,0x0,8
tick,0x7ff954e0fd34,188418953,0,0x0,8
tick,0x7ff954e0fd34,188434817,0,0x0,8
tick,0x7ff954e0fd34,188450888,0,0x0,8
tick,0x7ff954e0fd34,188465870,0,0x0,8
tick,0x7ff954e0fd34,188481011,0,0x0,8
tick,0x7ff954e0fd34,188496205,0,0x0,8
tick,0x7ff954e0fd34,188511751,0,0x0,8
tick,0x7ff954e0fd34,188526613,0,0x0,8
tick,0x7ff954e0fd34,188542389,0,0x0,8
tick,0x7ff954e0fd34,188557620,0,0x0,8
tick,0x7ff954e0fd34,188573581,0,0x0,8
tick,0x7ff954e0fd34,188588519,0,0x0,8
tick,0x7ff954e0fd34,188604517,0,0x0,8
tick,0x7ff954e0fd34,188619682,0,0x0,8
tick,0x7ff954e0fd34,188635254,0,0x0,8
tick,0x7ff954e0fd34,188651232,0,0x0,8
tick,0x7ff954e0fd34,188666039,0,0x0,8
tick,0x7ff954e0fd34,188681573,0,0x0,8
tick,0x7ff954e0fd34,188696134,0,0x0,8
tick,0x7ff954e0fd34,188711994,0,0x0,8
tick,0x7ff954e0fd34,188726852,0,0x0,8
tick,0x7ff954e0fd34,188743525,0,0x0,8
tick,0x7ff954e0fd34,188758853,0,0x0,8
tick,0x7ff954e0fd34,188773801,0,0x0,8
tick,0x7ff954e0fd34,188788737,0,0x0,8
tick,0x7ff954e0fd34,188804690,0,0x0,8
tick,0x7ff954e0fd34,188820750,0,0x0,8
tick,0x7ff954e0fd34,188836492,0,0x0,8
tick,0x7ff954e0fd34,188852174,0,0x0,8
tick,0x7ff954e0fd34,188867199,0,0x0,8
tick,0x7ff954e0fd34,188882205,0,0x0,8
tick,0x7ff954e0fd34,188898695,0,0x0,8
tick,0x7ff954e0fd34,188914117,0,0x0,8
tick,0x7ff954e0fd34,188932110,0,0x0,8
tick,0x7ff954e0fd34,188943892,0,0x0,8
tick,0x7ff954e0fd34,188959936,0,0x0,8
tick,0x7ff954e0fd34,188976053,0,0x0,8
tick,0x7ff954e0fd34,188991851,0,0x0,8
tick,0x7ff954e0fd34,189005829,0,0x0,8
tick,0x7ff954e0fd34,189021751,0,0x0,8
tick,0x7ff954e0fd34,189037866,0,0x0,8
tick,0x7ff954e0fd34,189053290,0,0x0,8
tick,0x7ff954e0fd34,189069130,0,0x0,8
tick,0x7ff954e0fd34,189084580,0,0x0,8
tick,0x7ff954e0fd34,189100621,0,0x0,8
tick,0x7ff954e0fd34,189116533,0,0x0,8
tick,0x7ff954e0fd34,189131840,0,0x0,8
tick,0x7ff954e0fd34,189147168,0,0x0,8
tick,0x7ff954e0fd34,189162926,0,0x0,8
tick,0x7ff954e0fd34,189178155,0,0x0,8
tick,0x7ff954e0fd34,189192791,0,0x0,8
tick,0x7ff954e0fd34,189208000,0,0x0,8
tick,0x7ff954e0fd34,189222685,0,0x0,8
tick,0x7ff954e0fd34,189237995,0,0x0,8
tick,0x7ff954e0fd34,189253781,0,0x0,8
tick,0x7ff954e0fd34,189268837,0,0x0,8
tick,0x7ff954e0fd34,189283929,0,0x0,8
tick,0x7ff954e0fd34,189300007,0,0x0,8
tick,0x7ff954e0fd34,189314668,0,0x0,8
tick,0x7ff954e0fd34,189330147,0,0x0,8
tick,0x7ff954e0fd34,189345303,0,0x0,8
tick,0x7ff954e0fd34,189360997,0,0x0,8
tick,0x7ff954e0fd34,189376782,0,0x0,8
tick,0x7ff954e0fd34,189392038,0,0x0,8
tick,0x7ff954e0fd34,189408105,0,0x0,8
tick,0x7ff954e0fd34,189423268,0,0x0,8
tick,0x7ff954e0fd34,189438552,0,0x0,8
tick,0x7ff954e0fd34,189453677,0,0x0,8
tick,0x7ff954e0fd34,189468954,0,0x0,8
tick,0x7ff954e0fd34,189484490,0,0x0,8
tick,0x7ff954e0fd34,189499803,0,0x0,8
tick,0x7ff954e0fd34,189515333,0,0x0,8
tick,0x7ff954e0fd34,189531630,0,0x0,8
tick,0x7ff954e0fd34,189546446,0,0x0,8
tick,0x7ff954e0fd34,189561834,0,0x0,8
tick,0x7ff954e0fd34,189577868,0,0x0,8
tick,0x7ff954e0fd34,189593263,0,0x0,8
tick,0x7ff954e0fd34,189608310,0,0x0,8
tick,0x7ff954e0fd34,189624141,0,0x0,8
tick,0x7ff954e0fd34,189640380,0,0x0,8
tick,0x7ff954e0fd34,189655178,0,0x0,8
tick,0x7ff954e0fd34,189670243,0,0x0,8
tick,0x7ff954e0fd34,189687665,0,0x0,8
tick,0x7ff954e0fd34,189701038,0,0x0,8
tick,0x7ff954e0fd34,189716252,0,0x0,8
tick,0x7ff954e0fd34,189732166,0,0x0,8
tick,0x7ff954e0fd34,189747106,0,0x0,8
tick,0x7ff954e0fd34,189761814,0,0x0,8
tick,0x7ff954e0fd34,189777781,0,0x0,8
tick,0x7ff954e0fd34,189793992,0,0x0,8
tick,0x7ff954e0fd34,189809021,0,0x0,8
tick,0x7ff954e0fd34,189824770,0,0x0,8
tick,0x7ff954e0fd34,189839720,0,0x0,8
tick,0x7ff954e0fd34,189855030,0,0x0,8
tick,0x7ff954e0fd34,189870101,0,0x0,8
tick,0x7ff954e0fd34,189885627,0,0x0,8
tick,0x7ff954e0fd34,189901807,0,0x0,8
tick,0x7ff954e0fd34,189917220,0,0x0,8
tick,0x7ff954e0fd34,189933138,0,0x0,8
tick,0x7ff954e0fd34,189948268,0,0x0,8
tick,0x7ff954e0fd34,189963094,0,0x0,8
tick,0x7ff954e0fd34,189978839,0,0x0,8
tick,0x7ff954e0fd34,189994001,0,0x0,8
tick,0x7ff954e0fd34,190009699,0,0x0,8
tick,0x7ff954e0fd34,190025268,0,0x0,8
tick,0x7ff954e0fd34,190040703,0,0x0,8
tick,0x7ff954e0fd34,190056283,0,0x0,8
tick,0x7ff954e0fd34,190072202,0,0x0,8
tick,0x7ff954e0fd34,190087632,0,0x0,8
tick,0x7ff954e0fd34,190102204,0,0x0,8
tick,0x7ff954e0fd34,190117572,0,0x0,8
tick,0x7ff954e0fd34,190132595,0,0x0,8
tick,0x7ff954e0fd34,190147667,0,0x0,8
tick,0x7ff954e0fd34,190162598,0,0x0,8
tick,0x7ff954e0fd34,190178734,0,0x0,8
tick,0x7ff954e0fd34,190193612,0,0x0,8
tick,0x7ff954e0fd34,190209578,0,0x0,8
tick,0x7ff954e0fd34,190225703,0,0x0,8
tick,0x7ff954e0fd34,190241538,0,0x0,8
tick,0x7ff954e0fd34,190257424,0,0x0,8
tick,0x7ff954e0fd34,190273144,0,0x0,8
tick,0x7ff954e0fd34,190288498,0,0x0,8
tick,0x7ff954e0fd34,190303577,0,0x0,8
tick,0x7ff954e0fd34,190318459,0,0x0,8
tick,0x7ff954e0fd34,190333573,0,0x0,8
tick,0x7ff954e0fd34,190348823,0,0x0,8
tick,0x7ff954e0fd34,190364121,0,0x0,8
tick,0x7ff954e0fd34,190380279,0,0x0,8
tick,0x7ff954e0fd34,190395475,0,0x0,8
tick,0x7ff954e0fd34,190411005,0,0x0,8
tick,0x7ff954e0fd34,190426438,0,0x0,8
tick,0x7ff954e0fd34,190441948,0,0x0,8
tick,0x7ff954e0fd34,190457591,0,0x0,8
tick,0x7ff954e0fd34,190472729,0,0x0,8
tick,0x7ff954e0fd34,190489002,0,0x0,8
tick,0x7ff954e0fd34,190504293,0,0x0,8
tick,0x7ff954e0fd34,190520164,0,0x0,8
tick,0x7ff954e0fd34,190536090,0,0x0,8
tick,0x7ff954e0fd34,190551329,0,0x0,8
tick,0x7ff954e0fd34,190567166,0,0x0,8
tick,0x7ff954e0fd34,190581810,0,0x0,8
tick,0x7ff954e0fd34,190597916,0,0x0,8
tick,0x7ff954e0fd34,190612708,0,0x0,8
tick,0x7ff954e0fd34,190627646,0,0x0,8
tick,0x7ff954e0fd34,190643596,0,0x0,8
tick,0x7ff954e0fd34,190659607,0,0x0,8
tick,0x7ff954e0fd34,190675104,0,0x0,8
tick,0x7ff954e0fd34,190690158,0,0x0,8
tick,0x7ff954e0fd34,190705995,0,0x0,8
tick,0x7ff954e0fd34,190721991,0,0x0,8
tick,0x7ff954e0fd34,190737882,0,0x0,8
tick,0x7ff954e0fd34,190753055,0,0x0,8
tick,0x7ff954e0fd34,190768895,0,0x0,8
tick,0x7ff954e0fd34,190783917,0,0x0,8
tick,0x7ff954e0fd34,190799854,0,0x0,8
tick,0x7ff954e0fd34,190815862,0,0x0,8
tick,0x7ff954e0fd34,190831830,0,0x0,8
tick,0x7ff954e0fd34,190847013,0,0x0,8
tick,0x7ff954e0fd34,190862263,0,0x0,8
tick,0x7ff954e0fd34,190878173,0,0x0,8
tick,0x7ff954e0fd34,190894131,0,0x0,8
tick,0x7ff954e0fd34,190909330,0,0x0,8
tick,0x7ff954e0fd34,190924208,0,0x0,8
tick,0x7ff954e0fd34,190940109,0,0x0,8
tick,0x7ff954e0fd34,190956322,0,0x0,8
tick,0x7ff954e0fd34,190970972,0,0x0,8
tick,0x7ff954e0fd34,190986138,0,0x0,8
tick,0x7ff954e0fd34,191002246,0,0x0,8
tick,0x7ff954e0fd34,191017954,0,0x0,8
tick,0x7ff954e0fd34,191034201,0,0x0,8
tick,0x7ff954e0fd34,191050656,0,0x0,8
tick,0x7ff954e0fd34,191066199,0,0x0,8
tick,0x7ff954e0fd34,191081720,0,0x0,8
tick,0x7ff954e0fd34,191096758,0,0x0,8
tick,0x7ff954e0fd34,191112388,0,0x0,8
tick,0x7ff954e0fd34,191128340,0,0x0,8
tick,0x7ff954e0fd34,191143924,0,0x0,8
tick,0x7ff954e0fd34,191159214,0,0x0,8
tick,0x7ff954e0fd34,191175191,0,0x0,8
tick,0x7ff954e0fd34,191191113,0,0x0,8
tick,0x7ff954e0fd34,191207131,0,0x0,8
tick,0x7ff954e0fd34,191222793,0,0x0,8
tick,0x7ff954e0fd34,191238712,0,0x0,8
tick,0x7ff954e0fd34,191254781,0,0x0,8
tick,0x7ff954e0fd34,191270337,0,0x0,8
tick,0x7ff954e0fd34,191286172,0,0x0,8
tick,0x7ff954e0fd34,191302148,0,0x0,8
tick,0x7ff954e0fd34,191318212,0,0x0,8
tick,0x7ff954e0fd34,191334060,0,0x0,8
tick,0x7ff954e0fd34,191349080,0,0x0,8
tick,0x7ff954e0fd34,191364958,0,0x0,8
tick,0x7ff954e0fd34,191379959,0,0x0,8
tick,0x7ff954e0fd34,191396147,0,0x0,8
tick,0x7ff954e0fd34,191412194,0,0x0,8
tick,0x7ff954e0fd34,191427872,0,0x0,8
tick,0x7ff954e0fd34,191442605,0,0x0,8
tick,0x7ff954e0fd34,191458695,0,0x0,8
tick,0x7ff954e0fd34,191473957,0,0x0,8
tick,0x7ff954e0fd34,191489083,0,0x0,8
tick,0x7ff954e0fd34,191504012,0,0x0,8
tick,0x7ff954e0fd34,191518556,0,0x0,8
tick,0x7ff954e0fd34,191535045,0,0x0,8
tick,0x7ff954e0fd34,191550094,0,0x0,8
tick,0x7ff954e0fd34,191565717,0,0x0,8
tick,0x7ff954e0fd34,191580965,0,0x0,8
tick,0x7ff954e0fd34,191596242,0,0x0,8
tick,0x7ff954e0fd34,191612628,0,0x0,8
tick,0x7ff954e0fd34,191627724,0,0x0,8
tick,0x7ff954e0fd34,191643695,0,0x0,8
tick,0x7ff954e0fd34,191659267,0,0x0,8
tick,0x7ff954e0fd34,191675148,0,0x0,8
tick,0x7ff954e0fd34,191690852,0,0x0,8
tick,0x7ff954e0fd34,191705743,0,0x0,8
tick,0x7ff954e0fd34,191720691,0,0x0,8
tick,0x7ff954e0fd34,191735636,0,0x0,8
tick,0x7ff954e0fd34,191750734,0,0x0,8
tick,0x7ff954e0fd34,191766554,0,0x0,8
tick,0x7ff954e0fd34,191781560,0,0x0,8
tick,0x7ff954e0fd34,191797508,0,0x0,8
tick,0x7ff954e0fd34,191812870,0,0x0,8
tick,0x7ff954e0fd34,191828175,0,0x0,8
tick,0x7ff954e0fd34,191843815,0,0x0,8
tick,0x7ff954e0fd34,191859428,0,0x0,8
tick,0x7ff954e0fd34,191874483,0,0x0,8
tick,0x7ff954e0fd34,191889875,0,0x0,8
tick,0x7ff954e0fd34,191905213,0,0x0,8
tick,0x7ff954e0fd34,191920938,0,0x0,8
tick,0x7ff954e0fd34,191935859,0,0x0,8
tick,0x7ff954e0fd34,191951103,0,0x0,8
tick,0x7ff954e0fd34,191967183,0,0x0,8
tick,0x7ff954e0fd34,191983330,0,0x0,8
tick,0x7ff954e0fd34,191998060,0,0x0,8
tick,0x7ff954e0fd34,192014052,0,0x0,8
tick,0x7ff954e0fd34,192029321,0,0x0,8
tick,0x7ff954e0fd34,192044736,0,0x0,8
tick,0x7ff954e0fd34,192060139,0,0x0,8
tick,0x7ff954e0fd34,192076030,0,0x0,8
tick,0x7ff954e0fd34,192092162,0,0x0,8
tick,0x7ff954e0fd34,192108111,0,0x0,8
tick,0x7ff954e0fd34,192123112,0,0x0,8
tick,0x7ff954e0fd34,192138780,0,0x0,8
tick,0x7ff954e0fd34,192154388,0,0x0,8
tick,0x7ff954e0fd34,192170100,0,0x0,8
tick,0x7ff954e0fd34,192185916,0,0x0,8
tick,0x7ff954e0fd34,192201135,0,0x0,8
tick,0x7ff954e0fd34,192216328,0,0x0,8
tick,0x7ff954e0fd34,192232089,0,0x0,8
tick,0x7ff954e0fd34,192248154,0,0x0,8
tick,0x7ff954e0fd34,192263294,0,0x0,8
tick,0x7ff954e0fd34,192279038,0,0x0,8
tick,0x7ff954e0fd34,192295106,0,0x0,8
tick,0x7ff954e0fd34,192309519,0,0x0,8
tick,0x7ff954e0fd34,192324771,0,0x0,8
tick,0x7ff954e0fd34,192340198,0,0x0,8
tick,0x7ff954e0fd34,192355615,0,0x0,8
tick,0x7ff954e0fd34,192371833,0,0x0,8
tick,0x7ff954e0fd34,192387267,0,0x0,8
tick,0x7ff954e0fd34,192403163,0,0x0,8
tick,0x7ff954e0fd34,192418186,0,0x0,8
tick,0x7ff954e0fd34,192433662,0,0x0,8
tick,0x7ff954e0fd34,192449280,0,0x0,8
tick,0x7ff954e0fd34,192465372,0,0x0,8
tick,0x7ff954e0fd34,192481050,0,0x0,8
tick,0x7ff954e0fd34,192496409,0,0x0,8
tick,0x7ff954e0fd34,192511929,0,0x0,8
tick,0x7ff954e0fd34,192527712,0,0x0,8
tick,0x7ff954e0fd34,192542572,0,0x0,8
tick,0x7ff954e0fd34,192558332,0,0x0,8
tick,0x7ff954e0fd34,192573500,0,0x0,8
tick,0x7ff954e0fd34,192589200,0,0x0,8
tick,0x7ff954e0fd34,192603961,0,0x0,8
tick,0x7ff954e0fd34,192619718,0,0x0,8
tick,0x7ff954e0fd34,192635092,0,0x0,8
tick,0x7ff954e0fd34,192650318,0,0x0,8
tick,0x7ff954e0fd34,192665825,0,0x0,8
tick,0x7ff954e0fd34,192681254,0,0x0,8
tick,0x7ff954e0fd34,192696975,0,0x0,8
tick,0x7ff954e0fd34,192711997,0,0x0,8
tick,0x7ff954e0fd34,192727172,0,0x0,8
tick,0x7ff954e0fd34,192743043,0,0x0,8
tick,0x7ff954e0fd34,192758954,0,0x0,8
tick,0x7ff954e0fd34,192774300,0,0x0,8
tick,0x7ff954e0fd34,192789853,0,0x0,8
tick,0x7ff954e0fd34,192805288,0,0x0,8
tick,0x7ff954e0fd34,192820255,0,0x0,8
tick,0x7ff954e0fd34,192836238,0,0x0,8
tick,0x7ff954e0fd34,192852222,0,0x0,8
tick,0x7ff954e0fd34,192868204,0,0x0,8
tick,0x7ff954e0fd34,192884187,0,0x0,8
tick,0x7ff954e0fd34,192899632,0,0x0,8
tick,0x7ff954e0fd34,192914613,0,0x0,8
tick,0x7ff954e0fd34,192930579,0,0x0,8
tick,0x7ff954e0fd34,192945505,0,0x0,8
tick,0x7ff954e0fd34,192961089,0,0x0,8
tick,0x7ff954e0fd34,192976167,0,0x0,8
tick,0x7ff954e0fd34,192992286,0,0x0,8
tick,0x7ff954e0fd34,193007792,0,0x0,8
tick,0x7ff954e0fd34,193023132,0,0x0,8
tick,0x7ff954e0fd34,193038008,0,0x0,8
tick,0x7ff954e0fd34,193054033,0,0x0,8
tick,0x7ff954e0fd34,193069818,0,0x0,8
tick,0x7ff954e0fd34,193086007,0,0x0,8
tick,0x7ff954e0fd34,193101635,0,0x0,8
tick,0x7ff954e0fd34,193116994,0,0x0,8
tick,0x7ff954e0fd34,193131990,0,0x0,8
tick,0x7ff954e0fd34,193148116,0,0x0,8
tick,0x7ff954e0fd34,193163376,0,0x0,8
tick,0x7ff954e0fd34,193179054,0,0x0,8
tick,0x7ff954e0fd34,193194683,0,0x0,8
tick,0x7ff954e0fd34,193210013,0,0x0,8
tick,0x7ff954e0fd34,193225240,0,0x0,8
tick,0x7ff954e0fd34,193240226,0,0x0,8
tick,0x7ff954e0fd34,193256141,0,0x0,8
tick,0x7ff954e0fd34,193271208,0,0x0,8
tick,0x7ff954e0fd34,193286892,0,0x0,8
tick,0x7ff954e0fd34,193302275,0,0x0,8
tick,0x7ff954e0fd34,193318008,0,0x0,8
tick,0x7ff954e0fd34,193333452,0,0x0,8
tick,0x7ff954e0fd34,193348749,0,0x0,8
tick,0x7ff954e0fd34,193363491,0,0x0,8
tick,0x7ff954e0fd34,193378559,0,0x0,8
tick,0x7ff954e0fd34,193394306,0,0x0,8
tick,0x7ff954e0fd34,193409226,0,0x0,8
tick,0x7ff954e0fd34,193425011,0,0x0,8
tick,0x7ff954e0fd34,193439976,0,0x0,8
tick,0x7ff954e0fd34,193455394,0,0x0,8
tick,0x7ff954e0fd34,193470861,0,0x0,8
tick,0x7ff954e0fd34,193486806,0,0x0,8
tick,0x7ff954e0fd34,193502798,0,0x0,8
tick,0x7ff954e0fd34,193518413,0,0x0,8
tick,0x7ff954e0fd34,193533356,0,0x0,8
tick,0x7ff954e0fd34,193549209,0,0x0,8
tick,0x7ff954e0fd34,193564675,0,0x0,8
tick,0x7ff954e0fd34,193580598,0,0x0,8
tick,0x7ff954e0fd34,193596560,0,0x0,8
tick,0x7ff954e0fd34,193612547,0,0x0,8
tick,0x7ff954e0fd34,193628503,0,0x0,8
tick,0x7ff954e0fd34,193643447,0,0x0,8
tick,0x7ff954e0fd34,193658410,0,0x0,8
tick,0x7ff954e0fd34,193673792,0,0x0,8
tick,0x7ff954e0fd34,193689030,0,0x0,8
tick,0x7ff954e0fd34,193704987,0,0x0,8
tick,0x7ff954e0fd34,193720953,0,0x0,8
tick,0x7ff954e0fd34,193735887,0,0x0,8
tick,0x7ff954e0fd34,193750909,0,0x0,8
tick,0x7ff954e0fd34,193765796,0,0x0,8
tick,0x7ff954e0fd34,193781487,0,0x0,8
tick,0x7ff954e0fd34,193797421,0,0x0,8
tick,0x7ff954e0fd34,193813443,0,0x0,8
tick,0x7ff954e0fd34,193829351,0,0x0,8
tick,0x7ff954e0fd34,193844324,0,0x0,8
tick,0x7ff954e0fd34,193860252,0,0x0,8
tick,0x7ff954e0fd34,193875961,0,0x0,8
tick,0x7ff954e0fd34,193891944,0,0x0,8
tick,0x7ff954e0fd34,193907910,0,0x0,8
tick,0x7ff954e0fd34,193923536,0,0x0,8
tick,0x7ff954e0fd34,193939526,0,0x0,8
tick,0x7ff954e0fd34,193954774,0,0x0,8
tick,0x7ff954e0fd34,193970188,0,0x0,8
tick,0x7ff954e0fd34,193986141,0,0x0,8
tick,0x7ff954e0fd34,194002087,0,0x0,8
tick,0x7ff954e0fd34,194018063,0,0x0,8
tick,0x7ff954e0fd34,194033749,0,0x0,8
tick,0x7ff954e0fd34,194049783,0,0x0,8
tick,0x7ff954e0fd34,194065693,0,0x0,8
tick,0x7ff954e0fd34,194081629,0,0x0,8
tick,0x7ff954e0fd34,194096610,0,0x0,8
tick,0x7ff954e0fd34,194112566,0,0x0,8
tick,0x7ff954e0fd34,194127533,0,0x0,8
tick,0x7ff954e0fd34,194143506,0,0x0,8
tick,0x7ff954e0fd34,194158459,0,0x0,8
tick,0x7ff954e0fd34,194173404,0,0x0,8
tick,0x7ff954e0fd34,194188361,0,0x0,8
tick,0x7ff954e0fd34,194203348,0,0x0,8
tick,0x7ff954e0fd34,194219428,0,0x0,8
tick,0x7ff954e0fd34,194235481,0,0x0,8
tick,0x7ff954e0fd34,194250425,0,0x0,8
tick,0x7ff954e0fd34,194265327,0,0x0,8
tick,0x7ff954e0fd34,194280269,0,0x0,8
tick,0x7ff954e0fd34,194296056,0,0x0,8
tick,0x7ff954e0fd34,194311967,0,0x0,8
tick,0x7ff954e0fd34,194327941,0,0x0,8
tick,0x7ff954e0fd34,194343975,0,0x0,8
tick,0x7ff954e0fd34,194359383,0,0x0,8
tick,0x7ff954e0fd34,194374394,0,0x0,8
tick,0x7ff954e0fd34,194390346,0,0x0,8
tick,0x7ff954e0fd34,194406291,0,0x0,8
tick,0x7ff954e0fd34,194421250,0,0x0,8
tick,0x7ff954e0fd34,194436340,0,0x0,8
tick,0x7ff954e0fd34,194451783,0,0x0,8
tick,0x7ff954e0fd34,194466806,0,0x0,8
tick,0x7ff954e0fd34,194482792,0,0x0,8
tick,0x7ff954e0fd34,194498742,0,0x0,8
tick,0x7ff954e0fd34,194514209,0,0x0,8
tick,0x7ff954e0fd34,194529927,0,0x0,8
tick,0x7ff954e0fd34,194545088,0,0x0,8
tick,0x7ff954e0fd34,194560951,0,0x0,8
tick,0x7ff954e0fd34,194576856,0,0x0,8
tick,0x7ff954e0fd34,194592646,0,0x0,8
tick,0x7ff954e0fd34,194608600,0,0x0,8
tick,0x7ff954e0fd34,194624557,0,0x0,8
tick,0x7ff954e0fd34,194639883,0,0x0,8
tick,0x7ff954e0fd34,194655556,0,0x0,8
tick,0x7ff954e0fd34,194671187,0,0x0,8
tick,0x7ff954e0fd34,194686646,0,0x0,8
tick,0x7ff954e0fd34,194701647,0,0x0,8
tick,0x7ff954e0fd34,194717176,0,0x0,8
tick,0x7ff954e0fd34,194733023,0,0x0,8
tick,0x7ff954e0fd34,194748432,0,0x0,8
tick,0x7ff954e0fd34,194764370,0,0x0,8
tick,0x7ff954e0fd34,194780351,0,0x0,8
tick,0x7ff954e0fd34,194795292,0,0x0,8
tick,0x7ff954e0fd34,194810963,0,0x0,8
tick,0x7ff954e0fd34,194826916,0,0x0,8
tick,0x7ff954e0fd34,194842883,0,0x0,8
tick,0x7ff954e0fd34,194857867,0,0x0,8
tick,0x7ff954e0fd34,194872847,0,0x0,8
tick,0x7ff954e0fd34,194888162,0,0x0,8
tick,0x7ff954e0fd34,194904208,0,0x0,8
tick,0x7ff954e0fd34,194919126,0,0x0,8
tick,0x7ff954e0fd34,194934600,0,0x0,8
tick,0x7ff954e0fd34,194950562,0,0x0,8
tick,0x7ff954e0fd34,194966506,0,0x0,8
tick,0x7ff954e0fd34,194982474,0,0x0,8
tick,0x7ff954e0fd34,194998573,0,0x0,8
tick,0x7ff954e0fd34,195013780,0,0x0,8
tick,0x7ff954e0fd34,195028783,0,0x0,8
tick,0x7ff954e0fd34,195044703,0,0x0,8
tick,0x7ff954e0fd34,195059735,0,0x0,8
tick,0x7ff954e0fd34,195075417,0,0x0,8
tick,0x7ff954e0fd34,195090402,0,0x0,8
tick,0x7ff954e0fd34,195105350,0,0x0,8
tick,0x7ff954e0fd34,195120274,0,0x0,8
tick,0x7ff954e0fd34,195136112,0,0x0,8
tick,0x7ff954e0fd34,195152065,0,0x0,8
tick,0x7ff954e0fd34,195167574,0,0x0,8
tick,0x7ff954e0fd34,195183523,0,0x0,8
tick,0x7ff954e0fd34,195199501,0,0x0,8
tick,0x7ff954e0fd34,195215434,0,0x0,8
tick,0x7ff954e0fd34,195231407,0,0x0,8
tick,0x7ff954e0fd34,195247357,0,0x0,8
tick,0x7ff954e0fd34,195262997,0,0x0,8
tick,0x7ff954e0fd34,195278910,0,0x0,8
tick,0x7ff954e0fd34,195293872,0,0x0,8
tick,0x7ff954e0fd34,195309849,0,0x0,8
tick,0x7ff954e0fd34,195324795,0,0x0,8
tick,0x7ff954e0fd34,195340751,0,0x0,8
tick,0x7ff954e0fd34,195355701,0,0x0,8
tick,0x7ff954e0fd34,195370722,0,0x0,8
tick,0x7ff954e0fd34,195386223,0,0x0,8
tick,0x7ff954e0fd34,195401145,0,0x0,8
tick,0x7ff954e0fd34,195417067,0,0x0,8
tick,0x7ff954e0fd34,195432361,0,0x0,8
tick,0x7ff954e0fd34,195448302,0,0x0,8
tick,0x7ff954e0fd34,195463315,0,0x0,8
tick,0x7ff954e0fd34,195479239,0,0x0,8
tick,0x7ff954e0fd34,195495222,0,0x0,8
tick,0x7ff954e0fd34,195510641,0,0x0,8
tick,0x7ff954e0fd34,195526736,0,0x0,8
tick,0x7ff954e0fd34,195542564,0,0x0,8
tick,0x7ff954e0fd34,195558489,0,0x0,8
tick,0x7ff954e0fd34,195574012,0,0x0,8
tick,0x7ff954e0fd34,195590022,0,0x0,8
tick,0x7ff954e0fd34,195605915,0,0x0,8
tick,0x7ff954e0fd34,195621873,0,0x0,8
tick,0x7ff954e0fd34,195638052,0,0x0,8
tick,0x7ff954e0fd34,195653869,0,0x0,8
tick,0x7ff954e0fd34,195669423,0,0x0,8
tick,0x7ff954e0fd34,195685283,0,0x0,8
tick,0x7ff954e0fd34,195701265,0,0x0,8
tick,0x7ff954e0fd34,195717240,0,0x0,8
tick,0x7ff954e0fd34,195733117,0,0x0,8
tick,0x7ff954e0fd34,195749013,0,0x0,8
tick,0x7ff954e0fd34,195764552,0,0x0,8
tick,0x7ff954e0fd34,195779520,0,0x0,8
tick,0x7ff954e0fd34,195795465,0,0x0,8
tick,0x7ff954e0fd34,195811435,0,0x0,8
tick,0x7ff954e0fd34,195827376,0,0x0,8
tick,0x7ff954e0fd34,195843361,0,0x0,8
tick,0x7ff954e0fd34,195858522,0,0x0,8
tick,0x7ff954e0fd34,195873515,0,0x0,8
tick,0x7ff954e0fd34,195889442,0,0x0,8
tick,0x7ff954e0fd34,195904447,0,0x0,8
tick,0x7ff954e0fd34,195919377,0,0x0,8
tick,0x7ff954e0fd34,195934348,0,0x0,8
tick,0x7ff954e0fd34,195950283,0,0x0,8
tick,0x7ff954e0fd34,195965356,0,0x0,8
tick,0x7ff954e0fd34,195981350,0,0x0,8
tick,0x7ff954e0fd34,195996286,0,0x0,8
tick,0x7ff954e0fd34,196011254,0,0x0,8
tick,0x7ff954e0fd34,196027252,0,0x0,8
tick,0x7ff954e0fd34,196043173,0,0x0,8
tick,0x7ff954e0fd34,196058453,0,0x0,8
tick,0x7ff954e0fd34,196073959,0,0x0,8
tick,0x7ff954e0fd34,196089602,0,0x0,8
tick,0x7ff954e0fd34,196104599,0,0x0,8
tick,0x7ff954e0fd34,196120568,0,0x0,8
tick,0x7ff954e0fd34,196136073,0,0x0,8
tick,0x7ff954e0fd34,196152156,0,0x0,8
tick,0x7ff954e0fd34,196167588,0,0x0,8
tick,0x7ff954e0fd34,196183339,0,0x0,8
tick,0x7ff954e0fd34,196198277,0,0x0,8
tick,0x7ff954e0fd34,196214251,0,0x0,8
tick,0x7ff954e0fd34,196229227,0,0x0,8
tick,0x7ff954e0fd34,196245189,0,0x0,8
tick,0x7ff954e0fd34,196260650,0,0x0,8
tick,0x7ff954e0fd34,196276651,0,0x0,8
tick,0x7ff954e0fd34,196292682,0,0x0,8
tick,0x7ff954e0fd34,196307687,0,0x0,8
tick,0x7ff954e0fd34,196380125,0,0x0,8
tick,0x7ff954e0fd34,196385376,0,0x0,8
tick,0x7ff954e0fd34,196414633,0,0x0,8
tick,0x7ff954e0fd34,196430706,0,0x0,8
tick,0x7ff954e0fd34,196445634,0,0x0,8
tick,0x7ff954e0fd34,196462520,0,0x0,8
tick,0x7ff954e0fd34,196476573,0,0x0,8
tick,0x7ff954e0fd34,196492503,0,0x0,8
tick,0x7ff954e0fd34,196508513,0,0x0,8
tick,0x7ff954e0fd34,196524430,0,0x0,8
tick,0x7ff954e0fd34,196540373,0,0x0,8
tick,0x7ff954e0fd34,196556382,0,0x0,8
tick,0x7ff954e0fd34,196572349,0,0x0,8
tick,0x7ff954e0fd34,196588337,0,0x0,8
tick,0x7ff954e0fd34,196604234,0,0x0,8
tick,0x7ff954e0fd34,196620204,0,0x0,8
tick,0x7ff954e0fd34,196636135,0,0x0,8
tick,0x7ff954e0fd34,196651106,0,0x0,8
tick,0x7ff954e0fd34,196666019,0,0x0,8
tick,0x7ff954e0fd34,196681037,0,0x0,8
tick,0x7ff954e0fd34,196695982,0,0x0,8
tick,0x7ff954e0fd34,196712011,0,0x0,8
tick,0x7ff954e0fd34,196726926,0,0x0,8
tick,0x7ff954e0fd34,196741889,0,0x0,8
tick,0x7ff954e0fd34,196756820,0,0x0,8
tick,0x7ff954e0fd34,196772775,0,0x0,8
tick,0x7ff954e0fd34,196788736,0,0x0,8
tick,0x7ff954e0fd34,196804710,0,0x0,8
tick,0x7ff954e0fd34,196820662,0,0x0,8
tick,0x7ff954e0fd34,196836592,0,0x0,8
tick,0x7ff954e0fd34,196852554,0,0x0,8
tick,0x7ff954e0fd34,196868553,0,0x0,8
tick,0x7ff954e0fd34,196883497,0,0x0,8
tick,0x7ff954e0fd34,196899453,0,0x0,8
tick,0x7ff954e0fd34,196914381,0,0x0,8
tick,0x7ff954e0fd34,196929467,0,0x0,8
tick,0x7ff954e0fd34,196944418,0,0x0,8
tick,0x7ff954e0fd34,196959371,0,0x0,8
tick,0x7ff954e0fd34,196974372,0,0x0,8
tick,0x7ff954e0fd34,196989321,0,0x0,8
tick,0x7ff954e0fd34,197004298,0,0x0,8
tick,0x7ff954e0fd34,197020225,0,0x0,8
tick,0x7ff954e0fd34,197036203,0,0x0,8
tick,0x7ff954e0fd34,197052146,0,0x0,8
tick,0x7ff954e0fd34,197067107,0,0x0,8
tick,0x7ff954e0fd34,197082103,0,0x0,8
tick,0x7ff954e0fd34,197097035,0,0x0,8
tick,0x7ff954e0fd34,197111997,0,0x0,8
tick,0x7ff954e0fd34,197128005,0,0x0,8
tick,0x7ff954e0fd34,197143900,0,0x0,8
tick,0x7ff954e0fd34,197159856,0,0x0,8
tick,0x7ff954e0fd34,197175828,0,0x0,8
tick,0x7ff954e0fd34,197190804,0,0x0,8
tick,0x7ff954e0fd34,197205776,0,0x0,8
tick,0x7ff954e0fd34,197220724,0,0x0,8
tick,0x7ff954e0fd34,197235675,0,0x0,8
tick,0x7ff954e0fd34,197251646,0,0x0,8
tick,0x7ff954e0fd34,197266718,0,0x0,8
tick,0x7ff954e0fd34,197282360,0,0x0,8
tick,0x7ff954e0fd34,197297358,0,0x0,8
tick,0x7ff954e0fd34,197313068,0,0x0,8
tick,0x7ff954e0fd34,197329139,0,0x0,8
tick,0x7ff954e0fd34,197344002,0,0x0,8
tick,0x7ff954e0fd34,197360005,0,0x0,8
tick,0x7ff954e0fd34,197375048,0,0x0,8
tick,0x7ff954e0fd34,197389944,0,0x0,8
tick,0x7ff954e0fd34,197404908,0,0x0,8
tick,0x7ff954e0fd34,197419789,0,0x0,8
tick,0x7ff954e0fd34,197435770,0,0x0,8
tick,0x7ff954e0fd34,197451719,0,0x0,8
tick,0x7ff954e0fd34,197466644,0,0x0,8
tick,0x7ff954e0fd34,197482633,0,0x0,8
tick,0x7ff954e0fd34,197497570,0,0x0,8
tick,0x7ff954e0fd34,197513537,0,0x0,8
tick,0x7ff954e0fd34,197529504,0,0x0,8
tick,0x7ff954e0fd34,197545467,0,0x0,8
tick,0x7ff954e0fd34,197561409,0,0x0,8
tick,0x7ff954e0fd34,197577452,0,0x0,8
tick,0x7ff954e0fd34,197593372,0,0x0,8
tick,0x7ff954e0fd34,197609274,0,0x0,8
tick,0x7ff954e0fd34,197624332,0,0x0,8
tick,0x7ff954e0fd34,197639232,0,0x0,8
tick,0x7ff954e0fd34,197654180,0,0x0,8
tick,0x7ff954e0fd34,197669212,0,0x0,8
tick,0x7ff954e0fd34,197685193,0,0x0,8
tick,0x7ff954e0fd34,197700720,0,0x0,8
tick,0x7ff954e0fd34,197716758,0,0x0,8
tick,0x7ff954e0fd34,197731687,0,0x0,8
tick,0x7ff954e0fd34,197746639,0,0x0,8
tick,0x7ff954e0fd34,197761590,0,0x0,8
tick,0x7ff954e0fd34,197776595,0,0x0,8
tick,0x7ff954e0fd34,197792564,0,0x0,8
tick,0x7ff954e0fd34,197807943,0,0x0,8
tick,0x7ff954e0fd34,197823062,0,0x0,8
tick,0x7ff954e0fd34,197838020,0,0x0,8
tick,0x7ff954e0fd34,197853919,0,0x0,8
tick,0x7ff954e0fd34,197869860,0,0x0,8
tick,0x7ff954e0fd34,197885827,0,0x0,8
tick,0x7ff954e0fd34,197901790,0,0x0,8
tick,0x7ff954e0fd34,197917807,0,0x0,8
tick,0x7ff954e0fd34,197932711,0,0x0,8
tick,0x7ff954e0fd34,197948662,0,0x0,8
tick,0x7ff954e0fd34,197963618,0,0x0,8
tick,0x7ff954e0fd34,197979560,0,0x0,8
tick,0x7ff954e0fd34,197995522,0,0x0,8
tick,0x7ff954e0fd34,198010521,0,0x0,8
tick,0x7ff954e0fd34,198026448,0,0x0,8
tick,0x7ff954e0fd34,198041721,0,0x0,8
tick,0x7ff954e0fd34,198057670,0,0x0,8
tick,0x7ff954e0fd34,198073600,0,0x0,8
tick,0x7ff954e0fd34,198088791,0,0x0,8
tick,0x7ff954e0fd34,198104751,0,0x0,8
tick,0x7ff954e0fd34,198119696,0,0x0,8
tick,0x7ff954e0fd34,198135677,0,0x0,8
tick,0x7ff954e0fd34,198151635,0,0x0,8
tick,0x7ff954e0fd34,198167611,0,0x0,8
tick,0x7ff954e0fd34,198183186,0,0x0,8
tick,0x7ff954e0fd34,198199028,0,0x0,8
tick,0x7ff954e0fd34,198214445,0,0x0,8
tick,0x7ff954e0fd34,198230429,0,0x0,8
tick,0x7ff954e0fd34,198246206,0,0x0,8
tick,0x7ff954e0fd34,198262174,0,0x0,8
tick,0x7ff954e0fd34,198277351,0,0x0,8
tick,0x7ff954e0fd34,198292324,0,0x0,8
tick,0x7ff954e0fd34,198308254,0,0x0,8
tick,0x7ff954e0fd34,198324245,0,0x0,8
tick,0x7ff954e0fd34,198340251,0,0x0,8
tick,0x7ff954e0fd34,198356270,0,0x0,8
tick,0x7ff954e0fd34,198372143,0,0x0,8
tick,0x7ff954e0fd34,198387564,0,0x0,8
tick,0x7ff954e0fd34,198402775,0,0x0,8
tick,0x7ff954e0fd34,198418176,0,0x0,8
tick,0x7ff954e0fd34,198434179,0,0x0,8
tick,0x7ff954e0fd34,198450112,0,0x0,8
tick,0x7ff954e0fd34,198465349,0,0x0,8
tick,0x7ff954e0fd34,198480304,0,0x0,8
tick,0x7ff954e0fd34,198496317,0,0x0,8
tick,0x7ff954e0fd34,198511439,0,0x0,8
tick,0x7ff954e0fd34,198526409,0,0x0,8
tick,0x7ff954e0fd34,198542381,0,0x0,8
tick,0x7ff954e0fd34,198558322,0,0x0,8
tick,0x7ff954e0fd34,198574275,0,0x0,8
tick,0x7ff954e0fd34,198590240,0,0x0,8
tick,0x7ff954e0fd34,198606189,0,0x0,8
tick,0x7ff954e0fd34,198622165,0,0x0,8
tick,0x7ff954e0fd34,198637110,0,0x0,8
tick,0x7ff954e0fd34,198653048,0,0x0,8
tick,0x7ff954e0fd34,198668044,0,0x0,8
tick,0x7ff954e0fd34,198684021,0,0x0,8
tick,0x7ff954e0fd34,198699923,0,0x0,8
tick,0x7ff954e0fd34,198714892,0,0x0,8
tick,0x7ff954e0fd34,198730882,0,0x0,8
tick,0x7ff954e0fd34,198745836,0,0x0,8
tick,0x7ff954e0fd34,198761799,0,0x0,8
tick,0x7ff954e0fd34,198777855,0,0x0,8
tick,0x7ff954e0fd34,198792812,0,0x0,8
tick,0x7ff954e0fd34,198808772,0,0x0,8
tick,0x7ff954e0fd34,198823775,0,0x0,8
tick,0x7ff954e0fd34,198839669,0,0x0,8
tick,0x7ff954e0fd34,198855350,0,0x0,8
tick,0x7ff954e0fd34,198870284,0,0x0,8
tick,0x7ff954e0fd34,198886253,0,0x0,8
tick,0x7ff954e0fd34,198901790,0,0x0,8
tick,0x7ff954e0fd34,198917345,0,0x0,8
tick,0x7ff954e0fd34,198933292,0,0x0,8
tick,0x7ff954e0fd34,198949258,0,0x0,8
tick,0x7ff954e0fd34,198965185,0,0x0,8
tick,0x7ff954e0fd34,198980465,0,0x0,8
tick,0x7ff954e0fd34,198996404,0,0x0,8
tick,0x7ff954e0fd34,199011418,0,0x0,8
tick,0x7ff954e0fd34,199027353,0,0x0,8
tick,0x7ff954e0fd34,199042307,0,0x0,8
tick,0x7ff954e0fd34,199057752,0,0x0,8
tick,0x7ff954e0fd34,199072759,0,0x0,8
tick,0x7ff954e0fd34,199088679,0,0x0,8
tick,0x7ff954e0fd34,199104139,0,0x0,8
tick,0x7ff954e0fd34,199119444,0,0x0,8
tick,0x7ff954e0fd34,199134400,0,0x0,8
tick,0x7ff954e0fd34,199150412,0,0x0,8
tick,0x7ff954e0fd34,199166388,0,0x0,8
tick,0x7ff954e0fd34,199182315,0,0x0,8
tick,0x7ff954e0fd34,199198221,0,0x0,8
tick,0x7ff954e0fd34,199214168,0,0x0,8
tick,0x7ff954e0fd34,199229174,0,0x0,8
tick,0x7ff954e0fd34,199245085,0,0x0,8
tick,0x7ff954e0fd34,199260061,0,0x0,8
tick,0x7ff954e0fd34,199275756,0,0x0,8
tick,0x7ff954e0fd34,199291740,0,0x0,8
tick,0x7ff954e0fd34,199307724,0,0x0,8
tick,0x7ff954e0fd34,199323706,0,0x0,8
tick,0x7ff954e0fd34,199339618,0,0x0,8
tick,0x7ff954e0fd34,199355599,0,0x0,8
tick,0x7ff954e0fd34,199371524,0,0x0,8
tick,0x7ff954e0fd34,199386739,0,0x0,8
tick,0x7ff954e0fd34,199401722,0,0x0,8
tick,0x7ff954e0fd34,199417597,0,0x0,8
tick,0x7ff954e0fd34,199432740,0,0x0,8
tick,0x7ff954e0fd34,199448201,0,0x0,8
tick,0x7ff954e0fd34,199463348,0,0x0,8
tick,0x7ff954e0fd34,199478727,0,0x0,8
tick,0x7ff954e0fd34,199494793,0,0x0,8
tick,0x7ff954e0fd34,199509668,0,0x0,8
tick,0x7ff954e0fd34,199524941,0,0x0,8
tick,0x7ff954e0fd34,199540328,0,0x0,8
tick,0x7ff954e0fd34,199555233,0,0x0,8
tick,0x7ff954e0fd34,199570560,0,0x0,8
tick,0x7ff954e0fd34,199586479,0,0x0,8
tick,0x7ff954e0fd34,199602487,0,0x0,8
tick,0x7ff954e0fd34,199618411,0,0x0,8
tick,0x7ff954e0fd34,199634112,0,0x0,8
tick,0x7ff954e0fd34,199649088,0,0x0,8
tick,0x7ff954e0fd34,199665070,0,0x0,8
tick,0x7ff954e0fd34,199680257,0,0x0,8
tick,0x7ff954e0fd34,199695468,0,0x0,8
tick,0x7ff954e0fd34,199711522,0,0x0,8
tick,0x7ff954e0fd34,199726472,0,0x0,8
tick,0x7ff954e0fd34,199741983,0,0x0,8
tick,0x7ff954e0fd34,199757864,0,0x0,8
tick,0x7ff954e0fd34,199773537,0,0x0,8
tick,0x7ff954e0fd34,199789005,0,0x0,8
tick,0x7ff954e0fd34,199804982,0,0x0,8
tick,0x7ff954e0fd34,199821247,0,0x0,8
tick,0x7ff954e0fd34,199835896,0,0x0,8
tick,0x7ff954e0fd34,199851832,0,0x0,8
tick,0x7ff954e0fd34,199866783,0,0x0,8
tick,0x7ff954e0fd34,199882673,0,0x0,8
tick,0x7ff954e0fd34,199898809,0,0x0,8
tick,0x7ff954e0fd34,199914585,0,0x0,8
tick,0x7ff954e0fd34,199931546,0,0x0,8
tick,0x7ff954e0fd34,199946779,0,0x0,8
tick,0x7ff954e0fd34,199962432,0,0x0,8
tick,0x7ff954e0fd34,199978178,0,0x0,8
tick,0x7ff954e0fd34,199993208,0,0x0,8
tick,0x7ff954e0fd34,200009078,0,0x0,8
tick,0x7ff954e0fd34,200024716,0,0x0,8
tick,0x7ff954e0fd34,200040811,0,0x0,8
tick,0x7ff954e0fd34,200055776,0,0x0,8
tick,0x7ff954e0fd34,200071750,0,0x0,8
tick,0x7ff954e0fd34,200086709,0,0x0,8
tick,0x7ff954e0fd34,200102645,0,0x0,8
tick,0x7ff954e0fd34,200118610,0,0x0,8
tick,0x7ff954e0fd34,200134567,0,0x0,8
tick,0x7ff954e0fd34,200150510,0,0x0,8
tick,0x7ff954e0fd34,200165501,0,0x0,8
tick,0x7ff954e0fd34,200181436,0,0x0,8
tick,0x7ff954e0fd34,200196433,0,0x0,8
tick,0x7ff954e0fd34,200211357,0,0x0,8
tick,0x7ff954e0fd34,200226446,0,0x0,8
tick,0x7ff954e0fd34,200241427,0,0x0,8
tick,0x7ff954e0fd34,200257377,0,0x0,8
tick,0x7ff954e0fd34,200273361,0,0x0,8
tick,0x7ff954e0fd34,200289281,0,0x0,8
tick,0x7ff954e0fd34,200305258,0,0x0,8
tick,0x7ff954e0fd34,200321236,0,0x0,8
tick,0x7ff954e0fd34,200337150,0,0x0,8
tick,0x7ff954e0fd34,200352635,0,0x0,8
tick,0x7ff954e0fd34,200368596,0,0x0,8
tick,0x7ff954e0fd34,200384200,0,0x0,8
tick,0x7ff954e0fd34,200400160,0,0x0,8
tick,0x7ff954e0fd34,200416131,0,0x0,8
tick,0x7ff954e0fd34,200432075,0,0x0,8
tick,0x7ff954e0fd34,200448043,0,0x0,8
tick,0x7ff954e0fd34,200463104,0,0x0,8
tick,0x7ff954e0fd34,200478253,0,0x0,8
tick,0x7ff954e0fd34,200493408,0,0x0,8
tick,0x7ff954e0fd34,200509359,0,0x0,8
tick,0x7ff954e0fd34,200524317,0,0x0,8
tick,0x7ff954e0fd34,200539161,0,0x0,8
tick,0x7ff954e0fd34,200554981,0,0x0,8
tick,0x7ff954e0fd34,200570423,0,0x0,8
tick,0x7ff954e0fd34,200586398,0,0x0,8
tick,0x7ff954e0fd34,200602348,0,0x0,8
tick,0x7ff954e0fd34,200618322,0,0x0,8
tick,0x7ff954e0fd34,200633933,0,0x0,8
tick,0x7ff954e0fd34,200649922,0,0x0,8
tick,0x7ff954e0fd34,200665464,0,0x0,8
tick,0x7ff954e0fd34,200681406,0,0x0,8
tick,0x7ff954e0fd34,200697378,0,0x0,8
tick,0x7ff954e0fd34,200713315,0,0x0,8
tick,0x7ff954e0fd34,200728325,0,0x0,8
tick,0x7ff954e0fd34,200743288,0,0x0,8
tick,0x7ff954e0fd34,200758250,0,0x0,8
tick,0x7ff954e0fd34,200774177,0,0x0,8
tick,0x7ff954e0fd34,200789145,0,0x0,8
tick,0x7ff954e0fd34,200805080,0,0x0,8
tick,0x7ff954e0fd34,200820402,0,0x0,8
tick,0x7ff954e0fd34,200835295,0,0x0,8
tick,0x7ff954e0fd34,200850259,0,0x0,8
tick,0x7ff954e0fd34,200865591,0,0x0,8
tick,0x7ff954e0fd34,200881528,0,0x0,8
tick,0x7ff954e0fd34,200897460,0,0x0,8
tick,0x7ff954e0fd34,200913425,0,0x0,8
tick,0x7ff954e0fd34,200928389,0,0x0,8
tick,0x7ff954e0fd34,200944500,0,0x0,8
tick,0x7ff954e0fd34,200959456,0,0x0,8
tick,0x7ff954e0fd34,200975424,0,0x0,8
tick,0x7ff954e0fd34,200991378,0,0x0,8
tick,0x7ff954e0fd34,201007354,0,0x0,8
tick,0x7ff954e0fd34,201023285,0,0x0,8
tick,0x7ff954e0fd34,201039256,0,0x0,8
tick,0x7ff954e0fd34,201055194,0,0x0,8
tick,0x7ff954e0fd34,201071149,0,0x0,8
tick,0x7ff954e0fd34,201087112,0,0x0,8
tick,0x7ff954e0fd34,201103072,0,0x0,8
tick,0x7ff954e0fd34,201119046,0,0x0,8
tick,0x7ff954e0fd34,201134458,0,0x0,8
tick,0x7ff954e0fd34,201149429,0,0x0,8
tick,0x7ff954e0fd34,201164410,0,0x0,8
tick,0x7ff954e0fd34,201180410,0,0x0,8
tick,0x7ff954e0fd34,201196347,0,0x0,8
tick,0x7ff954e0fd34,201211255,0,0x0,8
tick,0x7ff954e0fd34,201226308,0,0x0,8
tick,0x7ff954e0fd34,201241528,0,0x0,8
tick,0x7ff954e0fd34,201257419,0,0x0,8
tick,0x7ff954e0fd34,201273364,0,0x0,8
tick,0x7ff954e0fd34,201289342,0,0x0,8
tick,0x7ff954e0fd34,201305283,0,0x0,8
tick,0x7ff954e0fd34,201320625,0,0x0,8
tick,0x7ff954e0fd34,201336597,0,0x0,8
tick,0x7ff954e0fd34,201352482,0,0x0,8
tick,0x7ff954e0fd34,201368445,0,0x0,8
tick,0x7ff954e0fd34,201383406,0,0x0,8
tick,0x7ff954e0fd34,201399376,0,0x0,8
tick,0x7ff954e0fd34,201414113,0,0x0,8
tick,0x7ff954e0fd34,201429211,0,0x0,8
tick,0x7ff954e0fd34,201443850,0,0x0,8
tick,0x7ff954e0fd34,201459749,0,0x0,8
tick,0x7ff954e0fd34,201475033,0,0x0,8
tick,0x7ff954e0fd34,201491016,0,0x0,8
tick,0x7ff954e0fd34,201506943,0,0x0,8
tick,0x7ff954e0fd34,201522937,0,0x0,8
tick,0x7ff954e0fd34,201538864,0,0x0,8
tick,0x7ff954e0fd34,201554835,0,0x0,8
tick,0x7ff954e0fd34,201570789,0,0x0,8
tick,0x7ff954e0fd34,201586755,0,0x0,8
tick,0x7ff954e0fd34,201601704,0,0x0,8
tick,0x7ff954e0fd34,201617699,0,0x0,8
tick,0x7ff954e0fd34,201632693,0,0x0,8
tick,0x7ff954e0fd34,201647603,0,0x0,8
tick,0x7ff954e0fd34,201662927,0,0x0,8
tick,0x7ff954e0fd34,201678644,0,0x0,8
tick,0x7ff954e0fd34,201694490,0,0x0,8
tick,0x7ff954e0fd34,201710357,0,0x0,8
tick,0x7ff954e0fd34,201725298,0,0x0,8
tick,0x7ff954e0fd34,201741510,0,0x0,8
tick,0x7ff954e0fd34,201756766,0,0x0,8
tick,0x7ff954e0fd34,201772200,0,0x0,8
tick,0x7ff954e0fd34,201788336,0,0x0,8
tick,0x7ff954e0fd34,201804226,0,0x0,8
tick,0x7ff954e0fd34,201819192,0,0x0,8
tick,0x7ff954e0fd34,201834149,0,0x0,8
tick,0x7ff954e0fd34,201849132,0,0x0,8
tick,0x7ff954e0fd34,201864108,0,0x0,8
tick,0x7ff954e0fd34,201880141,0,0x0,8
tick,0x7ff954e0fd34,201896110,0,0x0,8
tick,0x7ff954e0fd34,201912004,0,0x0,8
tick,0x7ff954e0fd34,201926923,0,0x0,8
tick,0x7ff954e0fd34,201942879,0,0x0,8
tick,0x7ff954e0fd34,201957922,0,0x0,8
tick,0x7ff954e0fd34,201972773,0,0x0,8
tick,0x7ff954e0fd34,201988748,0,0x0,8
tick,0x7ff954e0fd34,202003705,0,0x0,8
tick,0x7ff954e0fd34,202018678,0,0x0,8
tick,0x7ff954e0fd34,202033631,0,0x0,8
tick,0x7ff954e0fd34,202048652,0,0x0,8
tick,0x7ff954e0fd34,202064532,0,0x0,8
tick,0x7ff954e0fd34,202080479,0,0x0,8
tick,0x7ff954e0fd34,202096051,0,0x0,8
tick,0x7ff954e0fd34,202112127,0,0x0,8
tick,0x7ff954e0fd34,202128044,0,0x0,8
tick,0x7ff954e0fd34,202142930,0,0x0,8
tick,0x7ff954e0fd34,202157960,0,0x0,8
tick,0x7ff954e0fd34,202172985,0,0x0,8
tick,0x7ff954e0fd34,202188418,0,0x0,8
tick,0x7ff954e0fd34,202204537,0,0x0,8
tick,0x7ff954e0fd34,202220244,0,0x0,8
tick,0x7ff954e0fd34,202235218,0,0x0,8
tick,0x7ff954e0fd34,202250169,0,0x0,8
tick,0x7ff954e0fd34,202265166,0,0x0,8
tick,0x7ff954e0fd34,202281094,0,0x0,8
tick,0x7ff954e0fd34,202296043,0,0x0,8
tick,0x7ff954e0fd34,202312009,0,0x0,8
tick,0x7ff954e0fd34,202326994,0,0x0,8
tick,0x7ff954e0fd34,202342005,0,0x0,8
tick,0x7ff954e0fd34,202356892,0,0x0,8
tick,0x7ff954e0fd34,202371860,0,0x0,8
tick,0x7ff954e0fd34,202387793,0,0x0,8
tick,0x7ff954e0fd34,202403734,0,0x0,8
tick,0x7ff954e0fd34,202419684,0,0x0,8
tick,0x7ff954e0fd34,202435596,0,0x0,8
tick,0x7ff954e0fd34,202450556,0,0x0,8
tick,0x7ff954e0fd34,202466487,0,0x0,8
tick,0x7ff954e0fd34,202482484,0,0x0,8
tick,0x7ff954e0fd34,202497820,0,0x0,8
tick,0x7ff954e0fd34,202512814,0,0x0,8
tick,0x7ff954e0fd34,202528734,0,0x0,8
tick,0x7ff954e0fd34,202543763,0,0x0,8
tick,0x7ff954e0fd34,202559693,0,0x0,8
tick,0x7ff954e0fd34,202575624,0,0x0,8
tick,0x7ff954e0fd34,202590942,0,0x0,8
tick,0x7ff954e0fd34,202606941,0,0x0,8
tick,0x7ff954e0fd34,202621886,0,0x0,8
tick,0x7ff954e0fd34,202637956,0,0x0,8
tick,0x7ff954e0fd34,202652781,0,0x0,8
tick,0x7ff954e0fd34,202668751,0,0x0,8
tick,0x7ff954e0fd34,202683718,0,0x0,8
tick,0x7ff954e0fd34,202698685,0,0x0,8
tick,0x7ff954e0fd34,202713606,0,0x0,8
tick,0x7ff954e0fd34,202728637,0,0x0,8
tick,0x7ff954e0fd34,202743568,0,0x0,8
tick,0x7ff954e0fd34,202758535,0,0x0,8
tick,0x7ff954e0fd34,202773506,0,0x0,8
tick,0x7ff954e0fd34,202789458,0,0x0,8
tick,0x7ff954e0fd34,202805384,0,0x0,8
tick,0x7ff954e0fd34,202821366,0,0x0,8
tick,0x7ff954e0fd34,202837312,0,0x0,8
tick,0x7ff954e0fd34,202853268,0,0x0,8
tick,0x7ff954e0fd34,202869226,0,0x0,8
tick,0x7ff954e0fd34,202885173,0,0x0,8
tick,0x7ff954e0fd34,202900898,0,0x0,8
tick,0x7ff954e0fd34,202916784,0,0x0,8
tick,0x7ff954e0fd34,202932706,0,0x0,8
tick,0x7ff954e0fd34,202948697,0,0x0,8
tick,0x7ff954e0fd34,202963631,0,0x0,8
tick,0x7ff954e0fd34,202979589,0,0x0,8
tick,0x7ff954e0fd34,202995045,0,0x0,8
tick,0x7ff954e0fd34,203009985,0,0x0,8
tick,0x7ff954e0fd34,203024916,0,0x0,8
tick,0x7ff954e0fd34,203039934,0,0x0,8
tick,0x7ff954e0fd34,203054867,0,0x0,8
tick,0x7ff954e0fd34,203070827,0,0x0,8
tick,0x7ff954e0fd34,203085761,0,0x0,8
tick,0x7ff954e0fd34,203101739,0,0x0,8
tick,0x7ff954e0fd34,203116695,0,0x0,8
tick,0x7ff954e0fd34,203131657,0,0x0,8
tick,0x7ff954e0fd34,203146632,0,0x0,8
tick,0x7ff954e0fd34,203161564,0,0x0,8
tick,0x7ff954e0fd34,203177529,0,0x0,8
tick,0x7ff954e0fd34,203193479,0,0x0,8
tick,0x7ff954e0fd34,203209505,0,0x0,8
tick,0x7ff954e0fd34,203225392,0,0x0,8
tick,0x7ff954e0fd34,203240441,0,0x0,8
tick,0x7ff954e0fd34,203255680,0,0x0,8
tick,0x7ff954e0fd34,203271408,0,0x0,8
tick,0x7ff954e0fd34,203287383,0,0x0,8
tick,0x7ff954e0fd34,203302326,0,0x0,8
tick,0x7ff954e0fd34,203318300,0,0x0,8
tick,0x7ff954e0fd34,203333238,0,0x0,8
tick,0x7ff954e0fd34,203349216,0,0x0,8
tick,0x7ff954e0fd34,203364171,0,0x0,8
tick,0x7ff954e0fd34,203379129,0,0x0,8
tick,0x7ff954e0fd34,203394147,0,0x0,8
tick,0x7ff954e0fd34,203408773,0,0x0,8
tick,0x7ff954e0fd34,203424721,0,0x0,8
tick,0x7ff954e0fd34,203440655,0,0x0,8
tick,0x7ff954e0fd34,203456607,0,0x0,8
tick,0x7ff954e0fd34,203471556,0,0x0,8
tick,0x7ff954e0fd34,203487560,0,0x0,8
tick,0x7ff954e0fd34,203502502,0,0x0,8
tick,0x7ff954e0fd34,203518518,0,0x0,8
tick,0x7ff954e0fd34,203533391,0,0x0,8
tick,0x7ff954e0fd34,203549169,0,0x0,8
tick,0x7ff954e0fd34,203565085,0,0x0,8
tick,0x7ff954e0fd34,203581027,0,0x0,8
tick,0x7ff954e0fd34,203596984,0,0x0,8
tick,0x7ff954e0fd34,203612954,0,0x0,8
tick,0x7ff954e0fd34,203628234,0,0x0,8
tick,0x7ff954e0fd34,203643276,0,0x0,8
tick,0x7ff954e0fd34,203658881,0,0x0,8
tick,0x7ff954e0fd34,203673736,0,0x0,8
tick,0x7ff954e0fd34,203688983,0,0x0,8
tick,0x7ff954e0fd34,203704528,0,0x0,8
tick,0x7ff954e0fd34,203719893,0,0x0,8
tick,0x7ff954e0fd34,203735377,0,0x0,8
tick,0x7ff954e0fd34,203751109,0,0x0,8
tick,0x7ff954e0fd34,203766493,0,0x0,8
tick,0x7ff954e0fd34,203782443,0,0x0,8
tick,0x7ff954e0fd34,203798437,0,0x0,8
tick,0x7ff954e0fd34,203814372,0,0x0,8
tick,0x7ff954e0fd34,203830307,0,0x0,8
tick,0x7ff954e0fd34,203846268,0,0x0,8
tick,0x7ff954e0fd34,203862241,0,0x0,8
tick,0x7ff954e0fd34,203877550,0,0x0,8
tick,0x7ff954e0fd34,203893547,0,0x0,8
tick,0x7ff954e0fd34,203909444,0,0x0,8
tick,0x7ff954e0fd34,203925400,0,0x0,8
tick,0x7ff954e0fd34,203940467,0,0x0,8
tick,0x7ff954e0fd34,203955369,0,0x0,8
tick,0x7ff954e0fd34,203970370,0,0x0,8
tick,0x7ff954e0fd34,203985315,0,0x0,8
tick,0x7ff954e0fd34,204001930,0,0x0,8
tick,0x7ff954e0fd34,204016915,0,0x0,8
tick,0x7ff954e0fd34,204032933,0,0x0,8
tick,0x7ff954e0fd34,204048884,0,0x0,8
tick,0x7ff954e0fd34,204064852,0,0x0,8
tick,0x7ff954e0fd34,204080961,0,0x0,8
tick,0x7ff954e0fd34,204096774,0,0x0,8
tick,0x7ff954e0fd34,204112759,0,0x0,8
tick,0x7ff954e0fd34,204128794,0,0x0,8
tick,0x7ff954e0fd34,204144665,0,0x0,8
tick,0x7ff954e0fd34,204160652,0,0x0,8
tick,0x7ff954e0fd34,204176523,0,0x0,8
tick,0x7ff954e0fd34,204191503,0,0x0,8
tick,0x7ff954e0fd34,204207190,0,0x0,8
tick,0x7ff954e0fd34,204223188,0,0x0,8
tick,0x7ff954e0fd34,204238126,0,0x0,8
tick,0x7ff954e0fd34,204253061,0,0x0,8
tick,0x7ff954e0fd34,204268035,0,0x0,8
tick,0x7ff954e0fd34,204283030,0,0x0,8
tick,0x7ff954e0fd34,204298949,0,0x0,8
tick,0x7ff954e0fd34,204313935,0,0x0,8
tick,0x7ff954e0fd34,204328930,0,0x0,8
tick,0x7ff954e0fd34,204343850,0,0x0,8
tick,0x7ff954e0fd34,204358814,0,0x0,8
tick,0x7ff954e0fd34,204374755,0,0x0,8
tick,0x7ff954e0fd34,204389718,0,0x0,8
tick,0x7ff954e0fd34,204405704,0,0x0,8
tick,0x7ff954e0fd34,204421616,0,0x0,8
tick,0x7ff954e0fd34,204437610,0,0x0,8
tick,0x7ff954e0fd34,204453651,0,0x0,8
tick,0x7ff954e0fd34,204469689,0,0x0,8
tick,0x7ff954e0fd34,204485562,0,0x0,8
tick,0x7ff954e0fd34,204501538,0,0x0,8
tick,0x7ff954e0fd34,204517484,0,0x0,8
tick,0x7ff954e0fd34,204533478,0,0x0,8
tick,0x7ff954e0fd34,204549450,0,0x0,8
tick,0x7ff954e0fd34,204565387,0,0x0,8
tick,0x7ff954e0fd34,204581350,0,0x0,8
tick,0x7ff954e0fd34,204596502,0,0x0,8
tick,0x7ff954e0fd34,204612308,0,0x0,8
tick,0x7ff954e0fd34,204627232,0,0x0,8
tick,0x7ff954e0fd34,204643238,0,0x0,8
tick,0x7ff954e0fd34,204658834,0,0x0,8
tick,0x7ff954e0fd34,204673756,0,0x0,8
tick,0x7ff954e0fd34,204688732,0,0x0,8
tick,0x7ff954e0fd34,204703680,0,0x0,8
tick,0x7ff954e0fd34,204718867,0,0x0,8
tick,0x7ff954e0fd34,204734592,0,0x0,8
tick,0x7ff954e0fd34,204752326,0,0x0,8
tick,0x7ff954e0fd34,204769051,0,0x0,8
tick,0x7ff954e0fd34,204786418,0,0x0,8
tick,0x7ff954e0fd34,204795964,0,0x0,8
tick,0x7ff954e0fd34,204811080,0,0x0,8
tick,0x7ff954e0fd34,204826919,0,0x0,8
tick,0x7ff954e0fd34,204842864,0,0x0,8
tick,0x7ff954e0fd34,204858898,0,0x0,8
tick,0x7ff954e0fd34,204873845,0,0x0,8
tick,0x7ff954e0fd34,204889831,0,0x0,8
tick,0x7ff954e0fd34,204904653,0,0x0,8
tick,0x7ff954e0fd34,204920633,0,0x0,8
tick,0x7ff954e0fd34,204936637,0,0x0,8
tick,0x7ff954e0fd34,204952538,0,0x0,8
tick,0x7ff954e0fd34,204968496,0,0x0,8
tick,0x7ff954e0fd34,204984454,0,0x0,8
tick,0x7ff954e0fd34,204999382,0,0x0,8
tick,0x7ff954e0fd34,205014342,0,0x0,8
tick,0x7ff954e0fd34,205030318,0,0x0,8
tick,0x7ff954e0fd34,205046273,0,0x0,8
tick,0x7ff954e0fd34,205061224,0,0x0,8
tick,0x7ff954e0fd34,205076217,0,0x0,8
tick,0x7ff954e0fd34,205092129,0,0x0,8
tick,0x7ff954e0fd34,205108148,0,0x0,8
tick,0x7ff954e0fd34,205123025,0,0x0,8
tick,0x7ff954e0fd34,205138017,0,0x0,8
tick,0x7ff954e0fd34,205153948,0,0x0,8
tick,0x7ff954e0fd34,205169915,0,0x0,8
tick,0x7ff954e0fd34,205184869,0,0x0,8
tick,0x7ff954e0fd34,205200862,0,0x0,8
tick,0x7ff954e0fd34,205215791,0,0x0,8
tick,0x7ff954e0fd34,205231756,0,0x0,8
tick,0x7ff954e0fd34,205247701,0,0x0,8
tick,0x7ff954e0fd34,205263679,0,0x0,8
tick,0x7ff954e0fd34,205279719,0,0x0,8
tick,0x7ff954e0fd34,205294594,0,0x0,8
tick,0x7ff954e0fd34,205310540,0,0x0,8
tick,0x7ff954e0fd34,205325801,0,0x0,8
tick,0x7ff954e0fd34,205341773,0,0x0,8
tick,0x7ff954e0fd34,205357768,0,0x0,8
tick,0x7ff954e0fd34,205373676,0,0x0,8
tick,0x7ff954e0fd34,205389659,0,0x0,8
tick,0x7ff954e0fd34,205404609,0,0x0,8
tick,0x7ff954e0fd34,205419606,0,0x0,8
tick,0x7ff954e0fd34,205434573,0,0x0,8
tick,0x7ff954e0fd34,205449513,0,0x0,8
tick,0x7ff954e0fd34,205465688,0,0x0,8
tick,0x7ff954e0fd34,205480434,0,0x0,8
tick,0x7ff954e0fd34,205496384,0,0x0,8
tick,0x7ff954e0fd34,205512320,0,0x0,8
tick,0x7ff954e0fd34,205527349,0,0x0,8
tick,0x7ff954e0fd34,205543247,0,0x0,8
tick,0x7ff954e0fd34,205558206,0,0x0,8
tick,0x7ff954e0fd34,205573149,0,0x0,8
tick,0x7ff954e0fd34,205588162,0,0x0,8
tick,0x7ff954e0fd34,205606100,0,0x0,8
tick,0x7ff954e0fd34,205619064,0,0x0,8
tick,0x7ff954e0fd34,205634016,0,0x0,8
tick,0x7ff954e0fd34,205649664,0,0x0,8
tick,0x7ff954e0fd34,205664029,0,0x0,8
tick,0x7ff954e0fd34,205678888,0,0x0,8
tick,0x7ff954e0fd34,205693837,0,0x0,8
tick,0x7ff954e0fd34,205708858,0,0x0,8
tick,0x7ff954e0fd34,205724763,0,0x0,8
tick,0x7ff954e0fd34,205739727,0,0x0,8
tick,0x7ff954e0fd34,205755699,0,0x0,8
tick,0x7ff954e0fd34,205770649,0,0x0,8
tick,0x7ff954e0fd34,205785681,0,0x0,8
tick,0x7ff954e0fd34,205800909,0,0x0,8
tick,0x7ff954e0fd34,205816854,0,0x0,8
tick,0x7ff954e0fd34,205831823,0,0x0,8
tick,0x7ff954e0fd34,205847740,0,0x0,8
tick,0x7ff954e0fd34,205862776,0,0x0,8
tick,0x7ff954e0fd34,205878490,0,0x0,8
tick,0x7ff954e0fd34,205894196,0,0x0,8
tick,0x7ff954e0fd34,205910147,0,0x0,8
tick,0x7ff954e0fd34,205925934,0,0x0,8
tick,0x7ff954e0fd34,205941893,0,0x0,8
tick,0x7ff954e0fd34,205957123,0,0x0,8
tick,0x7ff954e0fd34,205972112,0,0x0,8
tick,0x7ff954e0fd34,205988041,0,0x0,8
tick,0x7ff954e0fd34,206003441,0,0x0,8
tick,0x7ff954e0fd34,206019403,0,0x0,8
tick,0x7ff954e0fd34,206035379,0,0x0,8
tick,0x7ff954e0fd34,206050350,0,0x0,8
tick,0x7ff954e0fd34,206066295,0,0x0,8
tick,0x7ff954e0fd34,206081991,0,0x0,8
tick,0x7ff954e0fd34,206096607,0,0x0,8
tick,0x7ff954e0fd34,206112337,0,0x0,8
tick,0x7ff954e0fd34,206127263,0,0x0,8
tick,0x7ff954e0fd34,206143189,0,0x0,8
tick,0x7ff954e0fd34,206158454,0,0x0,8
tick,0x7ff954e0fd34,206173433,0,0x0,8
tick,0x7ff954e0fd34,206188381,0,0x0,8
tick,0x7ff954e0fd34,206203331,0,0x0,8
tick,0x7ff954e0fd34,206218329,0,0x0,8
tick,0x7ff954e0fd34,206233239,0,0x0,8
tick,0x7ff954e0fd34,206248275,0,0x0,8
tick,0x7ff954e0fd34,206263253,0,0x0,8
tick,0x7ff954e0fd34,206279134,0,0x0,8
tick,0x7ff954e0fd34,206295088,0,0x0,8
tick,0x7ff954e0fd34,206311031,0,0x0,8
tick,0x7ff954e0fd34,206327007,0,0x0,8
tick,0x7ff954e0fd34,206342004,0,0x0,8
tick,0x7ff954e0fd34,206357951,0,0x0,8
tick,0x7ff954e0fd34,206372863,0,0x0,8
tick,0x7ff954e0fd34,206387845,0,0x0,8
tick,0x7ff954e0fd34,206403512,0,0x0,8
tick,0x7ff954e0fd34,206419503,0,0x0,8
tick,0x7ff954e0fd34,206435432,0,0x0,8
tick,0x7ff954e0fd34,206450413,0,0x0,8
tick,0x7ff954e0fd34,206465370,0,0x0,8
tick,0x7ff954e0fd34,206480385,0,0x0,8
tick,0x7ff954e0fd34,206495327,0,0x0,8
tick,0x7ff954e0fd34,206511247,0,0x0,8
tick,0x7ff954e0fd34,206527177,0,0x0,8
tick,0x7ff954e0fd34,206543136,0,0x0,8
tick,0x7ff954e0fd34,206559100,0,0x0,8
tick,0x7ff954e0fd34,206574052,0,0x0,8
tick,0x7ff954e0fd34,206589058,0,0x0,8
tick,0x7ff954e0fd34,206604989,0,0x0,8
tick,0x7ff954e0fd34,206620934,0,0x0,8
tick,0x7ff954e0fd34,206636898,0,0x0,8
tick,0x7ff954e0fd34,206652889,0,0x0,8
tick,0x7ff954e0fd34,206668827,0,0x0,8
tick,0x7ff954e0fd34,206683812,0,0x0,8
tick,0x7ff954e0fd34,206698721,0,0x0,8
tick,0x7ff954e0fd34,206713854,0,0x0,8
tick,0x7ff954e0fd34,206728834,0,0x0,8
tick,0x7ff954e0fd34,206743747,0,0x0,8
tick,0x7ff954e0fd34,206758744,0,0x0,8
tick,0x7ff954e0fd34,206774667,0,0x0,8
tick,0x7ff954e0fd34,206789640,0,0x0,8
tick,0x7ff954e0fd34,206805585,0,0x0,8
tick,0x7ff954e0fd34,206821551,0,0x0,8
tick,0x7ff954e0fd34,206837520,0,0x0,8
tick,0x7ff954e0fd34,206853455,0,0x0,8
tick,0x7ff954e0fd34,206869465,0,0x0,8
tick,0x7ff954e0fd34,206885386,0,0x0,8
tick,0x7ff954e0fd34,206901323,0,0x0,8
tick,0x7ff954e0fd34,206916454,0,0x0,8
tick,0x7ff954e0fd34,206931453,0,0x0,8
tick,0x7ff954e0fd34,206946376,0,0x0,8
tick,0x7ff954e0fd34,206961375,0,0x0,8
tick,0x7ff954e0fd34,206977292,0,0x0,8
tick,0x7ff954e0fd34,206993254,0,0x0,8
tick,0x7ff954e0fd34,207008861,0,0x0,8
tick,0x7ff954e0fd34,207024777,0,0x0,8
tick,0x7ff954e0fd34,207039777,0,0x0,8
tick,0x7ff954e0fd34,207054683,0,0x0,8
tick,0x7ff954e0fd34,207069680,0,0x0,8
tick,0x7ff954e0fd34,207085608,0,0x0,8
tick,0x7ff954e0fd34,207100573,0,0x0,8
tick,0x7ff954e0fd34,207116513,0,0x0,8
tick,0x7ff954e0fd34,207132482,0,0x0,8
tick,0x7ff954e0fd34,207148466,0,0x0,8
tick,0x7ff954e0fd34,207164412,0,0x0,8
tick,0x7ff954e0fd34,207180466,0,0x0,8
tick,0x7ff954e0fd34,207196303,0,0x0,8
tick,0x7ff954e0fd34,207211280,0,0x0,8
tick,0x7ff954e0fd34,207227214,0,0x0,8
tick,0x7ff954e0fd34,207242184,0,0x0,8
tick,0x7ff954e0fd34,207258174,0,0x0,8
tick,0x7ff954e0fd34,207274112,0,0x0,8
tick,0x7ff954e0fd34,207290045,0,0x0,8
tick,0x7ff954e0fd34,207306016,0,0x0,8
tick,0x7ff954e0fd34,207320986,0,0x0,8
tick,0x7ff954e0fd34,207335935,0,0x0,8
tick,0x7ff954e0fd34,207351898,0,0x0,8
tick,0x7ff954e0fd34,207367541,0,0x0,8
tick,0x7ff954e0fd34,207382859,0,0x0,8
tick,0x7ff954e0fd34,207398482,0,0x0,8
tick,0x7ff954e0fd34,207413254,0,0x0,8
tick,0x7ff954e0fd34,207429224,0,0x0,8
tick,0x7ff954e0fd34,207445153,0,0x0,8
tick,0x7ff954e0fd34,207461098,0,0x0,8
tick,0x7ff954e0fd34,207476056,0,0x0,8
tick,0x7ff954e0fd34,207491034,0,0x0,8
tick,0x7ff954e0fd34,207506969,0,0x0,8
tick,0x7ff954e0fd34,207522223,0,0x0,8
tick,0x7ff954e0fd34,207537155,0,0x0,8
tick,0x7ff954e0fd34,207552128,0,0x0,8
tick,0x7ff954e0fd34,207568087,0,0x0,8
tick,0x7ff954e0fd34,207583053,0,0x0,8
tick,0x7ff954e0fd34,207599020,0,0x0,8
tick,0x7ff954e0fd34,207614954,0,0x0,8
tick,0x7ff954e0fd34,207630947,0,0x0,8
tick,0x7ff954e0fd34,207645878,0,0x0,8
tick,0x7ff954e0fd34,207660821,0,0x0,8
tick,0x7ff954e0fd34,207675794,0,0x0,8
tick,0x7ff954e0fd34,207690936,0,0x0,8
tick,0x7ff954e0fd34,207705968,0,0x0,8
tick,0x7ff954e0fd34,207720869,0,0x0,8
tick,0x7ff954e0fd34,207735820,0,0x0,8
tick,0x7ff954e0fd34,207750812,0,0x0,8
tick,0x7ff954e0fd34,207765732,0,0x0,8
tick,0x7ff954e0fd34,207781710,0,0x0,8
tick,0x7ff954e0fd34,207796771,0,0x0,8
tick,0x7ff954e0fd34,207812628,0,0x0,8
tick,0x7ff954e0fd34,207828616,0,0x0,8
tick,0x7ff954e0fd34,207844606,0,0x0,8
tick,0x7ff954e0fd34,207859496,0,0x0,8
tick,0x7ff954e0fd34,207874457,0,0x0,8
tick,0x7ff954e0fd34,207889456,0,0x0,8
tick,0x7ff954e0fd34,207904359,0,0x0,8
tick,0x7ff954e0fd34,207920348,0,0x0,8
tick,0x7ff954e0fd34,207936310,0,0x0,8
tick,0x7ff954e0fd34,207951243,0,0x0,8
tick,0x7ff954e0fd34,207966226,0,0x0,8
tick,0x7ff954e0fd34,207981163,0,0x0,8
tick,0x7ff954e0fd34,207996152,0,0x0,8
tick,0x7ff954e0fd34,208012095,0,0x0,8
tick,0x7ff954e0fd34,208028065,0,0x0,8
tick,0x7ff954e0fd34,208043998,0,0x0,8
tick,0x7ff954e0fd34,208059951,0,0x0,8
tick,0x7ff954e0fd34,208075925,0,0x0,8
tick,0x7ff954e0fd34,208091990,0,0x0,8
tick,0x7ff954e0fd34,208107840,0,0x0,8
tick,0x7ff954e0fd34,208123803,0,0x0,8
tick,0x7ff954e0fd34,208139842,0,0x0,8
tick,0x7ff954e0fd34,208155710,0,0x0,8
tick,0x7ff954e0fd34,208171649,0,0x0,8
tick,0x7ff954e0fd34,208187630,0,0x0,8
tick,0x7ff954e0fd34,208203575,0,0x0,8
tick,0x7ff954e0fd34,208219520,0,0x0,8
tick,0x7ff954e0fd34,208235490,0,0x0,8
tick,0x7ff954e0fd34,208251450,0,0x0,8
tick,0x7ff954e0fd34,208267400,0,0x0,8
tick,0x7ff954e0fd34,208283344,0,0x0,8
tick,0x7ff954e0fd34,208299368,0,0x0,8
tick,0x7ff954e0fd34,208315129,0,0x0,8
tick,0x7ff954e0fd34,208330541,0,0x0,8
tick,0x7ff954e0fd34,208345261,0,0x0,8
tick,0x7ff954e0fd34,208360426,0,0x0,8
tick,0x7ff954e0fd34,208375620,0,0x0,8
tick,0x7ff954e0fd34,208391058,0,0x0,8
tick,0x7ff954e0fd34,208406250,0,0x0,8
tick,0x7ff954e0fd34,208422219,0,0x0,8
tick,0x7ff954e0fd34,208437206,0,0x0,8
tick,0x7ff954e0fd34,208453129,0,0x0,8
tick,0x7ff954e0fd34,208468925,0,0x0,8
tick,0x7ff954e0fd34,208484844,0,0x0,8
tick,0x7ff954e0fd34,208500797,0,0x0,8
tick,0x7ff954e0fd34,208516725,0,0x0,8
tick,0x7ff954e0fd34,208532674,0,0x0,8
tick,0x7ff954e0fd34,208548648,0,0x0,8
tick,0x7ff954e0fd34,208564593,0,0x0,8
tick,0x7ff954e0fd34,208580556,0,0x0,8
tick,0x7ff954e0fd34,208596518,0,0x0,8
tick,0x7ff954e0fd34,208611489,0,0x0,8
tick,0x7ff954e0fd34,208627412,0,0x0,8
tick,0x7ff954e0fd34,208642459,0,0x0,8
tick,0x7ff954e0fd34,208658405,0,0x0,8
tick,0x7ff954e0fd34,208673396,0,0x0,8
tick,0x7ff954e0fd34,208688262,0,0x0,8
tick,0x7ff954e0fd34,208703258,0,0x0,8
tick,0x7ff954e0fd34,208718705,0,0x0,8
tick,0x7ff954e0fd34,208734663,0,0x0,8
tick,0x7ff954e0fd34,208750720,0,0x0,8
tick,0x7ff954e0fd34,208768239,0,0x0,8
tick,0x7ff954e0fd34,208782254,0,0x0,8
tick,0x7ff954e0fd34,208796513,0,0x0,8
tick,0x7ff954e0fd34,208812720,0,0x0,8
tick,0x7ff954e0fd34,208827032,0,0x0,8
tick,0x7ff954e0fd34,208841916,0,0x0,8
tick,0x7ff954e0fd34,208857926,0,0x0,8
tick,0x7ff954e0fd34,208873848,0,0x0,8
tick,0x7ff954e0fd34,208889822,0,0x0,8
tick,0x7ff954e0fd34,208905712,0,0x0,8
tick,0x7ff954e0fd34,208921672,0,0x0,8
tick,0x7ff954e0fd34,208937654,0,0x0,8
tick,0x7ff954e0fd34,208953630,0,0x0,8
tick,0x7ff954e0fd34,208969665,0,0x0,8
tick,0x7ff954e0fd34,208985533,0,0x0,8
tick,0x7ff954e0fd34,209002152,0,0x0,8
tick,0x7ff954e0fd34,209017436,0,0x0,8
tick,0x7ff954e0fd34,209033369,0,0x0,8
tick,0x7ff954e0fd34,209049366,0,0x0,8
tick,0x7ff954e0fd34,209064343,0,0x0,8
tick,0x7ff954e0fd34,209080262,0,0x0,8
tick,0x7ff954e0fd34,209095219,0,0x0,8
tick,0x7ff954e0fd34,209110342,0,0x0,8
tick,0x7ff954e0fd34,209126139,0,0x0,8
tick,0x7ff954e0fd34,209141087,0,0x0,8
tick,0x7ff954e0fd34,209157133,0,0x0,8
tick,0x7ff954e0fd34,209173041,0,0x0,8
tick,0x7ff954e0fd34,209189030,0,0x0,8
tick,0x7ff954e0fd34,209205002,0,0x0,8
tick,0x7ff954e0fd34,209220259,0,0x0,8
tick,0x7ff954e0fd34,209236340,0,0x0,8
tick,0x7ff954e0fd34,209251120,0,0x0,8
tick,0x7ff954e0fd34,209267099,0,0x0,8
tick,0x7ff954e0fd34,209283366,0,0x0,8
tick,0x7ff954e0fd34,209298984,0,0x0,8
tick,0x7ff954e0fd34,209315051,0,0x0,8
tick,0x7ff954e0fd34,209330018,0,0x0,8
tick,0x7ff954e0fd34,209345846,0,0x0,8
tick,0x7ff954e0fd34,209360985,0,0x0,8
tick,0x7ff954e0fd34,209375813,0,0x0,8
tick,0x7ff954e0fd34,209391496,0,0x0,8
tick,0x7ff954e0fd34,209406922,0,0x0,8
tick,0x7ff954e0fd34,209422628,0,0x0,8
tick,0x7ff954e0fd34,209438774,0,0x0,8
tick,0x7ff954e0fd34,209454636,0,0x0,8
tick,0x7ff954e0fd34,209469541,0,0x0,8
tick,0x7ff954e0fd34,209484490,0,0x0,8
tick,0x7ff954e0fd34,209499554,0,0x0,8
tick,0x7ff954e0fd34,209515316,0,0x0,8
tick,0x7ff954e0fd34,209529412,0,0x0,8
tick,0x7ff954e0fd34,209544494,0,0x0,8
tick,0x7ff954e0fd34,209560266,0,0x0,8
tick,0x7ff954e0fd34,209575373,0,0x0,8
tick,0x7ff954e0fd34,209591246,0,0x0,8
tick,0x7ff954e0fd34,209607139,0,0x0,8
tick,0x7ff954e0fd34,209622207,0,0x0,8
tick,0x7ff954e0fd34,209637108,0,0x0,8
tick,0x7ff954e0fd34,209652325,0,0x0,8
tick,0x7ff954e0fd34,209667032,0,0x0,8
tick,0x7ff954e0fd34,209683427,0,0x0,8
tick,0x7ff954e0fd34,209697953,0,0x0,8
tick,0x7ff954e0fd34,209713894,0,0x0,8
tick,0x7ff954e0fd34,209731410,0,0x0,8
tick,0x7ff954e0fd34,209743784,0,0x0,8
tick,0x7ff954e0fd34,209759118,0,0x0,8
tick,0x7ff954e0fd34,209774704,0,0x0,8
tick,0x7ff954e0fd34,209789679,0,0x0,8
tick,0x7ff954e0fd34,209805651,0,0x0,8
tick,0x7ff954e0fd34,209821786,0,0x0,8
tick,0x7ff954e0fd34,209837581,0,0x0,8
tick,0x7ff954e0fd34,209853475,0,0x0,8
tick,0x7ff954e0fd34,209869478,0,0x0,8
tick,0x7ff954e0fd34,209885393,0,0x0,8
tick,0x7ff954e0fd34,209901500,0,0x0,8
tick,0x7ff954e0fd34,209917347,0,0x0,8
tick,0x7ff954e0fd34,209933292,0,0x0,8
tick,0x7ff954e0fd34,209948248,0,0x0,8
tick,0x7ff954e0fd34,209963200,0,0x0,8
tick,0x7ff954e0fd34,209978148,0,0x0,8
tick,0x7ff954e0fd34,209993149,0,0x0,8
tick,0x7ff954e0fd34,210009100,0,0x0,8
tick,0x7ff954e0fd34,210025046,0,0x0,8
tick,0x7ff954e0fd34,210039995,0,0x0,8
tick,0x7ff954e0fd34,210055037,0,0x0,8
tick,0x7ff954e0fd34,210069938,0,0x0,8
tick,0x7ff954e0fd34,210084914,0,0x0,8
tick,0x7ff954e0fd34,210101137,0,0x0,8
tick,0x7ff954e0fd34,210116827,0,0x0,8
tick,0x7ff954e0fd34,210132755,0,0x0,8
tick,0x7ff954e0fd34,210147697,0,0x0,8
tick,0x7ff954e0fd34,210163679,0,0x0,8
tick,0x7ff954e0fd34,210178625,0,0x0,8
tick,0x7ff954e0fd34,210194595,0,0x0,8
tick,0x7ff954e0fd34,210210566,0,0x0,8
tick,0x7ff954e0fd34,210226562,0,0x0,8
tick,0x7ff954e0fd34,210242451,0,0x0,8
tick,0x7ff954e0fd34,210258399,0,0x0,8
tick,0x7ff954e0fd34,210274377,0,0x0,8
tick,0x7ff954e0fd34,210291265,0,0x0,8
tick,0x7ff954e0fd34,210306257,0,0x0,8
tick,0x7ff954e0fd34,210321228,0,0x0,8
tick,0x7ff954e0fd34,210337024,0,0x0,8
tick,0x7ff954e0fd34,210352971,0,0x0,8
tick,0x7ff954e0fd34,210369044,0,0x0,8
tick,0x7ff954e0fd34,210384975,0,0x0,8
tick,0x7ff954e0fd34,210400873,0,0x0,8
tick,0x7ff954e0fd34,210416803,0,0x0,8
tick,0x7ff954e0fd34,210432778,0,0x0,8
tick,0x7ff954e0fd34,210448724,0,0x0,8
tick,0x7ff954e0fd34,210464721,0,0x0,8
tick,0x7ff954e0fd34,210480626,0,0x0,8
tick,0x7ff954e0fd34,210496350,0,0x0,8
tick,0x7ff954e0fd34,210511309,0,0x0,8
tick,0x7ff954e0fd34,210527253,0,0x0,8
tick,0x7ff954e0fd34,210543198,0,0x0,8
tick,0x7ff954e0fd34,210559413,0,0x0,8
tick,0x7ff954e0fd34,210575233,0,0x0,8
tick,0x7ff954e0fd34,210590225,0,0x0,8
tick,0x7ff954e0fd34,210605087,0,0x0,8
tick,0x7ff954e0fd34,210620196,0,0x0,8
tick,0x7ff954e0fd34,210635271,0,0x0,8
tick,0x7ff954e0fd34,210651129,0,0x0,8
tick,0x7ff954e0fd34,210667003,0,0x0,8
tick,0x7ff954e0fd34,210682885,0,0x0,8
tick,0x7ff954e0fd34,210698877,0,0x0,8
tick,0x7ff954e0fd34,210714771,0,0x0,8
tick,0x7ff954e0fd34,210729703,0,0x0,8
tick,0x7ff954e0fd34,210745669,0,0x0,8
tick,0x7ff954e0fd34,210760661,0,0x0,8
tick,0x7ff954e0fd34,210776585,0,0x0,8
tick,0x7ff954e0fd34,210792569,0,0x0,8
tick,0x7ff954e0fd34,210807497,0,0x0,8
tick,0x7ff954e0fd34,210823489,0,0x0,8
tick,0x7ff954e0fd34,210838951,0,0x0,8
tick,0x7ff954e0fd34,210854907,0,0x0,8
tick,0x7ff954e0fd34,210870851,0,0x0,8
tick,0x7ff954e0fd34,210886802,0,0x0,8
tick,0x7ff954e0fd34,210902778,0,0x0,8
tick,0x7ff954e0fd34,210918737,0,0x0,8
tick,0x7ff954e0fd34,210934766,0,0x0,8
tick,0x7ff954e0fd34,210949681,0,0x0,8
tick,0x7ff954e0fd34,210964566,0,0x0,8
tick,0x7ff954e0fd34,210979588,0,0x0,8
tick,0x7ff954e0fd34,210994525,0,0x0,8
tick,0x7ff954e0fd34,211012411,0,0x0,8
tick,0x7ff954e0fd34,211025413,0,0x0,8
tick,0x7ff954e0fd34,211040389,0,0x0,8
tick,0x7ff954e0fd34,211055381,0,0x0,8
tick,0x7ff954e0fd34,211070594,0,0x0,8
tick,0x7ff954e0fd34,211086989,0,0x0,8
tick,0x7ff954e0fd34,211102448,0,0x0,8
tick,0x7ff954e0fd34,211118601,0,0x0,8
tick,0x7ff954e0fd34,211134383,0,0x0,8
tick,0x7ff954e0fd34,211149363,0,0x0,8
tick,0x7ff954e0fd34,211166889,0,0x0,8
tick,0x7ff954e0fd34,211180262,0,0x0,8
tick,0x7ff954e0fd34,211196270,0,0x0,8
tick,0x7ff954e0fd34,211212141,0,0x0,8
tick,0x7ff954e0fd34,211228110,0,0x0,8
tick,0x7ff954e0fd34,211243088,0,0x0,8
tick,0x7ff954e0fd34,211258046,0,0x0,8
tick,0x7ff954e0fd34,211274016,0,0x0,8
tick,0x7ff954e0fd34,211290011,0,0x0,8
tick,0x7ff954e0fd34,211305954,0,0x0,8
tick,0x7ff954e0fd34,211320891,0,0x0,8
tick,0x7ff954e0fd34,211336031,0,0x0,8
tick,0x7ff954e0fd34,211350823,0,0x0,8
tick,0x7ff954e0fd34,211366738,0,0x0,8
tick,0x7ff954e0fd34,211381729,0,0x0,8
tick,0x7ff954e0fd34,211397671,0,0x0,8
tick,0x7ff954e0fd34,211413668,0,0x0,8
tick,0x7ff954e0fd34,211429574,0,0x0,8
tick,0x7ff954e0fd34,211445512,0,0x0,8
tick,0x7ff954e0fd34,211461088,0,0x0,8
tick,0x7ff954e0fd34,211476186,0,0x0,8
tick,0x7ff954e0fd34,211491093,0,0x0,8
tick,0x7ff954e0fd34,211506031,0,0x0,8
tick,0x7ff954e0fd34,211521033,0,0x0,8
tick,0x7ff954e0fd34,211536960,0,0x0,8
tick,0x7ff954e0fd34,211552952,0,0x0,8
tick,0x7ff954e0fd34,211568881,0,0x0,8
tick,0x7ff954e0fd34,211584855,0,0x0,8
tick,0x7ff954e0fd34,211600805,0,0x0,8
tick,0x7ff954e0fd34,211616794,0,0x0,8
tick,0x7ff954e0fd34,211632736,0,0x0,8
tick,0x7ff954e0fd34,211648654,0,0x0,8
tick,0x7ff954e0fd34,211663669,0,0x0,8
tick,0x7ff954e0fd34,211678946,0,0x0,8
tick,0x7ff954e0fd34,211694217,0,0x0,8
tick,0x7ff954e0fd34,211709208,0,0x0,8
tick,0x7ff954e0fd34,211725096,0,0x0,8
tick,0x7ff954e0fd34,211741128,0,0x0,8
tick,0x7ff954e0fd34,211756992,0,0x0,8
tick,0x7ff954e0fd34,211772959,0,0x0,8
tick,0x7ff954e0fd34,211788888,0,0x0,8
tick,0x7ff954e0fd34,211804926,0,0x0,8
tick,0x7ff954e0fd34,211820808,0,0x0,8
tick,0x7ff954e0fd34,211836836,0,0x0,8
tick,0x7ff954e0fd34,211852705,0,0x0,8
tick,0x7ff954e0fd34,211868671,0,0x0,8
tick,0x7ff954e0fd34,211884616,0,0x0,8
tick,0x7ff954e0fd34,211900598,0,0x0,8
tick,0x7ff954e0fd34,211916526,0,0x0,8
tick,0x7ff954e0fd34,211932519,0,0x0,8
tick,0x7ff954e0fd34,211948468,0,0x0,8
tick,0x7ff954e0fd34,211964471,0,0x0,8
tick,0x7ff954e0fd34,211980365,0,0x0,8
tick,0x7ff954e0fd34,211995321,0,0x0,8
tick,0x7ff954e0fd34,212011319,0,0x0,8
tick,0x7ff954e0fd34,212026314,0,0x0,8
tick,0x7ff954e0fd34,212042006,0,0x0,8
tick,0x7ff954e0fd34,212057855,0,0x0,8
tick,0x7ff954e0fd34,212073754,0,0x0,8
tick,0x7ff954e0fd34,212090190,0,0x0,8
tick,0x7ff954e0fd34,212105916,0,0x0,8
tick,0x7ff954e0fd34,212121627,0,0x0,8
tick,0x7ff954e0fd34,212137767,0,0x0,8
tick,0x7ff954e0fd34,212153569,0,0x0,8
tick,0x7ff954e0fd34,212169489,0,0x0,8
tick,0x7ff954e0fd34,212185113,0,0x0,8
tick,0x7ff954e0fd34,212201038,0,0x0,8
tick,0x7ff954e0fd34,212216995,0,0x0,8
tick,0x7ff954e0fd34,212232999,0,0x0,8
tick,0x7ff954e0fd34,212248913,0,0x0,8
tick,0x7ff954e0fd34,212264927,0,0x0,8
tick,0x7ff954e0fd34,212281014,0,0x0,8
tick,0x7ff954e0fd34,212296886,0,0x0,8
tick,0x7ff954e0fd34,212312839,0,0x0,8
tick,0x7ff954e0fd34,212327825,0,0x0,8
tick,0x7ff954e0fd34,212343808,0,0x0,8
tick,0x7ff954e0fd34,212359190,0,0x0,8
tick,0x7ff954e0fd34,212374915,0,0x0,8
tick,0x7ff954e0fd34,212390631,0,0x0,8
tick,0x7ff954e0fd34,212406584,0,0x0,8
tick,0x7ff954e0fd34,212422451,0,0x0,8
tick,0x7ff954e0fd34,212438113,0,0x0,8
tick,0x7ff954e0fd34,212454170,0,0x0,8
tick,0x7ff954e0fd34,212469998,0,0x0,8
tick,0x7ff954e0fd34,212485907,0,0x0,8
tick,0x7ff954e0fd34,212501866,0,0x0,8
tick,0x7ff954e0fd34,212517814,0,0x0,8
tick,0x7ff954e0fd34,212533771,0,0x0,8
tick,0x7ff954e0fd34,212549311,0,0x0,8
tick,0x7ff954e0fd34,212565282,0,0x0,8
tick,0x7ff954e0fd34,212581213,0,0x0,8
tick,0x7ff954e0fd34,212596171,0,0x0,8
tick,0x7ff954e0fd34,212612149,0,0x0,8
tick,0x7ff954e0fd34,212628064,0,0x0,8
tick,0x7ff954e0fd34,212643683,0,0x0,8
tick,0x7ff954e0fd34,212659096,0,0x0,8
tick,0x7ff954e0fd34,212674030,0,0x0,8
tick,0x7ff954e0fd34,212689593,0,0x0,8
tick,0x7ff954e0fd34,212704626,0,0x0,8
tick,0x7ff954e0fd34,212719590,0,0x0,8
tick,0x7ff954e0fd34,212734427,0,0x0,8
tick,0x7ff954e0fd34,212749433,0,0x0,8
tick,0x7ff954e0fd34,212765444,0,0x0,8
tick,0x7ff954e0fd34,212780323,0,0x0,8
tick,0x7ff954e0fd34,212796313,0,0x0,8
tick,0x7ff954e0fd34,212811265,0,0x0,8
tick,0x7ff954e0fd34,212826237,0,0x0,8
tick,0x7ff954e0fd34,212841804,0,0x0,8
tick,0x7ff954e0fd34,212857707,0,0x0,8
tick,0x7ff954e0fd34,212873655,0,0x0,8
tick,0x7ff954e0fd34,212889630,0,0x0,8
tick,0x7ff954e0fd34,212905687,0,0x0,8
tick,0x7ff954e0fd34,212920713,0,0x0,8
tick,0x7ff954e0fd34,212935586,0,0x0,8
tick,0x7ff954e0fd34,212950372,0,0x0,8
tick,0x7ff954e0fd34,212966207,0,0x0,8
tick,0x7ff954e0fd34,212981180,0,0x0,8
tick,0x7ff954e0fd34,212997160,0,0x0,8
tick,0x7ff954e0fd34,213012700,0,0x0,8
tick,0x7ff954e0fd34,213028546,0,0x0,8
tick,0x7ff954e0fd34,213044507,0,0x0,8
tick,0x7ff954e0fd34,213060489,0,0x0,8
tick,0x7ff954e0fd34,213076454,0,0x0,8
tick,0x7ff954e0fd34,213092385,0,0x0,8
tick,0x7ff954e0fd34,213108357,0,0x0,8
tick,0x7ff954e0fd34,213124326,0,0x0,8
tick,0x7ff954e0fd34,213139854,0,0x0,8
tick,0x7ff954e0fd34,213155845,0,0x0,8
tick,0x7ff954e0fd34,213171823,0,0x0,8
tick,0x7ff954e0fd34,213187775,0,0x0,8
tick,0x7ff954e0fd34,213203668,0,0x0,8
tick,0x7ff954e0fd34,213219713,0,0x0,8
tick,0x7ff954e0fd34,213235644,0,0x0,8
tick,0x7ff954e0fd34,213251585,0,0x0,8
tick,0x7ff954e0fd34,213267304,0,0x0,8
tick,0x7ff954e0fd34,213282274,0,0x0,8
tick,0x7ff954e0fd34,213297227,0,0x0,8
tick,0x7ff954e0fd34,213312190,0,0x0,8
tick,0x7ff954e0fd34,213328155,0,0x0,8
tick,0x7ff954e0fd34,213344088,0,0x0,8
tick,0x7ff954e0fd34,213360044,0,0x0,8
tick,0x7ff954e0fd34,213376059,0,0x0,8
tick,0x7ff954e0fd34,213391028,0,0x0,8
tick,0x7ff954e0fd34,213406926,0,0x0,8
tick,0x7ff954e0fd34,213421883,0,0x0,8
tick,0x7ff954e0fd34,213437266,0,0x0,8
tick,0x7ff954e0fd34,213453166,0,0x0,8
tick,0x7ff954e0fd34,213469149,0,0x0,8
tick,0x7ff954e0fd34,213485078,0,0x0,8
tick,0x7ff954e0fd34,213500838,0,0x0,8
tick,0x7ff954e0fd34,213516843,0,0x0,8
tick,0x7ff954e0fd34,213532583,0,0x0,8
tick,0x7ff954e0fd34,213547863,0,0x0,8
tick,0x7ff954e0fd34,213563140,0,0x0,8
tick,0x7ff954e0fd34,213579141,0,0x0,8
tick,0x7ff954e0fd34,213595127,0,0x0,8
tick,0x7ff954e0fd34,213611096,0,0x0,8
tick,0x7ff954e0fd34,213627058,0,0x0,8
tick,0x7ff954e0fd34,213642465,0,0x0,8
tick,0x7ff954e0fd34,213658439,0,0x0,8
tick,0x7ff954e0fd34,213674497,0,0x0,8
tick,0x7ff954e0fd34,213690662,0,0x0,8
tick,0x7ff954e0fd34,213705575,0,0x0,8
tick,0x7ff954e0fd34,213721677,0,0x0,8
tick,0x7ff954e0fd34,213736256,0,0x0,8
tick,0x7ff954e0fd34,213751466,0,0x0,8
tick,0x7ff954e0fd34,213766445,0,0x0,8
tick,0x7ff954e0fd34,213782420,0,0x0,8
tick,0x7ff954e0fd34,213798517,0,0x0,8
tick,0x7ff954e0fd34,213813677,0,0x0,8
tick,0x7ff954e0fd34,213829671,0,0x0,8
tick,0x7ff954e0fd34,213844692,0,0x0,8
tick,0x7ff954e0fd34,213860037,0,0x0,8
tick,0x7ff954e0fd34,213876053,0,0x0,8
tick,0x7ff954e0fd34,213891948,0,0x0,8
tick,0x7ff954e0fd34,213906942,0,0x0,8
tick,0x7ff954e0fd34,213922674,0,0x0,8
tick,0x7ff954e0fd34,213937885,0,0x0,8
tick,0x7ff954e0fd34,213953722,0,0x0,8
tick,0x7ff954e0fd34,213968687,0,0x0,8
tick,0x7ff954e0fd34,213983637,0,0x0,8
tick,0x7ff954e0fd34,213998634,0,0x0,8
tick,0x7ff954e0fd34,214014572,0,0x0,8
tick,0x7ff954e0fd34,214029550,0,0x0,8
tick,0x7ff954e0fd34,214045496,0,0x0,8
tick,0x7ff954e0fd34,214060436,0,0x0,8
tick,0x7ff954e0fd34,214075425,0,0x0,8
tick,0x7ff954e0fd34,214091345,0,0x0,8
tick,0x7ff954e0fd34,214107477,0,0x0,8
tick,0x7ff954e0fd34,214122344,0,0x0,8
tick,0x7ff954e0fd34,214138259,0,0x0,8
tick,0x7ff954e0fd34,214153220,0,0x0,8
tick,0x7ff954e0fd34,214169200,0,0x0,8
tick,0x7ff954e0fd34,214184850,0,0x0,8
tick,0x7ff954e0fd34,214200793,0,0x0,8
tick,0x7ff954e0fd34,214216736,0,0x0,8
tick,0x7ff954e0fd34,214232712,0,0x0,8
tick,0x7ff954e0fd34,214248686,0,0x0,8
tick,0x7ff954e0fd34,214264108,0,0x0,8
tick,0x7ff954e0fd34,214279570,0,0x0,8
tick,0x7ff954e0fd34,214294922,0,0x0,8
tick,0x7ff954e0fd34,214309879,0,0x0,8
tick,0x7ff954e0fd34,214325855,0,0x0,8
tick,0x7ff954e0fd34,214340949,0,0x0,8
tick,0x7ff954e0fd34,214356129,0,0x0,8
tick,0x7ff954e0fd34,214372134,0,0x0,8
tick,0x7ff954e0fd34,214387039,0,0x0,8
tick,0x7ff954e0fd34,214402909,0,0x0,8
tick,0x7ff954e0fd34,214418910,0,0x0,8
tick,0x7ff954e0fd34,214434205,0,0x0,8
tick,0x7ff954e0fd34,214450163,0,0x0,8
tick,0x7ff954e0fd34,214466104,0,0x0,8
tick,0x7ff954e0fd34,214482099,0,0x0,8
tick,0x7ff954e0fd34,214497074,0,0x0,8
tick,0x7ff954e0fd34,214512292,0,0x0,8
tick,0x7ff954e0fd34,214527259,0,0x0,8
tick,0x7ff954e0fd34,214543236,0,0x0,8
tick,0x7ff954e0fd34,214559176,0,0x0,8
tick,0x7ff954e0fd34,214574433,0,0x0,8
tick,0x7ff954e0fd34,214590402,0,0x0,8
tick,0x7ff954e0fd34,214605336,0,0x0,8
tick,0x7ff954e0fd34,214620286,0,0x0,8
tick,0x7ff954e0fd34,214635306,0,0x0,8
tick,0x7ff954e0fd34,214650222,0,0x0,8
tick,0x7ff954e0fd34,214666269,0,0x0,8
tick,0x7ff954e0fd34,214682196,0,0x0,8
tick,0x7ff954e0fd34,214698098,0,0x0,8
tick,0x7ff954e0fd34,214714060,0,0x0,8
tick,0x7ff954e0fd34,214729015,0,0x0,8
tick,0x7ff954e0fd34,214744991,0,0x0,8
tick,0x7ff954e0fd34,214759932,0,0x0,8
tick,0x7ff954e0fd34,214775895,0,0x0,8
tick,0x7ff954e0fd34,214791841,0,0x0,8
tick,0x7ff954e0fd34,214807826,0,0x0,8
tick,0x7ff954e0fd34,214823762,0,0x0,8
tick,0x7ff954e0fd34,214839712,0,0x0,8
tick,0x7ff954e0fd34,214855900,0,0x0,8
tick,0x7ff954e0fd34,214871591,0,0x0,8
tick,0x7ff954e0fd34,214887547,0,0x0,8
tick,0x7ff954e0fd34,214903533,0,0x0,8
tick,0x7ff954e0fd34,214918899,0,0x0,8
tick,0x7ff954e0fd34,214934802,0,0x0,8
tick,0x7ff954e0fd34,214950754,0,0x0,8
tick,0x7ff954e0fd34,214966720,0,0x0,8
tick,0x7ff954e0fd34,214981673,0,0x0,8
tick,0x7ff954e0fd34,214996478,0,0x0,8
tick,0x7ff954e0fd34,215011385,0,0x0,8
tick,0x7ff954e0fd34,215026363,0,0x0,8
tick,0x7ff954e0fd34,215042319,0,0x0,8
tick,0x7ff954e0fd34,215057984,0,0x0,8
tick,0x7ff954e0fd34,215074000,0,0x0,8
tick,0x7ff954e0fd34,215089889,0,0x0,8
tick,0x7ff954e0fd34,215105867,0,0x0,8
tick,0x7ff954e0fd34,215121472,0,0x0,8
tick,0x7ff954e0fd34,215137477,0,0x0,8
tick,0x7ff954e0fd34,215153317,0,0x0,8
tick,0x7ff954e0fd34,215168564,0,0x0,8
tick,0x7ff954e0fd34,215183990,0,0x0,8
tick,0x7ff954e0fd34,215199358,0,0x0,8
tick,0x7ff954e0fd34,215215204,0,0x0,8
tick,0x7ff954e0fd34,215230636,0,0x0,8
tick,0x7ff954e0fd34,215246064,0,0x0,8
tick,0x7ff954e0fd34,215261163,0,0x0,8
tick,0x7ff954e0fd34,215276338,0,0x0,8
tick,0x7ff954e0fd34,215291268,0,0x0,8
tick,0x7ff954e0fd34,215306244,0,0x0,8
tick,0x7ff954e0fd34,215321211,0,0x0,8
tick,0x7ff954e0fd34,215336156,0,0x0,8
tick,0x7ff954e0fd34,215352135,0,0x0,8
tick,0x7ff954e0fd34,215367289,0,0x0,8
tick,0x7ff954e0fd34,215382042,0,0x0,8
tick,0x7ff954e0fd34,215397016,0,0x0,8
tick,0x7ff954e0fd34,215412957,0,0x0,8
tick,0x7ff954e0fd34,215428924,0,0x0,8
tick,0x7ff954e0fd34,215444879,0,0x0,8
tick,0x7ff954e0fd34,215460242,0,0x0,8
tick,0x7ff954e0fd34,215475769,0,0x0,8
tick,0x7ff954e0fd34,215491366,0,0x0,8
tick,0x7ff954e0fd34,215507262,0,0x0,8
tick,0x7ff954e0fd34,215523404,0,0x0,8
tick,0x7ff954e0fd34,215539240,0,0x0,8
tick,0x7ff954e0fd34,215554985,0,0x0,8
tick,0x7ff954e0fd34,215569961,0,0x0,8
tick,0x7ff954e0fd34,215585903,0,0x0,8
tick,0x7ff954e0fd34,215600668,0,0x0,8
tick,0x7ff954e0fd34,215616667,0,0x0,8
tick,0x7ff954e0fd34,215631610,0,0x0,8
tick,0x7ff954e0fd34,215646598,0,0x0,8
tick,0x7ff954e0fd34,215662102,0,0x0,8
tick,0x7ff954e0fd34,215678065,0,0x0,8
tick,0x7ff954e0fd34,215693049,0,0x0,8
tick,0x7ff954e0fd34,215709009,0,0x0,8
tick,0x7ff954e0fd34,215723927,0,0x0,8
tick,0x7ff954e0fd34,215740114,0,0x0,8
tick,0x7ff954e0fd34,215754840,0,0x0,8
tick,0x7ff954e0fd34,215769838,0,0x0,8
tick,0x7ff954e0fd34,215785757,0,0x0,8
tick,0x7ff954e0fd34,215801727,0,0x0,8
tick,0x7ff954e0fd34,215816667,0,0x0,8
tick,0x7ff954e0fd34,215832621,0,0x0,8
tick,0x7ff954e0fd34,215847596,0,0x0,8
tick,0x7ff954e0fd34,215863567,0,0x0,8
tick,0x7ff954e0fd34,215879496,0,0x0,8
tick,0x7ff954e0fd34,215895019,0,0x0,8
tick,0x7ff954e0fd34,215910928,0,0x0,8
tick,0x7ff954e0fd34,215926434,0,0x0,8
tick,0x7ff954e0fd34,215941434,0,0x0,8
tick,0x7ff954e0fd34,215957355,0,0x0,8
tick,0x7ff954e0fd34,215973313,0,0x0,8
tick,0x7ff954e0fd34,215988266,0,0x0,8
tick,0x7ff954e0fd34,216003198,0,0x0,8
tick,0x7ff954e0fd34,216018183,0,0x0,8
tick,0x7ff954e0fd34,216034139,0,0x0,8
tick,0x7ff954e0fd34,216049096,0,0x0,8
tick,0x7ff954e0fd34,216065120,0,0x0,8
tick,0x7ff954e0fd34,216079995,0,0x0,8
tick,0x7ff954e0fd34,216094981,0,0x0,8
tick,0x7ff954e0fd34,216110123,0,0x0,8
tick,0x7ff954e0fd34,216125100,0,0x0,8
tick,0x7ff954e0fd34,216140998,0,0x0,8
tick,0x7ff954e0fd34,216156977,0,0x0,8
tick,0x7ff954e0fd34,216172886,0,0x0,8
tick,0x7ff954e0fd34,216188504,0,0x0,8
tick,0x7ff954e0fd34,216204424,0,0x0,8
tick,0x7ff954e0fd34,216220416,0,0x0,8
tick,0x7ff954e0fd34,216236406,0,0x0,8
tick,0x7ff954e0fd34,216252310,0,0x0,8
tick,0x7ff954e0fd34,216268334,0,0x0,8
tick,0x7ff954e0fd34,216284290,0,0x0,8
tick,0x7ff954e0fd34,216300257,0,0x0,8
tick,0x7ff954e0fd34,216315179,0,0x0,8
tick,0x7ff954e0fd34,216331124,0,0x0,8
tick,0x7ff954e0fd34,216347069,0,0x0,8
tick,0x7ff954e0fd34,216363051,0,0x0,8
tick,0x7ff954e0fd34,216379007,0,0x0,8
tick,0x7ff954e0fd34,216394960,0,0x0,8
tick,0x7ff954e0fd34,216410921,0,0x0,8
tick,0x7ff954e0fd34,216426900,0,0x0,8
tick,0x7ff954e0fd34,216442826,0,0x0,8
tick,0x7ff954e0fd34,216458845,0,0x0,8
tick,0x7ff954e0fd34,216473965,0,0x0,8
tick,0x7ff954e0fd34,216488925,0,0x0,8
tick,0x7ff954e0fd34,216504881,0,0x0,8
tick,0x7ff954e0fd34,216520842,0,0x0,8
tick,0x7ff954e0fd34,216536792,0,0x0,8
tick,0x7ff954e0fd34,216552030,0,0x0,8
tick,0x7ff954e0fd34,216566944,0,0x0,8
tick,0x7ff954e0fd34,216582892,0,0x0,8
tick,0x7ff954e0fd34,216598882,0,0x0,8
tick,0x7ff954e0fd34,216613860,0,0x0,8
tick,0x7ff954e0fd34,216628945,0,0x0,8
tick,0x7ff954e0fd34,216643854,0,0x0,8
tick,0x7ff954e0fd34,216659823,0,0x0,8
tick,0x7ff954e0fd34,216674777,0,0x0,8
tick,0x7ff954e0fd34,216689787,0,0x0,8
tick,0x7ff954e0fd34,216705325,0,0x0,8
tick,0x7ff954e0fd34,216721284,0,0x0,8
tick,0x7ff954e0fd34,216737228,0,0x0,8
tick,0x7ff954e0fd34,216753198,0,0x0,8
tick,0x7ff954e0fd34,216768785,0,0x0,8
tick,0x7ff954e0fd34,216784795,0,0x0,8
tick,0x7ff954e0fd34,216799745,0,0x0,8
tick,0x7ff954e0fd34,216815693,0,0x0,8
tick,0x7ff954e0fd34,216830852,0,0x0,8
tick,0x7ff954e0fd34,216846797,0,0x0,8
tick,0x7ff954e0fd34,216862783,0,0x0,8
tick,0x7ff954e0fd34,216878762,0,0x0,8
tick,0x7ff954e0fd34,216894715,0,0x0,8
tick,0x7ff954e0fd34,216909639,0,0x0,8
tick,0x7ff954e0fd34,216925770,0,0x0,8
tick,0x7ff954e0fd34,216940851,0,0x0,8
tick,0x7ff954e0fd34,216956746,0,0x0,8
tick,0x7ff954e0fd34,216971732,0,0x0,8
tick,0x7ff954e0fd34,216986703,0,0x0,8
tick,0x7ff954e0fd34,217001640,0,0x0,8
tick,0x7ff954e0fd34,217017617,0,0x0,8
tick,0x7ff954e0fd34,217032568,0,0x0,8
tick,0x7ff954e0fd34,217048613,0,0x0,8
tick,0x7ff954e0fd34,217064542,0,0x0,8
tick,0x7ff954e0fd34,217080609,0,0x0,8
tick,0x7ff954e0fd34,217095493,0,0x0,8
tick,0x7ff954e0fd34,217110506,0,0x0,8
tick,0x7ff954e0fd34,217126079,0,0x0,8
tick,0x7ff954e0fd34,217141978,0,0x0,8
tick,0x7ff954e0fd34,217156974,0,0x0,8
tick,0x7ff954e0fd34,217172268,0,0x0,8
tick,0x7ff954e0fd34,217188214,0,0x0,8
tick,0x7ff954e0fd34,217204191,0,0x0,8
tick,0x7ff954e0fd34,217219105,0,0x0,8
tick,0x7ff954e0fd34,217235077,0,0x0,8
tick,0x7ff954e0fd34,217250988,0,0x0,8
tick,0x7ff954e0fd34,217267005,0,0x0,8
tick,0x7ff954e0fd34,217282942,0,0x0,8
tick,0x7ff954e0fd34,217298901,0,0x0,8
tick,0x7ff954e0fd34,217314887,0,0x0,8
tick,0x7ff954e0fd34,217330796,0,0x0,8
tick,0x7ff954e0fd34,217346761,0,0x0,8
tick,0x7ff954e0fd34,217362807,0,0x0,8
tick,0x7ff954e0fd34,217377762,0,0x0,8
tick,0x7ff954e0fd34,217393756,0,0x0,8
tick,0x7ff954e0fd34,217408707,0,0x0,8
tick,0x7ff954e0fd34,217423855,0,0x0,8
tick,0x7ff954e0fd34,217439791,0,0x0,8
tick,0x7ff954e0fd34,217454746,0,0x0,8
tick,0x7ff954e0fd34,217470692,0,0x0,8
tick,0x7ff954e0fd34,217485668,0,0x0,8
tick,0x7ff954e0fd34,217501597,0,0x0,8
tick,0x7ff954e0fd34,217516586,0,0x0,8
tick,0x7ff954e0fd34,217532548,0,0x0,8
tick,0x7ff954e0fd34,217547503,0,0x0,8
tick,0x7ff954e0fd34,217563064,0,0x0,8
tick,0x7ff954e0fd34,217579046,0,0x0,8
tick,0x7ff954e0fd34,217594002,0,0x0,8
tick,0x7ff954e0fd34,217609953,0,0x0,8
tick,0x7ff954e0fd34,217624995,0,0x0,8
tick,0x7ff954e0fd34,217640307,0,0x0,8
tick,0x7ff954e0fd34,217656244,0,0x0,8
tick,0x7ff954e0fd34,217672226,0,0x0,8
tick,0x7ff954e0fd34,217688207,0,0x0,8
tick,0x7ff954e0fd34,217704118,0,0x0,8
tick,0x7ff954e0fd34,217720100,0,0x0,8
tick,0x7ff954e0fd34,217736033,0,0x0,8
tick,0x7ff954e0fd34,217751995,0,0x0,8
tick,0x7ff954e0fd34,217767956,0,0x0,8
tick,0x7ff954e0fd34,217783920,0,0x0,8
tick,0x7ff954e0fd34,217799903,0,0x0,8
tick,0x7ff954e0fd34,217815713,0,0x0,8
tick,0x7ff954e0fd34,217831351,0,0x0,8
tick,0x7ff954e0fd34,217847284,0,0x0,8
tick,0x7ff954e0fd34,217862845,0,0x0,8
tick,0x7ff954e0fd34,217878801,0,0x0,8
tick,0x7ff954e0fd34,217894422,0,0x0,8
tick,0x7ff954e0fd34,217909390,0,0x0,8
tick,0x7ff954e0fd34,217924838,0,0x0,8
tick,0x7ff954e0fd34,217940825,0,0x0,8
tick,0x7ff954e0fd34,217955766,0,0x0,8
tick,0x7ff954e0fd34,217971323,0,0x0,8
tick,0x7ff954e0fd34,217987414,0,0x0,8
tick,0x7ff954e0fd34,218002790,0,0x0,8
tick,0x7ff954e0fd34,218018469,0,0x0,8
tick,0x7ff954e0fd34,218034560,0,0x0,8
tick,0x7ff954e0fd34,218049717,0,0x0,8
tick,0x7ff954e0fd34,218064684,0,0x0,8
tick,0x7ff954e0fd34,218079642,0,0x0,8
tick,0x7ff954e0fd34,218095610,0,0x0,8
tick,0x7ff954e0fd34,218111417,0,0x0,8
tick,0x7ff954e0fd34,218127246,0,0x0,8
tick,0x7ff954e0fd34,218143149,0,0x0,8
tick,0x7ff954e0fd34,218159134,0,0x0,8
tick,0x7ff954e0fd34,218175082,0,0x0,8
tick,0x7ff954e0fd34,218191043,0,0x0,8
tick,0x7ff954e0fd34,218206013,0,0x0,8
tick,0x7ff954e0fd34,218220950,0,0x0,8
tick,0x7ff954e0fd34,218235935,0,0x0,8
tick,0x7ff954e0fd34,218250860,0,0x0,8
tick,0x7ff954e0fd34,218266798,0,0x0,8
tick,0x7ff954e0fd34,218281817,0,0x0,8
tick,0x7ff954e0fd34,218297746,0,0x0,8
tick,0x7ff954e0fd34,218313429,0,0x0,8
tick,0x7ff954e0fd34,218328519,0,0x0,8
tick,0x7ff954e0fd34,218344509,0,0x0,8
tick,0x7ff954e0fd34,218361105,0,0x0,8
tick,0x7ff954e0fd34,218375300,0,0x0,8
tick,0x7ff954e0fd34,218391338,0,0x0,8
tick,0x7ff954e0fd34,218407250,0,0x0,8
tick,0x7ff954e0fd34,218423212,0,0x0,8
tick,0x7ff954e0fd34,218439152,0,0x0,8
tick,0x7ff954e0fd34,218455056,0,0x0,8
tick,0x7ff954e0fd34,218470035,0,0x0,8
tick,0x7ff954e0fd34,218484970,0,0x0,8
tick,0x7ff954e0fd34,218499958,0,0x0,8
tick,0x7ff954e0fd34,218514886,0,0x0,8
tick,0x7ff954e0fd34,218530163,0,0x0,8
tick,0x7ff954e0fd34,218546149,0,0x0,8
tick,0x7ff954e0fd34,218562083,0,0x0,8
tick,0x7ff954e0fd34,218577045,0,0x0,8
tick,0x7ff954e0fd34,218592024,0,0x0,8
tick,0x7ff954e0fd34,218607005,0,0x0,8
tick,0x7ff954e0fd34,218621971,0,0x0,8
tick,0x7ff954e0fd34,218637931,0,0x0,8
tick,0x7ff954e0fd34,218652912,0,0x0,8
tick,0x7ff954e0fd34,218668943,0,0x0,8
tick,0x7ff954e0fd34,218683859,0,0x0,8
tick,0x7ff954e0fd34,218699771,0,0x0,8
tick,0x7ff954e0fd34,218715723,0,0x0,8
tick,0x7ff954e0fd34,218731682,0,0x0,8
tick,0x7ff954e0fd34,218747097,0,0x0,8
tick,0x7ff954e0fd34,218763059,0,0x0,8
tick,0x7ff954e0fd34,218779091,0,0x0,8
tick,0x7ff954e0fd34,218794992,0,0x0,8
tick,0x7ff954e0fd34,218810682,0,0x0,8
tick,0x7ff954e0fd34,218826002,0,0x0,8
tick,0x7ff954e0fd34,218841662,0,0x0,8
tick,0x7ff954e0fd34,218856641,0,0x0,8
tick,0x7ff954e0fd34,218872573,0,0x0,8
tick,0x7ff954e0fd34,218888514,0,0x0,8
tick,0x7ff954e0fd34,218904507,0,0x0,8
tick,0x7ff954e0fd34,218920447,0,0x0,8
tick,0x7ff954e0fd34,218936430,0,0x0,8
tick,0x7ff954e0fd34,218951365,0,0x0,8
tick,0x7ff954e0fd34,218966315,0,0x0,8
tick,0x7ff954e0fd34,218981272,0,0x0,8
tick,0x7ff954e0fd34,218996241,0,0x0,8
tick,0x7ff954e0fd34,219012181,0,0x0,8
tick,0x7ff954e0fd34,219027168,0,0x0,8
tick,0x7ff954e0fd34,219043147,0,0x0,8
tick,0x7ff954e0fd34,219058067,0,0x0,8
tick,0x7ff954e0fd34,219074104,0,0x0,8
tick,0x7ff954e0fd34,219089389,0,0x0,8
tick,0x7ff954e0fd34,219105187,0,0x0,8
tick,0x7ff954e0fd34,219121151,0,0x0,8
tick,0x7ff954e0fd34,219137116,0,0x0,8
tick,0x7ff954e0fd34,219153051,0,0x0,8
tick,0x7ff954e0fd34,219169050,0,0x0,8
tick,0x7ff954e0fd34,219184950,0,0x0,8
tick,0x7ff954e0fd34,219200921,0,0x0,8
tick,0x7ff954e0fd34,219216894,0,0x0,8
tick,0x7ff954e0fd34,219232867,0,0x0,8
tick,0x7ff954e0fd34,219248781,0,0x0,8
tick,0x7ff954e0fd34,219264869,0,0x0,8
tick,0x7ff954e0fd34,219280783,0,0x0,8
tick,0x7ff954e0fd34,219296733,0,0x0,8
tick,0x7ff954e0fd34,219312669,0,0x0,8
tick,0x7ff954e0fd34,219328620,0,0x0,8
tick,0x7ff954e0fd34,219344617,0,0x0,8
tick,0x7ff954e0fd34,219359555,0,0x0,8
tick,0x7ff954e0fd34,219374781,0,0x0,8
tick,0x7ff954e0fd34,219390373,0,0x0,8
tick,0x7ff954e0fd34,219406352,0,0x0,8
tick,0x7ff954e0fd34,219421594,0,0x0,8
tick,0x7ff954e0fd34,219436478,0,0x0,8
tick,0x7ff954e0fd34,219452469,0,0x0,8
tick,0x7ff954e0fd34,219468418,0,0x0,8
tick,0x7ff954e0fd34,219484392,0,0x0,8
tick,0x7ff954e0fd34,219500303,0,0x0,8
tick,0x7ff954e0fd34,219515565,0,0x0,8
tick,0x7ff954e0fd34,219530785,0,0x0,8
tick,0x7ff954e0fd34,219546788,0,0x0,8
tick,0x7ff954e0fd34,219561709,0,0x0,8
tick,0x7ff954e0fd34,219577704,0,0x0,8
tick,0x7ff954e0fd34,219592642,0,0x0,8
tick,0x7ff954e0fd34,219608599,0,0x0,8
tick,0x7ff954e0fd34,219623574,0,0x0,8
tick,0x7ff954e0fd34,219639300,0,0x0,8
tick,0x7ff954e0fd34,219655234,0,0x0,8
tick,0x7ff954e0fd34,219670820,0,0x0,8
tick,0x7ff954e0fd34,219685995,0,0x0,8
tick,0x7ff954e0fd34,219701876,0,0x0,8
tick,0x7ff954e0fd34,219716823,0,0x0,8
tick,0x7ff954e0fd34,219731818,0,0x0,8
tick,0x7ff954e0fd34,219746743,0,0x0,8
tick,0x7ff954e0fd34,219761717,0,0x0,8
tick,0x7ff954e0fd34,219776696,0,0x0,8
tick,0x7ff954e0fd34,219791649,0,0x0,8
tick,0x7ff954e0fd34,219806640,0,0x0,8
tick,0x7ff954e0fd34,219822542,0,0x0,8
tick,0x7ff954e0fd34,219837581,0,0x0,8
tick,0x7ff954e0fd34,219852469,0,0x0,8
tick,0x7ff954e0fd34,219867724,0,0x0,8
tick,0x7ff954e0fd34,219883679,0,0x0,8
tick,0x7ff954e0fd34,219898685,0,0x0,8
tick,0x7ff954e0fd34,219913964,0,0x0,8
tick,0x7ff954e0fd34,219929064,0,0x0,8
tick,0x7ff954e0fd34,219944933,0,0x0,8
tick,0x7ff954e0fd34,219960832,0,0x0,8
tick,0x7ff954e0fd34,219976771,0,0x0,8
tick,0x7ff954e0fd34,219992180,0,0x0,8
tick,0x7ff954e0fd34,220008258,0,0x0,8
tick,0x7ff954e0fd34,220024210,0,0x0,8
tick,0x7ff954e0fd34,220040169,0,0x0,8
tick,0x7ff954e0fd34,220056193,0,0x0,8
tick,0x7ff954e0fd34,220072234,0,0x0,8
tick,0x7ff954e0fd34,220087335,0,0x0,8
tick,0x7ff954e0fd34,220102894,0,0x0,8
tick,0x7ff954e0fd34,220118916,0,0x0,8
tick,0x7ff954e0fd34,220134887,0,0x0,8
tick,0x7ff954e0fd34,220150877,0,0x0,8
tick,0x7ff954e0fd34,220166301,0,0x0,8
tick,0x7ff954e0fd34,220181288,0,0x0,8
tick,0x7ff954e0fd34,220197411,0,0x0,8
tick,0x7ff954e0fd34,220212656,0,0x0,8
tick,0x7ff954e0fd34,220228603,0,0x0,8
tick,0x7ff954e0fd34,220243577,0,0x0,8
tick,0x7ff954e0fd34,220259510,0,0x0,8
tick,0x7ff954e0fd34,220275468,0,0x0,8
tick,0x7ff954e0fd34,220290444,0,0x0,8
tick,0x7ff954e0fd34,220306351,0,0x0,8
tick,0x7ff954e0fd34,220321361,0,0x0,8
tick,0x7ff954e0fd34,220337310,0,0x0,8
tick,0x7ff954e0fd34,220353294,0,0x0,8
tick,0x7ff954e0fd34,220369288,0,0x0,8
tick,0x7ff954e0fd34,220384220,0,0x0,8
tick,0x7ff954e0fd34,220399170,0,0x0,8
tick,0x7ff954e0fd34,220414500,0,0x0,8
tick,0x7ff954e0fd34,220429749,0,0x0,8
tick,0x7ff954e0fd34,220445672,0,0x0,8
tick,0x7ff954e0fd34,220461601,0,0x0,8
tick,0x7ff954e0fd34,220477145,0,0x0,8
tick,0x7ff954e0fd34,220492428,0,0x0,8
tick,0x7ff954e0fd34,220508387,0,0x0,8
tick,0x7ff954e0fd34,220523834,0,0x0,8
tick,0x7ff954e0fd34,220539780,0,0x0,8
tick,0x7ff954e0fd34,220555773,0,0x0,8
tick,0x7ff954e0fd34,220571372,0,0x0,8
tick,0x7ff954e0fd34,220587328,0,0x0,8
tick,0x7ff954e0fd34,220603297,0,0x0,8
tick,0x7ff954e0fd34,220619238,0,0x0,8
tick,0x7ff954e0fd34,220634198,0,0x0,8
tick,0x7ff954e0fd34,220649145,0,0x0,8
tick,0x7ff954e0fd34,220664132,0,0x0,8
tick,0x7ff954e0fd34,220679101,0,0x0,8
tick,0x7ff954e0fd34,220695017,0,0x0,8
tick,0x7ff954e0fd34,220710964,0,0x0,8
tick,0x7ff954e0fd34,220727030,0,0x0,8
tick,0x7ff954e0fd34,220741878,0,0x0,8
tick,0x7ff954e0fd34,220756867,0,0x0,8
tick,0x7ff954e0fd34,220772806,0,0x0,8
tick,0x7ff954e0fd34,220787995,0,0x0,8
tick,0x7ff954e0fd34,220802969,0,0x0,8
tick,0x7ff954e0fd34,220817884,0,0x0,8
tick,0x7ff954e0fd34,220833837,0,0x0,8
tick,0x7ff954e0fd34,220849807,0,0x0,8
tick,0x7ff954e0fd34,220865783,0,0x0,8
tick,0x7ff954e0fd34,220881754,0,0x0,8
tick,0x7ff954e0fd34,220897680,0,0x0,8
tick,0x7ff954e0fd34,220913718,0,0x0,8
tick,0x7ff954e0fd34,220929632,0,0x0,8
tick,0x7ff954e0fd34,220945599,0,0x0,8
tick,0x7ff954e0fd34,220961556,0,0x0,8
tick,0x7ff954e0fd34,220977006,0,0x0,8
tick,0x7ff954e0fd34,220993050,0,0x0,8
tick,0x7ff954e0fd34,221008962,0,0x0,8
tick,0x7ff954e0fd34,221023950,0,0x0,8
tick,0x7ff954e0fd34,221039411,0,0x0,8
tick,0x7ff954e0fd34,221055029,0,0x0,8
tick,0x7ff954e0fd34,221070311,0,0x0,8
tick,0x7ff954e0fd34,221085323,0,0x0,8
tick,0x7ff954e0fd34,221100798,0,0x0,8
tick,0x7ff954e0fd34,221115768,0,0x0,8
tick,0x7ff954e0fd34,221131727,0,0x0,8
tick,0x7ff954e0fd34,221146689,0,0x0,8
tick,0x7ff954e0fd34,221161913,0,0x0,8
tick,0x7ff954e0fd34,221177974,0,0x0,8
tick,0x7ff954e0fd34,221193077,0,0x0,8
tick,0x7ff954e0fd34,221209029,0,0x0,8
tick,0x7ff954e0fd34,221224685,0,0x0,8
tick,0x7ff954e0fd34,221240620,0,0x0,8
tick,0x7ff954e0fd34,221256597,0,0x0,8
tick,0x7ff954e0fd34,221272569,0,0x0,8
tick,0x7ff954e0fd34,221287544,0,0x0,8
tick,0x7ff954e0fd34,221302531,0,0x0,8
tick,0x7ff954e0fd34,221317593,0,0x0,8
tick,0x7ff954e0fd34,221332542,0,0x0,8
tick,0x7ff954e0fd34,221348479,0,0x0,8
tick,0x7ff954e0fd34,221364456,0,0x0,8
tick,0x7ff954e0fd34,221380546,0,0x0,8
tick,0x7ff954e0fd34,221396474,0,0x0,8
tick,0x7ff954e0fd34,221412469,0,0x0,8
tick,0x7ff954e0fd34,221428415,0,0x0,8
tick,0x7ff954e0fd34,221444340,0,0x0,8
tick,0x7ff954e0fd34,221460305,0,0x0,8
tick,0x7ff954e0fd34,221475612,0,0x0,8
tick,0x7ff954e0fd34,221491632,0,0x0,8
tick,0x7ff954e0fd34,221507644,0,0x0,8
tick,0x7ff954e0fd34,221523535,0,0x0,8
tick,0x7ff954e0fd34,221538522,0,0x0,8
tick,0x7ff954e0fd34,221553514,0,0x0,8
tick,0x7ff954e0fd34,221568481,0,0x0,8
tick,0x7ff954e0fd34,221583456,0,0x0,8
tick,0x7ff954e0fd34,221599414,0,0x0,8
tick,0x7ff954e0fd34,221615333,0,0x0,8
tick,0x7ff954e0fd34,221631307,0,0x0,8
tick,0x7ff954e0fd34,221647256,0,0x0,8
tick,0x7ff954e0fd34,221663233,0,0x0,8
tick,0x7ff954e0fd34,221678178,0,0x0,8
tick,0x7ff954e0fd34,221693136,0,0x0,8
tick,0x7ff954e0fd34,221709077,0,0x0,8
tick,0x7ff954e0fd34,221725076,0,0x0,8
tick,0x7ff954e0fd34,221741015,0,0x0,8
tick,0x7ff954e0fd34,221756501,0,0x0,8
tick,0x7ff954e0fd34,221772536,0,0x0,8
tick,0x7ff954e0fd34,221788391,0,0x0,8
tick,0x7ff954e0fd34,221803345,0,0x0,8
tick,0x7ff954e0fd34,221819297,0,0x0,8
tick,0x7ff954e0fd34,221834656,0,0x0,8
tick,0x7ff954e0fd34,221850627,0,0x0,8
tick,0x7ff954e0fd34,221866599,0,0x0,8
tick,0x7ff954e0fd34,221882542,0,0x0,8
tick,0x7ff954e0fd34,221898949,0,0x0,8
tick,0x7ff954e0fd34,221913483,0,0x0,8
tick,0x7ff954e0fd34,221928414,0,0x0,8
tick,0x7ff954e0fd34,221943344,0,0x0,8
tick,0x7ff954e0fd34,221958335,0,0x0,8
tick,0x7ff954e0fd34,221974266,0,0x0,8
tick,0x7ff954e0fd34,221989236,0,0x0,8
tick,0x7ff954e0fd34,222005181,0,0x0,8
tick,0x7ff954e0fd34,222021180,0,0x0,8
tick,0x7ff954e0fd34,222036935,0,0x0,8
tick,0x7ff954e0fd34,222052900,0,0x0,8
tick,0x7ff954e0fd34,222068857,0,0x0,8
tick,0x7ff954e0fd34,222084821,0,0x0,8
tick,0x7ff954e0fd34,222100624,0,0x0,8
tick,0x7ff954e0fd34,222116534,0,0x0,8
tick,0x7ff954e0fd34,222132801,0,0x0,8
tick,0x7ff954e0fd34,222147501,0,0x0,8
tick,0x7ff954e0fd34,222162453,0,0x0,8
tick,0x7ff954e0fd34,222178425,0,0x0,8
tick,0x7ff954e0fd34,222193549,0,0x0,8
tick,0x7ff954e0fd34,222208691,0,0x0,8
tick,0x7ff954e0fd34,222224626,0,0x0,8
tick,0x7ff954e0fd34,222240600,0,0x0,8
tick,0x7ff954e0fd34,222255809,0,0x0,8
tick,0x7ff954e0fd34,222271816,0,0x0,8
tick,0x7ff954e0fd34,222286757,0,0x0,8
tick,0x7ff954e0fd34,222301682,0,0x0,8
tick,0x7ff954e0fd34,222317678,0,0x0,8
tick,0x7ff954e0fd34,222332789,0,0x0,8
tick,0x7ff954e0fd34,222348769,0,0x0,8
tick,0x7ff954e0fd34,222363940,0,0x0,8
tick,0x7ff954e0fd34,222378896,0,0x0,8
tick,0x7ff954e0fd34,222394855,0,0x0,8
tick,0x7ff954e0fd34,222410678,0,0x0,8
tick,0x7ff954e0fd34,222426528,0,0x0,8
tick,0x7ff954e0fd34,222441487,0,0x0,8
tick,0x7ff954e0fd34,222457525,0,0x0,8
tick,0x7ff954e0fd34,222473381,0,0x0,8
tick,0x7ff954e0fd34,222488875,0,0x0,8
tick,0x7ff954e0fd34,222504905,0,0x0,8
tick,0x7ff954e0fd34,222520853,0,0x0,8
tick,0x7ff954e0fd34,222536732,0,0x0,8
tick,0x7ff954e0fd34,222552743,0,0x0,8
tick,0x7ff954e0fd34,222567809,0,0x0,8
tick,0x7ff954e0fd34,222583630,0,0x0,8
tick,0x7ff954e0fd34,222598596,0,0x0,8
tick,0x7ff954e0fd34,222614658,0,0x0,8
tick,0x7ff954e0fd34,222630514,0,0x0,8
tick,0x7ff954e0fd34,222646471,0,0x0,8
tick,0x7ff954e0fd34,222662047,0,0x0,8
tick,0x7ff954e0fd34,222678003,0,0x0,8
tick,0x7ff954e0fd34,222692977,0,0x0,8
tick,0x7ff954e0fd34,222708909,0,0x0,8
tick,0x7ff954e0fd34,222723844,0,0x0,8
tick,0x7ff954e0fd34,222738844,0,0x0,8
tick,0x7ff954e0fd34,222754801,0,0x0,8
tick,0x7ff954e0fd34,222770741,0,0x0,8
tick,0x7ff954e0fd34,222785681,0,0x0,8
tick,0x7ff954e0fd34,222800663,0,0x0,8
tick,0x7ff954e0fd34,222815689,0,0x0,8
tick,0x7ff954e0fd34,222830629,0,0x0,8
tick,0x7ff954e0fd34,222846590,0,0x0,8
tick,0x7ff954e0fd34,222862580,0,0x0,8
tick,0x7ff954e0fd34,222878525,0,0x0,8
tick,0x7ff954e0fd34,222894444,0,0x0,8
tick,0x7ff954e0fd34,222909620,0,0x0,8
tick,0x7ff954e0fd34,222924601,0,0x0,8
tick,0x7ff954e0fd34,222939438,0,0x0,8
tick,0x7ff954e0fd34,222955358,0,0x0,8
tick,0x7ff954e0fd34,222971318,0,0x0,8
tick,0x7ff954e0fd34,222987163,0,0x0,8
tick,0x7ff954e0fd34,223003093,0,0x0,8
tick,0x7ff954e0fd34,223019042,0,0x0,8
tick,0x7ff954e0fd34,223035014,0,0x0,8
tick,0x7ff954e0fd34,223049976,0,0x0,8
tick,0x7ff954e0fd34,223065937,0,0x0,8
tick,0x7ff954e0fd34,223080915,0,0x0,8
tick,0x7ff954e0fd34,223095864,0,0x0,8
tick,0x7ff954e0fd34,223110805,0,0x0,8
tick,0x7ff954e0fd34,223125781,0,0x0,8
tick,0x7ff954e0fd34,223140720,0,0x0,8
tick,0x7ff954e0fd34,223155691,0,0x0,8
tick,0x7ff954e0fd34,223170740,0,0x0,8
tick,0x7ff954e0fd34,223186743,0,0x0,8
tick,0x7ff954e0fd34,223202746,0,0x0,8
tick,0x7ff954e0fd34,223218703,0,0x0,8
tick,0x7ff954e0fd34,223234093,0,0x0,8
tick,0x7ff954e0fd34,223249863,0,0x0,8
tick,0x7ff954e0fd34,223265691,0,0x0,8
tick,0x7ff954e0fd34,223281551,0,0x0,8
tick,0x7ff954e0fd34,223297458,0,0x0,8
tick,0x7ff954e0fd34,223312893,0,0x0,8
tick,0x7ff954e0fd34,223328862,0,0x0,8
tick,0x7ff954e0fd34,223343793,0,0x0,8
tick,0x7ff954e0fd34,223358735,0,0x0,8
tick,0x7ff954e0fd34,223373726,0,0x0,8
tick,0x7ff954e0fd34,223388668,0,0x0,8
tick,0x7ff954e0fd34,223404654,0,0x0,8
tick,0x7ff954e0fd34,223419997,0,0x0,8
tick,0x7ff954e0fd34,223435946,0,0x0,8
tick,0x7ff954e0fd34,223451874,0,0x0,8
tick,0x7ff954e0fd34,223466831,0,0x0,8
tick,0x7ff954e0fd34,223483851,0,0x0,8
tick,0x7ff954e0fd34,223497800,0,0x0,8
tick,0x7ff954e0fd34,223512706,0,0x0,8
tick,0x7ff954e0fd34,223528679,0,0x0,8
tick,0x7ff954e0fd34,223543614,0,0x0,8
tick,0x7ff954e0fd34,223559565,0,0x0,8
tick,0x7ff954e0fd34,223575513,0,0x0,8
tick,0x7ff954e0fd34,223591482,0,0x0,8
tick,0x7ff954e0fd34,223606452,0,0x0,8
tick,0x7ff954e0fd34,223621413,0,0x0,8
tick,0x7ff954e0fd34,223636902,0,0x0,8
tick,0x7ff954e0fd34,223652870,0,0x0,8
tick,0x7ff954e0fd34,223667818,0,0x0,8
tick,0x7ff954e0fd34,223683793,0,0x0,8
tick,0x7ff954e0fd34,223699774,0,0x0,8
tick,0x7ff954e0fd34,223715719,0,0x0,8
tick,0x7ff954e0fd34,223731103,0,0x0,8
tick,0x7ff954e0fd34,223746453,0,0x0,8
tick,0x7ff954e0fd34,223762385,0,0x0,8
tick,0x7ff954e0fd34,223778368,0,0x0,8
tick,0x7ff954e0fd34,223794340,0,0x0,8
tick,0x7ff954e0fd34,223809263,0,0x0,8
tick,0x7ff954e0fd34,223825279,0,0x0,8
tick,0x7ff954e0fd34,223840315,0,0x0,8
tick,0x7ff954e0fd34,223856146,0,0x0,8
tick,0x7ff954e0fd34,223871177,0,0x0,8
tick,0x7ff954e0fd34,223886106,0,0x0,8
tick,0x7ff954e0fd34,223901030,0,0x0,8
tick,0x7ff954e0fd34,223917153,0,0x0,8
tick,0x7ff954e0fd34,223931999,0,0x0,8
tick,0x7ff954e0fd34,223947985,0,0x0,8
tick,0x7ff954e0fd34,223963921,0,0x0,8
tick,0x7ff954e0fd34,223979849,0,0x0,8
tick,0x7ff954e0fd34,223994679,0,0x0,8
tick,0x7ff954e0fd34,224010636,0,0x0,8
tick,0x7ff954e0fd34,224026586,0,0x0,8
tick,0x7ff954e0fd34,224042559,0,0x0,8
tick,0x7ff954e0fd34,224058496,0,0x0,8
tick,0x7ff954e0fd34,224073494,0,0x0,8
tick,0x7ff954e0fd34,224088438,0,0x0,8
tick,0x7ff954e0fd34,224103418,0,0x0,8
tick,0x7ff954e0fd34,224118382,0,0x0,8
tick,0x7ff954e0fd34,224134308,0,0x0,8
tick,0x7ff954e0fd34,224150254,0,0x0,8
tick,0x7ff954e0fd34,224166092,0,0x0,8
tick,0x7ff954e0fd34,224181582,0,0x0,8
tick,0x7ff954e0fd34,224197442,0,0x0,8
tick,0x7ff954e0fd34,224213444,0,0x0,8
tick,0x7ff954e0fd34,224229385,0,0x0,8
tick,0x7ff954e0fd34,224244663,0,0x0,8
tick,0x7ff954e0fd34,224260613,0,0x0,8
tick,0x7ff954e0fd34,224276584,0,0x0,8
tick,0x7ff954e0fd34,224291531,0,0x0,8
tick,0x7ff954e0fd34,224306510,0,0x0,8
tick,0x7ff954e0fd34,224321491,0,0x0,8
tick,0x7ff954e0fd34,224336417,0,0x0,8
tick,0x7ff954e0fd34,224352203,0,0x0,8
tick,0x7ff954e0fd34,224367222,0,0x0,8
tick,0x7ff954e0fd34,224382350,0,0x0,8
tick,0x7ff954e0fd34,224397530,0,0x0,8
tick,0x7ff954e0fd34,224413491,0,0x0,8
tick,0x7ff954e0fd34,224429513,0,0x0,8
tick,0x7ff954e0fd34,224445467,0,0x0,8
tick,0x7ff954e0fd34,224461132,0,0x0,8
tick,0x7ff954e0fd34,224477112,0,0x0,8
tick,0x7ff954e0fd34,224492707,0,0x0,8
tick,0x7ff954e0fd34,224508436,0,0x0,8
tick,0x7ff954e0fd34,224524029,0,0x0,8
tick,0x7ff954e0fd34,224539988,0,0x0,8
tick,0x7ff954e0fd34,224555942,0,0x0,8
tick,0x7ff954e0fd34,224571925,0,0x0,8
tick,0x7ff954e0fd34,224587843,0,0x0,8
tick,0x7ff954e0fd34,224603051,0,0x0,8
tick,0x7ff954e0fd34,224618808,0,0x0,8
tick,0x7ff954e0fd34,224633821,0,0x0,8
tick,0x7ff954e0fd34,224649797,0,0x0,8
tick,0x7ff954e0fd34,224665105,0,0x0,8
tick,0x7ff954e0fd34,224681103,0,0x0,8
tick,0x7ff954e0fd34,224697046,0,0x0,8
tick,0x7ff954e0fd34,224712002,0,0x0,8
tick,0x7ff954e0fd34,224727993,0,0x0,8
tick,0x7ff954e0fd34,224742960,0,0x0,8
tick,0x7ff954e0fd34,224759089,0,0x0,8
tick,0x7ff954e0fd34,224775114,0,0x0,8
tick,0x7ff954e0fd34,224791105,0,0x0,8
tick,0x7ff954e0fd34,224806997,0,0x0,8
tick,0x7ff954e0fd34,224822989,0,0x0,8
tick,0x7ff954e0fd34,224838975,0,0x0,8
tick,0x7ff954e0fd34,224854907,0,0x0,8
tick,0x7ff954e0fd34,224870951,0,0x0,8
tick,0x7ff954e0fd34,224885727,0,0x0,8
tick,0x7ff954e0fd34,224901678,0,0x0,8
tick,0x7ff954e0fd34,224917708,0,0x0,8
tick,0x7ff954e0fd34,224932779,0,0x0,8
tick,0x7ff954e0fd34,224948791,0,0x0,8
tick,0x7ff954e0fd34,224963695,0,0x0,8
tick,0x7ff954e0fd34,224978654,0,0x0,8
tick,0x7ff954e0fd34,224993722,0,0x0,8
tick,0x7ff954e0fd34,225008592,0,0x0,8
tick,0x7ff954e0fd34,225024615,0,0x0,8
tick,0x7ff954e0fd34,225040514,0,0x0,8
tick,0x7ff954e0fd34,225056473,0,0x0,8
tick,0x7ff954e0fd34,225072432,0,0x0,8
tick,0x7ff954e0fd34,225087315,0,0x0,8
tick,0x7ff954e0fd34,225103026,0,0x0,8
tick,0x7ff954e0fd34,225117995,0,0x0,8
tick,0x7ff954e0fd34,225134068,0,0x0,8
tick,0x7ff954e0fd34,225150078,0,0x0,8
tick,0x7ff954e0fd34,225165880,0,0x0,8
tick,0x7ff954e0fd34,225181834,0,0x0,8
tick,0x7ff954e0fd34,225197338,0,0x0,8
tick,0x7ff954e0fd34,225213256,0,0x0,8
tick,0x7ff954e0fd34,225228215,0,0x0,8
tick,0x7ff954e0fd34,225244181,0,0x0,8
tick,0x7ff954e0fd34,225259153,0,0x0,8
tick,0x7ff954e0fd34,225275111,0,0x0,8
tick,0x7ff954e0fd34,225290566,0,0x0,8
tick,0x7ff954e0fd34,225305520,0,0x0,8
tick,0x7ff954e0fd34,225321493,0,0x0,8
tick,0x7ff954e0fd34,225336449,0,0x0,8
tick,0x7ff954e0fd34,225352406,0,0x0,8
tick,0x7ff954e0fd34,225368420,0,0x0,8
tick,0x7ff954e0fd34,225384332,0,0x0,8
tick,0x7ff954e0fd34,225399670,0,0x0,8
tick,0x7ff954e0fd34,225414601,0,0x0,8
tick,0x7ff954e0fd34,225430631,0,0x0,8
tick,0x7ff954e0fd34,225446276,0,0x0,8
tick,0x7ff954e0fd34,225461371,0,0x0,8
tick,0x7ff954e0fd34,225476357,0,0x0,8
tick,0x7ff954e0fd34,225491750,0,0x0,8
tick,0x7ff954e0fd34,225507729,0,0x0,8
tick,0x7ff954e0fd34,225522929,0,0x0,8
tick,0x7ff954e0fd34,225537915,0,0x0,8
tick,0x7ff954e0fd34,225553693,0,0x0,8
tick,0x7ff954e0fd34,225568693,0,0x0,8
tick,0x7ff954e0fd34,225583649,0,0x0,8
tick,0x7ff954e0fd34,225598618,0,0x0,8
tick,0x7ff954e0fd34,225613575,0,0x0,8
tick,0x7ff954e0fd34,225629557,0,0x0,8
tick,0x7ff954e0fd34,225644649,0,0x0,8
tick,0x7ff954e0fd34,225660635,0,0x0,8
tick,0x7ff954e0fd34,225675588,0,0x0,8
tick,0x7ff954e0fd34,225691587,0,0x0,8
tick,0x7ff954e0fd34,225707536,0,0x0,8
tick,0x7ff954e0fd34,225722984,0,0x0,8
tick,0x7ff954e0fd34,225738987,0,0x0,8
tick,0x7ff954e0fd34,225753939,0,0x0,8
tick,0x7ff954e0fd34,225768914,0,0x0,8
tick,0x7ff954e0fd34,225783867,0,0x0,8
tick,0x7ff954e0fd34,225799483,0,0x0,8
tick,0x7ff954e0fd34,225815380,0,0x0,8
tick,0x7ff954e0fd34,225831376,0,0x0,8
tick,0x7ff954e0fd34,225846357,0,0x0,8
tick,0x7ff954e0fd34,225861339,0,0x0,8
tick,0x7ff954e0fd34,225876221,0,0x0,8
tick,0x7ff954e0fd34,225891255,0,0x0,8
tick,0x7ff954e0fd34,225907172,0,0x0,8
tick,0x7ff954e0fd34,225922768,0,0x0,8
tick,0x7ff954e0fd34,225938664,0,0x0,8
tick,0x7ff954e0fd34,225953806,0,0x0,8
tick,0x7ff954e0fd34,225969797,0,0x0,8
tick,0x7ff954e0fd34,225985041,0,0x0,8
tick,0x7ff954e0fd34,226000877,0,0x0,8
tick,0x7ff954e0fd34,226016902,0,0x0,8
tick,0x7ff954e0fd34,226032846,0,0x0,8
tick,0x7ff954e0fd34,226048820,0,0x0,8
tick,0x7ff954e0fd34,226064811,0,0x0,8
tick,0x7ff954e0fd34,226080815,0,0x0,8
tick,0x7ff954e0fd34,226096134,0,0x0,8
tick,0x7ff954e0fd34,226112128,0,0x0,8
tick,0x7ff954e0fd34,226128099,0,0x0,8
tick,0x7ff954e0fd34,226143725,0,0x0,8
tick,0x7ff954e0fd34,226159735,0,0x0,8
tick,0x7ff954e0fd34,226175640,0,0x0,8
tick,0x7ff954e0fd34,226190649,0,0x0,8
tick,0x7ff954e0fd34,226206569,0,0x0,8
tick,0x7ff954e0fd34,226221537,0,0x0,8
tick,0x7ff954e0fd34,226236929,0,0x0,8
tick,0x7ff954e0fd34,226252948,0,0x0,8
tick,0x7ff954e0fd34,226268890,0,0x0,8
tick,0x7ff954e0fd34,226284271,0,0x0,8
tick,0x7ff954e0fd34,226300210,0,0x0,8
tick,0x7ff954e0fd34,226316162,0,0x0,8
tick,0x7ff954e0fd34,226332108,0,0x0,8
tick,0x7ff954e0fd34,226348020,0,0x0,8
tick,0x7ff954e0fd34,226363963,0,0x0,8
tick,0x7ff954e0fd34,226379417,0,0x0,8
tick,0x7ff954e0fd34,226395360,0,0x0,8
tick,0x7ff954e0fd34,226411361,0,0x0,8
tick,0x7ff954e0fd34,226427274,0,0x0,8
tick,0x7ff954e0fd34,226443120,0,0x0,8
tick,0x7ff954e0fd34,226459028,0,0x0,8
tick,0x7ff954e0fd34,226474962,0,0x0,8
tick,0x7ff954e0fd34,226490405,0,0x0,8
tick,0x7ff954e0fd34,226506376,0,0x0,8
tick,0x7ff954e0fd34,226522339,0,0x0,8
tick,0x7ff954e0fd34,226538368,0,0x0,8
tick,0x7ff954e0fd34,226554252,0,0x0,8
tick,0x7ff954e0fd34,226570233,0,0x0,8
tick,0x7ff954e0fd34,226586162,0,0x0,8
tick,0x7ff954e0fd34,226602135,0,0x0,8
tick,0x7ff954e0fd34,226618122,0,0x0,8
tick,0x7ff954e0fd34,226633044,0,0x0,8
tick,0x7ff954e0fd34,226648028,0,0x0,8
tick,0x7ff954e0fd34,226663480,0,0x0,8
tick,0x7ff954e0fd34,226679088,0,0x0,8
tick,0x7ff954e0fd34,226694078,0,0x0,8
tick,0x7ff954e0fd34,226708959,0,0x0,8
tick,0x7ff954e0fd34,226724350,0,0x0,8
tick,0x7ff954e0fd34,226740307,0,0x0,8
tick,0x7ff954e0fd34,226756278,0,0x0,8
tick,0x7ff954e0fd34,226772192,0,0x0,8
tick,0x7ff954e0fd34,226788149,0,0x0,8
tick,0x7ff954e0fd34,226803139,0,0x0,8
tick,0x7ff954e0fd34,226818246,0,0x0,8
tick,0x7ff954e0fd34,226833299,0,0x0,8
tick,0x7ff954e0fd34,226849286,0,0x0,8
tick,0x7ff954e0fd34,226864291,0,0x0,8
tick,0x7ff954e0fd34,226879475,0,0x0,8
tick,0x7ff954e0fd34,226895451,0,0x0,8
tick,0x7ff954e0fd34,226910462,0,0x0,8
tick,0x7ff954e0fd34,226926330,0,0x0,8
tick,0x7ff954e0fd34,226941351,0,0x0,8
tick,0x7ff954e0fd34,226956382,0,0x0,8
tick,0x7ff954e0fd34,226971230,0,0x0,8
tick,0x7ff954e0fd34,226986166,0,0x0,8
tick,0x7ff954e0fd34,227002182,0,0x0,8
tick,0x7ff954e0fd34,227018125,0,0x0,8
tick,0x7ff954e0fd34,227034049,0,0x0,8
tick,0x7ff954e0fd34,227049008,0,0x0,8
tick,0x7ff954e0fd34,227064988,0,0x0,8
tick,0x7ff954e0fd34,227079937,0,0x0,8
tick,0x7ff954e0fd34,227095873,0,0x0,8
tick,0x7ff954e0fd34,227111887,0,0x0,8
tick,0x7ff954e0fd34,227127816,0,0x0,8
tick,0x7ff954e0fd34,227143763,0,0x0,8
tick,0x7ff954e0fd34,227159757,0,0x0,8
tick,0x7ff954e0fd34,227175702,0,0x0,8
tick,0x7ff954e0fd34,227191686,0,0x0,8
tick,0x7ff954e0fd34,227207191,0,0x0,8
tick,0x7ff954e0fd34,227223139,0,0x0,8
tick,0x7ff954e0fd34,227239101,0,0x0,8
tick,0x7ff954e0fd34,227254994,0,0x0,8
tick,0x7ff954e0fd34,227270973,0,0x0,8
tick,0x7ff954e0fd34,227285965,0,0x0,8
tick,0x7ff954e0fd34,227301917,0,0x0,8
tick,0x7ff954e0fd34,227317462,0,0x0,8
tick,0x7ff954e0fd34,227333464,0,0x0,8
tick,0x7ff954e0fd34,227349053,0,0x0,8
tick,0x7ff954e0fd34,227364344,0,0x0,8
tick,0x7ff954e0fd34,227380260,0,0x0,8
tick,0x7ff954e0fd34,227395223,0,0x0,8
tick,0x7ff954e0fd34,227410163,0,0x0,8
tick,0x7ff954e0fd34,227425111,0,0x0,8
tick,0x7ff954e0fd34,227441110,0,0x0,8
tick,0x7ff954e0fd34,227457033,0,0x0,8
tick,0x7ff954e0fd34,227472986,0,0x0,8
tick,0x7ff954e0fd34,227487946,0,0x0,8
tick,0x7ff954e0fd34,227503919,0,0x0,8
tick,0x7ff954e0fd34,227518911,0,0x0,8
tick,0x7ff954e0fd34,227533846,0,0x0,8
tick,0x7ff954e0fd34,227548788,0,0x0,8
tick,0x7ff954e0fd34,227563772,0,0x0,8
tick,0x7ff954e0fd34,227579714,0,0x0,8
tick,0x7ff954e0fd34,227595655,0,0x0,8
tick,0x7ff954e0fd34,227611670,0,0x0,8
tick,0x7ff954e0fd34,227627701,0,0x0,8
tick,0x7ff954e0fd34,227643004,0,0x0,8
tick,0x7ff954e0fd34,227658997,0,0x0,8
tick,0x7ff954e0fd34,227674955,0,0x0,8
tick,0x7ff954e0fd34,227690671,0,0x0,8
tick,0x7ff954e0fd34,227706619,0,0x0,8
tick,0x7ff954e0fd34,227721597,0,0x0,8
tick,0x7ff954e0fd34,227736569,0,0x0,8
tick,0x7ff954e0fd34,227752595,0,0x0,8
tick,0x7ff954e0fd34,227768471,0,0x0,8
tick,0x7ff954e0fd34,227784443,0,0x0,8
tick,0x7ff954e0fd34,227800363,0,0x0,8
tick,0x7ff954e0fd34,227816358,0,0x0,8
tick,0x7ff954e0fd34,227831507,0,0x0,8
tick,0x7ff954e0fd34,227846742,0,0x0,8
tick,0x7ff954e0fd34,227861970,0,0x0,8
tick,0x7ff954e0fd34,227877922,0,0x0,8
tick,0x7ff954e0fd34,227892886,0,0x0,8
tick,0x7ff954e0fd34,227908206,0,0x0,8
tick,0x7ff954e0fd34,227924196,0,0x0,8
tick,0x7ff954e0fd34,227940084,0,0x0,8
tick,0x7ff954e0fd34,227955742,0,0x0,8
tick,0x7ff954e0fd34,227971769,0,0x0,8
tick,0x7ff954e0fd34,227987682,0,0x0,8
tick,0x7ff954e0fd34,228003599,0,0x0,8
tick,0x7ff954e0fd34,228018580,0,0x0,8
tick,0x7ff954e0fd34,228033528,0,0x0,8
tick,0x7ff954e0fd34,228048536,0,0x0,8
tick,0x7ff954e0fd34,228064460,0,0x0,8
tick,0x7ff954e0fd34,228079396,0,0x0,8
tick,0x7ff954e0fd34,228095402,0,0x0,8
tick,0x7ff954e0fd34,228111302,0,0x0,8
tick,0x7ff954e0fd34,228127285,0,0x0,8
tick,0x7ff954e0fd34,228143234,0,0x0,8
tick,0x7ff954e0fd34,228158193,0,0x0,8
tick,0x7ff954e0fd34,228174192,0,0x0,8
tick,0x7ff954e0fd34,228189154,0,0x0,8
tick,0x7ff954e0fd34,228205088,0,0x0,8
tick,0x7ff954e0fd34,228220823,0,0x0,8
tick,0x7ff954e0fd34,228235759,0,0x0,8
tick,0x7ff954e0fd34,228251745,0,0x0,8
tick,0x7ff954e0fd34,228267191,0,0x0,8
tick,0x7ff954e0fd34,228283168,0,0x0,8
tick,0x7ff954e0fd34,228299135,0,0x0,8
tick,0x7ff954e0fd34,228315065,0,0x0,8
tick,0x7ff954e0fd34,228330526,0,0x0,8
tick,0x7ff954e0fd34,228346493,0,0x0,8
tick,0x7ff954e0fd34,228362467,0,0x0,8
tick,0x7ff954e0fd34,228378045,0,0x0,8
tick,0x7ff954e0fd34,228394023,0,0x0,8
tick,0x7ff954e0fd34,228409951,0,0x0,8
tick,0x7ff954e0fd34,228425313,0,0x0,8
tick,0x7ff954e0fd34,228441302,0,0x0,8
tick,0x7ff954e0fd34,228456554,0,0x0,8
tick,0x7ff954e0fd34,228471578,0,0x0,8
tick,0x7ff954e0fd34,228487592,0,0x0,8
tick,0x7ff954e0fd34,228503521,0,0x0,8
tick,0x7ff954e0fd34,228519500,0,0x0,8
tick,0x7ff954e0fd34,228535447,0,0x0,8
tick,0x7ff954e0fd34,228551443,0,0x0,8
tick,0x7ff954e0fd34,228566019,0,0x0,8
tick,0x7ff954e0fd34,228581362,0,0x0,8
tick,0x7ff954e0fd34,228596326,0,0x0,8
tick,0x7ff954e0fd34,228612120,0,0x0,8
tick,0x7ff954e0fd34,228627546,0,0x0,8
tick,0x7ff954e0fd34,228643530,0,0x0,8
tick,0x7ff954e0fd34,228659499,0,0x0,8
tick,0x7ff954e0fd34,228675379,0,0x0,8
tick,0x7ff954e0fd34,228690356,0,0x0,8
tick,0x7ff954e0fd34,228705346,0,0x0,8
tick,0x7ff954e0fd34,228721307,0,0x0,8
tick,0x7ff954e0fd34,228736847,0,0x0,8
tick,0x7ff954e0fd34,228752815,0,0x0,8
tick,0x7ff954e0fd34,228767783,0,0x0,8
tick,0x7ff954e0fd34,228782721,0,0x0,8
tick,0x7ff954e0fd34,228797698,0,0x0,8
tick,0x7ff954e0fd34,228813668,0,0x0,8
tick,0x7ff954e0fd34,228828608,0,0x0,8
tick,0x7ff954e0fd34,228844568,0,0x0,8
tick,0x7ff954e0fd34,228859519,0,0x0,8
tick,0x7ff954e0fd34,228874553,0,0x0,8
tick,0x7ff954e0fd34,228890439,0,0x0,8
tick,0x7ff954e0fd34,228905417,0,0x0,8
tick,0x7ff954e0fd34,228920396,0,0x0,8
tick,0x7ff954e0fd34,228935422,0,0x0,8
tick,0x7ff954e0fd34,228950540,0,0x0,8
tick,0x7ff954e0fd34,228966573,0,0x0,8
tick,0x7ff954e0fd34,228982563,0,0x0,8
tick,0x7ff954e0fd34,228998376,0,0x0,8
tick,0x7ff954e0fd34,229014344,0,0x0,8
tick,0x7ff954e0fd34,229030313,0,0x0,8
tick,0x7ff954e0fd34,229045776,0,0x0,8
tick,0x7ff954e0fd34,229061794,0,0x0,8
tick,0x7ff954e0fd34,229077423,0,0x0,8
tick,0x7ff954e0fd34,229093276,0,0x0,8
tick,0x7ff954e0fd34,229108287,0,0x0,8
tick,0x7ff954e0fd34,229123262,0,0x0,8
tick,0x7ff954e0fd34,229138226,0,0x0,8
tick,0x7ff954e0fd34,229154032,0,0x0,8
tick,0x7ff954e0fd34,229170061,0,0x0,8
tick,0x7ff954e0fd34,229186057,0,0x0,8
tick,0x7ff954e0fd34,229201929,0,0x0,8
tick,0x7ff954e0fd34,229217907,0,0x0,8
tick,0x7ff954e0fd34,229233860,0,0x0,8
tick,0x7ff954e0fd34,229249487,0,0x0,8
tick,0x7ff954e0fd34,229265006,0,0x0,8
tick,0x7ff954e0fd34,229279943,0,0x0,8
tick,0x7ff954e0fd34,229294946,0,0x0,8
tick,0x7ff954e0fd34,229309921,0,0x0,8
tick,0x7ff954e0fd34,229324842,0,0x0,8
tick,0x7ff954e0fd34,229340817,0,0x0,8
tick,0x7ff954e0fd34,229356646,0,0x0,8
tick,0x7ff954e0fd34,229371827,0,0x0,8
tick,0x7ff954e0fd34,229387807,0,0x0,8
tick,0x7ff954e0fd34,229402627,0,0x0,8
tick,0x7ff954e0fd34,229418195,0,0x0,8
tick,0x7ff954e0fd34,229434194,0,0x0,8
tick,0x7ff954e0fd34,229450059,0,0x0,8
tick,0x7ff954e0fd34,229466052,0,0x0,8
tick,0x7ff954e0fd34,229482027,0,0x0,8
tick,0x7ff954e0fd34,229497248,0,0x0,8
tick,0x7ff954e0fd34,229512182,0,0x0,8
tick,0x7ff954e0fd34,229528109,0,0x0,8
tick,0x7ff954e0fd34,229544090,0,0x0,8
tick,0x7ff954e0fd34,229560022,0,0x0,8
tick,0x7ff954e0fd34,229575992,0,0x0,8
tick,0x7ff954e0fd34,229591976,0,0x0,8
tick,0x7ff954e0fd34,229606901,0,0x0,8
tick,0x7ff954e0fd34,229621863,0,0x0,8
tick,0x7ff954e0fd34,229636825,0,0x0,8
tick,0x7ff954e0fd34,229652786,0,0x0,8
tick,0x7ff954e0fd34,229667791,0,0x0,8
tick,0x7ff954e0fd34,229683748,0,0x0,8
tick,0x7ff954e0fd34,229698672,0,0x0,8
tick,0x7ff954e0fd34,229713631,0,0x0,8
tick,0x7ff954e0fd34,229729588,0,0x0,8
tick,0x7ff954e0fd34,229745527,0,0x0,8
tick,0x7ff954e0fd34,229761555,0,0x0,8
tick,0x7ff954e0fd34,229777434,0,0x0,8
tick,0x7ff954e0fd34,229792398,0,0x0,8
tick,0x7ff954e0fd34,229807628,0,0x0,8
tick,0x7ff954e0fd34,229822567,0,0x0,8
tick,0x7ff954e0fd34,229837589,0,0x0,8
tick,0x7ff954e0fd34,229853470,0,0x0,8
tick,0x7ff954e0fd34,229868473,0,0x0,8
tick,0x7ff954e0fd34,229883422,0,0x0,8
tick,0x7ff954e0fd34,229898380,0,0x0,8
tick,0x7ff954e0fd34,229913858,0,0x0,8
tick,0x7ff954e0fd34,229928860,0,0x0,8
tick,0x7ff954e0fd34,229944927,0,0x0,8
tick,0x7ff954e0fd34,229959954,0,0x0,8
tick,0x7ff954e0fd34,229975935,0,0x0,8
tick,0x7ff954e0fd34,229991472,0,0x0,8
tick,0x7ff954e0fd34,230006824,0,0x0,8
tick,0x7ff954e0fd34,230022831,0,0x0,8
tick,0x7ff954e0fd34,230038764,0,0x0,8
tick,0x7ff954e0fd34,230054028,0,0x0,8
tick,0x7ff954e0fd34,230069548,0,0x0,8
tick,0x7ff954e0fd34,230085460,0,0x0,8
tick,0x7ff954e0fd34,230100921,0,0x0,8
tick,0x7ff954e0fd34,230116179,0,0x0,8
tick,0x7ff954e0fd34,230131538,0,0x0,8
tick,0x7ff954e0fd34,230146217,0,0x0,8
tick,0x7ff954e0fd34,230161194,0,0x0,8
tick,0x7ff954e0fd34,230177125,0,0x0,8
tick,0x7ff954e0fd34,230192251,0,0x0,8
tick,0x7ff954e0fd34,230207207,0,0x0,8
tick,0x7ff954e0fd34,230223167,0,0x0,8
tick,0x7ff954e0fd34,230238216,0,0x0,8
tick,0x7ff954e0fd34,230254107,0,0x0,8
tick,0x7ff954e0fd34,230270072,0,0x0,8
tick,0x7ff954e0fd34,230285337,0,0x0,8
tick,0x7ff954e0fd34,230301312,0,0x0,8
tick,0x7ff954e0fd34,230316165,0,0x0,8
tick,0x7ff954e0fd34,230331102,0,0x0,8
tick,0x7ff954e0fd34,230346107,0,0x0,8
tick,0x7ff954e0fd34,230361079,0,0x0,8
tick,0x7ff954e0fd34,230376408,0,0x0,8
tick,0x7ff954e0fd34,230391906,0,0x0,8
tick,0x7ff954e0fd34,230407105,0,0x0,8
tick,0x7ff954e0fd34,230423044,0,0x0,8
tick,0x7ff954e0fd34,230438903,0,0x0,8
tick,0x7ff954e0fd34,230454900,0,0x0,8
tick,0x7ff954e0fd34,230469802,0,0x0,8
tick,0x7ff954e0fd34,230484772,0,0x0,8
tick,0x7ff954e0fd34,230499779,0,0x0,8
tick,0x7ff954e0fd34,230514763,0,0x0,8
tick,0x7ff954e0fd34,230530664,0,0x0,8
tick,0x7ff954e0fd34,230546061,0,0x0,8
tick,0x7ff954e0fd34,230562009,0,0x0,8
tick,0x7ff954e0fd34,230578006,0,0x0,8
tick,0x7ff954e0fd34,230592916,0,0x0,8
tick,0x7ff954e0fd34,230608731,0,0x0,8
tick,0x7ff954e0fd34,230624655,0,0x0,8
tick,0x7ff954e0fd34,230640680,0,0x0,8
tick,0x7ff954e0fd34,230656570,0,0x0,8
tick,0x7ff954e0fd34,230672154,0,0x0,8
tick,0x7ff954e0fd34,230686992,0,0x0,8
tick,0x7ff954e0fd34,230702948,0,0x0,8
tick,0x7ff954e0fd34,230718572,0,0x0,8
tick,0x7ff954e0fd34,230734572,0,0x0,8
tick,0x7ff954e0fd34,230749511,0,0x0,8
tick,0x7ff954e0fd34,230765263,0,0x0,8
tick,0x7ff954e0fd34,230781252,0,0x0,8
tick,0x7ff954e0fd34,230797255,0,0x0,8
tick,0x7ff954e0fd34,230813151,0,0x0,8
tick,0x7ff954e0fd34,230828478,0,0x0,8
tick,0x7ff954e0fd34,230844451,0,0x0,8
tick,0x7ff954e0fd34,230860419,0,0x0,8
tick,0x7ff954e0fd34,230876494,0,0x0,8
tick,0x7ff954e0fd34,230892532,0,0x0,8
tick,0x7ff954e0fd34,230907478,0,0x0,8
tick,0x7ff954e0fd34,230923224,0,0x0,8
tick,0x7ff954e0fd34,230939001,0,0x0,8
tick,0x7ff954e0fd34,230954755,0,0x0,8
tick,0x7ff954e0fd34,230970331,0,0x0,8
tick,0x7ff954e0fd34,230985289,0,0x0,8
tick,0x7ff954e0fd34,231001369,0,0x0,8
tick,0x7ff954e0fd34,231016524,0,0x0,8
tick,0x7ff954e0fd34,231032495,0,0x0,8
tick,0x7ff954e0fd34,231048450,0,0x0,8
tick,0x7ff954e0fd34,231064395,0,0x0,8
tick,0x7ff954e0fd34,231079346,0,0x0,8
tick,0x7ff954e0fd34,231094304,0,0x0,8
tick,0x7ff954e0fd34,231109297,0,0x0,8
tick,0x7ff954e0fd34,231124238,0,0x0,8
tick,0x7ff954e0fd34,231140134,0,0x0,8
tick,0x7ff954e0fd34,231155753,0,0x0,8
tick,0x7ff954e0fd34,231171643,0,0x0,8
tick,0x7ff954e0fd34,231187595,0,0x0,8
tick,0x7ff954e0fd34,231203465,0,0x0,8
tick,0x7ff954e0fd34,231219421,0,0x0,8
tick,0x7ff954e0fd34,231235413,0,0x0,8
tick,0x7ff954e0fd34,231250313,0,0x0,8
tick,0x7ff954e0fd34,231266306,0,0x0,8
tick,0x7ff954e0fd34,231282294,0,0x0,8
tick,0x7ff954e0fd34,231298051,0,0x0,8
tick,0x7ff954e0fd34,231313576,0,0x0,8
tick,0x7ff954e0fd34,231328548,0,0x0,8
tick,0x7ff954e0fd34,231344501,0,0x0,8
tick,0x7ff954e0fd34,231359440,0,0x0,8
tick,0x7ff954e0fd34,231375433,0,0x0,8
tick,0x7ff954e0fd34,231391397,0,0x0,8
tick,0x7ff954e0fd34,231406484,0,0x0,8
tick,0x7ff954e0fd34,231422495,0,0x0,8
tick,0x7ff954e0fd34,231437459,0,0x0,8
tick,0x7ff954e0fd34,231452182,0,0x0,8
tick,0x7ff954e0fd34,231467724,0,0x0,8
tick,0x7ff954e0fd34,231483778,0,0x0,8
tick,0x7ff954e0fd34,231498668,0,0x0,8
tick,0x7ff954e0fd34,231514613,0,0x0,8
tick,0x7ff954e0fd34,231529597,0,0x0,8
tick,0x7ff954e0fd34,231544534,0,0x0,8
tick,0x7ff954e0fd34,231560535,0,0x0,8
tick,0x7ff954e0fd34,231575480,0,0x0,8
tick,0x7ff954e0fd34,231591463,0,0x0,8
tick,0x7ff954e0fd34,231606442,0,0x0,8
tick,0x7ff954e0fd34,231621880,0,0x0,8
tick,0x7ff954e0fd34,231636860,0,0x0,8
tick,0x7ff954e0fd34,231652754,0,0x0,8
tick,0x7ff954e0fd34,231667708,0,0x0,8
tick,0x7ff954e0fd34,231683947,0,0x0,8
tick,0x7ff954e0fd34,231698699,0,0x0,8
tick,0x7ff954e0fd34,231713657,0,0x0,8
tick,0x7ff954e0fd34,231728598,0,0x0,8
tick,0x7ff954e0fd34,231743542,0,0x0,8
tick,0x7ff954e0fd34,231760174,0,0x0,8
tick,0x7ff954e0fd34,231775489,0,0x0,8
tick,0x7ff954e0fd34,231791709,0,0x0,8
tick,0x7ff954e0fd34,231807552,0,0x0,8
tick,0x7ff954e0fd34,231823367,0,0x0,8
tick,0x7ff954e0fd34,231839388,0,0x0,8
tick,0x7ff954e0fd34,231855353,0,0x0,8
tick,0x7ff954e0fd34,231870200,0,0x0,8
tick,0x7ff954e0fd34,231886161,0,0x0,8
tick,0x7ff954e0fd34,231901670,0,0x0,8
tick,0x7ff954e0fd34,231916616,0,0x0,8
tick,0x7ff954e0fd34,231932547,0,0x0,8
tick,0x7ff954e0fd34,231947561,0,0x0,8
tick,0x7ff954e0fd34,231963494,0,0x0,8
tick,0x7ff954e0fd34,231979457,0,0x0,8
tick,0x7ff954e0fd34,231995396,0,0x0,8
tick,0x7ff954e0fd34,232011398,0,0x0,8
tick,0x7ff954e0fd34,232027330,0,0x0,8
tick,0x7ff954e0fd34,232042299,0,0x0,8
tick,0x7ff954e0fd34,232057237,0,0x0,8
tick,0x7ff954e0fd34,232072951,0,0x0,8
tick,0x7ff954e0fd34,232088160,0,0x0,8
tick,0x7ff954e0fd34,232103125,0,0x0,8
tick,0x7ff954e0fd34,232118114,0,0x0,8
tick,0x7ff954e0fd34,232133227,0,0x0,8
tick,0x7ff954e0fd34,232148192,0,0x0,8
tick,0x7ff954e0fd34,232164108,0,0x0,8
tick,0x7ff954e0fd34,232180042,0,0x0,8
tick,0x7ff954e0fd34,232194949,0,0x0,8
tick,0x7ff954e0fd34,232209893,0,0x0,8
tick,0x7ff954e0fd34,232225692,0,0x0,8
tick,0x7ff954e0fd34,232240643,0,0x0,8
tick,0x7ff954e0fd34,232256347,0,0x0,8
tick,0x7ff954e0fd34,232271656,0,0x0,8
tick,0x7ff954e0fd34,232287593,0,0x0,8
tick,0x7ff954e0fd34,232303518,0,0x0,8
tick,0x7ff954e0fd34,232319492,0,0x0,8
tick,0x7ff954e0fd34,232335461,0,0x0,8
tick,0x7ff954e0fd34,232351390,0,0x0,8
tick,0x7ff954e0fd34,232367387,0,0x0,8
tick,0x7ff954e0fd34,232383352,0,0x0,8
tick,0x7ff954e0fd34,232398287,0,0x0,8
tick,0x7ff954e0fd34,232413250,0,0x0,8
tick,0x7ff954e0fd34,232428244,0,0x0,8
tick,0x7ff954e0fd34,232444184,0,0x0,8
tick,0x7ff954e0fd34,232459138,0,0x0,8
tick,0x7ff954e0fd34,232474109,0,0x0,8
tick,0x7ff954e0fd34,232490089,0,0x0,8
tick,0x7ff954e0fd34,232505021,0,0x0,8
tick,0x7ff954e0fd34,232520998,0,0x0,8
tick,0x7ff954e0fd34,232536985,0,0x0,8
tick,0x7ff954e0fd34,232552892,0,0x0,8
tick,0x7ff954e0fd34,232568890,0,0x0,8
tick,0x7ff954e0fd34,232583808,0,0x0,8
tick,0x7ff954e0fd34,232599799,0,0x0,8
tick,0x7ff954e0fd34,232614728,0,0x0,8
tick,0x7ff954e0fd34,232630609,0,0x0,8
tick,0x7ff954e0fd34,232646540,0,0x0,8
tick,0x7ff954e0fd34,232662523,0,0x0,8
tick,0x7ff954e0fd34,232677461,0,0x0,8
tick,0x7ff954e0fd34,232692448,0,0x0,8
tick,0x7ff954e0fd34,232708378,0,0x0,8
tick,0x7ff954e0fd34,232723921,0,0x0,8
tick,0x7ff954e0fd34,232738856,0,0x0,8
tick,0x7ff954e0fd34,232754822,0,0x0,8
tick,0x7ff954e0fd34,232769763,0,0x0,8
tick,0x7ff954e0fd34,232785727,0,0x0,8
tick,0x7ff954e0fd34,232801685,0,0x0,8
tick,0x7ff954e0fd34,232817628,0,0x0,8
tick,0x7ff954e0fd34,232833594,0,0x0,8
tick,0x7ff954e0fd34,232849587,0,0x0,8
tick,0x7ff954e0fd34,232865510,0,0x0,8
tick,0x7ff954e0fd34,232881247,0,0x0,8
tick,0x7ff954e0fd34,232897028,0,0x0,8
tick,0x7ff954e0fd34,232912976,0,0x0,8
tick,0x7ff954e0fd34,232927979,0,0x0,8
tick,0x7ff954e0fd34,232942912,0,0x0,8
tick,0x7ff954e0fd34,232958395,0,0x0,8
tick,0x7ff954e0fd34,232974381,0,0x0,8
tick,0x7ff954e0fd34,232989327,0,0x0,8
tick,0x7ff954e0fd34,233004276,0,0x0,8
tick,0x7ff954e0fd34,233020381,0,0x0,8
tick,0x7ff954e0fd34,233035692,0,0x0,8
tick,0x7ff954e0fd34,233051779,0,0x0,8
tick,0x7ff954e0fd34,233067687,0,0x0,8
tick,0x7ff954e0fd34,233083662,0,0x0,8
tick,0x7ff954e0fd34,233099642,0,0x0,8
tick,0x7ff954e0fd34,233114534,0,0x0,8
tick,0x7ff954e0fd34,233129973,0,0x0,8
tick,0x7ff954e0fd34,233145959,0,0x0,8
tick,0x7ff954e0fd34,233161890,0,0x0,8
tick,0x7ff954e0fd34,233177738,0,0x0,8
tick,0x7ff954e0fd34,233193736,0,0x0,8
tick,0x7ff954e0fd34,233209715,0,0x0,8
tick,0x7ff954e0fd34,233225679,0,0x0,8
tick,0x7ff954e0fd34,233241627,0,0x0,8
tick,0x7ff954e0fd34,233257559,0,0x0,8
tick,0x7ff954e0fd34,233272517,0,0x0,8
tick,0x7ff954e0fd34,233288485,0,0x0,8
tick,0x7ff954e0fd34,233303448,0,0x0,8
tick,0x7ff954e0fd34,233319041,0,0x0,8
tick,0x7ff954e0fd34,233335080,0,0x0,8
tick,0x7ff954e0fd34,233349973,0,0x0,8
tick,0x7ff954e0fd34,233364942,0,0x0,8
tick,0x7ff954e0fd34,233379726,0,0x0,8
tick,0x7ff954e0fd34,233395659,0,0x0,8
tick,0x7ff954e0fd34,233410618,0,0x0,8
tick,0x7ff954e0fd34,233425577,0,0x0,8
tick,0x7ff954e0fd34,233441540,0,0x0,8
tick,0x7ff954e0fd34,233457514,0,0x0,8
tick,0x7ff954e0fd34,233473460,0,0x0,8
tick,0x7ff954e0fd34,233489260,0,0x0,8
tick,0x7ff954e0fd34,233505198,0,0x0,8
tick,0x7ff954e0fd34,233521166,0,0x0,8
tick,0x7ff954e0fd34,233537115,0,0x0,8
tick,0x7ff954e0fd34,233553089,0,0x0,8
tick,0x7ff954e0fd34,233569063,0,0x0,8
tick,0x7ff954e0fd34,233584998,0,0x0,8
tick,0x7ff954e0fd34,233600766,0,0x0,8
tick,0x7ff954e0fd34,233616713,0,0x0,8
tick,0x7ff954e0fd34,233632669,0,0x0,8
tick,0x7ff954e0fd34,233648652,0,0x0,8
tick,0x7ff954e0fd34,233664584,0,0x0,8
tick,0x7ff954e0fd34,233680551,0,0x0,8
tick,0x7ff954e0fd34,233696491,0,0x0,8
tick,0x7ff954e0fd34,233711454,0,0x0,8
tick,0x7ff954e0fd34,233726476,0,0x0,8
tick,0x7ff954e0fd34,233741428,0,0x0,8
tick,0x7ff954e0fd34,233756358,0,0x0,8
tick,0x7ff954e0fd34,233772416,0,0x0,8
tick,0x7ff954e0fd34,233788836,0,0x0,8
tick,0x7ff954e0fd34,233803393,0,0x0,8
tick,0x7ff954e0fd34,233818348,0,0x0,8
tick,0x7ff954e0fd34,233834285,0,0x0,8
tick,0x7ff954e0fd34,233850264,0,0x0,8
tick,0x7ff954e0fd34,233866238,0,0x0,8
tick,0x7ff954e0fd34,233882191,0,0x0,8
tick,0x7ff954e0fd34,233898122,0,0x0,8
tick,0x7ff954e0fd34,233914138,0,0x0,8
tick,0x7ff954e0fd34,233929112,0,0x0,8
tick,0x7ff954e0fd34,233944006,0,0x0,8
tick,0x7ff954e0fd34,233960015,0,0x0,8
tick,0x7ff954e0fd34,233976100,0,0x0,8
tick,0x7ff954e0fd34,233991898,0,0x0,8
tick,0x7ff954e0fd34,234007858,0,0x0,8
tick,0x7ff954e0fd34,234022698,0,0x0,8
tick,0x7ff954e0fd34,234037968,0,0x0,8
tick,0x7ff954e0fd34,234053517,0,0x0,8
tick,0x7ff954e0fd34,234069489,0,0x0,8
tick,0x7ff954e0fd34,234085095,0,0x0,8
tick,0x7ff954e0fd34,234100106,0,0x0,8
tick,0x7ff954e0fd34,234116004,0,0x0,8
tick,0x7ff954e0fd34,234131942,0,0x0,8
tick,0x7ff954e0fd34,234146913,0,0x0,8
tick,0x7ff954e0fd34,234161902,0,0x0,8
tick,0x7ff954e0fd34,234177825,0,0x0,8
tick,0x7ff954e0fd34,234193804,0,0x0,8
tick,0x7ff954e0fd34,234208772,0,0x0,8
tick,0x7ff954e0fd34,234224731,0,0x0,8
tick,0x7ff954e0fd34,234239660,0,0x0,8
tick,0x7ff954e0fd34,234255630,0,0x0,8
tick,0x7ff954e0fd34,234271614,0,0x0,8
tick,0x7ff954e0fd34,234286581,0,0x0,8
tick,0x7ff954e0fd34,234301546,0,0x0,8
tick,0x7ff954e0fd34,234316378,0,0x0,8
tick,0x7ff954e0fd34,234332341,0,0x0,8
tick,0x7ff954e0fd34,234348298,0,0x0,8
tick,0x7ff954e0fd34,234364254,0,0x0,8
tick,0x7ff954e0fd34,234379516,0,0x0,8
tick,0x7ff954e0fd34,234394548,0,0x0,8
tick,0x7ff954e0fd34,234410431,0,0x0,8
tick,0x7ff954e0fd34,234425515,0,0x0,8
tick,0x7ff954e0fd34,234440588,0,0x0,8
tick,0x7ff954e0fd34,234455450,0,0x0,8
tick,0x7ff954e0fd34,234471395,0,0x0,8
tick,0x7ff954e0fd34,234487354,0,0x0,8
tick,0x7ff954e0fd34,234502657,0,0x0,8
tick,0x7ff954e0fd34,234517640,0,0x0,8
tick,0x7ff954e0fd34,234532595,0,0x0,8
tick,0x7ff954e0fd34,234548055,0,0x0,8
tick,0x7ff954e0fd34,234564081,0,0x0,8
tick,0x7ff954e0fd34,234580026,0,0x0,8
tick,0x7ff954e0fd34,234595994,0,0x0,8
tick,0x7ff954e0fd34,234611501,0,0x0,8
tick,0x7ff954e0fd34,234627432,0,0x0,8
tick,0x7ff954e0fd34,234643507,0,0x0,8
tick,0x7ff954e0fd34,234659408,0,0x0,8
tick,0x7ff954e0fd34,234675062,0,0x0,8
tick,0x7ff954e0fd34,234691040,0,0x0,8
tick,0x7ff954e0fd34,234707000,0,0x0,8
tick,0x7ff954e0fd34,234722657,0,0x0,8
tick,0x7ff954e0fd34,234738639,0,0x0,8
tick,0x7ff954e0fd34,234754558,0,0x0,8
tick,0x7ff954e0fd34,234770510,0,0x0,8
tick,0x7ff954e0fd34,234786452,0,0x0,8
tick,0x7ff954e0fd34,234802481,0,0x0,8
tick,0x7ff954e0fd34,234818441,0,0x0,8
tick,0x7ff954e0fd34,234834123,0,0x0,8
tick,0x7ff954e0fd34,234849114,0,0x0,8
tick,0x7ff954e0fd34,234865105,0,0x0,8
tick,0x7ff954e0fd34,234881059,0,0x0,8
tick,0x7ff954e0fd34,234896242,0,0x0,8
tick,0x7ff954e0fd34,234911392,0,0x0,8
tick,0x7ff954e0fd34,234927333,0,0x0,8
tick,0x7ff954e0fd34,234943306,0,0x0,8
tick,0x7ff954e0fd34,234958253,0,0x0,8
tick,0x7ff954e0fd34,234973220,0,0x0,8
tick,0x7ff954e0fd34,234989174,0,0x0,8
tick,0x7ff954e0fd34,235005136,0,0x0,8
tick,0x7ff954e0fd34,235021112,0,0x0,8
tick,0x7ff954e0fd34,235036303,0,0x0,8
tick,0x7ff954e0fd34,235051182,0,0x0,8
tick,0x7ff954e0fd34,235066167,0,0x0,8
tick,0x7ff954e0fd34,235082089,0,0x0,8
tick,0x7ff954e0fd34,235098061,0,0x0,8
tick,0x7ff954e0fd34,235114008,0,0x0,8
tick,0x7ff954e0fd34,235128977,0,0x0,8
tick,0x7ff954e0fd34,235143930,0,0x0,8
tick,0x7ff954e0fd34,235158982,0,0x0,8
tick,0x7ff954e0fd34,235173862,0,0x0,8
tick,0x7ff954e0fd34,235189820,0,0x0,8
tick,0x7ff954e0fd34,235205883,0,0x0,8
tick,0x7ff954e0fd34,235221882,0,0x0,8
tick,0x7ff954e0fd34,235237469,0,0x0,8
tick,0x7ff954e0fd34,235253059,0,0x0,8
tick,0x7ff954e0fd34,235268030,0,0x0,8
tick,0x7ff954e0fd34,235283999,0,0x0,8
tick,0x7ff954e0fd34,235300011,0,0x0,8
tick,0x7ff954e0fd34,235315437,0,0x0,8
tick,0x7ff954e0fd34,235331429,0,0x0,8
tick,0x7ff954e0fd34,235347387,0,0x0,8
tick,0x7ff954e0fd34,235363182,0,0x0,8
tick,0x7ff954e0fd34,235378669,0,0x0,8
tick,0x7ff954e0fd34,235394619,0,0x0,8
tick,0x7ff954e0fd34,235410588,0,0x0,8
tick,0x7ff954e0fd34,235425910,0,0x0,8
tick,0x7ff954e0fd34,235441833,0,0x0,8
tick,0x7ff954e0fd34,235457816,0,0x0,8
tick,0x7ff954e0fd34,235473591,0,0x0,8
tick,0x7ff954e0fd34,235489605,0,0x0,8
tick,0x7ff954e0fd34,235504783,0,0x0,8
tick,0x7ff954e0fd34,235520025,0,0x0,8
tick,0x7ff954e0fd34,235535906,0,0x0,8
tick,0x7ff954e0fd34,235551880,0,0x0,8
tick,0x7ff954e0fd34,235567880,0,0x0,8
tick,0x7ff954e0fd34,235583409,0,0x0,8
tick,0x7ff954e0fd34,235599359,0,0x0,8
tick,0x7ff954e0fd34,235615382,0,0x0,8
tick,0x7ff954e0fd34,235630223,0,0x0,8
tick,0x7ff954e0fd34,235645252,0,0x0,8
tick,0x7ff954e0fd34,235660143,0,0x0,8
tick,0x7ff954e0fd34,235675163,0,0x0,8
tick,0x7ff954e0fd34,235690117,0,0x0,8
tick,0x7ff954e0fd34,235705138,0,0x0,8
tick,0x7ff954e0fd34,235720044,0,0x0,8
tick,0x7ff954e0fd34,235735782,0,0x0,8
tick,0x7ff954e0fd34,235751781,0,0x0,8
tick,0x7ff954e0fd34,235767716,0,0x0,8
tick,0x7ff954e0fd34,235783337,0,0x0,8
tick,0x7ff954e0fd34,235799288,0,0x0,8
tick,0x7ff954e0fd34,235815187,0,0x0,8
tick,0x7ff954e0fd34,235831136,0,0x0,8
tick,0x7ff954e0fd34,235847096,0,0x0,8
tick,0x7ff954e0fd34,235863017,0,0x0,8
tick,0x7ff954e0fd34,235879024,0,0x0,8
tick,0x7ff954e0fd34,235894969,0,0x0,8
tick,0x7ff954e0fd34,235910863,0,0x0,8
tick,0x7ff954e0fd34,235926377,0,0x0,8
tick,0x7ff954e0fd34,235941312,0,0x0,8
tick,0x7ff954e0fd34,235956951,0,0x0,8
tick,0x7ff954e0fd34,235972905,0,0x0,8
tick,0x7ff954e0fd34,235988458,0,0x0,8
tick,0x7ff954e0fd34,236004566,0,0x0,8
tick,0x7ff954e0fd34,236020581,0,0x0,8
tick,0x7ff954e0fd34,236036163,0,0x0,8
tick,0x7ff954e0fd34,236052151,0,0x0,8
tick,0x7ff954e0fd34,236068078,0,0x0,8
tick,0x7ff954e0fd34,236084063,0,0x0,8
tick,0x7ff954e0fd34,236099362,0,0x0,8
tick,0x7ff954e0fd34,236115325,0,0x0,8
tick,0x7ff954e0fd34,236131321,0,0x0,8
tick,0x7ff954e0fd34,236146251,0,0x0,8
tick,0x7ff954e0fd34,236162163,0,0x0,8
tick,0x7ff954e0fd34,236178123,0,0x0,8
tick,0x7ff954e0fd34,236194072,0,0x0,8
tick,0x7ff954e0fd34,236210080,0,0x0,8
tick,0x7ff954e0fd34,236225978,0,0x0,8
tick,0x7ff954e0fd34,236241967,0,0x0,8
tick,0x7ff954e0fd34,236257920,0,0x0,8
tick,0x7ff954e0fd34,236273866,0,0x0,8
tick,0x7ff954e0fd34,236288807,0,0x0,8
tick,0x7ff954e0fd34,236303791,0,0x0,8
tick,0x7ff954e0fd34,236318752,0,0x0,8
tick,0x7ff954e0fd34,236334353,0,0x0,8
tick,0x7ff954e0fd34,236349316,0,0x0,8
tick,0x7ff954e0fd34,236365247,0,0x0,8
tick,0x7ff954e0fd34,236380227,0,0x0,8
tick,0x7ff954e0fd34,236395165,0,0x0,8
tick,0x7ff954e0fd34,236410184,0,0x0,8
tick,0x7ff954e0fd34,236425123,0,0x0,8
tick,0x7ff954e0fd34,236440346,0,0x0,8
tick,0x7ff954e0fd34,236456330,0,0x0,8
tick,0x7ff954e0fd34,236472263,0,0x0,8
tick,0x7ff954e0fd34,236488236,0,0x0,8
tick,0x7ff954e0fd34,236503201,0,0x0,8
tick,0x7ff954e0fd34,236518456,0,0x0,8
tick,0x7ff954e0fd34,236534106,0,0x0,8
tick,0x7ff954e0fd34,236549599,0,0x0,8
tick,0x7ff954e0fd34,236565564,0,0x0,8
tick,0x7ff954e0fd34,236581492,0,0x0,8
tick,0x7ff954e0fd34,236597469,0,0x0,8
tick,0x7ff954e0fd34,236613439,0,0x0,8
tick,0x7ff954e0fd34,236628375,0,0x0,8
tick,0x7ff954e0fd34,236644197,0,0x0,8
tick,0x7ff954e0fd34,236660136,0,0x0,8
tick,0x7ff954e0fd34,236675065,0,0x0,8
tick,0x7ff954e0fd34,236690624,0,0x0,8
tick,0x7ff954e0fd34,236706574,0,0x0,8
tick,0x7ff954e0fd34,236722528,0,0x0,8
tick,0x7ff954e0fd34,236738103,0,0x0,8
tick,0x7ff954e0fd34,236753892,0,0x0,8
tick,0x7ff954e0fd34,236769017,0,0x0,8
tick,0x7ff954e0fd34,236784519,0,0x0,8
tick,0x7ff954e0fd34,236800423,0,0x0,8
tick,0x7ff954e0fd34,236815538,0,0x0,8
tick,0x7ff954e0fd34,236831518,0,0x0,8
tick,0x7ff954e0fd34,236846532,0,0x0,8
tick,0x7ff954e0fd34,236862593,0,0x0,8
tick,0x7ff954e0fd34,236878545,0,0x0,8
tick,0x7ff954e0fd34,236894503,0,0x0,8
tick,0x7ff954e0fd34,236910436,0,0x0,8
tick,0x7ff954e0fd34,236926452,0,0x0,8
tick,0x7ff954e0fd34,236941468,0,0x0,8
tick,0x7ff954e0fd34,236956354,0,0x0,8
tick,0x7ff954e0fd34,236971651,0,0x0,8
tick,0x7ff954e0fd34,236987669,0,0x0,8
tick,0x7ff954e0fd34,237002614,0,0x0,8
tick,0x7ff954e0fd34,237018101,0,0x0,8
tick,0x7ff954e0fd34,237033351,0,0x0,8
tick,0x7ff954e0fd34,237048286,0,0x0,8
tick,0x7ff954e0fd34,237063277,0,0x0,8
tick,0x7ff954e0fd34,237078218,0,0x0,8
tick,0x7ff954e0fd34,237093637,0,0x0,8
tick,0x7ff954e0fd34,237109062,0,0x0,8
tick,0x7ff954e0fd34,237124189,0,0x0,8
tick,0x7ff954e0fd34,237139770,0,0x0,8
tick,0x7ff954e0fd34,237154974,0,0x0,8
tick,0x7ff954e0fd34,237169861,0,0x0,8
tick,0x7ff954e0fd34,237185582,0,0x0,8
tick,0x7ff954e0fd34,237201426,0,0x0,8
tick,0x7ff954e0fd34,237217460,0,0x0,8
tick,0x7ff954e0fd34,237233306,0,0x0,8
tick,0x7ff954e0fd34,237249335,0,0x0,8
tick,0x7ff954e0fd34,237265277,0,0x0,8
tick,0x7ff954e0fd34,237280402,0,0x0,8
tick,0x7ff954e0fd34,237295585,0,0x0,8
tick,0x7ff954e0fd34,237311598,0,0x0,8
tick,0x7ff954e0fd34,237326523,0,0x0,8
tick,0x7ff954e0fd34,237342474,0,0x0,8
tick,0x7ff954e0fd34,237357720,0,0x0,8
tick,0x7ff954e0fd34,237373686,0,0x0,8
tick,0x7ff954e0fd34,237389628,0,0x0,8
tick,0x7ff954e0fd34,237404609,0,0x0,8
tick,0x7ff954e0fd34,237419578,0,0x0,8
tick,0x7ff954e0fd34,237434481,0,0x0,8
tick,0x7ff954e0fd34,237449462,0,0x0,8
tick,0x7ff954e0fd34,237465406,0,0x0,8
tick,0x7ff954e0fd34,237480398,0,0x0,8
tick,0x7ff954e0fd34,237496328,0,0x0,8
tick,0x7ff954e0fd34,237511271,0,0x0,8
tick,0x7ff954e0fd34,237526482,0,0x0,8
tick,0x7ff954e0fd34,237542425,0,0x0,8
tick,0x7ff954e0fd34,237558391,0,0x0,8
tick,0x7ff954e0fd34,237573661,0,0x0,8
tick,0x7ff954e0fd34,237589663,0,0x0,8
tick,0x7ff954e0fd34,237605647,0,0x0,8
tick,0x7ff954e0fd34,237621371,0,0x0,8
tick,0x7ff954e0fd34,237637493,0,0x0,8
tick,0x7ff954e0fd34,237652378,0,0x0,8
tick,0x7ff954e0fd34,237667323,0,0x0,8
tick,0x7ff954e0fd34,237682336,0,0x0,8
tick,0x7ff954e0fd34,237698306,0,0x0,8
tick,0x7ff954e0fd34,237713274,0,0x0,8
tick,0x7ff954e0fd34,237729253,0,0x0,8
tick,0x7ff954e0fd34,237744369,0,0x0,8
tick,0x7ff954e0fd34,237759685,0,0x0,8
tick,0x7ff954e0fd34,237775648,0,0x0,8
tick,0x7ff954e0fd34,237791586,0,0x0,8
tick,0x7ff954e0fd34,237807566,0,0x0,8
tick,0x7ff954e0fd34,237823505,0,0x0,8
tick,0x7ff954e0fd34,237839441,0,0x0,8
tick,0x7ff954e0fd34,237855582,0,0x0,8
tick,0x7ff954e0fd34,237871456,0,0x0,8
tick,0x7ff954e0fd34,237887027,0,0x0,8
tick,0x7ff954e0fd34,237903112,0,0x0,8
tick,0x7ff954e0fd34,237919116,0,0x0,8
tick,0x7ff954e0fd34,237934277,0,0x0,8
tick,0x7ff954e0fd34,237949520,0,0x0,8
tick,0x7ff954e0fd34,237965425,0,0x0,8
tick,0x7ff954e0fd34,237981381,0,0x0,8
tick,0x7ff954e0fd34,237996831,0,0x0,8
tick,0x7ff954e0fd34,238012820,0,0x0,8
tick,0x7ff954e0fd34,238028753,0,0x0,8
tick,0x7ff954e0fd34,238044266,0,0x0,8
tick,0x7ff954e0fd34,238060204,0,0x0,8
tick,0x7ff954e0fd34,238076174,0,0x0,8
tick,0x7ff954e0fd34,238092067,0,0x0,8
tick,0x7ff954e0fd34,238107023,0,0x0,8
tick,0x7ff954e0fd34,238122981,0,0x0,8
tick,0x7ff954e0fd34,238138015,0,0x0,8
tick,0x7ff954e0fd34,238153919,0,0x0,8
tick,0x7ff954e0fd34,238168880,0,0x0,8
tick,0x7ff954e0fd34,238183837,0,0x0,8
tick,0x7ff954e0fd34,238198797,0,0x0,8
tick,0x7ff954e0fd34,238214739,0,0x0,8
tick,0x7ff954e0fd34,238229711,0,0x0,8
tick,0x7ff954e0fd34,238245692,0,0x0,8
tick,0x7ff954e0fd34,238261610,0,0x0,8
tick,0x7ff954e0fd34,238276669,0,0x0,8
tick,0x7ff954e0fd34,238291544,0,0x0,8
tick,0x7ff954e0fd34,238306519,0,0x0,8
tick,0x7ff954e0fd34,238322502,0,0x0,8
tick,0x7ff954e0fd34,238338451,0,0x0,8
tick,0x7ff954e0fd34,238354412,0,0x0,8
tick,0x7ff954e0fd34,238370285,0,0x0,8
tick,0x7ff954e0fd34,238386257,0,0x0,8
tick,0x7ff954e0fd34,238401187,0,0x0,8
tick,0x7ff954e0fd34,238417116,0,0x0,8
tick,0x7ff954e0fd34,238432993,0,0x0,8
tick,0x7ff954e0fd34,238448584,0,0x0,8
tick,0x7ff954e0fd34,238464009,0,0x0,8
tick,0x7ff954e0fd34,238479406,0,0x0,8
tick,0x7ff954e0fd34,238495304,0,0x0,8
tick,0x7ff954e0fd34,238511258,0,0x0,8
tick,0x7ff954e0fd34,238526240,0,0x0,8
tick,0x7ff954e0fd34,238541199,0,0x0,8
tick,0x7ff954e0fd34,238557143,0,0x0,8
tick,0x7ff954e0fd34,238573117,0,0x0,8
tick,0x7ff954e0fd34,238589062,0,0x0,8
tick,0x7ff954e0fd34,238605153,0,0x0,8
tick,0x7ff954e0fd34,238620992,0,0x0,8
tick,0x7ff954e0fd34,238636933,0,0x0,8
tick,0x7ff954e0fd34,238652888,0,0x0,8
tick,0x7ff954e0fd34,238668854,0,0x0,8
tick,0x7ff954e0fd34,238684818,0,0x0,8
tick,0x7ff954e0fd34,238699855,0,0x0,8
tick,0x7ff954e0fd34,238714991,0,0x0,8
tick,0x7ff954e0fd34,238730991,0,0x0,8
tick,0x7ff954e0fd34,238745990,0,0x0,8
tick,0x7ff954e0fd34,238760954,0,0x0,8
tick,0x7ff954e0fd34,238777040,0,0x0,8
tick,0x7ff954e0fd34,238793076,0,0x0,8
tick,0x7ff954e0fd34,238808182,0,0x0,8
tick,0x7ff954e0fd34,238824098,0,0x0,8
tick,0x7ff954e0fd34,238839287,0,0x0,8
tick,0x7ff954e0fd34,238855034,0,0x0,8
tick,0x7ff954e0fd34,238869956,0,0x0,8
tick,0x7ff954e0fd34,238885279,0,0x0,8
tick,0x7ff954e0fd34,238900425,0,0x0,8
tick,0x7ff954e0fd34,238915395,0,0x0,8
tick,0x7ff954e0fd34,238931332,0,0x0,8
tick,0x7ff954e0fd34,238947310,0,0x0,8
tick,0x7ff954e0fd34,238963319,0,0x0,8
tick,0x7ff954e0fd34,238979313,0,0x0,8
tick,0x7ff954e0fd34,238995237,0,0x0,8
tick,0x7ff954e0fd34,239011214,0,0x0,8
tick,0x7ff954e0fd34,239026173,0,0x0,8
tick,0x7ff954e0fd34,239041352,0,0x0,8
tick,0x7ff954e0fd34,239057188,0,0x0,8
tick,0x7ff954e0fd34,239073208,0,0x0,8
tick,0x7ff954e0fd34,239088896,0,0x0,8
tick,0x7ff954e0fd34,239104056,0,0x0,8
tick,0x7ff954e0fd34,239120000,0,0x0,8
tick,0x7ff954e0fd34,239136022,0,0x0,8
tick,0x7ff954e0fd34,239151681,0,0x0,8
tick,0x7ff954e0fd34,239167151,0,0x0,8
tick,0x7ff954e0fd34,239182647,0,0x0,8
tick,0x7ff954e0fd34,239197564,0,0x0,8
tick,0x7ff954e0fd34,239213290,0,0x0,8
tick,0x7ff954e0fd34,239228184,0,0x0,8
tick,0x7ff954e0fd34,239244113,0,0x0,8
tick,0x7ff954e0fd34,239260084,0,0x0,8
tick,0x7ff954e0fd34,239276033,0,0x0,8
tick,0x7ff954e0fd34,239292122,0,0x0,8
tick,0x7ff954e0fd34,239307771,0,0x0,8
tick,0x7ff954e0fd34,239322740,0,0x0,8
tick,0x7ff954e0fd34,239337755,0,0x0,8
tick,0x7ff954e0fd34,239353265,0,0x0,8
tick,0x7ff954e0fd34,239369279,0,0x0,8
tick,0x7ff954e0fd34,239384765,0,0x0,8
tick,0x7ff954e0fd34,239400699,0,0x0,8
tick,0x7ff954e0fd34,239415753,0,0x0,8
tick,0x7ff954e0fd34,239430768,0,0x0,8
tick,0x7ff954e0fd34,239445743,0,0x0,8
tick,0x7ff954e0fd34,239460606,0,0x0,8
tick,0x7ff954e0fd34,239475695,0,0x0,8
tick,0x7ff954e0fd34,239491627,0,0x0,8
tick,0x7ff954e0fd34,239506402,0,0x0,8
tick,0x7ff954e0fd34,239522427,0,0x0,8
tick,0x7ff954e0fd34,239537691,0,0x0,8
tick,0x7ff954e0fd34,239553648,0,0x0,8
tick,0x7ff954e0fd34,239569076,0,0x0,8
tick,0x7ff954e0fd34,239585120,0,0x0,8
tick,0x7ff954e0fd34,239600522,0,0x0,8
tick,0x7ff954e0fd34,239616052,0,0x0,8
tick,0x7ff954e0fd34,239632224,0,0x0,8
tick,0x7ff954e0fd34,239647709,0,0x0,8
tick,0x7ff954e0fd34,239663564,0,0x0,8
tick,0x7ff954e0fd34,239679522,0,0x0,8
tick,0x7ff954e0fd34,239694476,0,0x0,8
tick,0x7ff954e0fd34,239709430,0,0x0,8
tick,0x7ff954e0fd34,239724598,0,0x0,8
tick,0x7ff954e0fd34,239740346,0,0x0,8
tick,0x7ff954e0fd34,239755306,0,0x0,8
tick,0x7ff954e0fd34,239771256,0,0x0,8
tick,0x7ff954e0fd34,239786323,0,0x0,8
tick,0x7ff954e0fd34,239801196,0,0x0,8
tick,0x7ff954e0fd34,239816517,0,0x0,8
tick,0x7ff954e0fd34,239832682,0,0x0,8
tick,0x7ff954e0fd34,239848624,0,0x0,8
tick,0x7ff954e0fd34,239863919,0,0x0,8
tick,0x7ff954e0fd34,239879899,0,0x0,8
tick,0x7ff954e0fd34,239895769,0,0x0,8
tick,0x7ff954e0fd34,239911804,0,0x0,8
tick,0x7ff954e0fd34,239927726,0,0x0,8
tick,0x7ff954e0fd34,239943681,0,0x0,8
tick,0x7ff954e0fd34,239959634,0,0x0,8
tick,0x7ff954e0fd34,239974583,0,0x0,8
tick,0x7ff954e0fd34,239990592,0,0x0,8
tick,0x7ff954e0fd34,240005501,0,0x0,8
tick,0x7ff954e0fd34,240021500,0,0x0,8
tick,0x7ff954e0fd34,240036497,0,0x0,8
tick,0x7ff954e0fd34,240051405,0,0x0,8
tick,0x7ff954e0fd34,240067416,0,0x0,8
tick,0x7ff954e0fd34,240082414,0,0x0,8
tick,0x7ff954e0fd34,240098257,0,0x0,8
tick,0x7ff954e0fd34,240113254,0,0x0,8
tick,0x7ff954e0fd34,240129175,0,0x0,8
tick,0x7ff954e0fd34,240144629,0,0x0,8
tick,0x7ff954e0fd34,240160572,0,0x0,8
tick,0x7ff954e0fd34,240176676,0,0x0,8
tick,0x7ff954e0fd34,240192636,0,0x0,8
tick,0x7ff954e0fd34,240207766,0,0x0,8
tick,0x7ff954e0fd34,240222763,0,0x0,8
tick,0x7ff954e0fd34,240238730,0,0x0,8
tick,0x7ff954e0fd34,240254690,0,0x0,8
tick,0x7ff954e0fd34,240270179,0,0x0,8
tick,0x7ff954e0fd34,240286179,0,0x0,8
tick,0x7ff954e0fd34,240302168,0,0x0,8
tick,0x7ff954e0fd34,240317765,0,0x0,8
tick,0x7ff954e0fd34,240332841,0,0x0,8
tick,0x7ff954e0fd34,240347786,0,0x0,8
tick,0x7ff954e0fd34,240362769,0,0x0,8
tick,0x7ff954e0fd34,240378343,0,0x0,8
tick,0x7ff954e0fd34,240394284,0,0x0,8
tick,0x7ff954e0fd34,240410251,0,0x0,8
tick,0x7ff954e0fd34,240425496,0,0x0,8
tick,0x7ff954e0fd34,240440678,0,0x0,8
tick,0x7ff954e0fd34,240456491,0,0x0,8
tick,0x7ff954e0fd34,240472445,0,0x0,8
tick,0x7ff954e0fd34,240488418,0,0x0,8
tick,0x7ff954e0fd34,240504054,0,0x0,8
tick,0x7ff954e0fd34,240519516,0,0x0,8
tick,0x7ff954e0fd34,240535174,0,0x0,8
tick,0x7ff954e0fd34,240550156,0,0x0,8
tick,0x7ff954e0fd34,240566088,0,0x0,8
tick,0x7ff954e0fd34,240582036,0,0x0,8
tick,0x7ff954e0fd34,240597700,0,0x0,8
tick,0x7ff954e0fd34,240613680,0,0x0,8
tick,0x7ff954e0fd34,240629336,0,0x0,8
tick,0x7ff954e0fd34,240644286,0,0x0,8
tick,0x7ff954e0fd34,240660235,0,0x0,8
tick,0x7ff954e0fd34,240675788,0,0x0,8
tick,0x7ff954e0fd34,240691763,0,0x0,8
tick,0x7ff954e0fd34,240707315,0,0x0,8
tick,0x7ff954e0fd34,240723280,0,0x0,8
tick,0x7ff954e0fd34,240739234,0,0x0,8
tick,0x7ff954e0fd34,240755178,0,0x0,8
tick,0x7ff954e0fd34,240771170,0,0x0,8
tick,0x7ff954e0fd34,240787171,0,0x0,8
tick,0x7ff954e0fd34,240802090,0,0x0,8
tick,0x7ff954e0fd34,240818365,0,0x0,8
tick,0x7ff954e0fd34,240833182,0,0x0,8
tick,0x7ff954e0fd34,240849019,0,0x0,8
tick,0x7ff954e0fd34,240865028,0,0x0,8
tick,0x7ff954e0fd34,240879941,0,0x0,8
tick,0x7ff954e0fd34,240895902,0,0x0,8
tick,0x7ff954e0fd34,240910860,0,0x0,8
tick,0x7ff954e0fd34,240926941,0,0x0,8
tick,0x7ff954e0fd34,240942838,0,0x0,8
tick,0x7ff954e0fd34,240958872,0,0x0,8
tick,0x7ff954e0fd34,240974844,0,0x0,8
tick,0x7ff954e0fd34,240990772,0,0x0,8
tick,0x7ff954e0fd34,241006673,0,0x0,8
tick,0x7ff954e0fd34,241022605,0,0x0,8
tick,0x7ff954e0fd34,241038570,0,0x0,8
tick,0x7ff954e0fd34,241054562,0,0x0,8
tick,0x7ff954e0fd34,241070495,0,0x0,8
tick,0x7ff954e0fd34,241085517,0,0x0,8
tick,0x7ff954e0fd34,241101419,0,0x0,8
tick,0x7ff954e0fd34,241116366,0,0x0,8
tick,0x7ff954e0fd34,241132316,0,0x0,8
tick,0x7ff954e0fd34,241147270,0,0x0,8
tick,0x7ff954e0fd34,241162236,0,0x0,8
tick,0x7ff954e0fd34,241177245,0,0x0,8
tick,0x7ff954e0fd34,241192170,0,0x0,8
tick,0x7ff954e0fd34,241208128,0,0x0,8
tick,0x7ff954e0fd34,241223108,0,0x0,8
tick,0x7ff954e0fd34,241239198,0,0x0,8
tick,0x7ff954e0fd34,241254143,0,0x0,8
tick,0x7ff954e0fd34,241269862,0,0x0,8
tick,0x7ff954e0fd34,241285840,0,0x0,8
tick,0x7ff954e0fd34,241301764,0,0x0,8
tick,0x7ff954e0fd34,241317719,0,0x0,8
tick,0x7ff954e0fd34,241333695,0,0x0,8
tick,0x7ff954e0fd34,241349721,0,0x0,8
tick,0x7ff954e0fd34,241365652,0,0x0,8
tick,0x7ff954e0fd34,241380550,0,0x0,8
tick,0x7ff954e0fd34,241396423,0,0x0,8
tick,0x7ff954e0fd34,241412422,0,0x0,8
tick,0x7ff954e0fd34,241428398,0,0x0,8
tick,0x7ff954e0fd34,241443321,0,0x0,8
tick,0x7ff954e0fd34,241458906,0,0x0,8
tick,0x7ff954e0fd34,241474871,0,0x0,8
tick,0x7ff954e0fd34,241489836,0,0x0,8
tick,0x7ff954e0fd34,241505809,0,0x0,8
tick,0x7ff954e0fd34,241520743,0,0x0,8
tick,0x7ff954e0fd34,241536717,0,0x0,8
tick,0x7ff954e0fd34,241552687,0,0x0,8
tick,0x7ff954e0fd34,241568611,0,0x0,8
tick,0x7ff954e0fd34,241584562,0,0x0,8
tick,0x7ff954e0fd34,241600556,0,0x0,8
tick,0x7ff954e0fd34,241616522,0,0x0,8
tick,0x7ff954e0fd34,241632613,0,0x0,8
tick,0x7ff954e0fd34,241648431,0,0x0,8
tick,0x7ff954e0fd34,241664367,0,0x0,8
tick,0x7ff954e0fd34,241679336,0,0x0,8
tick,0x7ff954e0fd34,241694195,0,0x0,8
tick,0x7ff954e0fd34,241709140,0,0x0,8
tick,0x7ff954e0fd34,241724134,0,0x0,8
tick,0x7ff954e0fd34,241739860,0,0x0,8
tick,0x7ff954e0fd34,241755657,0,0x0,8
tick,0x7ff954e0fd34,241771609,0,0x0,8
tick,0x7ff954e0fd34,241787551,0,0x0,8
tick,0x7ff954e0fd34,241803494,0,0x0,8
tick,0x7ff954e0fd34,241818463,0,0x0,8
tick,0x7ff954e0fd34,241833439,0,0x0,8
tick,0x7ff954e0fd34,241848393,0,0x0,8
tick,0x7ff954e0fd34,241863340,0,0x0,8
tick,0x7ff954e0fd34,241879294,0,0x0,8
tick,0x7ff954e0fd34,241894284,0,0x0,8
tick,0x7ff954e0fd34,241910229,0,0x0,8
tick,0x7ff954e0fd34,241926220,0,0x0,8
tick,0x7ff954e0fd34,241941150,0,0x0,8
tick,0x7ff954e0fd34,241956100,0,0x0,8
tick,0x7ff954e0fd34,241971411,0,0x0,8
tick,0x7ff954e0fd34,241986381,0,0x0,8
tick,0x7ff954e0fd34,242002310,0,0x0,8
tick,0x7ff954e0fd34,242017293,0,0x0,8
tick,0x7ff954e0fd34,242033290,0,0x0,8
tick,0x7ff954e0fd34,242048709,0,0x0,8
tick,0x7ff954e0fd34,242064806,0,0x0,8
tick,0x7ff954e0fd34,242080607,0,0x0,8
tick,0x7ff954e0fd34,242095688,0,0x0,8
tick,0x7ff954e0fd34,242111535,0,0x0,8
tick,0x7ff954e0fd34,242126626,0,0x0,8
tick,0x7ff954e0fd34,242142598,0,0x0,8
tick,0x7ff954e0fd34,242158568,0,0x0,8
tick,0x7ff954e0fd34,242174506,0,0x0,8
tick,0x7ff954e0fd34,242190491,0,0x0,8
tick,0x7ff954e0fd34,242206171,0,0x0,8
tick,0x7ff954e0fd34,242221172,0,0x0,8
tick,0x7ff954e0fd34,242237110,0,0x0,8
tick,0x7ff954e0fd34,242252644,0,0x0,8
tick,0x7ff954e0fd34,242267603,0,0x0,8
tick,0x7ff954e0fd34,242282571,0,0x0,8
tick,0x7ff954e0fd34,242297529,0,0x0,8
tick,0x7ff954e0fd34,242312496,0,0x0,8
tick,0x7ff954e0fd34,242328128,0,0x0,8
tick,0x7ff954e0fd34,242344122,0,0x0,8
tick,0x7ff954e0fd34,242359649,0,0x0,8
tick,0x7ff954e0fd34,242374586,0,0x0,8
tick,0x7ff954e0fd34,242390605,0,0x0,8
tick,0x7ff954e0fd34,242405479,0,0x0,8
tick,0x7ff954e0fd34,242420452,0,0x0,8
tick,0x7ff954e0fd34,242435443,0,0x0,8
tick,0x7ff954e0fd34,242450836,0,0x0,8
tick,0x7ff954e0fd34,242466777,0,0x0,8
tick,0x7ff954e0fd34,242482764,0,0x0,8
tick,0x7ff954e0fd34,242498707,0,0x0,8
tick,0x7ff954e0fd34,242514675,0,0x0,8
tick,0x7ff954e0fd34,242530617,0,0x0,8
tick,0x7ff954e0fd34,242545586,0,0x0,8
tick,0x7ff954e0fd34,242560963,0,0x0,8
tick,0x7ff954e0fd34,242575923,0,0x0,8
tick,0x7ff954e0fd34,242591919,0,0x0,8
tick,0x7ff954e0fd34,242606845,0,0x0,8
tick,0x7ff954e0fd34,242622425,0,0x0,8
tick,0x7ff954e0fd34,242638371,0,0x0,8
tick,0x7ff954e0fd34,242653493,0,0x0,8
tick,0x7ff954e0fd34,242669452,0,0x0,8
tick,0x7ff954e0fd34,242684423,0,0x0,8
tick,0x7ff954e0fd34,242700375,0,0x0,8
tick,0x7ff954e0fd34,242716311,0,0x0,8
tick,0x7ff954e0fd34,242731483,0,0x0,8
tick,0x7ff954e0fd34,242747478,0,0x0,8
tick,0x7ff954e0fd34,242763025,0,0x0,8
tick,0x7ff954e0fd34,242778733,0,0x0,8
tick,0x7ff954e0fd34,242794675,0,0x0,8
tick,0x7ff954e0fd34,242809622,0,0x0,8
tick,0x7ff954e0fd34,242825622,0,0x0,8
tick,0x7ff954e0fd34,242841134,0,0x0,8
tick,0x7ff954e0fd34,242857145,0,0x0,8
tick,0x7ff954e0fd34,242873100,0,0x0,8
tick,0x7ff954e0fd34,242889002,0,0x0,8
tick,0x7ff954e0fd34,242904686,0,0x0,8
tick,0x7ff954e0fd34,242919601,0,0x0,8
tick,0x7ff954e0fd34,242935594,0,0x0,8
tick,0x7ff954e0fd34,242950528,0,0x0,8
tick,0x7ff954e0fd34,242966484,0,0x0,8
tick,0x7ff954e0fd34,242981425,0,0x0,8
tick,0x7ff954e0fd34,242996748,0,0x0,8
tick,0x7ff954e0fd34,243011384,0,0x0,8
tick,0x7ff954e0fd34,243026496,0,0x0,8
tick,0x7ff954e0fd34,243042320,0,0x0,8
tick,0x7ff954e0fd34,243058611,0,0x0,8
tick,0x7ff954e0fd34,243074300,0,0x0,8
tick,0x7ff954e0fd34,243090142,0,0x0,8
tick,0x7ff954e0fd34,243106443,0,0x0,8
tick,0x7ff954e0fd34,243122059,0,0x0,8
tick,0x7ff954e0fd34,243137147,0,0x0,8
tick,0x7ff954e0fd34,243152084,0,0x0,8
tick,0x7ff954e0fd34,243167918,0,0x0,8
tick,0x7ff954e0fd34,243183897,0,0x0,8
tick,0x7ff954e0fd34,243199863,0,0x0,8
tick,0x7ff954e0fd34,243215823,0,0x0,8
tick,0x7ff954e0fd34,243231747,0,0x0,8
tick,0x7ff954e0fd34,243246739,0,0x0,8
tick,0x7ff954e0fd34,243261663,0,0x0,8
tick,0x7ff954e0fd34,243276636,0,0x0,8
tick,0x7ff954e0fd34,243292782,0,0x0,8
tick,0x7ff954e0fd34,243307550,0,0x0,8
tick,0x7ff954e0fd34,243323508,0,0x0,8
tick,0x7ff954e0fd34,243339495,0,0x0,8
tick,0x7ff954e0fd34,243355442,0,0x0,8
tick,0x7ff954e0fd34,243370877,0,0x0,8
tick,0x7ff954e0fd34,243386845,0,0x0,8
tick,0x7ff954e0fd34,243402053,0,0x0,8
tick,0x7ff954e0fd34,243416949,0,0x0,8
tick,0x7ff954e0fd34,243432801,0,0x0,8
tick,0x7ff954e0fd34,243447813,0,0x0,8
tick,0x7ff954e0fd34,243462998,0,0x0,8
tick,0x7ff954e0fd34,243478973,0,0x0,8
tick,0x7ff954e0fd34,243494512,0,0x0,8
tick,0x7ff954e0fd34,243510468,0,0x0,8
tick,0x7ff954e0fd34,243525544,0,0x0,8
tick,0x7ff954e0fd34,243540487,0,0x0,8
tick,0x7ff954e0fd34,243555659,0,0x0,8
tick,0x7ff954e0fd34,243571608,0,0x0,8
tick,0x7ff954e0fd34,243586562,0,0x0,8
tick,0x7ff954e0fd34,243601508,0,0x0,8
tick,0x7ff954e0fd34,243617489,0,0x0,8
tick,0x7ff954e0fd34,243633026,0,0x0,8
tick,0x7ff954e0fd34,243648977,0,0x0,8
tick,0x7ff954e0fd34,243664939,0,0x0,8
tick,0x7ff954e0fd34,243679888,0,0x0,8
tick,0x7ff954e0fd34,243695864,0,0x0,8
tick,0x7ff954e0fd34,243710823,0,0x0,8
tick,0x7ff954e0fd34,243726778,0,0x0,8
tick,0x7ff954e0fd34,243741737,0,0x0,8
tick,0x7ff954e0fd34,243756769,0,0x0,8
tick,0x7ff954e0fd34,243771680,0,0x0,8
tick,0x7ff954e0fd34,243786835,0,0x0,8
tick,0x7ff954e0fd34,243802668,0,0x0,8
tick,0x7ff954e0fd34,243817635,0,0x0,8
tick,0x7ff954e0fd34,243832665,0,0x0,8
tick,0x7ff954e0fd34,243848600,0,0x0,8
tick,0x7ff954e0fd34,243863511,0,0x0,8
tick,0x7ff954e0fd34,243879462,0,0x0,8
tick,0x7ff954e0fd34,243895452,0,0x0,8
tick,0x7ff954e0fd34,243911378,0,0x0,8
tick,0x7ff954e0fd34,243926357,0,0x0,8
tick,0x7ff954e0fd34,243941324,0,0x0,8
tick,0x7ff954e0fd34,243956425,0,0x0,8
tick,0x7ff954e0fd34,243972361,0,0x0,8
tick,0x7ff954e0fd34,243987386,0,0x0,8
tick,0x7ff954e0fd34,244002915,0,0x0,8
tick,0x7ff954e0fd34,244018872,0,0x0,8
tick,0x7ff954e0fd34,244034681,0,0x0,8
tick,0x7ff954e0fd34,244050305,0,0x0,8
tick,0x7ff954e0fd34,244066271,0,0x0,8
tick,0x7ff954e0fd34,244081485,0,0x0,8
tick,0x7ff954e0fd34,244096828,0,0x0,8
tick,0x7ff954e0fd34,244112828,0,0x0,8
tick,0x7ff954e0fd34,244128567,0,0x0,8
tick,0x7ff954e0fd34,244144621,0,0x0,8
tick,0x7ff954e0fd34,244160584,0,0x0,8
tick,0x7ff954e0fd34,244176324,0,0x0,8
tick,0x7ff954e0fd34,244191626,0,0x0,8
tick,0x7ff954e0fd34,244206586,0,0x0,8
tick,0x7ff954e0fd34,244222544,0,0x0,8
tick,0x7ff954e0fd34,244238507,0,0x0,8
tick,0x7ff954e0fd34,244254469,0,0x0,8
tick,0x7ff954e0fd34,244270417,0,0x0,8
tick,0x7ff954e0fd34,244286376,0,0x0,8
tick,0x7ff954e0fd34,244302335,0,0x0,8
tick,0x7ff954e0fd34,244318324,0,0x0,8
tick,0x7ff954e0fd34,244333274,0,0x0,8
tick,0x7ff954e0fd34,244348200,0,0x0,8
tick,0x7ff954e0fd34,244364149,0,0x0,8
tick,0x7ff954e0fd34,244380115,0,0x0,8
tick,0x7ff954e0fd34,244396060,0,0x0,8
tick,0x7ff954e0fd34,244412015,0,0x0,8
tick,0x7ff954e0fd34,244428032,0,0x0,8
tick,0x7ff954e0fd34,244443972,0,0x0,8
tick,0x7ff954e0fd34,244459929,0,0x0,8
tick,0x7ff954e0fd34,244475860,0,0x0,8
tick,0x7ff954e0fd34,244491809,0,0x0,8
tick,0x7ff954e0fd34,244506684,0,0x0,8
tick,0x7ff954e0fd34,244522213,0,0x0,8
tick,0x7ff954e0fd34,244537553,0,0x0,8
tick,0x7ff954e0fd34,244552839,0,0x0,8
tick,0x7ff954e0fd34,244568817,0,0x0,8
tick,0x7ff954e0fd34,244584744,0,0x0,8
tick,0x7ff954e0fd34,244599674,0,0x0,8
tick,0x7ff954e0fd34,244614619,0,0x0,8
tick,0x7ff954e0fd34,244629567,0,0x0,8
tick,0x7ff954e0fd34,244644640,0,0x0,8
tick,0x7ff954e0fd34,244659615,0,0x0,8
tick,0x7ff954e0fd34,244674739,0,0x0,8
tick,0x7ff954e0fd34,244690655,0,0x0,8
tick,0x7ff954e0fd34,244705788,0,0x0,8
tick,0x7ff954e0fd34,244721662,0,0x0,8
tick,0x7ff954e0fd34,244736855,0,0x0,8
tick,0x7ff954e0fd34,244752478,0,0x0,8
tick,0x7ff954e0fd34,244767439,0,0x0,8
tick,0x7ff954e0fd34,244783402,0,0x0,8
tick,0x7ff954e0fd34,244798340,0,0x0,8
tick,0x7ff954e0fd34,244813641,0,0x0,8
tick,0x7ff954e0fd34,244829619,0,0x0,8
tick,0x7ff954e0fd34,244845426,0,0x0,8
tick,0x7ff954e0fd34,244860544,0,0x0,8
tick,0x7ff954e0fd34,244875643,0,0x0,8
tick,0x7ff954e0fd34,244891724,0,0x0,8
tick,0x7ff954e0fd34,244906522,0,0x0,8
tick,0x7ff954e0fd34,244922480,0,0x0,8
tick,0x7ff954e0fd34,244938505,0,0x0,8
tick,0x7ff954e0fd34,244954409,0,0x0,8
tick,0x7ff954e0fd34,244970360,0,0x0,8
tick,0x7ff954e0fd34,244986350,0,0x0,8
tick,0x7ff954e0fd34,245001931,0,0x0,8
tick,0x7ff954e0fd34,245017419,0,0x0,8
tick,0x7ff954e0fd34,245032434,0,0x0,8
tick,0x7ff954e0fd34,245048424,0,0x0,8
tick,0x7ff954e0fd34,245063904,0,0x0,8
tick,0x7ff954e0fd34,245079852,0,0x0,8
tick,0x7ff954e0fd34,245095787,0,0x0,8
tick,0x7ff954e0fd34,245112466,0,0x0,8
tick,0x7ff954e0fd34,245126741,0,0x0,8
tick,0x7ff954e0fd34,245141707,0,0x0,8
tick,0x7ff954e0fd34,245156927,0,0x0,8
tick,0x7ff954e0fd34,245171915,0,0x0,8
tick,0x7ff954e0fd34,245187888,0,0x0,8
tick,0x7ff954e0fd34,245203826,0,0x0,8
tick,0x7ff954e0fd34,245219818,0,0x0,8
tick,0x7ff954e0fd34,245235766,0,0x0,8
tick,0x7ff954e0fd34,245251690,0,0x0,8
tick,0x7ff954e0fd34,245266638,0,0x0,8
tick,0x7ff954e0fd34,245281589,0,0x0,8
tick,0x7ff954e0fd34,245296551,0,0x0,8
tick,0x7ff954e0fd34,245312544,0,0x0,8
tick,0x7ff954e0fd34,245328463,0,0x0,8
tick,0x7ff954e0fd34,245344416,0,0x0,8
tick,0x7ff954e0fd34,245360383,0,0x0,8
tick,0x7ff954e0fd34,245376345,0,0x0,8
tick,0x7ff954e0fd34,245391298,0,0x0,8
tick,0x7ff954e0fd34,245406335,0,0x0,8
tick,0x7ff954e0fd34,245422232,0,0x0,8
tick,0x7ff954e0fd34,245438192,0,0x0,8
tick,0x7ff954e0fd34,245454154,0,0x0,8
tick,0x7ff954e0fd34,245470121,0,0x0,8
tick,0x7ff954e0fd34,245486063,0,0x0,8
tick,0x7ff954e0fd34,245501016,0,0x0,8
tick,0x7ff954e0fd34,245515977,0,0x0,8
tick,0x7ff954e0fd34,245531436,0,0x0,8
tick,0x7ff954e0fd34,245547382,0,0x0,8
tick,0x7ff954e0fd34,245563312,0,0x0,8
tick,0x7ff954e0fd34,245578876,0,0x0,8
tick,0x7ff954e0fd34,245594850,0,0x0,8
tick,0x7ff954e0fd34,245609807,0,0x0,8
tick,0x7ff954e0fd34,245624751,0,0x0,8
tick,0x7ff954e0fd34,245640166,0,0x0,8
tick,0x7ff954e0fd34,245656081,0,0x0,8
tick,0x7ff954e0fd34,245671668,0,0x0,8
tick,0x7ff954e0fd34,245686560,0,0x0,8
tick,0x7ff954e0fd34,245701541,0,0x0,8
tick,0x7ff954e0fd34,245716490,0,0x0,8
tick,0x7ff954e0fd34,245732442,0,0x0,8
tick,0x7ff954e0fd34,245748302,0,0x0,8
tick,0x7ff954e0fd34,245764006,0,0x0,8
tick,0x7ff954e0fd34,245779975,0,0x0,8
tick,0x7ff954e0fd34,245794641,0,0x0,8
tick,0x7ff954e0fd34,245809604,0,0x0,8
tick,0x7ff954e0fd34,245824610,0,0x0,8
tick,0x7ff954e0fd34,245840541,0,0x0,8
tick,0x7ff954e0fd34,245856357,0,0x0,8
tick,0x7ff954e0fd34,245872073,0,0x0,8
tick,0x7ff954e0fd34,245887804,0,0x0,8
tick,0x7ff954e0fd34,245903745,0,0x0,8
tick,0x7ff954e0fd34,245920732,0,0x0,8
tick,0x7ff954e0fd34,245935090,0,0x0,8
tick,0x7ff954e0fd34,245949983,0,0x0,8
tick,0x7ff954e0fd34,245964992,0,0x0,8
tick,0x7ff954e0fd34,245980912,0,0x0,8
tick,0x7ff954e0fd34,245996878,0,0x0,8
tick,0x7ff954e0fd34,246013097,0,0x0,8
tick,0x7ff954e0fd34,246029166,0,0x0,8
tick,0x7ff954e0fd34,246043760,0,0x0,8
tick,0x7ff954e0fd34,246059712,0,0x0,8
tick,0x7ff954e0fd34,246074656,0,0x0,8
tick,0x7ff954e0fd34,246089625,0,0x0,8
tick,0x7ff954e0fd34,246105653,0,0x0,8
tick,0x7ff954e0fd34,246120673,0,0x0,8
tick,0x7ff954e0fd34,246136549,0,0x0,8
tick,0x7ff954e0fd34,246152499,0,0x0,8
tick,0x7ff954e0fd34,246168408,0,0x0,8
tick,0x7ff954e0fd34,246183396,0,0x0,8
tick,0x7ff954e0fd34,246198335,0,0x0,8
tick,0x7ff954e0fd34,246213316,0,0x0,8
tick,0x7ff954e0fd34,246228681,0,0x0,8
tick,0x7ff954e0fd34,246244640,0,0x0,8
tick,0x7ff954e0fd34,246260611,0,0x0,8
tick,0x7ff954e0fd34,246275562,0,0x0,8
tick,0x7ff954e0fd34,246290550,0,0x0,8
tick,0x7ff954e0fd34,246305526,0,0x0,8
tick,0x7ff954e0fd34,246320465,0,0x0,8
tick,0x7ff954e0fd34,246336394,0,0x0,8
tick,0x7ff954e0fd34,246351356,0,0x0,8
tick,0x7ff954e0fd34,246366359,0,0x0,8
tick,0x7ff954e0fd34,246382351,0,0x0,8
tick,0x7ff954e0fd34,246398356,0,0x0,8
tick,0x7ff954e0fd34,246414303,0,0x0,8
tick,0x7ff954e0fd34,246429249,0,0x0,8
tick,0x7ff954e0fd34,246444608,0,0x0,8
tick,0x7ff954e0fd34,246459579,0,0x0,8
tick,0x7ff954e0fd34,246475533,0,0x0,8
tick,0x7ff954e0fd34,246491518,0,0x0,8
tick,0x7ff954e0fd34,246506714,0,0x0,8
tick,0x7ff954e0fd34,246522674,0,0x0,8
tick,0x7ff954e0fd34,246537620,0,0x0,8
tick,0x7ff954e0fd34,246553585,0,0x0,8
tick,0x7ff954e0fd34,246569525,0,0x0,8
tick,0x7ff954e0fd34,246585507,0,0x0,8
tick,0x7ff954e0fd34,246601643,0,0x0,8
tick,0x7ff954e0fd34,246617572,0,0x0,8
tick,0x7ff954e0fd34,246633560,0,0x0,8
tick,0x7ff954e0fd34,246648561,0,0x0,8
tick,0x7ff954e0fd34,246664629,0,0x0,8
tick,0x7ff954e0fd34,246679604,0,0x0,8
tick,0x7ff954e0fd34,246694783,0,0x0,8
tick,0x7ff954e0fd34,246710066,0,0x0,8
tick,0x7ff954e0fd34,246725919,0,0x0,8
tick,0x7ff954e0fd34,246740863,0,0x0,8
tick,0x7ff954e0fd34,246755842,0,0x0,8
tick,0x7ff954e0fd34,246770787,0,0x0,8
tick,0x7ff954e0fd34,246786746,0,0x0,8
tick,0x7ff954e0fd34,246801795,0,0x0,8
tick,0x7ff954e0fd34,246816981,0,0x0,8
tick,0x7ff954e0fd34,246831879,0,0x0,8
tick,0x7ff954e0fd34,246846830,0,0x0,8
tick,0x7ff954e0fd34,246862812,0,0x0,8
tick,0x7ff954e0fd34,246878773,0,0x0,8
tick,0x7ff954e0fd34,246894381,0,0x0,8
tick,0x7ff954e0fd34,246910508,0,0x0,8
tick,0x7ff954e0fd34,246925942,0,0x0,8
tick,0x7ff954e0fd34,246940874,0,0x0,8
tick,0x7ff954e0fd34,246956831,0,0x0,8
tick,0x7ff954e0fd34,246971826,0,0x0,8
tick,0x7ff954e0fd34,246987497,0,0x0,8
tick,0x7ff954e0fd34,247002471,0,0x0,8
tick,0x7ff954e0fd34,247018085,0,0x0,8
tick,0x7ff954e0fd34,247034030,0,0x0,8
tick,0x7ff954e0fd34,247049162,0,0x0,8
tick,0x7ff954e0fd34,247064155,0,0x0,8
tick,0x7ff954e0fd34,247079121,0,0x0,8
tick,0x7ff954e0fd34,247094079,0,0x0,8
tick,0x7ff954e0fd34,247109019,0,0x0,8
tick,0x7ff954e0fd34,247125376,0,0x0,8
tick,0x7ff954e0fd34,247140914,0,0x0,8
tick,0x7ff954e0fd34,247156891,0,0x0,8
tick,0x7ff954e0fd34,247171856,0,0x0,8
tick,0x7ff954e0fd34,247186800,0,0x0,8
tick,0x7ff954e0fd34,247201779,0,0x0,8
tick,0x7ff954e0fd34,247216717,0,0x0,8
tick,0x7ff954e0fd34,247232682,0,0x0,8
tick,0x7ff954e0fd34,247247626,0,0x0,8
tick,0x7ff954e0fd34,247262856,0,0x0,8
tick,0x7ff954e0fd34,247278109,0,0x0,8
tick,0x7ff954e0fd34,247293881,0,0x0,8
tick,0x7ff954e0fd34,247309037,0,0x0,8
tick,0x7ff954e0fd34,247324720,0,0x0,8
tick,0x7ff954e0fd34,247340668,0,0x0,8
tick,0x7ff954e0fd34,247356585,0,0x0,8
tick,0x7ff954e0fd34,247372336,0,0x0,8
tick,0x7ff954e0fd34,247388242,0,0x0,8
tick,0x7ff954e0fd34,247404170,0,0x0,8
tick,0x7ff954e0fd34,247420118,0,0x0,8
tick,0x7ff954e0fd34,247435121,0,0x0,8
tick,0x7ff954e0fd34,247450317,0,0x0,8
tick,0x7ff954e0fd34,247466145,0,0x0,8
tick,0x7ff954e0fd34,247481402,0,0x0,8
tick,0x7ff954e0fd34,247496396,0,0x0,8
tick,0x7ff954e0fd34,247512328,0,0x0,8
tick,0x7ff954e0fd34,247527735,0,0x0,8
tick,0x7ff954e0fd34,247543673,0,0x0,8
tick,0x7ff954e0fd34,247559610,0,0x0,8
tick,0x7ff954e0fd34,247575540,0,0x0,8
tick,0x7ff954e0fd34,247590961,0,0x0,8
tick,0x7ff954e0fd34,247606891,0,0x0,8
tick,0x7ff954e0fd34,247621858,0,0x0,8
tick,0x7ff954e0fd34,247636832,0,0x0,8
tick,0x7ff954e0fd34,247651802,0,0x0,8
tick,0x7ff954e0fd34,247666757,0,0x0,8
tick,0x7ff954e0fd34,247682695,0,0x0,8
tick,0x7ff954e0fd34,247698708,0,0x0,8
tick,0x7ff954e0fd34,247713630,0,0x0,8
tick,0x7ff954e0fd34,247729574,0,0x0,8
tick,0x7ff954e0fd34,247744525,0,0x0,8
tick,0x7ff954e0fd34,247760555,0,0x0,8
tick,0x7ff954e0fd34,247776445,0,0x0,8
tick,0x7ff954e0fd34,247792185,0,0x0,8
tick,0x7ff954e0fd34,247807537,0,0x0,8
tick,0x7ff954e0fd34,247822483,0,0x0,8
tick,0x7ff954e0fd34,247838434,0,0x0,8
tick,0x7ff954e0fd34,247853390,0,0x0,8
tick,0x7ff954e0fd34,247868346,0,0x0,8
tick,0x7ff954e0fd34,247883344,0,0x0,8
tick,0x7ff954e0fd34,247899313,0,0x0,8
tick,0x7ff954e0fd34,247914277,0,0x0,8
tick,0x7ff954e0fd34,247929453,0,0x0,8
tick,0x7ff954e0fd34,247945360,0,0x0,8
tick,0x7ff954e0fd34,247960297,0,0x0,8
tick,0x7ff954e0fd34,247975423,0,0x0,8
tick,0x7ff954e0fd34,247991411,0,0x0,8
tick,0x7ff954e0fd34,248006332,0,0x0,8
tick,0x7ff954e0fd34,248022293,0,0x0,8
tick,0x7ff954e0fd34,248037440,0,0x0,8
tick,0x7ff954e0fd34,248052465,0,0x0,8
tick,0x7ff954e0fd34,248068398,0,0x0,8
tick,0x7ff954e0fd34,248084522,0,0x0,8
tick,0x7ff954e0fd34,248099451,0,0x0,8
tick,0x7ff954e0fd34,248115461,0,0x0,8
tick,0x7ff954e0fd34,248130371,0,0x0,8
tick,0x7ff954e0fd34,248146320,0,0x0,8
tick,0x7ff954e0fd34,248162343,0,0x0,8
tick,0x7ff954e0fd34,248178227,0,0x0,8
tick,0x7ff954e0fd34,248194186,0,0x0,8
tick,0x7ff954e0fd34,248210157,0,0x0,8
tick,0x7ff954e0fd34,248226099,0,0x0,8
tick,0x7ff954e0fd34,248241078,0,0x0,8
tick,0x7ff954e0fd34,248257063,0,0x0,8
tick,0x7ff954e0fd34,248272365,0,0x0,8
tick,0x7ff954e0fd34,248288273,0,0x0,8
tick,0x7ff954e0fd34,248304232,0,0x0,8
tick,0x7ff954e0fd34,248320348,0,0x0,8
tick,0x7ff954e0fd34,248336275,0,0x0,8
tick,0x7ff954e0fd34,248352247,0,0x0,8
tick,0x7ff954e0fd34,248368338,0,0x0,8
tick,0x7ff954e0fd34,248383399,0,0x0,8
tick,0x7ff954e0fd34,248399270,0,0x0,8
tick,0x7ff954e0fd34,248414268,0,0x0,8
tick,0x7ff954e0fd34,248430007,0,0x0,8
tick,0x7ff954e0fd34,248445050,0,0x0,8
tick,0x7ff954e0fd34,248460024,0,0x0,8
tick,0x7ff954e0fd34,248474975,0,0x0,8
tick,0x7ff954e0fd34,248490988,0,0x0,8
tick,0x7ff954e0fd34,248506066,0,0x0,8
tick,0x7ff954e0fd34,248521922,0,0x0,8
tick,0x7ff954e0fd34,248537468,0,0x0,8
tick,0x7ff954e0fd34,248553419,0,0x0,8
tick,0x7ff954e0fd34,248569436,0,0x0,8
tick,0x7ff954e0fd34,248584885,0,0x0,8
tick,0x7ff954e0fd34,248600170,0,0x0,8
tick,0x7ff954e0fd34,248615378,0,0x0,8
tick,0x7ff954e0fd34,248631307,0,0x0,8
tick,0x7ff954e0fd34,248646323,0,0x0,8
tick,0x7ff954e0fd34,248661636,0,0x0,8
tick,0x7ff954e0fd34,248676576,0,0x0,8
tick,0x7ff954e0fd34,248692665,0,0x0,8
tick,0x7ff954e0fd34,248707480,0,0x0,8
tick,0x7ff954e0fd34,248723497,0,0x0,8
tick,0x7ff954e0fd34,248739401,0,0x0,8
tick,0x7ff954e0fd34,248755363,0,0x0,8
tick,0x7ff954e0fd34,248771318,0,0x0,8
tick,0x7ff954e0fd34,248787284,0,0x0,8
tick,0x7ff954e0fd34,248802280,0,0x0,8
tick,0x7ff954e0fd34,248817208,0,0x0,8
tick,0x7ff954e0fd34,248832157,0,0x0,8
tick,0x7ff954e0fd34,248847639,0,0x0,8
tick,0x7ff954e0fd34,248863606,0,0x0,8
tick,0x7ff954e0fd34,248879565,0,0x0,8
tick,0x7ff954e0fd34,248894506,0,0x0,8
tick,0x7ff954e0fd34,248909359,0,0x0,8
tick,0x7ff954e0fd34,248924381,0,0x0,8
tick,0x7ff954e0fd34,248940322,0,0x0,8
tick,0x7ff954e0fd34,248955317,0,0x0,8
tick,0x7ff954e0fd34,248970792,0,0x0,8
tick,0x7ff954e0fd34,248986266,0,0x0,8
tick,0x7ff954e0fd34,249001272,0,0x0,8
tick,0x7ff954e0fd34,249017187,0,0x0,8
tick,0x7ff954e0fd34,249032141,0,0x0,8
tick,0x7ff954e0fd34,249047349,0,0x0,8
tick,0x7ff954e0fd34,249063272,0,0x0,8
tick,0x7ff954e0fd34,249078662,0,0x0,8
tick,0x7ff954e0fd34,249094587,0,0x0,8
tick,0x7ff954e0fd34,249110099,0,0x0,8
tick,0x7ff954e0fd34,249126460,0,0x0,8
tick,0x7ff954e0fd34,249141616,0,0x0,8
tick,0x7ff954e0fd34,249157635,0,0x0,8
tick,0x7ff954e0fd34,249172866,0,0x0,8
tick,0x7ff954e0fd34,249188834,0,0x0,8
tick,0x7ff954e0fd34,249204052,0,0x0,8
tick,0x7ff954e0fd34,249219024,0,0x0,8
tick,0x7ff954e0fd34,249233939,0,0x0,8
tick,0x7ff954e0fd34,249249615,0,0x0,8
tick,0x7ff954e0fd34,249265057,0,0x0,8
tick,0x7ff954e0fd34,249281034,0,0x0,8
tick,0x7ff954e0fd34,249296359,0,0x0,8
tick,0x7ff954e0fd34,249311858,0,0x0,8
tick,0x7ff954e0fd34,249327807,0,0x0,8
tick,0x7ff954e0fd34,249343733,0,0x0,8
tick,0x7ff954e0fd34,249358788,0,0x0,8
tick,0x7ff954e0fd34,249373674,0,0x0,8
tick,0x7ff954e0fd34,249388616,0,0x0,8
tick,0x7ff954e0fd34,249404570,0,0x0,8
tick,0x7ff954e0fd34,249419960,0,0x0,8
tick,0x7ff954e0fd34,249435943,0,0x0,8
tick,0x7ff954e0fd34,249451544,0,0x0,8
tick,0x7ff954e0fd34,249467597,0,0x0,8
tick,0x7ff954e0fd34,249483439,0,0x0,8
tick,0x7ff954e0fd34,249498612,0,0x0,8
tick,0x7ff954e0fd34,249514566,0,0x0,8
tick,0x7ff954e0fd34,249529661,0,0x0,8
tick,0x7ff954e0fd34,249545607,0,0x0,8
tick,0x7ff954e0fd34,249561726,0,0x0,8
tick,0x7ff954e0fd34,249576638,0,0x0,8
tick,0x7ff954e0fd34,249592642,0,0x0,8
tick,0x7ff954e0fd34,249607975,0,0x0,8
tick,0x7ff954e0fd34,249623824,0,0x0,8
tick,0x7ff954e0fd34,249638990,0,0x0,8
tick,0x7ff954e0fd34,249654419,0,0x0,8
tick,0x7ff954e0fd34,249669936,0,0x0,8
tick,0x7ff954e0fd34,249684837,0,0x0,8
tick,0x7ff954e0fd34,249699854,0,0x0,8
tick,0x7ff954e0fd34,249715046,0,0x0,8
tick,0x7ff954e0fd34,249730267,0,0x0,8
tick,0x7ff954e0fd34,249745679,0,0x0,8
tick,0x7ff954e0fd34,249761511,0,0x0,8
tick,0x7ff954e0fd34,249776779,0,0x0,8
tick,0x7ff954e0fd34,249791759,0,0x0,8
tick,0x7ff954e0fd34,249807668,0,0x0,8
tick,0x7ff954e0fd34,249823691,0,0x0,8
tick,0x7ff954e0fd34,249838599,0,0x0,8
tick,0x7ff954e0fd34,249854533,0,0x0,8
tick,0x7ff954e0fd34,249869490,0,0x0,8
tick,0x7ff954e0fd34,249885477,0,0x0,8
tick,0x7ff954e0fd34,249901479,0,0x0,8
tick,0x7ff954e0fd34,249917431,0,0x0,8
tick,0x7ff954e0fd34,249933558,0,0x0,8
tick,0x7ff954e0fd34,249949693,0,0x0,8
tick,0x7ff954e0fd34,249964863,0,0x0,8
tick,0x7ff954e0fd34,249980461,0,0x0,8
tick,0x7ff954e0fd34,249996571,0,0x0,8
tick,0x7ff954e0fd34,250011652,0,0x0,8
tick,0x7ff954e0fd34,250027106,0,0x0,8
tick,0x7ff954e0fd34,250042776,0,0x0,8
tick,0x7ff954e0fd34,250058976,0,0x0,8
tick,0x7ff954e0fd34,250073949,0,0x0,8
tick,0x7ff954e0fd34,250088561,0,0x0,8
tick,0x7ff954e0fd34,250103761,0,0x0,8
tick,0x7ff954e0fd34,250119972,0,0x0,8
tick,0x7ff954e0fd34,250136126,0,0x0,8
tick,0x7ff954e0fd34,250152117,0,0x0,8
tick,0x7ff954e0fd34,250168085,0,0x0,8
tick,0x7ff954e0fd34,250184167,0,0x0,8
tick,0x7ff954e0fd34,250200228,0,0x0,8
tick,0x7ff954e0fd34,250216069,0,0x0,8
tick,0x7ff954e0fd34,250231251,0,0x0,8
tick,0x7ff954e0fd34,250247530,0,0x0,8
tick,0x7ff954e0fd34,250263270,0,0x0,8
tick,0x7ff954e0fd34,250279414,0,0x0,8
tick,0x7ff954e0fd34,250294865,0,0x0,8
tick,0x7ff954e0fd34,250310873,0,0x0,8
tick,0x7ff954e0fd34,250326789,0,0x0,8
tick,0x7ff954e0fd34,250342487,0,0x0,8
tick,0x7ff954e0fd34,250358669,0,0x0,8
tick,0x7ff954e0fd34,250373594,0,0x0,8
tick,0x7ff954e0fd34,250388871,0,0x0,8
tick,0x7ff954e0fd34,250404478,0,0x0,8
tick,0x7ff954e0fd34,250420104,0,0x0,8
tick,0x7ff954e0fd34,250434998,0,0x0,8
tick,0x7ff954e0fd34,250450558,0,0x0,8
tick,0x7ff954e0fd34,250466073,0,0x0,8
tick,0x7ff954e0fd34,250480846,0,0x0,8
tick,0x7ff954e0fd34,250497111,0,0x0,8
tick,0x7ff954e0fd34,250511926,0,0x0,8
tick,0x7ff954e0fd34,250526767,0,0x0,8
tick,0x7ff954e0fd34,250541758,0,0x0,8
tick,0x7ff954e0fd34,250556606,0,0x0,8
tick,0x7ff954e0fd34,250572565,0,0x0,8
tick,0x7ff954e0fd34,250588114,0,0x0,8
tick,0x7ff954e0fd34,250603058,0,0x0,8
tick,0x7ff954e0fd34,250619019,0,0x0,8
tick,0x7ff954e0fd34,250633997,0,0x0,8
tick,0x7ff954e0fd34,250648970,0,0x0,8
tick,0x7ff954e0fd34,250663903,0,0x0,8
tick,0x7ff954e0fd34,250679662,0,0x0,8
tick,0x7ff954e0fd34,250694889,0,0x0,8
tick,0x7ff954e0fd34,250710195,0,0x0,8
tick,0x7ff954e0fd34,250725574,0,0x0,8
tick,0x7ff954e0fd34,250740926,0,0x0,8
tick,0x7ff954e0fd34,250756050,0,0x0,8
tick,0x7ff954e0fd34,250771973,0,0x0,8
tick,0x7ff954e0fd34,250787823,0,0x0,8
tick,0x7ff954e0fd34,250803840,0,0x0,8
tick,0x7ff954e0fd34,250820055,0,0x0,8
tick,0x7ff954e0fd34,250835097,0,0x0,8
tick,0x7ff954e0fd34,250850266,0,0x0,8
tick,0x7ff954e0fd34,250865843,0,0x0,8
tick,0x7ff954e0fd34,250881112,0,0x0,8
tick,0x7ff954e0fd34,250896513,0,0x0,8
tick,0x7ff954e0fd34,250912620,0,0x0,8
tick,0x7ff954e0fd34,250928315,0,0x0,8
tick,0x7ff954e0fd34,250943751,0,0x0,8
tick,0x7ff954e0fd34,250958529,0,0x0,8
tick,0x7ff954e0fd34,250974169,0,0x0,8
tick,0x7ff954e0fd34,250990003,0,0x0,8
tick,0x7ff954e0fd34,251006110,0,0x0,8
tick,0x7ff954e0fd34,251021199,0,0x0,8
tick,0x7ff954e0fd34,251036130,0,0x0,8
tick,0x7ff954e0fd34,251051949,0,0x0,8
tick,0x7ff954e0fd34,251067141,0,0x0,8
tick,0x7ff954e0fd34,251082724,0,0x0,8
tick,0x7ff954e0fd34,251098066,0,0x0,8
tick,0x7ff954e0fd34,251113567,0,0x0,8
tick,0x7ff954e0fd34,251128561,0,0x0,8
tick,0x7ff954e0fd34,251144225,0,0x0,8
tick,0x7ff954e0fd34,251160225,0,0x0,8
tick,0x7ff954e0fd34,251175201,0,0x0,8
tick,0x7ff954e0fd34,251189989,0,0x0,8
tick,0x7ff954e0fd34,251205492,0,0x0,8
tick,0x7ff954e0fd34,251221207,0,0x0,8
tick,0x7ff954e0fd34,251237285,0,0x0,8
tick,0x7ff954e0fd34,251253184,0,0x0,8
tick,0x7ff954e0fd34,251268172,0,0x0,8
tick,0x7ff954e0fd34,251283972,0,0x0,8
tick,0x7ff954e0fd34,251300014,0,0x0,8
tick,0x7ff954e0fd34,251315561,0,0x0,8
tick,0x7ff954e0fd34,251330776,0,0x0,8
tick,0x7ff954e0fd34,251345946,0,0x0,8
tick,0x7ff954e0fd34,251360820,0,0x0,8
tick,0x7ff954e0fd34,251375671,0,0x0,8
tick,0x7ff954e0fd34,251390845,0,0x0,8
tick,0x7ff954e0fd34,251406229,0,0x0,8
tick,0x7ff954e0fd34,251421690,0,0x0,8
tick,0x7ff954e0fd34,251437894,0,0x0,8
tick,0x7ff954e0fd34,251453164,0,0x0,8
tick,0x7ff954e0fd34,251469093,0,0x0,8
tick,0x7ff954e0fd34,251483935,0,0x0,8
tick,0x7ff954e0fd34,251498757,0,0x0,8
tick,0x7ff954e0fd34,251514397,0,0x0,8
tick,0x7ff954e0fd34,251529777,0,0x0,8
tick,0x7ff954e0fd34,251545849,0,0x0,8
tick,0x7ff954e0fd34,251561841,0,0x0,8
tick,0x7ff954e0fd34,251576616,0,0x0,8
tick,0x7ff954e0fd34,251592937,0,0x0,8
tick,0x7ff954e0fd34,251607929,0,0x0,8
tick,0x7ff954e0fd34,251624124,0,0x0,8
tick,0x7ff954e0fd34,251640120,0,0x0,8
tick,0x7ff954e0fd34,251656272,0,0x0,8
tick,0x7ff954e0fd34,251672169,0,0x0,8
tick,0x7ff954e0fd34,251687998,0,0x0,8
tick,0x7ff954e0fd34,251702980,0,0x0,8
tick,0x7ff954e0fd34,251717905,0,0x0,8
tick,0x7ff954e0fd34,251733884,0,0x0,8
tick,0x7ff954e0fd34,251748860,0,0x0,8
tick,0x7ff954e0fd34,251763819,0,0x0,8
tick,0x7ff954e0fd34,251778749,0,0x0,8
tick,0x7ff954e0fd34,251794918,0,0x0,8
tick,0x7ff954e0fd34,251810106,0,0x0,8
tick,0x7ff954e0fd34,251825886,0,0x0,8
tick,0x7ff954e0fd34,251841829,0,0x0,8
tick,0x7ff954e0fd34,251857549,0,0x0,8
tick,0x7ff954e0fd34,251873251,0,0x0,8
tick,0x7ff954e0fd34,251887952,0,0x0,8
tick,0x7ff954e0fd34,251903165,0,0x0,8
tick,0x7ff954e0fd34,251918389,0,0x0,8
tick,0x7ff954e0fd34,251932913,0,0x0,8
tick,0x7ff954e0fd34,251948647,0,0x0,8
tick,0x7ff954e0fd34,251964366,0,0x0,8
tick,0x7ff954e0fd34,251979077,0,0x0,8
tick,0x7ff954e0fd34,251994777,0,0x0,8
tick,0x7ff954e0fd34,252010901,0,0x0,8
tick,0x7ff954e0fd34,252026641,0,0x0,8
tick,0x7ff954e0fd34,252042747,0,0x0,8
tick,0x7ff954e0fd34,252058264,0,0x0,8
tick,0x7ff954e0fd34,252073192,0,0x0,8
tick,0x7ff954e0fd34,252088129,0,0x0,8
tick,0x7ff954e0fd34,252103032,0,0x0,8
tick,0x7ff954e0fd34,252118214,0,0x0,8
tick,0x7ff954e0fd34,252133228,0,0x0,8
tick,0x7ff954e0fd34,252149166,0,0x0,8
tick,0x7ff954e0fd34,252165363,0,0x0,8
tick,0x7ff954e0fd34,252181142,0,0x0,8
tick,0x7ff954e0fd34,252197077,0,0x0,8
tick,0x7ff954e0fd34,252212976,0,0x0,8
tick,0x7ff954e0fd34,252229045,0,0x0,8
tick,0x7ff954e0fd34,252244912,0,0x0,8
tick,0x7ff954e0fd34,252260291,0,0x0,8
tick,0x7ff954e0fd34,252275976,0,0x0,8
tick,0x7ff954e0fd34,252291514,0,0x0,8
tick,0x7ff954e0fd34,252306876,0,0x0,8
tick,0x7ff954e0fd34,252321899,0,0x0,8
tick,0x7ff954e0fd34,252337084,0,0x0,8
tick,0x7ff954e0fd34,252351697,0,0x0,8
tick,0x7ff954e0fd34,252367215,0,0x0,8
tick,0x7ff954e0fd34,252382970,0,0x0,8
tick,0x7ff954e0fd34,252398979,0,0x0,8
tick,0x7ff954e0fd34,252414312,0,0x0,8
tick,0x7ff954e0fd34,252429808,0,0x0,8
tick,0x7ff954e0fd34,252444975,0,0x0,8
tick,0x7ff954e0fd34,252460691,0,0x0,8
tick,0x7ff954e0fd34,252476651,0,0x0,8
tick,0x7ff954e0fd34,252491782,0,0x0,8
tick,0x7ff954e0fd34,252507085,0,0x0,8
tick,0x7ff954e0fd34,252523069,0,0x0,8
tick,0x7ff954e0fd34,252539084,0,0x0,8
tick,0x7ff954e0fd34,252555108,0,0x0,8
tick,0x7ff954e0fd34,252570750,0,0x0,8
tick,0x7ff954e0fd34,252585646,0,0x0,8
tick,0x7ff954e0fd34,252600811,0,0x0,8
tick,0x7ff954e0fd34,252616751,0,0x0,8
tick,0x7ff954e0fd34,252632032,0,0x0,8
tick,0x7ff954e0fd34,252646833,0,0x0,8
tick,0x7ff954e0fd34,252661812,0,0x0,8
tick,0x7ff954e0fd34,252677665,0,0x0,8
tick,0x7ff954e0fd34,252692747,0,0x0,8
tick,0x7ff954e0fd34,252707969,0,0x0,8
tick,0x7ff954e0fd34,252724018,0,0x0,8
tick,0x7ff954e0fd34,252740100,0,0x0,8
tick,0x7ff954e0fd34,252756109,0,0x0,8
tick,0x7ff954e0fd34,252772029,0,0x0,8
tick,0x7ff954e0fd34,252787055,0,0x0,8
tick,0x7ff954e0fd34,252802020,0,0x0,8
tick,0x7ff954e0fd34,252817708,0,0x0,8
tick,0x7ff954e0fd34,252833045,0,0x0,8
tick,0x7ff954e0fd34,252848032,0,0x0,8
tick,0x7ff954e0fd34,252863972,0,0x0,8
tick,0x7ff954e0fd34,252879951,0,0x0,8
tick,0x7ff954e0fd34,252894927,0,0x0,8
tick,0x7ff954e0fd34,252910899,0,0x0,8
tick,0x7ff954e0fd34,252925874,0,0x0,8
tick,0x7ff954e0fd34,252941783,0,0x0,8
tick,0x7ff954e0fd34,252957724,0,0x0,8
tick,0x7ff954e0fd34,252973701,0,0x0,8
tick,0x7ff954e0fd34,252989609,0,0x0,8
tick,0x7ff954e0fd34,253005637,0,0x0,8
tick,0x7ff954e0fd34,253021673,0,0x0,8
tick,0x7ff954e0fd34,253037727,0,0x0,8
tick,0x7ff954e0fd34,253053099,0,0x0,8
tick,0x7ff954e0fd34,253068558,0,0x0,8
tick,0x7ff954e0fd34,253084212,0,0x0,8
tick,0x7ff954e0fd34,253099648,0,0x0,8
tick,0x7ff954e0fd34,253115210,0,0x0,8
tick,0x7ff954e0fd34,253130206,0,0x0,8
tick,0x7ff954e0fd34,253145804,0,0x0,8
tick,0x7ff954e0fd34,253161647,0,0x0,8
tick,0x7ff954e0fd34,253177221,0,0x0,8
tick,0x7ff954e0fd34,253192127,0,0x0,8
tick,0x7ff954e0fd34,253208129,0,0x0,8
tick,0x7ff954e0fd34,253223084,0,0x0,8
tick,0x7ff954e0fd34,253239026,0,0x0,8
tick,0x7ff954e0fd34,253255062,0,0x0,8
tick,0x7ff954e0fd34,253270043,0,0x0,8
tick,0x7ff954e0fd34,253285940,0,0x0,8
tick,0x7ff954e0fd34,253301152,0,0x0,8
tick,0x7ff954e0fd34,253317149,0,0x0,8
tick,0x7ff954e0fd34,253333128,0,0x0,8
tick,0x7ff954e0fd34,253348011,0,0x0,8
tick,0x7ff954e0fd34,253364310,0,0x0,8
tick,0x7ff954e0fd34,253379892,0,0x0,8
tick,0x7ff954e0fd34,253395129,0,0x0,8
tick,0x7ff954e0fd34,253410914,0,0x0,8
tick,0x7ff954e0fd34,253425911,0,0x0,8
tick,0x7ff954e0fd34,253441005,0,0x0,8
tick,0x7ff954e0fd34,253456054,0,0x0,8
tick,0x7ff954e0fd34,253472008,0,0x0,8
tick,0x7ff954e0fd34,253487387,0,0x0,8
tick,0x7ff954e0fd34,253502721,0,0x0,8
tick,0x7ff954e0fd34,253517771,0,0x0,8
tick,0x7ff954e0fd34,253533060,0,0x0,8
tick,0x7ff954e0fd34,253549083,0,0x0,8
tick,0x7ff954e0fd34,253564196,0,0x0,8
tick,0x7ff954e0fd34,253580028,0,0x0,8
tick,0x7ff954e0fd34,253595155,0,0x0,8
tick,0x7ff954e0fd34,253610069,0,0x0,8
tick,0x7ff954e0fd34,253625063,0,0x0,8
tick,0x7ff954e0fd34,253641023,0,0x0,8
tick,0x7ff954e0fd34,253656074,0,0x0,8
tick,0x7ff954e0fd34,253672014,0,0x0,8
tick,0x7ff954e0fd34,253687878,0,0x0,8
tick,0x7ff954e0fd34,253703868,0,0x0,8
tick,0x7ff954e0fd34,253719870,0,0x0,8
tick,0x7ff954e0fd34,253735770,0,0x0,8
tick,0x7ff954e0fd34,253751921,0,0x0,8
tick,0x7ff954e0fd34,253766777,0,0x0,8
tick,0x7ff954e0fd34,253781640,0,0x0,8
tick,0x7ff954e0fd34,253796919,0,0x0,8
tick,0x7ff954e0fd34,253812101,0,0x0,8
tick,0x7ff954e0fd34,253828246,0,0x0,8
tick,0x7ff954e0fd34,253844151,0,0x0,8
tick,0x7ff954e0fd34,253860437,0,0x0,8
tick,0x7ff954e0fd34,253875277,0,0x0,8
tick,0x7ff954e0fd34,253890976,0,0x0,8
tick,0x7ff954e0fd34,253906000,0,0x0,8
tick,0x7ff954e0fd34,253921768,0,0x0,8
tick,0x7ff954e0fd34,253937929,0,0x0,8
tick,0x7ff954e0fd34,253953575,0,0x0,8
tick,0x7ff954e0fd34,253968851,0,0x0,8
tick,0x7ff954e0fd34,253983981,0,0x0,8
tick,0x7ff954e0fd34,253999956,0,0x0,8
tick,0x7ff954e0fd34,254014615,0,0x0,8
tick,0x7ff954e0fd34,254030100,0,0x0,8
tick,0x7ff954e0fd34,254045710,0,0x0,8
tick,0x7ff954e0fd34,254061985,0,0x0,8
tick,0x7ff954e0fd34,254077074,0,0x0,8
tick,0x7ff954e0fd34,254092743,0,0x0,8
tick,0x7ff954e0fd34,254108067,0,0x0,8
tick,0x7ff954e0fd34,254124283,0,0x0,8
tick,0x7ff954e0fd34,254140027,0,0x0,8
tick,0x7ff954e0fd34,254155991,0,0x0,8
tick,0x7ff954e0fd34,254172504,0,0x0,8
tick,0x7ff954e0fd34,254187168,0,0x0,8
tick,0x7ff954e0fd34,254202016,0,0x0,8
tick,0x7ff954e0fd34,254217205,0,0x0,8
tick,0x7ff954e0fd34,254232586,0,0x0,8
tick,0x7ff954e0fd34,254248607,0,0x0,8
tick,0x7ff954e0fd34,254262953,0,0x0,8
tick,0x7ff954e0fd34,254278933,0,0x0,8
tick,0x7ff954e0fd34,254293966,0,0x0,8
tick,0x7ff954e0fd34,254311531,0,0x0,8
tick,0x7ff954e0fd34,254327580,0,0x0,8
tick,0x7ff954e0fd34,254341216,0,0x0,8
tick,0x7ff954e0fd34,254356663,0,0x0,8
tick,0x7ff954e0fd34,254373524,0,0x0,8
tick,0x7ff954e0fd34,254387166,0,0x0,8
tick,0x7ff954e0fd34,254402183,0,0x0,8
tick,0x7ff954e0fd34,254418109,0,0x0,8
tick,0x7ff954e0fd34,254433090,0,0x0,8
tick,0x7ff954e0fd34,254449246,0,0x0,8
tick,0x7ff954e0fd34,254465227,0,0x0,8
tick,0x7ff954e0fd34,254481527,0,0x0,8
tick,0x7ff954e0fd34,254497361,0,0x0,8
tick,0x7ff954e0fd34,254512349,0,0x0,8
tick,0x7ff954e0fd34,254530605,0,0x0,8
tick,0x7ff954e0fd34,254543170,0,0x0,8
tick,0x7ff954e0fd34,254558284,0,0x0,8
tick,0x7ff954e0fd34,254573681,0,0x0,8
tick,0x7ff954e0fd34,254589574,0,0x0,8
tick,0x7ff954e0fd34,254604620,0,0x0,8
tick,0x7ff954e0fd34,254620033,0,0x0,8
tick,0x7ff954e0fd34,254635282,0,0x0,8
tick,0x7ff954e0fd34,254650154,0,0x0,8
tick,0x7ff954e0fd34,254666259,0,0x0,8
tick,0x7ff954e0fd34,254681139,0,0x0,8
tick,0x7ff954e0fd34,254697070,0,0x0,8
tick,0x7ff954e0fd34,254713119,0,0x0,8
tick,0x7ff954e0fd34,254728822,0,0x0,8
tick,0x7ff954e0fd34,254743764,0,0x0,8
tick,0x7ff954e0fd34,254759837,0,0x0,8
tick,0x7ff954e0fd34,254775767,0,0x0,8
tick,0x7ff954e0fd34,254791664,0,0x0,8
tick,0x7ff954e0fd34,254806472,0,0x0,8
tick,0x7ff954e0fd34,254821842,0,0x0,8
tick,0x7ff954e0fd34,254837080,0,0x0,8
tick,0x7ff954e0fd34,254852959,0,0x0,8
tick,0x7ff954e0fd34,254868881,0,0x0,8
tick,0x7ff954e0fd34,254884387,0,0x0,8
tick,0x7ff954e0fd34,254899710,0,0x0,8
tick,0x7ff954e0fd34,254914947,0,0x0,8
tick,0x7ff954e0fd34,254930016,0,0x0,8
tick,0x7ff954e0fd34,254944738,0,0x0,8
tick,0x7ff954e0fd34,254960222,0,0x0,8
tick,0x7ff954e0fd34,254975759,0,0x0,8
tick,0x7ff954e0fd34,254991626,0,0x0,8
tick,0x7ff954e0fd34,255007645,0,0x0,8
tick,0x7ff954e0fd34,255023231,0,0x0,8
tick,0x7ff954e0fd34,255038150,0,0x0,8
tick,0x7ff954e0fd34,255053134,0,0x0,8
tick,0x7ff954e0fd34,255068085,0,0x0,8
tick,0x7ff954e0fd34,255083105,0,0x0,8
tick,0x7ff954e0fd34,255099130,0,0x0,8
tick,0x7ff954e0fd34,255114048,0,0x0,8
tick,0x7ff954e0fd34,255128956,0,0x0,8
tick,0x7ff954e0fd34,255143879,0,0x0,8
tick,0x7ff954e0fd34,255159870,0,0x0,8
tick,0x7ff954e0fd34,255175588,0,0x0,8
tick,0x7ff954e0fd34,255191214,0,0x0,8
tick,0x7ff954e0fd34,255206641,0,0x0,8
tick,0x7ff954e0fd34,255222480,0,0x0,8
tick,0x7ff954e0fd34,255238009,0,0x0,8
tick,0x7ff954e0fd34,255253507,0,0x0,8
tick,0x7ff954e0fd34,255269046,0,0x0,8
tick,0x7ff954e0fd34,255284185,0,0x0,8
tick,0x7ff954e0fd34,255299191,0,0x0,8
tick,0x7ff954e0fd34,255314887,0,0x0,8
tick,0x7ff954e0fd34,255331114,0,0x0,8
tick,0x7ff954e0fd34,255346435,0,0x0,8
tick,0x7ff954e0fd34,255361034,0,0x0,8
tick,0x7ff954e0fd34,255376928,0,0x0,8
tick,0x7ff954e0fd34,255392760,0,0x0,8
tick,0x7ff954e0fd34,255408717,0,0x0,8
tick,0x7ff954e0fd34,255423720,0,0x0,8
tick,0x7ff954e0fd34,255439621,0,0x0,8
tick,0x7ff954e0fd34,255454622,0,0x0,8
tick,0x7ff954e0fd34,255470801,0,0x0,8
tick,0x7ff954e0fd34,255486200,0,0x0,8
tick,0x7ff954e0fd34,255501317,0,0x0,8
tick,0x7ff954e0fd34,255517282,0,0x0,8
tick,0x7ff954e0fd34,255532771,0,0x0,8
tick,0x7ff954e0fd34,255547832,0,0x0,8
tick,0x7ff954e0fd34,255562838,0,0x0,8
tick,0x7ff954e0fd34,255577943,0,0x0,8
tick,0x7ff954e0fd34,255593143,0,0x0,8
tick,0x7ff954e0fd34,255608800,0,0x0,8
tick,0x7ff954e0fd34,255624663,0,0x0,8
tick,0x7ff954e0fd34,255640282,0,0x0,8
tick,0x7ff954e0fd34,255655906,0,0x0,8
tick,0x7ff954e0fd34,255670845,0,0x0,8
tick,0x7ff954e0fd34,255686846,0,0x0,8
tick,0x7ff954e0fd34,255701840,0,0x0,8
tick,0x7ff954e0fd34,255716734,0,0x0,8
tick,0x7ff954e0fd34,255731956,0,0x0,8
tick,0x7ff954e0fd34,255748019,0,0x0,8
tick,0x7ff954e0fd34,255763875,0,0x0,8
tick,0x7ff954e0fd34,255779889,0,0x0,8
tick,0x7ff954e0fd34,255794711,0,0x0,8
tick,0x7ff954e0fd34,255809858,0,0x0,8
tick,0x7ff954e0fd34,255825234,0,0x0,8
tick,0x7ff954e0fd34,255840027,0,0x0,8
tick,0x7ff954e0fd34,255855470,0,0x0,8
tick,0x7ff954e0fd34,255870221,0,0x0,8
tick,0x7ff954e0fd34,255885406,0,0x0,8
tick,0x7ff954e0fd34,255900419,0,0x0,8
tick,0x7ff954e0fd34,255917182,0,0x0,8
tick,0x7ff954e0fd34,255930986,0,0x0,8
tick,0x7ff954e0fd34,255946716,0,0x0,8
tick,0x7ff954e0fd34,255961623,0,0x0,8
tick,0x7ff954e0fd34,255977650,0,0x0,8
tick,0x7ff954e0fd34,255992559,0,0x0,8
tick,0x7ff954e0fd34,256008544,0,0x0,8
tick,0x7ff954e0fd34,256024361,0,0x0,8
tick,0x7ff954e0fd34,256040008,0,0x0,8
tick,0x7ff954e0fd34,256055869,0,0x0,8
tick,0x7ff954e0fd34,256072110,0,0x0,8
tick,0x7ff954e0fd34,256088296,0,0x0,8
tick,0x7ff954e0fd34,256103671,0,0x0,8
tick,0x7ff954e0fd34,256118312,0,0x0,8
tick,0x7ff954e0fd34,256133435,0,0x0,8
tick,0x7ff954e0fd34,256149398,0,0x0,8
tick,0x7ff954e0fd34,256165338,0,0x0,8
tick,0x7ff954e0fd34,256181066,0,0x0,8
tick,0x7ff954e0fd34,256196981,0,0x0,8
tick,0x7ff954e0fd34,256211823,0,0x0,8
tick,0x7ff954e0fd34,256226774,0,0x0,8
tick,0x7ff954e0fd34,256242690,0,0x0,8
tick,0x7ff954e0fd34,256257726,0,0x0,8
tick,0x7ff954e0fd34,256273602,0,0x0,8
tick,0x7ff954e0fd34,256288674,0,0x0,8
tick,0x7ff954e0fd34,256303569,0,0x0,8
tick,0x7ff954e0fd34,256318777,0,0x0,8
tick,0x7ff954e0fd34,256334002,0,0x0,8
tick,0x7ff954e0fd34,256350474,0,0x0,8
tick,0x7ff954e0fd34,256364860,0,0x0,8
tick,0x7ff954e0fd34,256380127,0,0x0,8
tick,0x7ff954e0fd34,256395567,0,0x0,8
tick,0x7ff954e0fd34,256411019,0,0x0,8
tick,0x7ff954e0fd34,256426380,0,0x0,8
tick,0x7ff954e0fd34,256442143,0,0x0,8
tick,0x7ff954e0fd34,256457374,0,0x0,8
tick,0x7ff954e0fd34,256473139,0,0x0,8
tick,0x7ff954e0fd34,256488944,0,0x0,8
tick,0x7ff954e0fd34,256504843,0,0x0,8
tick,0x7ff954e0fd34,256520863,0,0x0,8
tick,0x7ff954e0fd34,256535843,0,0x0,8
tick,0x7ff954e0fd34,256550901,0,0x0,8
tick,0x7ff954e0fd34,256565731,0,0x0,8
tick,0x7ff954e0fd34,256581225,0,0x0,8
tick,0x7ff954e0fd34,256597058,0,0x0,8
tick,0x7ff954e0fd34,256612896,0,0x0,8
tick,0x7ff954e0fd34,256628767,0,0x0,8
tick,0x7ff954e0fd34,256644724,0,0x0,8
tick,0x7ff954e0fd34,256659952,0,0x0,8
tick,0x7ff954e0fd34,256674958,0,0x0,8
tick,0x7ff954e0fd34,256690805,0,0x0,8
tick,0x7ff954e0fd34,256705653,0,0x0,8
tick,0x7ff954e0fd34,256720623,0,0x0,8
tick,0x7ff954e0fd34,256736047,0,0x0,8
tick,0x7ff954e0fd34,256750782,0,0x0,8
tick,0x7ff954e0fd34,256766733,0,0x0,8
tick,0x7ff954e0fd34,256782654,0,0x0,8
tick,0x7ff954e0fd34,256799025,0,0x0,8
tick,0x7ff954e0fd34,256814038,0,0x0,8
tick,0x7ff954e0fd34,256828914,0,0x0,8
tick,0x7ff954e0fd34,256843845,0,0x0,8
tick,0x7ff954e0fd34,256859806,0,0x0,8
tick,0x7ff954e0fd34,256875286,0,0x0,8
tick,0x7ff954e0fd34,256890844,0,0x0,8
tick,0x7ff954e0fd34,256906307,0,0x0,8
tick,0x7ff954e0fd34,256921282,0,0x0,8
tick,0x7ff954e0fd34,256937262,0,0x0,8
tick,0x7ff954e0fd34,256952197,0,0x0,8
tick,0x7ff954e0fd34,256967158,0,0x0,8
tick,0x7ff954e0fd34,256982128,0,0x0,8
tick,0x7ff954e0fd34,256997441,0,0x0,8
tick,0x7ff954e0fd34,257013361,0,0x0,8
tick,0x7ff954e0fd34,257028819,0,0x0,8
tick,0x7ff954e0fd34,257044771,0,0x0,8
tick,0x7ff954e0fd34,257059850,0,0x0,8
tick,0x7ff954e0fd34,257075854,0,0x0,8
tick,0x7ff954e0fd34,257091465,0,0x0,8
tick,0x7ff954e0fd34,257106823,0,0x0,8
tick,0x7ff954e0fd34,257122108,0,0x0,8
tick,0x7ff954e0fd34,257137075,0,0x0,8
tick,0x7ff954e0fd34,257153244,0,0x0,8
tick,0x7ff954e0fd34,257167882,0,0x0,8
tick,0x7ff954e0fd34,257183940,0,0x0,8
tick,0x7ff954e0fd34,257199227,0,0x0,8
tick,0x7ff954e0fd34,257215465,0,0x0,8
tick,0x7ff954e0fd34,257229934,0,0x0,8
tick,0x7ff954e0fd34,257245067,0,0x0,8
tick,0x7ff954e0fd34,257260858,0,0x0,8
tick,0x7ff954e0fd34,257276669,0,0x0,8
tick,0x7ff954e0fd34,257292862,0,0x0,8
tick,0x7ff954e0fd34,257308490,0,0x0,8
tick,0x7ff954e0fd34,257323800,0,0x0,8
tick,0x7ff954e0fd34,257338937,0,0x0,8
tick,0x7ff954e0fd34,257354379,0,0x0,8
tick,0x7ff954e0fd34,257369966,0,0x0,8
tick,0x7ff954e0fd34,257385813,0,0x0,8
tick,0x7ff954e0fd34,257401083,0,0x0,8
tick,0x7ff954e0fd34,257415870,0,0x0,8
tick,0x7ff954e0fd34,257430897,0,0x0,8
tick,0x7ff954e0fd34,257445802,0,0x0,8
tick,0x7ff954e0fd34,257460707,0,0x0,8
tick,0x7ff954e0fd34,257476706,0,0x0,8
tick,0x7ff954e0fd34,257492612,0,0x0,8
tick,0x7ff954e0fd34,257507585,0,0x0,8
tick,0x7ff954e0fd34,257522572,0,0x0,8
tick,0x7ff954e0fd34,257537509,0,0x0,8
tick,0x7ff954e0fd34,257552538,0,0x0,8
tick,0x7ff954e0fd34,257568400,0,0x0,8
tick,0x7ff954e0fd34,257583261,0,0x0,8
tick,0x7ff954e0fd34,257599252,0,0x0,8
tick,0x7ff954e0fd34,257615225,0,0x0,8
tick,0x7ff954e0fd34,257631178,0,0x0,8
tick,0x7ff954e0fd34,257646509,0,0x0,8
tick,0x7ff954e0fd34,257662405,0,0x0,8
tick,0x7ff954e0fd34,257677632,0,0x0,8
tick,0x7ff954e0fd34,257692580,0,0x0,8
tick,0x7ff954e0fd34,257708370,0,0x0,8
tick,0x7ff954e0fd34,257723827,0,0x0,8
tick,0x7ff954e0fd34,257738474,0,0x0,8
tick,0x7ff954e0fd34,257754562,0,0x0,8
tick,0x7ff954e0fd34,257769583,0,0x0,8
tick,0x7ff954e0fd34,257784988,0,0x0,8
tick,0x7ff954e0fd34,257802267,0,0x0,8
tick,0x7ff954e0fd34,257816967,0,0x0,8
tick,0x7ff954e0fd34,257833097,0,0x0,8
tick,0x7ff954e0fd34,257848830,0,0x0,8
tick,0x7ff954e0fd34,257865082,0,0x0,8
tick,0x7ff954e0fd34,257880701,0,0x0,8
tick,0x7ff954e0fd34,257895677,0,0x0,8
tick,0x7ff954e0fd34,257910604,0,0x0,8
tick,0x7ff954e0fd34,257926750,0,0x0,8
tick,0x7ff954e0fd34,257941943,0,0x0,8
tick,0x7ff954e0fd34,257956776,0,0x0,8
tick,0x7ff954e0fd34,257972011,0,0x0,8
tick,0x7ff954e0fd34,257986582,0,0x0,8
tick,0x7ff954e0fd34,258002473,0,0x0,8
tick,0x7ff954e0fd34,258018031,0,0x0,8
tick,0x7ff954e0fd34,258033880,0,0x0,8
tick,0x7ff954e0fd34,258049325,0,0x0,8
tick,0x7ff954e0fd34,258064720,0,0x0,8
tick,0x7ff954e0fd34,258079267,0,0x0,8
tick,0x7ff954e0fd34,258094918,0,0x0,8
tick,0x7ff954e0fd34,258110915,0,0x0,8
tick,0x7ff954e0fd34,258126848,0,0x0,8
tick,0x7ff954e0fd34,258142126,0,0x0,8
tick,0x7ff954e0fd34,258157040,0,0x0,8
tick,0x7ff954e0fd34,258172977,0,0x0,8
tick,0x7ff954e0fd34,258188045,0,0x0,8
tick,0x7ff954e0fd34,258203141,0,0x0,8
tick,0x7ff954e0fd34,258218907,0,0x0,8
tick,0x7ff954e0fd34,258235132,0,0x0,8
tick,0x7ff954e0fd34,258250771,0,0x0,8
tick,0x7ff954e0fd34,258266111,0,0x0,8
tick,0x7ff954e0fd34,258282598,0,0x0,8
tick,0x7ff954e0fd34,258297709,0,0x0,8
tick,0x7ff954e0fd34,258313035,0,0x0,8
tick,0x7ff954e0fd34,258329056,0,0x0,8
tick,0x7ff954e0fd34,258344185,0,0x0,8
tick,0x7ff954e0fd34,258360263,0,0x0,8
tick,0x7ff954e0fd34,258375682,0,0x0,8
tick,0x7ff954e0fd34,258391702,0,0x0,8
tick,0x7ff954e0fd34,258407679,0,0x0,8
tick,0x7ff954e0fd34,258422968,0,0x0,8
tick,0x7ff954e0fd34,258438690,0,0x0,8
tick,0x7ff954e0fd34,258454120,0,0x0,8
tick,0x7ff954e0fd34,258469890,0,0x0,8
tick,0x7ff954e0fd34,258485152,0,0x0,8
tick,0x7ff954e0fd34,258500638,0,0x0,8
tick,0x7ff954e0fd34,258515740,0,0x0,8
tick,0x7ff954e0fd34,258531009,0,0x0,8
tick,0x7ff954e0fd34,258546644,0,0x0,8
tick,0x7ff954e0fd34,258562187,0,0x0,8
tick,0x7ff954e0fd34,258577833,0,0x0,8
tick,0x7ff954e0fd34,258593529,0,0x0,8
tick,0x7ff954e0fd34,258608676,0,0x0,8
tick,0x7ff954e0fd34,258624352,0,0x0,8
tick,0x7ff954e0fd34,258638966,0,0x0,8
tick,0x7ff954e0fd34,258654942,0,0x0,8
tick,0x7ff954e0fd34,258670345,0,0x0,8
tick,0x7ff954e0fd34,258685410,0,0x0,8
tick,0x7ff954e0fd34,258700262,0,0x0,8
tick,0x7ff954e0fd34,258715618,0,0x0,8
tick,0x7ff954e0fd34,258731164,0,0x0,8
tick,0x7ff954e0fd34,258747170,0,0x0,8
tick,0x7ff954e0fd34,258762590,0,0x0,8
tick,0x7ff954e0fd34,258778285,0,0x0,8
tick,0x7ff954e0fd34,258793446,0,0x0,8
tick,0x7ff954e0fd34,258808478,0,0x0,8
tick,0x7ff954e0fd34,258823912,0,0x0,8
tick,0x7ff954e0fd34,258838820,0,0x0,8
tick,0x7ff954e0fd34,258854918,0,0x0,8
tick,0x7ff954e0fd34,258871705,0,0x0,8
tick,0x7ff954e0fd34,258886710,0,0x0,8
tick,0x7ff954e0fd34,258902684,0,0x0,8
tick,0x7ff954e0fd34,258918803,0,0x0,8
tick,0x7ff954e0fd34,258934470,0,0x0,8
tick,0x7ff954e0fd34,258949745,0,0x0,8
tick,0x7ff954e0fd34,258965749,0,0x0,8
tick,0x7ff954e0fd34,258981723,0,0x0,8
tick,0x7ff954e0fd34,258996613,0,0x0,8
tick,0x7ff954e0fd34,259011572,0,0x0,8
tick,0x7ff954e0fd34,259027577,0,0x0,8
tick,0x7ff954e0fd34,259042509,0,0x0,8
tick,0x7ff954e0fd34,259057736,0,0x0,8
tick,0x7ff954e0fd34,259073677,0,0x0,8
tick,0x7ff954e0fd34,259089297,0,0x0,8
tick,0x7ff954e0fd34,259105217,0,0x0,8
tick,0x7ff954e0fd34,259121147,0,0x0,8
tick,0x7ff954e0fd34,259135825,0,0x0,8
tick,0x7ff954e0fd34,259151740,0,0x0,8
tick,0x7ff954e0fd34,259167250,0,0x0,8
tick,0x7ff954e0fd34,259183190,0,0x0,8
tick,0x7ff954e0fd34,259199198,0,0x0,8
tick,0x7ff954e0fd34,259215225,0,0x0,8
tick,0x7ff954e0fd34,259231083,0,0x0,8
tick,0x7ff954e0fd34,259247030,0,0x0,8
tick,0x7ff954e0fd34,259262226,0,0x0,8
tick,0x7ff954e0fd34,259277104,0,0x0,8
tick,0x7ff954e0fd34,259291930,0,0x0,8
tick,0x7ff954e0fd34,259308007,0,0x0,8
tick,0x7ff954e0fd34,259323555,0,0x0,8
tick,0x7ff954e0fd34,259338817,0,0x0,8
tick,0x7ff954e0fd34,259353803,0,0x0,8
tick,0x7ff954e0fd34,259369746,0,0x0,8
tick,0x7ff954e0fd34,259384998,0,0x0,8
tick,0x7ff954e0fd34,259401058,0,0x0,8
tick,0x7ff954e0fd34,259415916,0,0x0,8
tick,0x7ff954e0fd34,259430873,0,0x0,8
tick,0x7ff954e0fd34,259445820,0,0x0,8
tick,0x7ff954e0fd34,259461745,0,0x0,8
tick,0x7ff954e0fd34,259476687,0,0x0,8
tick,0x7ff954e0fd34,259492256,0,0x0,8
tick,0x7ff954e0fd34,259508191,0,0x0,8
tick,0x7ff954e0fd34,259523931,0,0x0,8
tick,0x7ff954e0fd34,259538874,0,0x0,8
tick,0x7ff954e0fd34,259554245,0,0x0,8
tick,0x7ff954e0fd34,259569727,0,0x0,8
tick,0x7ff954e0fd34,259585993,0,0x0,8
tick,0x7ff954e0fd34,259601659,0,0x0,8
tick,0x7ff954e0fd34,259616949,0,0x0,8
tick,0x7ff954e0fd34,259632167,0,0x0,8
tick,0x7ff954e0fd34,259648034,0,0x0,8
tick,0x7ff954e0fd34,259662851,0,0x0,8
tick,0x7ff954e0fd34,259677759,0,0x0,8
tick,0x7ff954e0fd34,259693714,0,0x0,8
tick,0x7ff954e0fd34,259708675,0,0x0,8
tick,0x7ff954e0fd34,259723640,0,0x0,8
tick,0x7ff954e0fd34,259738621,0,0x0,8
tick,0x7ff954e0fd34,259754732,0,0x0,8
tick,0x7ff954e0fd34,259769651,0,0x0,8
tick,0x7ff954e0fd34,259785502,0,0x0,8
tick,0x7ff954e0fd34,259800520,0,0x0,8
tick,0x7ff954e0fd34,259815768,0,0x0,8
tick,0x7ff954e0fd34,259830750,0,0x0,8
tick,0x7ff954e0fd34,259845921,0,0x0,8
tick,0x7ff954e0fd34,259861861,0,0x0,8
tick,0x7ff954e0fd34,259876910,0,0x0,8
tick,0x7ff954e0fd34,259892144,0,0x0,8
tick,0x7ff954e0fd34,259908198,0,0x0,8
tick,0x7ff954e0fd34,259924145,0,0x0,8
tick,0x7ff954e0fd34,259940094,0,0x0,8
tick,0x7ff954e0fd34,259954952,0,0x0,8
tick,0x7ff954e0fd34,259970250,0,0x0,8
tick,0x7ff954e0fd34,259985241,0,0x0,8
tick,0x7ff954e0fd34,259999973,0,0x0,8
tick,0x7ff954e0fd34,260016250,0,0x0,8
tick,0x7ff954e0fd34,260031268,0,0x0,8
tick,0x7ff954e0fd34,260047252,0,0x0,8
tick,0x7ff954e0fd34,260062939,0,0x0,8
tick,0x7ff954e0fd34,260078835,0,0x0,8
tick,0x7ff954e0fd34,260094250,0,0x0,8
tick,0x7ff954e0fd34,260110377,0,0x0,8
tick,0x7ff954e0fd34,260125738,0,0x0,8
tick,0x7ff954e0fd34,260173269,0,0x0,8
tick,0x7ff954e0fd34,260187030,0,0x0,8
tick,0x7ff954e0fd34,260206776,0,0x0,8
tick,0x7ff954e0fd34,260217252,0,0x0,8
tick,0x7ff954e0fd34,260231901,0,0x0,8
tick,0x7ff954e0fd34,260247985,0,0x0,8
tick,0x7ff954e0fd34,260262801,0,0x0,8
tick,0x7ff954e0fd34,260277810,0,0x0,8
tick,0x7ff954e0fd34,260292766,0,0x0,8
tick,0x7ff954e0fd34,260307747,0,0x0,8
tick,0x7ff954e0fd34,260323490,0,0x0,8
tick,0x7ff954e0fd34,260338731,0,0x0,8
tick,0x7ff954e0fd34,260353814,0,0x0,8
tick,0x7ff954e0fd34,260370352,0,0x0,8
tick,0x7ff954e0fd34,260385241,0,0x0,8
tick,0x7ff954e0fd34,260400127,0,0x0,8
tick,0x7ff954e0fd34,260415060,0,0x0,8
tick,0x7ff954e0fd34,260430117,0,0x0,8
tick,0x7ff954e0fd34,260444962,0,0x0,8
tick,0x7ff954e0fd34,260460661,0,0x0,8
tick,0x7ff954e0fd34,260476082,0,0x0,8
tick,0x7ff954e0fd34,260491001,0,0x0,8
tick,0x7ff954e0fd34,260506061,0,0x0,8
tick,0x7ff954e0fd34,260520900,0,0x0,8
tick,0x7ff954e0fd34,260536125,0,0x0,8
tick,0x7ff954e0fd34,260551917,0,0x0,8
tick,0x7ff954e0fd34,260568194,0,0x0,8
tick,0x7ff954e0fd34,260582915,0,0x0,8
tick,0x7ff954e0fd34,260597697,0,0x0,8
tick,0x7ff954e0fd34,260612715,0,0x0,8
tick,0x7ff954e0fd34,260628655,0,0x0,8
tick,0x7ff954e0fd34,260643668,0,0x0,8
tick,0x7ff954e0fd34,260658645,0,0x0,8
tick,0x7ff954e0fd34,260673624,0,0x0,8
tick,0x7ff954e0fd34,260689124,0,0x0,8
tick,0x7ff954e0fd34,260704812,0,0x0,8
tick,0x7ff954e0fd34,260721067,0,0x0,8
tick,0x7ff954e0fd34,260735981,0,0x0,8
tick,0x7ff954e0fd34,260751213,0,0x0,8
tick,0x7ff954e0fd34,260766061,0,0x0,8
tick,0x7ff954e0fd34,260781113,0,0x0,8
tick,0x7ff954e0fd34,260796122,0,0x0,8
tick,0x7ff954e0fd34,260811051,0,0x0,8
tick,0x7ff954e0fd34,260826985,0,0x0,8
tick,0x7ff954e0fd34,260841990,0,0x0,8
tick,0x7ff954e0fd34,260857963,0,0x0,8
tick,0x7ff954e0fd34,260873372,0,0x0,8
tick,0x7ff954e0fd34,260888362,0,0x0,8
tick,0x7ff954e0fd34,260903594,0,0x0,8
tick,0x7ff954e0fd34,260918853,0,0x0,8
tick,0x7ff954e0fd34,260933700,0,0x0,8
tick,0x7ff954e0fd34,260948770,0,0x0,8
tick,0x7ff954e0fd34,260964646,0,0x0,8
tick,0x7ff954e0fd34,260980599,0,0x0,8
tick,0x7ff954e0fd34,260996104,0,0x0,8
tick,0x7ff954e0fd34,261011011,0,0x0,8
tick,0x7ff954e0fd34,261026070,0,0x0,8
tick,0x7ff954e0fd34,261041024,0,0x0,8
tick,0x7ff954e0fd34,261056227,0,0x0,8
tick,0x7ff954e0fd34,261072256,0,0x0,8
tick,0x7ff954e0fd34,261087173,0,0x0,8
tick,0x7ff954e0fd34,261102810,0,0x0,8
tick,0x7ff954e0fd34,261118109,0,0x0,8
tick,0x7ff954e0fd34,261133923,0,0x0,8
tick,0x7ff954e0fd34,261149292,0,0x0,8
tick,0x7ff954e0fd34,261164844,0,0x0,8
tick,0x7ff954e0fd34,261180179,0,0x0,8
tick,0x7ff954e0fd34,261196017,0,0x0,8
tick,0x7ff954e0fd34,261211749,0,0x0,8
tick,0x7ff954e0fd34,261226931,0,0x0,8
tick,0x7ff954e0fd34,261242171,0,0x0,8
tick,0x7ff954e0fd34,261258225,0,0x0,8
tick,0x7ff954e0fd34,261274032,0,0x0,8
tick,0x7ff954e0fd34,261290148,0,0x0,8
tick,0x7ff954e0fd34,261306023,0,0x0,8
tick,0x7ff954e0fd34,261321139,0,0x0,8
tick,0x7ff954e0fd34,261336796,0,0x0,8
tick,0x7ff954e0fd34,261352043,0,0x0,8
tick,0x7ff954e0fd34,261367866,0,0x0,8
tick,0x7ff954e0fd34,261382784,0,0x0,8
tick,0x7ff954e0fd34,261397776,0,0x0,8
tick,0x7ff954e0fd34,261413663,0,0x0,8
tick,0x7ff954e0fd34,261429613,0,0x0,8
tick,0x7ff954e0fd34,261444635,0,0x0,8
tick,0x7ff954e0fd34,261460115,0,0x0,8
tick,0x7ff954e0fd34,261476083,0,0x0,8
tick,0x7ff954e0fd34,261491352,0,0x0,8
tick,0x7ff954e0fd34,261506046,0,0x0,8
tick,0x7ff954e0fd34,261520977,0,0x0,8
tick,0x7ff954e0fd34,261535983,0,0x0,8
tick,0x7ff954e0fd34,261551374,0,0x0,8
tick,0x7ff954e0fd34,261566340,0,0x0,8
tick,0x7ff954e0fd34,261582309,0,0x0,8
tick,0x7ff954e0fd34,261597259,0,0x0,8
tick,0x7ff954e0fd34,261612105,0,0x0,8
tick,0x7ff954e0fd34,261627087,0,0x0,8
tick,0x7ff954e0fd34,261642038,0,0x0,8
tick,0x7ff954e0fd34,261657714,0,0x0,8
tick,0x7ff954e0fd34,261673244,0,0x0,8
tick,0x7ff954e0fd34,261688447,0,0x0,8
tick,0x7ff954e0fd34,261703085,0,0x0,8
tick,0x7ff954e0fd34,261718136,0,0x0,8
tick,0x7ff954e0fd34,261733126,0,0x0,8
tick,0x7ff954e0fd34,261748056,0,0x0,8
tick,0x7ff954e0fd34,261763849,0,0x0,8
tick,0x7ff954e0fd34,261780179,0,0x0,8
tick,0x7ff954e0fd34,261796538,0,0x0,8
tick,0x7ff954e0fd34,261812188,0,0x0,8
tick,0x7ff954e0fd34,261828110,0,0x0,8
tick,0x7ff954e0fd34,261843870,0,0x0,8
tick,0x7ff954e0fd34,261858769,0,0x0,8
tick,0x7ff954e0fd34,261874765,0,0x0,8
tick,0x7ff954e0fd34,261889718,0,0x0,8
tick,0x7ff954e0fd34,261905638,0,0x0,8
tick,0x7ff954e0fd34,261921022,0,0x0,8
tick,0x7ff954e0fd34,261935756,0,0x0,8
tick,0x7ff954e0fd34,261950680,0,0x0,8
tick,0x7ff954e0fd34,261965692,0,0x0,8
tick,0x7ff954e0fd34,261981104,0,0x0,8
tick,0x7ff954e0fd34,261997272,0,0x0,8
tick,0x7ff954e0fd34,262012497,0,0x0,8
tick,0x7ff954e0fd34,262028200,0,0x0,8
tick,0x7ff954e0fd34,262044177,0,0x0,8
tick,0x7ff954e0fd34,262058959,0,0x0,8
tick,0x7ff954e0fd34,262073871,0,0x0,8
tick,0x7ff954e0fd34,262089048,0,0x0,8
tick,0x7ff954e0fd34,262103760,0,0x0,8
tick,0x7ff954e0fd34,262119791,0,0x0,8
tick,0x7ff954e0fd34,262135368,0,0x0,8
tick,0x7ff954e0fd34,262150829,0,0x0,8
tick,0x7ff954e0fd34,262166909,0,0x0,8
tick,0x7ff954e0fd34,262182190,0,0x0,8
tick,0x7ff954e0fd34,262197621,0,0x0,8
tick,0x7ff954e0fd34,262213219,0,0x0,8
tick,0x7ff954e0fd34,262228851,0,0x0,8
tick,0x7ff954e0fd34,262243932,0,0x0,8
tick,0x7ff954e0fd34,262258828,0,0x0,8
tick,0x7ff954e0fd34,262274136,0,0x0,8
tick,0x7ff954e0fd34,262289947,0,0x0,8
tick,0x7ff954e0fd34,262305223,0,0x0,8
tick,0x7ff954e0fd34,262320800,0,0x0,8
tick,0x7ff954e0fd34,262336274,0,0x0,8
tick,0x7ff954e0fd34,262351728,0,0x0,8
tick,0x7ff954e0fd34,262366653,0,0x0,8
tick,0x7ff954e0fd34,262382620,0,0x0,8
tick,0x7ff954e0fd34,262397514,0,0x0,8
tick,0x7ff954e0fd34,262413472,0,0x0,8
tick,0x7ff954e0fd34,262429534,0,0x0,8
tick,0x7ff954e0fd34,262444951,0,0x0,8
tick,0x7ff954e0fd34,262460867,0,0x0,8
tick,0x7ff954e0fd34,262476824,0,0x0,8
tick,0x7ff954e0fd34,262492818,0,0x0,8
tick,0x7ff954e0fd34,262508032,0,0x0,8
tick,0x7ff954e0fd34,262523876,0,0x0,8
tick,0x7ff954e0fd34,262538867,0,0x0,8
tick,0x7ff954e0fd34,262553889,0,0x0,8
tick,0x7ff954e0fd34,262568655,0,0x0,8
tick,0x7ff954e0fd34,262584463,0,0x0,8
tick,0x7ff954e0fd34,262600145,0,0x0,8
tick,0x7ff954e0fd34,262615614,0,0x0,8
tick,0x7ff954e0fd34,262630606,0,0x0,8
tick,0x7ff954e0fd34,262645654,0,0x0,8
tick,0x7ff954e0fd34,262661347,0,0x0,8
tick,0x7ff954e0fd34,262677084,0,0x0,8
tick,0x7ff954e0fd34,262692502,0,0x0,8
tick,0x7ff954e0fd34,262707957,0,0x0,8
tick,0x7ff954e0fd34,262723459,0,0x0,8
tick,0x7ff954e0fd34,262739054,0,0x0,8
tick,0x7ff954e0fd34,262754756,0,0x0,8
tick,0x7ff954e0fd34,262770156,0,0x0,8
tick,0x7ff954e0fd34,262786010,0,0x0,8
tick,0x7ff954e0fd34,262800673,0,0x0,8
tick,0x7ff954e0fd34,262816888,0,0x0,8
tick,0x7ff954e0fd34,262832761,0,0x0,8
tick,0x7ff954e0fd34,262847930,0,0x0,8
tick,0x7ff954e0fd34,262863057,0,0x0,8
tick,0x7ff954e0fd34,262878872,0,0x0,8
tick,0x7ff954e0fd34,262894748,0,0x0,8
tick,0x7ff954e0fd34,262910523,0,0x0,8
tick,0x7ff954e0fd34,262926430,0,0x0,8
tick,0x7ff954e0fd34,262941363,0,0x0,8
tick,0x7ff954e0fd34,262957286,0,0x0,8
tick,0x7ff954e0fd34,262972309,0,0x0,8
tick,0x7ff954e0fd34,262988135,0,0x0,8
tick,0x7ff954e0fd34,263004030,0,0x0,8
tick,0x7ff954e0fd34,263019991,0,0x0,8
tick,0x7ff954e0fd34,263036106,0,0x0,8
tick,0x7ff954e0fd34,263051753,0,0x0,8
tick,0x7ff954e0fd34,263067505,0,0x0,8
tick,0x7ff954e0fd34,263083051,0,0x0,8
tick,0x7ff954e0fd34,263098917,0,0x0,8
tick,0x7ff954e0fd34,263114646,0,0x0,8
tick,0x7ff954e0fd34,263130051,0,0x0,8
tick,0x7ff954e0fd34,263145059,0,0x0,8
tick,0x7ff954e0fd34,263160686,0,0x0,8
tick,0x7ff954e0fd34,263176674,0,0x0,8
tick,0x7ff954e0fd34,263192134,0,0x0,8
tick,0x7ff954e0fd34,263208153,0,0x0,8
tick,0x7ff954e0fd34,263224077,0,0x0,8
tick,0x7ff954e0fd34,263240142,0,0x0,8
tick,0x7ff954e0fd34,263255751,0,0x0,8
tick,0x7ff954e0fd34,263272050,0,0x0,8
tick,0x7ff954e0fd34,263286045,0,0x0,8
tick,0x7ff954e0fd34,263302197,0,0x0,8
tick,0x7ff954e0fd34,263317762,0,0x0,8
tick,0x7ff954e0fd34,263333085,0,0x0,8
tick,0x7ff954e0fd34,263348984,0,0x0,8
tick,0x7ff954e0fd34,263364403,0,0x0,8
tick,0x7ff954e0fd34,263380217,0,0x0,8
tick,0x7ff954e0fd34,263395467,0,0x0,8
tick,0x7ff954e0fd34,263410832,0,0x0,8
tick,0x7ff954e0fd34,263427107,0,0x0,8
tick,0x7ff954e0fd34,263442866,0,0x0,8
tick,0x7ff954e0fd34,263458930,0,0x0,8
tick,0x7ff954e0fd34,263474999,0,0x0,8
tick,0x7ff954e0fd34,263490016,0,0x0,8
tick,0x7ff954e0fd34,263505968,0,0x0,8
tick,0x7ff954e0fd34,263520840,0,0x0,8
tick,0x7ff954e0fd34,263536901,0,0x0,8
tick,0x7ff954e0fd34,263551801,0,0x0,8
tick,0x7ff954e0fd34,263566800,0,0x0,8
tick,0x7ff954e0fd34,263581704,0,0x0,8
tick,0x7ff954e0fd34,263596838,0,0x0,8
tick,0x7ff954e0fd34,263612549,0,0x0,8
tick,0x7ff954e0fd34,263628368,0,0x0,8
tick,0x7ff954e0fd34,263643810,0,0x0,8
tick,0x7ff954e0fd34,263659822,0,0x0,8
tick,0x7ff954e0fd34,263675808,0,0x0,8
tick,0x7ff954e0fd34,263690758,0,0x0,8
tick,0x7ff954e0fd34,263706929,0,0x0,8
tick,0x7ff954e0fd34,263722706,0,0x0,8
tick,0x7ff954e0fd34,263738749,0,0x0,8
tick,0x7ff954e0fd34,263753917,0,0x0,8
tick,0x7ff954e0fd34,263768877,0,0x0,8
tick,0x7ff954e0fd34,263784021,0,0x0,8
tick,0x7ff954e0fd34,263799259,0,0x0,8
tick,0x7ff954e0fd34,263814697,0,0x0,8
tick,0x7ff954e0fd34,263829992,0,0x0,8
tick,0x7ff954e0fd34,263845500,0,0x0,8
tick,0x7ff954e0fd34,263861297,0,0x0,8
tick,0x7ff954e0fd34,263877047,0,0x0,8
tick,0x7ff954e0fd34,263892712,0,0x0,8
tick,0x7ff954e0fd34,263908147,0,0x0,8
tick,0x7ff954e0fd34,263924091,0,0x0,8
tick,0x7ff954e0fd34,263938792,0,0x0,8
tick,0x7ff954e0fd34,263954453,0,0x0,8
tick,0x7ff954e0fd34,263969941,0,0x0,8
tick,0x7ff954e0fd34,263984921,0,0x0,8
tick,0x7ff954e0fd34,264000178,0,0x0,8
tick,0x7ff954e0fd34,264014810,0,0x0,8
tick,0x7ff954e0fd34,264031606,0,0x0,8
tick,0x7ff954e0fd34,264046743,0,0x0,8
tick,0x7ff954e0fd34,264061591,0,0x0,8
tick,0x7ff954e0fd34,264076711,0,0x0,8
tick,0x7ff954e0fd34,264092165,0,0x0,8
tick,0x7ff954e0fd34,264108201,0,0x0,8
tick,0x7ff954e0fd34,264124254,0,0x0,8
tick,0x7ff954e0fd34,264140094,0,0x0,8
tick,0x7ff954e0fd34,264156342,0,0x0,8
tick,0x7ff954e0fd34,264171014,0,0x0,8
tick,0x7ff954e0fd34,264186291,0,0x0,8
tick,0x7ff954e0fd34,264201212,0,0x0,8
tick,0x7ff954e0fd34,264216857,0,0x0,8
tick,0x7ff954e0fd34,264232480,0,0x0,8
tick,0x7ff954e0fd34,264248190,0,0x0,8
tick,0x7ff954e0fd34,264262967,0,0x0,8
tick,0x7ff954e0fd34,264277859,0,0x0,8
tick,0x7ff954e0fd34,264292971,0,0x0,8
tick,0x7ff954e0fd34,264308128,0,0x0,8
tick,0x7ff954e0fd34,264322806,0,0x0,8
tick,0x7ff954e0fd34,264338694,0,0x0,8
tick,0x7ff954e0fd34,264353618,0,0x0,8
tick,0x7ff954e0fd34,264368605,0,0x0,8
tick,0x7ff954e0fd34,264384679,0,0x0,8
tick,0x7ff954e0fd34,264400139,0,0x0,8
tick,0x7ff954e0fd34,264415898,0,0x0,8
tick,0x7ff954e0fd34,264431840,0,0x0,8
tick,0x7ff954e0fd34,264447860,0,0x0,8
tick,0x7ff954e0fd34,264462754,0,0x0,8
tick,0x7ff954e0fd34,264478763,0,0x0,8
tick,0x7ff954e0fd34,264493618,0,0x0,8
tick,0x7ff954e0fd34,264509457,0,0x0,8
tick,0x7ff954e0fd34,264524791,0,0x0,8
tick,0x7ff954e0fd34,264540671,0,0x0,8
tick,0x7ff954e0fd34,264556392,0,0x0,8
tick,0x7ff954e0fd34,264571805,0,0x0,8
tick,0x7ff954e0fd34,264587323,0,0x0,8
tick,0x7ff954e0fd34,264602441,0,0x0,8
tick,0x7ff954e0fd34,264617684,0,0x0,8
tick,0x7ff954e0fd34,264633260,0,0x0,8
tick,0x7ff954e0fd34,264648878,0,0x0,8
tick,0x7ff954e0fd34,264664497,0,0x0,8
tick,0x7ff954e0fd34,264680149,0,0x0,8
tick,0x7ff954e0fd34,264695869,0,0x0,8
tick,0x7ff954e0fd34,264711160,0,0x0,8
tick,0x7ff954e0fd34,264726008,0,0x0,8
tick,0x7ff954e0fd34,264740705,0,0x0,8
tick,0x7ff954e0fd34,264756720,0,0x0,8
tick,0x7ff954e0fd34,264772130,0,0x0,8
tick,0x7ff954e0fd34,264788022,0,0x0,8
tick,0x7ff954e0fd34,264803110,0,0x0,8
tick,0x7ff954e0fd34,264818928,0,0x0,8
tick,0x7ff954e0fd34,264834068,0,0x0,8
tick,0x7ff954e0fd34,264848933,0,0x0,8
tick,0x7ff954e0fd34,264864947,0,0x0,8
tick,0x7ff954e0fd34,264880619,0,0x0,8
tick,0x7ff954e0fd34,264896542,0,0x0,8
tick,0x7ff954e0fd34,264911880,0,0x0,8
tick,0x7ff954e0fd34,264927070,0,0x0,8
tick,0x7ff954e0fd34,264943098,0,0x0,8
tick,0x7ff954e0fd34,264958762,0,0x0,8
tick,0x7ff954e0fd34,264974099,0,0x0,8
tick,0x7ff954e0fd34,264989706,0,0x0,8
tick,0x7ff954e0fd34,265005072,0,0x0,8
tick,0x7ff954e0fd34,265020825,0,0x0,8
tick,0x7ff954e0fd34,265035671,0,0x0,8
tick,0x7ff954e0fd34,265051680,0,0x0,8
tick,0x7ff954e0fd34,265067676,0,0x0,8
tick,0x7ff954e0fd34,265083082,0,0x0,8
tick,0x7ff954e0fd34,265098642,0,0x0,8
tick,0x7ff954e0fd34,265114496,0,0x0,8
tick,0x7ff954e0fd34,265129943,0,0x0,8
tick,0x7ff954e0fd34,265144572,0,0x0,8
tick,0x7ff954e0fd34,265160072,0,0x0,8
tick,0x7ff954e0fd34,265175938,0,0x0,8
tick,0x7ff954e0fd34,265192285,0,0x0,8
tick,0x7ff954e0fd34,265207653,0,0x0,8
tick,0x7ff954e0fd34,265222605,0,0x0,8
tick,0x7ff954e0fd34,265237818,0,0x0,8
tick,0x7ff954e0fd34,265253727,0,0x0,8
tick,0x7ff954e0fd34,265269709,0,0x0,8
tick,0x7ff954e0fd34,265284683,0,0x0,8
tick,0x7ff954e0fd34,265300628,0,0x0,8
tick,0x7ff954e0fd34,265315640,0,0x0,8
tick,0x7ff954e0fd34,265331667,0,0x0,8
tick,0x7ff954e0fd34,265347094,0,0x0,8
tick,0x7ff954e0fd34,265363060,0,0x0,8
tick,0x7ff954e0fd34,265379117,0,0x0,8
tick,0x7ff954e0fd34,265394878,0,0x0,8
tick,0x7ff954e0fd34,265410808,0,0x0,8
tick,0x7ff954e0fd34,265426244,0,0x0,8
tick,0x7ff954e0fd34,265442123,0,0x0,8
tick,0x7ff954e0fd34,265457326,0,0x0,8
tick,0x7ff954e0fd34,265473050,0,0x0,8
tick,0x7ff954e0fd34,265489007,0,0x0,8
tick,0x7ff954e0fd34,265503946,0,0x0,8
tick,0x7ff954e0fd34,265519956,0,0x0,8
tick,0x7ff954e0fd34,265534859,0,0x0,8
tick,0x7ff954e0fd34,265549823,0,0x0,8
tick,0x7ff954e0fd34,265565932,0,0x0,8
tick,0x7ff954e0fd34,265580803,0,0x0,8
tick,0x7ff954e0fd34,265596706,0,0x0,8
tick,0x7ff954e0fd34,265611755,0,0x0,8
tick,0x7ff954e0fd34,265626902,0,0x0,8
tick,0x7ff954e0fd34,265641876,0,0x0,8
tick,0x7ff954e0fd34,265657464,0,0x0,8
tick,0x7ff954e0fd34,265673362,0,0x0,8
tick,0x7ff954e0fd34,265689309,0,0x0,8
tick,0x7ff954e0fd34,265704693,0,0x0,8
tick,0x7ff954e0fd34,265719819,0,0x0,8
tick,0x7ff954e0fd34,265735704,0,0x0,8
tick,0x7ff954e0fd34,265750710,0,0x0,8
tick,0x7ff954e0fd34,265766178,0,0x0,8
tick,0x7ff954e0fd34,265781100,0,0x0,8
tick,0x7ff954e0fd34,265797047,0,0x0,8
tick,0x7ff954e0fd34,265812982,0,0x0,8
tick,0x7ff954e0fd34,265828995,0,0x0,8
tick,0x7ff954e0fd34,265844896,0,0x0,8
tick,0x7ff954e0fd34,265859864,0,0x0,8
tick,0x7ff954e0fd34,265874891,0,0x0,8
tick,0x7ff954e0fd34,265889786,0,0x0,8
tick,0x7ff954e0fd34,265904724,0,0x0,8
tick,0x7ff954e0fd34,265920726,0,0x0,8
tick,0x7ff954e0fd34,265936302,0,0x0,8
tick,0x7ff954e0fd34,265952249,0,0x0,8
tick,0x7ff954e0fd34,265967335,0,0x0,8
tick,0x7ff954e0fd34,265982405,0,0x0,8
tick,0x7ff954e0fd34,265998258,0,0x0,8
tick,0x7ff954e0fd34,266012993,0,0x0,8
tick,0x7ff954e0fd34,266028135,0,0x0,8
tick,0x7ff954e0fd34,266043843,0,0x0,8
tick,0x7ff954e0fd34,266058950,0,0x0,8
tick,0x7ff954e0fd34,266074727,0,0x0,8
tick,0x7ff954e0fd34,266090385,0,0x0,8
tick,0x7ff954e0fd34,266106154,0,0x0,8
tick,0x7ff954e0fd34,266120943,0,0x0,8
tick,0x7ff954e0fd34,266136423,0,0x0,8
tick,0x7ff954e0fd34,266152252,0,0x0,8
tick,0x7ff954e0fd34,266168262,0,0x0,8
tick,0x7ff954e0fd34,266182980,0,0x0,8
tick,0x7ff954e0fd34,266198217,0,0x0,8
tick,0x7ff954e0fd34,266212761,0,0x0,8
tick,0x7ff954e0fd34,266228105,0,0x0,8
tick,0x7ff954e0fd34,266242984,0,0x0,8
tick,0x7ff954e0fd34,266257964,0,0x0,8
tick,0x7ff954e0fd34,266274103,0,0x0,8
tick,0x7ff954e0fd34,266289998,0,0x0,8
tick,0x7ff954e0fd34,266306261,0,0x0,8
tick,0x7ff954e0fd34,266321913,0,0x0,8
tick,0x7ff954e0fd34,266337838,0,0x0,8
tick,0x7ff954e0fd34,266353774,0,0x0,8
tick,0x7ff954e0fd34,266369787,0,0x0,8
tick,0x7ff954e0fd34,266385865,0,0x0,8
tick,0x7ff954e0fd34,266401671,0,0x0,8
tick,0x7ff954e0fd34,266416674,0,0x0,8
tick,0x7ff954e0fd34,266431588,0,0x0,8
tick,0x7ff954e0fd34,266447129,0,0x0,8
tick,0x7ff954e0fd34,266462749,0,0x0,8
tick,0x7ff954e0fd34,266478276,0,0x0,8
tick,0x7ff954e0fd34,266493460,0,0x0,8
tick,0x7ff954e0fd34,266509391,0,0x0,8
tick,0x7ff954e0fd34,266524458,0,0x0,8
tick,0x7ff954e0fd34,266539988,0,0x0,8
tick,0x7ff954e0fd34,266555204,0,0x0,8
tick,0x7ff954e0fd34,266570905,0,0x0,8
tick,0x7ff954e0fd34,266586398,0,0x0,8
tick,0x7ff954e0fd34,266601226,0,0x0,8
tick,0x7ff954e0fd34,266617119,0,0x0,8
tick,0x7ff954e0fd34,266632033,0,0x0,8
tick,0x7ff954e0fd34,266648073,0,0x0,8
tick,0x7ff954e0fd34,266663446,0,0x0,8
tick,0x7ff954e0fd34,266679322,0,0x0,8
tick,0x7ff954e0fd34,266694730,0,0x0,8
tick,0x7ff954e0fd34,266710001,0,0x0,8
tick,0x7ff954e0fd34,266725788,0,0x0,8
tick,0x7ff954e0fd34,266741088,0,0x0,8
tick,0x7ff954e0fd34,266755872,0,0x0,8
tick,0x7ff954e0fd34,266772201,0,0x0,8
tick,0x7ff954e0fd34,266787365,0,0x0,8
tick,0x7ff954e0fd34,266803388,0,0x0,8
tick,0x7ff954e0fd34,266818115,0,0x0,8
tick,0x7ff954e0fd34,266833373,0,0x0,8
tick,0x7ff954e0fd34,266849111,0,0x0,8
tick,0x7ff954e0fd34,266864560,0,0x0,8
tick,0x7ff954e0fd34,266879201,0,0x0,8
tick,0x7ff954e0fd34,266894166,0,0x0,8
tick,0x7ff954e0fd34,266910150,0,0x0,8
tick,0x7ff954e0fd34,266926110,0,0x0,8
tick,0x7ff954e0fd34,266942131,0,0x0,8
tick,0x7ff954e0fd34,266957005,0,0x0,8
tick,0x7ff954e0fd34,266971980,0,0x0,8
tick,0x7ff954e0fd34,266987007,0,0x0,8
tick,0x7ff954e0fd34,267001962,0,0x0,8
tick,0x7ff954e0fd34,267017841,0,0x0,8
tick,0x7ff954e0fd34,267033780,0,0x0,8
tick,0x7ff954e0fd34,267048966,0,0x0,8
tick,0x7ff954e0fd34,267064314,0,0x0,8
tick,0x7ff954e0fd34,267080058,0,0x0,8
tick,0x7ff954e0fd34,267095229,0,0x0,8
tick,0x7ff954e0fd34,267111164,0,0x0,8
tick,0x7ff954e0fd34,267127173,0,0x0,8
tick,0x7ff954e0fd34,267142859,0,0x0,8
tick,0x7ff954e0fd34,267157794,0,0x0,8
tick,0x7ff954e0fd34,267173657,0,0x0,8
tick,0x7ff954e0fd34,267188763,0,0x0,8
tick,0x7ff954e0fd34,267203763,0,0x0,8
tick,0x7ff954e0fd34,267218750,0,0x0,8
tick,0x7ff954e0fd34,267233633,0,0x0,8
tick,0x7ff954e0fd34,267249216,0,0x0,8
tick,0x7ff954e0fd34,267265160,0,0x0,8
tick,0x7ff954e0fd34,267280045,0,0x0,8
tick,0x7ff954e0fd34,267295398,0,0x0,8
tick,0x7ff954e0fd34,267310189,0,0x0,8
tick,0x7ff954e0fd34,267326071,0,0x0,8
tick,0x7ff954e0fd34,267340748,0,0x0,8
tick,0x7ff954e0fd34,267356724,0,0x0,8
tick,0x7ff954e0fd34,267372042,0,0x0,8
tick,0x7ff954e0fd34,267387999,0,0x0,8
tick,0x7ff954e0fd34,267403116,0,0x0,8
tick,0x7ff954e0fd34,267418140,0,0x0,8
tick,0x7ff954e0fd34,267434334,0,0x0,8
tick,0x7ff954e0fd34,267449961,0,0x0,8
tick,0x7ff954e0fd34,267465458,0,0x0,8
tick,0x7ff954e0fd34,267480211,0,0x0,8
tick,0x7ff954e0fd34,267495875,0,0x0,8
tick,0x7ff954e0fd34,267510742,0,0x0,8
tick,0x7ff954e0fd34,267526673,0,0x0,8
tick,0x7ff954e0fd34,267542539,0,0x0,8
tick,0x7ff954e0fd34,267557862,0,0x0,8
tick,0x7ff954e0fd34,267572800,0,0x0,8
tick,0x7ff954e0fd34,267588767,0,0x0,8
tick,0x7ff954e0fd34,267604706,0,0x0,8
tick,0x7ff954e0fd34,267620325,0,0x0,8
tick,0x7ff954e0fd34,267636191,0,0x0,8
tick,0x7ff954e0fd34,267652170,0,0x0,8
tick,0x7ff954e0fd34,267667681,0,0x0,8
tick,0x7ff954e0fd34,267682649,0,0x0,8
tick,0x7ff954e0fd34,267698633,0,0x0,8
tick,0x7ff954e0fd34,267713823,0,0x0,8
tick,0x7ff954e0fd34,267729644,0,0x0,8
tick,0x7ff954e0fd34,267744815,0,0x0,8
tick,0x7ff954e0fd34,267759734,0,0x0,8
tick,0x7ff954e0fd34,267776019,0,0x0,8
tick,0x7ff954e0fd34,267791760,0,0x0,8
tick,0x7ff954e0fd34,267807347,0,0x0,8
tick,0x7ff954e0fd34,267823273,0,0x0,8
tick,0x7ff954e0fd34,267837993,0,0x0,8
tick,0x7ff954e0fd34,267854063,0,0x0,8
tick,0x7ff954e0fd34,267869705,0,0x0,8
tick,0x7ff954e0fd34,267885716,0,0x0,8
tick,0x7ff954e0fd34,267901816,0,0x0,8
tick,0x7ff954e0fd34,267917492,0,0x0,8
tick,0x7ff954e0fd34,267933451,0,0x0,8
tick,0x7ff954e0fd34,267949350,0,0x0,8
tick,0x7ff954e0fd34,267964928,0,0x0,8
tick,0x7ff954e0fd34,267979909,0,0x0,8
tick,0x7ff954e0fd34,267996028,0,0x0,8
tick,0x7ff954e0fd34,268011545,0,0x0,8
tick,0x7ff954e0fd34,268027476,0,0x0,8
tick,0x7ff954e0fd34,268043466,0,0x0,8
tick,0x7ff954e0fd34,268058896,0,0x0,8
tick,0x7ff954e0fd34,268074834,0,0x0,8
tick,0x7ff954e0fd34,268090598,0,0x0,8
tick,0x7ff954e0fd34,268105823,0,0x0,8
tick,0x7ff954e0fd34,268120734,0,0x0,8
tick,0x7ff954e0fd34,268135714,0,0x0,8
tick,0x7ff954e0fd34,268151722,0,0x0,8
tick,0x7ff954e0fd34,268166657,0,0x0,8
tick,0x7ff954e0fd34,268182684,0,0x0,8
tick,0x7ff954e0fd34,268198620,0,0x0,8
tick,0x7ff954e0fd34,268214063,0,0x0,8
tick,0x7ff954e0fd34,268229334,0,0x0,8
tick,0x7ff954e0fd34,268243703,0,0x0,8
tick,0x7ff954e0fd34,268259247,0,0x0,8
tick,0x7ff954e0fd34,268274199,0,0x0,8
tick,0x7ff954e0fd34,268289735,0,0x0,8
tick,0x7ff954e0fd34,268305132,0,0x0,8
tick,0x7ff954e0fd34,268320503,0,0x0,8
tick,0x7ff954e0fd34,268335510,0,0x0,8
tick,0x7ff954e0fd34,268350938,0,0x0,8
tick,0x7ff954e0fd34,268366283,0,0x0,8
tick,0x7ff954e0fd34,268381678,0,0x0,8
tick,0x7ff954e0fd34,268397652,0,0x0,8
tick,0x7ff954e0fd34,268413190,0,0x0,8
tick,0x7ff954e0fd34,268429291,0,0x0,8
tick,0x7ff954e0fd34,268444856,0,0x0,8
tick,0x7ff954e0fd34,268460665,0,0x0,8
tick,0x7ff954e0fd34,268476023,0,0x0,8
tick,0x7ff954e0fd34,268491214,0,0x0,8
tick,0x7ff954e0fd34,268506796,0,0x0,8
tick,0x7ff954e0fd34,268522574,0,0x0,8
tick,0x7ff954e0fd34,268537835,0,0x0,8
tick,0x7ff954e0fd34,268553401,0,0x0,8
tick,0x7ff954e0fd34,268568401,0,0x0,8
tick,0x7ff954e0fd34,268584184,0,0x0,8
tick,0x7ff954e0fd34,268600273,0,0x0,8
tick,0x7ff954e0fd34,268615610,0,0x0,8
tick,0x7ff954e0fd34,268631223,0,0x0,8
tick,0x7ff954e0fd34,268646187,0,0x0,8
tick,0x7ff954e0fd34,268661641,0,0x0,8
tick,0x7ff954e0fd34,268677600,0,0x0,8
tick,0x7ff954e0fd34,268692544,0,0x0,8
tick,0x7ff954e0fd34,268708051,0,0x0,8
tick,0x7ff954e0fd34,268722916,0,0x0,8
tick,0x7ff954e0fd34,268738913,0,0x0,8
tick,0x7ff954e0fd34,268754860,0,0x0,8
tick,0x7ff954e0fd34,268770549,0,0x0,8
tick,0x7ff954e0fd34,268785554,0,0x0,8
tick,0x7ff954e0fd34,268800759,0,0x0,8
tick,0x7ff954e0fd34,268816008,0,0x0,8
tick,0x7ff954e0fd34,268831136,0,0x0,8
tick,0x7ff954e0fd34,268846699,0,0x0,8
tick,0x7ff954e0fd34,268861932,0,0x0,8
tick,0x7ff954e0fd34,268877687,0,0x0,8
tick,0x7ff954e0fd34,268892925,0,0x0,8
tick,0x7ff954e0fd34,268908883,0,0x0,8
tick,0x7ff954e0fd34,268924151,0,0x0,8
tick,0x7ff954e0fd34,268939214,0,0x0,8
tick,0x7ff954e0fd34,268955080,0,0x0,8
tick,0x7ff954e0fd34,268970864,0,0x0,8
tick,0x7ff954e0fd34,268986705,0,0x0,8
tick,0x7ff954e0fd34,269001861,0,0x0,8
tick,0x7ff954e0fd34,269016867,0,0x0,8
tick,0x7ff954e0fd34,269032091,0,0x0,8
tick,0x7ff954e0fd34,269047873,0,0x0,8
tick,0x7ff954e0fd34,269062690,0,0x0,8
tick,0x7ff954e0fd34,269077654,0,0x0,8
tick,0x7ff954e0fd34,269093294,0,0x0,8
tick,0x7ff954e0fd34,269109231,0,0x0,8
tick,0x7ff954e0fd34,269124636,0,0x0,8
tick,0x7ff954e0fd34,269140719,0,0x0,8
tick,0x7ff954e0fd34,269156207,0,0x0,8
tick,0x7ff954e0fd34,269172002,0,0x0,8
tick,0x7ff954e0fd34,269187215,0,0x0,8
tick,0x7ff954e0fd34,269203188,0,0x0,8
tick,0x7ff954e0fd34,269218828,0,0x0,8
tick,0x7ff954e0fd34,269234123,0,0x0,8
tick,0x7ff954e0fd34,269249743,0,0x0,8
tick,0x7ff954e0fd34,269265203,0,0x0,8
tick,0x7ff954e0fd34,269280995,0,0x0,8
tick,0x7ff954e0fd34,269295867,0,0x0,8
tick,0x7ff954e0fd34,269310833,0,0x0,8
tick,0x7ff954e0fd34,269325804,0,0x0,8
tick,0x7ff954e0fd34,269341825,0,0x0,8
tick,0x7ff954e0fd34,269357369,0,0x0,8
tick,0x7ff954e0fd34,269372714,0,0x0,8
tick,0x7ff954e0fd34,269388697,0,0x0,8
tick,0x7ff954e0fd34,269404615,0,0x0,8
tick,0x7ff954e0fd34,269420234,0,0x0,8
tick,0x7ff954e0fd34,269435695,0,0x0,8
tick,0x7ff954e0fd34,269451644,0,0x0,8
tick,0x7ff954e0fd34,269467194,0,0x0,8
tick,0x7ff954e0fd34,269483183,0,0x0,8
tick,0x7ff954e0fd34,269499086,0,0x0,8
tick,0x7ff954e0fd34,269515049,0,0x0,8
tick,0x7ff954e0fd34,269530757,0,0x0,8
tick,0x7ff954e0fd34,269546852,0,0x0,8
tick,0x7ff954e0fd34,269561702,0,0x0,8
tick,0x7ff954e0fd34,269577009,0,0x0,8
tick,0x7ff954e0fd34,269592944,0,0x0,8
tick,0x7ff954e0fd34,269609258,0,0x0,8
tick,0x7ff954e0fd34,269624738,0,0x0,8
tick,0x7ff954e0fd34,269640056,0,0x0,8
tick,0x7ff954e0fd34,269656233,0,0x0,8
tick,0x7ff954e0fd34,269672314,0,0x0,8
tick,0x7ff954e0fd34,269687928,0,0x0,8
tick,0x7ff954e0fd34,269703022,0,0x0,8
tick,0x7ff954e0fd34,269719249,0,0x0,8
tick,0x7ff954e0fd34,269734106,0,0x0,8
tick,0x7ff954e0fd34,269749969,0,0x0,8
tick,0x7ff954e0fd34,269765850,0,0x0,8
tick,0x7ff954e0fd34,269782049,0,0x0,8
tick,0x7ff954e0fd34,269797239,0,0x0,8
tick,0x7ff954e0fd34,269813090,0,0x0,8
tick,0x7ff954e0fd34,269829029,0,0x0,8
tick,0x7ff954e0fd34,269844067,0,0x0,8
tick,0x7ff954e0fd34,269859592,0,0x0,8
tick,0x7ff954e0fd34,269875133,0,0x0,8
tick,0x7ff954e0fd34,269890807,0,0x0,8
tick,0x7ff954e0fd34,269905715,0,0x0,8
tick,0x7ff954e0fd34,269921397,0,0x0,8
tick,0x7ff954e0fd34,269936632,0,0x0,8
tick,0x7ff954e0fd34,269952303,0,0x0,8
tick,0x7ff954e0fd34,269967511,0,0x0,8
tick,0x7ff954e0fd34,269982832,0,0x0,8
tick,0x7ff954e0fd34,269998065,0,0x0,8
tick,0x7ff954e0fd34,270014065,0,0x0,8
tick,0x7ff954e0fd34,270029042,0,0x0,8
tick,0x7ff954e0fd34,270045013,0,0x0,8
tick,0x7ff954e0fd34,270060895,0,0x0,8
tick,0x7ff954e0fd34,270076843,0,0x0,8
tick,0x7ff954e0fd34,270091837,0,0x0,8
tick,0x7ff954e0fd34,270106899,0,0x0,8
tick,0x7ff954e0fd34,270121792,0,0x0,8
tick,0x7ff954e0fd34,270137659,0,0x0,8
tick,0x7ff954e0fd34,270153120,0,0x0,8
tick,0x7ff954e0fd34,270167810,0,0x0,8
tick,0x7ff954e0fd34,270183754,0,0x0,8
tick,0x7ff954e0fd34,270198765,0,0x0,8
tick,0x7ff954e0fd34,270214027,0,0x0,8
tick,0x7ff954e0fd34,270229356,0,0x0,8
tick,0x7ff954e0fd34,270245314,0,0x0,8
tick,0x7ff954e0fd34,270260863,0,0x0,8
tick,0x7ff954e0fd34,270276752,0,0x0,8
tick,0x7ff954e0fd34,270292849,0,0x0,8
tick,0x7ff954e0fd34,270308961,0,0x0,8
tick,0x7ff954e0fd34,270324715,0,0x0,8
tick,0x7ff954e0fd34,270340313,0,0x0,8
tick,0x7ff954e0fd34,270355792,0,0x0,8
tick,0x7ff954e0fd34,270371796,0,0x0,8
tick,0x7ff954e0fd34,270386670,0,0x0,8
tick,0x7ff954e0fd34,270402857,0,0x0,8
tick,0x7ff954e0fd34,270418115,0,0x0,8
tick,0x7ff954e0fd34,270434079,0,0x0,8
tick,0x7ff954e0fd34,270449917,0,0x0,8
tick,0x7ff954e0fd34,270465749,0,0x0,8
tick,0x7ff954e0fd34,270481821,0,0x0,8
tick,0x7ff954e0fd34,270496970,0,0x0,8
tick,0x7ff954e0fd34,270512853,0,0x0,8
tick,0x7ff954e0fd34,270528038,0,0x0,8
tick,0x7ff954e0fd34,270543902,0,0x0,8
tick,0x7ff954e0fd34,270560180,0,0x0,8
tick,0x7ff954e0fd34,270574999,0,0x0,8
tick,0x7ff954e0fd34,270590238,0,0x0,8
tick,0x7ff954e0fd34,270605898,0,0x0,8
tick,0x7ff954e0fd34,270621857,0,0x0,8
tick,0x7ff954e0fd34,270637365,0,0x0,8
tick,0x7ff954e0fd34,270653015,0,0x0,8
tick,0x7ff954e0fd34,270668354,0,0x0,8
tick,0x7ff954e0fd34,270683341,0,0x0,8
tick,0x7ff954e0fd34,270699282,0,0x0,8
tick,0x7ff954e0fd34,270715268,0,0x0,8
tick,0x7ff954e0fd34,270731167,0,0x0,8
tick,0x7ff954e0fd34,270746112,0,0x0,8
tick,0x7ff954e0fd34,270761113,0,0x0,8
tick,0x7ff954e0fd34,270776102,0,0x0,8
tick,0x7ff954e0fd34,270791011,0,0x0,8
tick,0x7ff954e0fd34,270806977,0,0x0,8
tick,0x7ff954e0fd34,270822961,0,0x0,8
tick,0x7ff954e0fd34,270838127,0,0x0,8
tick,0x7ff954e0fd34,270853378,0,0x0,8
tick,0x7ff954e0fd34,270869107,0,0x0,8
tick,0x7ff954e0fd34,270884702,0,0x0,8
tick,0x7ff954e0fd34,270900266,0,0x0,8
tick,0x7ff954e0fd34,270915886,0,0x0,8
tick,0x7ff954e0fd34,270930658,0,0x0,8
tick,0x7ff954e0fd34,270946632,0,0x0,8
tick,0x7ff954e0fd34,270962608,0,0x0,8
tick,0x7ff954e0fd34,270978443,0,0x0,8
tick,0x7ff954e0fd34,270993938,0,0x0,8
tick,0x7ff954e0fd34,271008876,0,0x0,8
tick,0x7ff954e0fd34,271023838,0,0x0,8
tick,0x7ff954e0fd34,271039751,0,0x0,8
tick,0x7ff954e0fd34,271055749,0,0x0,8
tick,0x7ff954e0fd34,271071694,0,0x0,8
tick,0x7ff954e0fd34,271086782,0,0x0,8
tick,0x7ff954e0fd34,271102277,0,0x0,8
tick,0x7ff954e0fd34,271117848,0,0x0,8
tick,0x7ff954e0fd34,271133815,0,0x0,8
tick,0x7ff954e0fd34,271149776,0,0x0,8
tick,0x7ff954e0fd34,271165324,0,0x0,8
tick,0x7ff954e0fd34,271180899,0,0x0,8
tick,0x7ff954e0fd34,271196531,0,0x0,8
tick,0x7ff954e0fd34,271212188,0,0x0,8
tick,0x7ff954e0fd34,271227681,0,0x0,8
tick,0x7ff954e0fd34,271242582,0,0x0,8
tick,0x7ff954e0fd34,271258703,0,0x0,8
tick,0x7ff954e0fd34,271273971,0,0x0,8
tick,0x7ff954e0fd34,271289935,0,0x0,8
tick,0x7ff954e0fd34,271305910,0,0x0,8
tick,0x7ff954e0fd34,271321877,0,0x0,8
tick,0x7ff954e0fd34,271336598,0,0x0,8
tick,0x7ff954e0fd34,271351587,0,0x0,8
tick,0x7ff954e0fd34,271366633,0,0x0,8
tick,0x7ff954e0fd34,271381513,0,0x0,8
tick,0x7ff954e0fd34,271397680,0,0x0,8
tick,0x7ff954e0fd34,271413682,0,0x0,8
tick,0x7ff954e0fd34,271429021,0,0x0,8
tick,0x7ff954e0fd34,271443975,0,0x0,8
tick,0x7ff954e0fd34,271459896,0,0x0,8
tick,0x7ff954e0fd34,271474856,0,0x0,8
tick,0x7ff954e0fd34,271490822,0,0x0,8
tick,0x7ff954e0fd34,271505785,0,0x0,8
tick,0x7ff954e0fd34,271520708,0,0x0,8
tick,0x7ff954e0fd34,271535707,0,0x0,8
tick,0x7ff954e0fd34,271551641,0,0x0,8
tick,0x7ff954e0fd34,271566591,0,0x0,8
tick,0x7ff954e0fd34,271581876,0,0x0,8
tick,0x7ff954e0fd34,271597898,0,0x0,8
tick,0x7ff954e0fd34,271613390,0,0x0,8
tick,0x7ff954e0fd34,271628066,0,0x0,8
tick,0x7ff954e0fd34,271643824,0,0x0,8
tick,0x7ff954e0fd34,271659811,0,0x0,8
tick,0x7ff954e0fd34,271675536,0,0x0,8
tick,0x7ff954e0fd34,271690793,0,0x0,8
tick,0x7ff954e0fd34,271706460,0,0x0,8
tick,0x7ff954e0fd34,271722020,0,0x0,8
tick,0x7ff954e0fd34,271738022,0,0x0,8
tick,0x7ff954e0fd34,271754190,0,0x0,8
tick,0x7ff954e0fd34,271769774,0,0x0,8
tick,0x7ff954e0fd34,271785634,0,0x0,8
tick,0x7ff954e0fd34,271800569,0,0x0,8
tick,0x7ff954e0fd34,271816488,0,0x0,8
tick,0x7ff954e0fd34,271832001,0,0x0,8
tick,0x7ff954e0fd34,271847942,0,0x0,8
tick,0x7ff954e0fd34,271863829,0,0x0,8
tick,0x7ff954e0fd34,271880037,0,0x0,8
tick,0x7ff954e0fd34,271895836,0,0x0,8
tick,0x7ff954e0fd34,271911702,0,0x0,8
tick,0x7ff954e0fd34,271927642,0,0x0,8
tick,0x7ff954e0fd34,271942595,0,0x0,8
tick,0x7ff954e0fd34,271957532,0,0x0,8
tick,0x7ff954e0fd34,271972670,0,0x0,8
tick,0x7ff954e0fd34,271988616,0,0x0,8
tick,0x7ff954e0fd34,272004596,0,0x0,8
tick,0x7ff954e0fd34,272019745,0,0x0,8
tick,0x7ff954e0fd34,272035770,0,0x0,8
tick,0x7ff954e0fd34,272050981,0,0x0,8
tick,0x7ff954e0fd34,272066272,0,0x0,8
tick,0x7ff954e0fd34,272081845,0,0x0,8
tick,0x7ff954e0fd34,272096993,0,0x0,8
tick,0x7ff954e0fd34,272113065,0,0x0,8
tick,0x7ff954e0fd34,272129187,0,0x0,8
tick,0x7ff954e0fd34,272144438,0,0x0,8
tick,0x7ff954e0fd34,272159405,0,0x0,8
tick,0x7ff954e0fd34,272174309,0,0x0,8
tick,0x7ff954e0fd34,272190356,0,0x0,8
tick,0x7ff954e0fd34,272206017,0,0x0,8
tick,0x7ff954e0fd34,272222105,0,0x0,8
tick,0x7ff954e0fd34,272237574,0,0x0,8
tick,0x7ff954e0fd34,272252738,0,0x0,8
tick,0x7ff954e0fd34,272267850,0,0x0,8
tick,0x7ff954e0fd34,272283008,0,0x0,8
tick,0x7ff954e0fd34,272298985,0,0x0,8
tick,0x7ff954e0fd34,272315074,0,0x0,8
tick,0x7ff954e0fd34,272330817,0,0x0,8
tick,0x7ff954e0fd34,272346382,0,0x0,8
tick,0x7ff954e0fd34,272361994,0,0x0,8
tick,0x7ff954e0fd34,272377827,0,0x0,8
tick,0x7ff954e0fd34,272393763,0,0x0,8
tick,0x7ff954e0fd34,272409710,0,0x0,8
tick,0x7ff954e0fd34,272424655,0,0x0,8
tick,0x7ff954e0fd34,272440748,0,0x0,8
tick,0x7ff954e0fd34,272455558,0,0x0,8
tick,0x7ff954e0fd34,272470932,0,0x0,8
tick,0x7ff954e0fd34,272487045,0,0x0,8
tick,0x7ff954e0fd34,272501969,0,0x0,8
tick,0x7ff954e0fd34,272517399,0,0x0,8
tick,0x7ff954e0fd34,272532401,0,0x0,8
tick,0x7ff954e0fd34,272548639,0,0x0,8
tick,0x7ff954e0fd34,272564362,0,0x0,8
tick,0x7ff954e0fd34,272579922,0,0x0,8
tick,0x7ff954e0fd34,272595738,0,0x0,8
tick,0x7ff954e0fd34,272610729,0,0x0,8
tick,0x7ff954e0fd34,272626750,0,0x0,8
tick,0x7ff954e0fd34,272641506,0,0x0,8
tick,0x7ff954e0fd34,272656837,0,0x0,8
tick,0x7ff954e0fd34,272672358,0,0x0,8
tick,0x7ff954e0fd34,272687951,0,0x0,8
tick,0x7ff954e0fd34,272702975,0,0x0,8
tick,0x7ff954e0fd34,272718858,0,0x0,8
tick,0x7ff954e0fd34,272733828,0,0x0,8
tick,0x7ff954e0fd34,272749942,0,0x0,8
tick,0x7ff954e0fd34,272765806,0,0x0,8
tick,0x7ff954e0fd34,272781700,0,0x0,8
tick,0x7ff954e0fd34,272797124,0,0x0,8
tick,0x7ff954e0fd34,272813069,0,0x0,8
tick,0x7ff954e0fd34,272829061,0,0x0,8
tick,0x7ff954e0fd34,272845259,0,0x0,8
tick,0x7ff954e0fd34,272861211,0,0x0,8
tick,0x7ff954e0fd34,272877235,0,0x0,8
tick,0x7ff954e0fd34,272893328,0,0x0,8
tick,0x7ff954e0fd34,272908106,0,0x0,8
tick,0x7ff954e0fd34,272923534,0,0x0,8
tick,0x7ff954e0fd34,272939265,0,0x0,8
tick,0x7ff954e0fd34,272954888,0,0x0,8
tick,0x7ff954e0fd34,272970270,0,0x0,8
tick,0x7ff954e0fd34,272985194,0,0x0,8
tick,0x7ff954e0fd34,273000862,0,0x0,8
tick,0x7ff954e0fd34,273015982,0,0x0,8
tick,0x7ff954e0fd34,273030618,0,0x0,8
tick,0x7ff954e0fd34,273045945,0,0x0,8
tick,0x7ff954e0fd34,273061118,0,0x0,8
tick,0x7ff954e0fd34,273077184,0,0x0,8
tick,0x7ff954e0fd34,273093239,0,0x0,8
tick,0x7ff954e0fd34,273107834,0,0x0,8
tick,0x7ff954e0fd34,273122784,0,0x0,8
tick,0x7ff954e0fd34,273138730,0,0x0,8
tick,0x7ff954e0fd34,273154795,0,0x0,8
tick,0x7ff954e0fd34,273170201,0,0x0,8
tick,0x7ff954e0fd34,273185075,0,0x0,8
tick,0x7ff954e0fd34,273201043,0,0x0,8
tick,0x7ff954e0fd34,273216997,0,0x0,8
tick,0x7ff954e0fd34,273232194,0,0x0,8
tick,0x7ff954e0fd34,273247124,0,0x0,8
tick,0x7ff954e0fd34,273263116,0,0x0,8
tick,0x7ff954e0fd34,273278183,0,0x0,8
tick,0x7ff954e0fd34,273293346,0,0x0,8
tick,0x7ff954e0fd34,273308317,0,0x0,8
tick,0x7ff954e0fd34,273324369,0,0x0,8
tick,0x7ff954e0fd34,273339560,0,0x0,8
tick,0x7ff954e0fd34,273355472,0,0x0,8
tick,0x7ff954e0fd34,273371466,0,0x0,8
tick,0x7ff954e0fd34,273387130,0,0x0,8
tick,0x7ff954e0fd34,273403219,0,0x0,8
tick,0x7ff954e0fd34,273418090,0,0x0,8
tick,0x7ff954e0fd34,273433183,0,0x0,8
tick,0x7ff954e0fd34,273448072,0,0x0,8
tick,0x7ff954e0fd34,273463336,0,0x0,8
tick,0x7ff954e0fd34,273479258,0,0x0,8
tick,0x7ff954e0fd34,273494581,0,0x0,8
tick,0x7ff954e0fd34,273510116,0,0x0,8
tick,0x7ff954e0fd34,273525583,0,0x0,8
tick,0x7ff954e0fd34,273541078,0,0x0,8
tick,0x7ff954e0fd34,273556258,0,0x0,8
tick,0x7ff954e0fd34,273571660,0,0x0,8
tick,0x7ff954e0fd34,273587175,0,0x0,8
tick,0x7ff954e0fd34,273603169,0,0x0,8
tick,0x7ff954e0fd34,273618725,0,0x0,8
tick,0x7ff954e0fd34,273634717,0,0x0,8
tick,0x7ff954e0fd34,273650658,0,0x0,8
tick,0x7ff954e0fd34,273666611,0,0x0,8
tick,0x7ff954e0fd34,273682620,0,0x0,8
tick,0x7ff954e0fd34,273698188,0,0x0,8
tick,0x7ff954e0fd34,273714109,0,0x0,8
tick,0x7ff954e0fd34,273729208,0,0x0,8
tick,0x7ff954e0fd34,273744126,0,0x0,8
tick,0x7ff954e0fd34,273760078,0,0x0,8
tick,0x7ff954e0fd34,273774925,0,0x0,8
tick,0x7ff954e0fd34,273790060,0,0x0,8
tick,0x7ff954e0fd34,273806038,0,0x0,8
tick,0x7ff954e0fd34,273821926,0,0x0,8
tick,0x7ff954e0fd34,273837192,0,0x0,8
tick,0x7ff954e0fd34,273853112,0,0x0,8
tick,0x7ff954e0fd34,273868129,0,0x0,8
tick,0x7ff954e0fd34,273883893,0,0x0,8
tick,0x7ff954e0fd34,273899057,0,0x0,8
tick,0x7ff954e0fd34,273914079,0,0x0,8
tick,0x7ff954e0fd34,273929056,0,0x0,8
tick,0x7ff954e0fd34,273944714,0,0x0,8
tick,0x7ff954e0fd34,273960284,0,0x0,8
tick,0x7ff954e0fd34,273976555,0,0x0,8
tick,0x7ff954e0fd34,273992373,0,0x0,8
tick,0x7ff954e0fd34,274008076,0,0x0,8
tick,0x7ff954e0fd34,274023369,0,0x0,8
tick,0x7ff954e0fd34,274039301,0,0x0,8
tick,0x7ff954e0fd34,274055241,0,0x0,8
tick,0x7ff954e0fd34,274071436,0,0x0,8
tick,0x7ff954e0fd34,274086677,0,0x0,8
tick,0x7ff954e0fd34,274102305,0,0x0,8
tick,0x7ff954e0fd34,274117258,0,0x0,8
tick,0x7ff954e0fd34,274133229,0,0x0,8
tick,0x7ff954e0fd34,274149404,0,0x0,8
tick,0x7ff954e0fd34,274164901,0,0x0,8
tick,0x7ff954e0fd34,274180340,0,0x0,8
tick,0x7ff954e0fd34,274196014,0,0x0,8
tick,0x7ff954e0fd34,274211872,0,0x0,8
tick,0x7ff954e0fd34,274228021,0,0x0,8
tick,0x7ff954e0fd34,274242826,0,0x0,8
tick,0x7ff954e0fd34,274258796,0,0x0,8
tick,0x7ff954e0fd34,274273791,0,0x0,8
tick,0x7ff954e0fd34,274289726,0,0x0,8
tick,0x7ff954e0fd34,274305748,0,0x0,8
tick,0x7ff954e0fd34,274320976,0,0x0,8
tick,0x7ff954e0fd34,274336286,0,0x0,8
tick,0x7ff954e0fd34,274352678,0,0x0,8
tick,0x7ff954e0fd34,274368070,0,0x0,8
tick,0x7ff954e0fd34,274383302,0,0x0,8
tick,0x7ff954e0fd34,274399057,0,0x0,8
tick,0x7ff954e0fd34,274414590,0,0x0,8
tick,0x7ff954e0fd34,274430147,0,0x0,8
tick,0x7ff954e0fd34,274445419,0,0x0,8
tick,0x7ff954e0fd34,274461235,0,0x0,8
tick,0x7ff954e0fd34,274476518,0,0x0,8
tick,0x7ff954e0fd34,274492323,0,0x0,8
tick,0x7ff954e0fd34,274507387,0,0x0,8
tick,0x7ff954e0fd34,274523175,0,0x0,8
tick,0x7ff954e0fd34,274538797,0,0x0,8
tick,0x7ff954e0fd34,274554635,0,0x0,8
tick,0x7ff954e0fd34,274570840,0,0x0,8
tick,0x7ff954e0fd34,274586646,0,0x0,8
tick,0x7ff954e0fd34,274601555,0,0x0,8
tick,0x7ff954e0fd34,274616432,0,0x0,8
tick,0x7ff954e0fd34,274632027,0,0x0,8
tick,0x7ff954e0fd34,274647194,0,0x0,8
tick,0x7ff954e0fd34,274662672,0,0x0,8
tick,0x7ff954e0fd34,274677880,0,0x0,8
tick,0x7ff954e0fd34,274692819,0,0x0,8
tick,0x7ff954e0fd34,274707813,0,0x0,8
tick,0x7ff954e0fd34,274723727,0,0x0,8
tick,0x7ff954e0fd34,274739868,0,0x0,8
tick,0x7ff954e0fd34,274756082,0,0x0,8
tick,0x7ff954e0fd34,274771821,0,0x0,8
tick,0x7ff954e0fd34,274787423,0,0x0,8
tick,0x7ff954e0fd34,274802942,0,0x0,8
tick,0x7ff954e0fd34,274817882,0,0x0,8
tick,0x7ff954e0fd34,274833243,0,0x0,8
tick,0x7ff954e0fd34,274849177,0,0x0,8
tick,0x7ff954e0fd34,274865059,0,0x0,8
tick,0x7ff954e0fd34,274880033,0,0x0,8
tick,0x7ff954e0fd34,274894983,0,0x0,8
tick,0x7ff954e0fd34,274910017,0,0x0,8
tick,0x7ff954e0fd34,274924905,0,0x0,8
tick,0x7ff954e0fd34,274940959,0,0x0,8
tick,0x7ff954e0fd34,274956785,0,0x0,8
tick,0x7ff954e0fd34,274972734,0,0x0,8
tick,0x7ff954e0fd34,274988688,0,0x0,8
tick,0x7ff954e0fd34,275004897,0,0x0,8
tick,0x7ff954e0fd34,275020094,0,0x0,8
tick,0x7ff954e0fd34,275036052,0,0x0,8
tick,0x7ff954e0fd34,275051079,0,0x0,8
tick,0x7ff954e0fd34,275066990,0,0x0,8
tick,0x7ff954e0fd34,275081998,0,0x0,8
tick,0x7ff954e0fd34,275097342,0,0x0,8
tick,0x7ff954e0fd34,275113516,0,0x0,8
tick,0x7ff954e0fd34,275128487,0,0x0,8
tick,0x7ff954e0fd34,275143527,0,0x0,8
tick,0x7ff954e0fd34,275159325,0,0x0,8
tick,0x7ff954e0fd34,275175257,0,0x0,8
tick,0x7ff954e0fd34,275191101,0,0x0,8
tick,0x7ff954e0fd34,275207049,0,0x0,8
tick,0x7ff954e0fd34,275223023,0,0x0,8
tick,0x7ff954e0fd34,275237866,0,0x0,8
tick,0x7ff954e0fd34,275253741,0,0x0,8
tick,0x7ff954e0fd34,275268705,0,0x0,8
tick,0x7ff954e0fd34,275284653,0,0x0,8
tick,0x7ff954e0fd34,275300618,0,0x0,8
tick,0x7ff954e0fd34,275316862,0,0x0,8
tick,0x7ff954e0fd34,275332852,0,0x0,8
tick,0x7ff954e0fd34,275347858,0,0x0,8
tick,0x7ff954e0fd34,275362587,0,0x0,8
tick,0x7ff954e0fd34,275378040,0,0x0,8
tick,0x7ff954e0fd34,275393739,0,0x0,8
tick,0x7ff954e0fd34,275409054,0,0x0,8
tick,0x7ff954e0fd34,275424559,0,0x0,8
tick,0x7ff954e0fd34,275440280,0,0x0,8
tick,0x7ff954e0fd34,275456230,0,0x0,8
tick,0x7ff954e0fd34,275472260,0,0x0,8
tick,0x7ff954e0fd34,275487965,0,0x0,8
tick,0x7ff954e0fd34,275503377,0,0x0,8
tick,0x7ff954e0fd34,275518296,0,0x0,8
tick,0x7ff954e0fd34,275532919,0,0x0,8
tick,0x7ff954e0fd34,275548129,0,0x0,8
tick,0x7ff954e0fd34,275563620,0,0x0,8
tick,0x7ff954e0fd34,275579032,0,0x0,8
tick,0x7ff954e0fd34,275594357,0,0x0,8
tick,0x7ff954e0fd34,275609274,0,0x0,8
tick,0x7ff954e0fd34,275625339,0,0x0,8
tick,0x7ff954e0fd34,275641225,0,0x0,8
tick,0x7ff954e0fd34,275656733,0,0x0,8
tick,0x7ff954e0fd34,275672660,0,0x0,8
tick,0x7ff954e0fd34,275688355,0,0x0,8
tick,0x7ff954e0fd34,275704291,0,0x0,8
tick,0x7ff954e0fd34,275720173,0,0x0,8
tick,0x7ff954e0fd34,275735140,0,0x0,8
tick,0x7ff954e0fd34,275750961,0,0x0,8
tick,0x7ff954e0fd34,275765609,0,0x0,8
tick,0x7ff954e0fd34,275780765,0,0x0,8
tick,0x7ff954e0fd34,275796208,0,0x0,8
tick,0x7ff954e0fd34,275810979,0,0x0,8
tick,0x7ff954e0fd34,275826859,0,0x0,8
tick,0x7ff954e0fd34,275842640,0,0x0,8
tick,0x7ff954e0fd34,275857913,0,0x0,8
tick,0x7ff954e0fd34,275873645,0,0x0,8
tick,0x7ff954e0fd34,275888473,0,0x0,8
tick,0x7ff954e0fd34,275904154,0,0x0,8
tick,0x7ff954e0fd34,275921125,0,0x0,8
tick,0x7ff954e0fd34,275935539,0,0x0,8
tick,0x7ff954e0fd34,275950784,0,0x0,8
tick,0x7ff954e0fd34,275965819,0,0x0,8
tick,0x7ff954e0fd34,275982161,0,0x0,8
tick,0x7ff954e0fd34,275998111,0,0x0,8
tick,0x7ff954e0fd34,276013423,0,0x0,8
tick,0x7ff954e0fd34,276029174,0,0x0,8
tick,0x7ff954e0fd34,276044510,0,0x0,8
tick,0x7ff954e0fd34,276060245,0,0x0,8
tick,0x7ff954e0fd34,276076215,0,0x0,8
tick,0x7ff954e0fd34,276092418,0,0x0,8
tick,0x7ff954e0fd34,276107229,0,0x0,8
tick,0x7ff954e0fd34,276122193,0,0x0,8
tick,0x7ff954e0fd34,276137154,0,0x0,8
tick,0x7ff954e0fd34,276152165,0,0x0,8
tick,0x7ff954e0fd34,276167095,0,0x0,8
tick,0x7ff954e0fd34,276182941,0,0x0,8
tick,0x7ff954e0fd34,276197923,0,0x0,8
tick,0x7ff954e0fd34,276212904,0,0x0,8
tick,0x7ff954e0fd34,276227859,0,0x0,8
tick,0x7ff954e0fd34,276243894,0,0x0,8
tick,0x7ff954e0fd34,276258763,0,0x0,8
tick,0x7ff954e0fd34,276274286,0,0x0,8
tick,0x7ff954e0fd34,276288902,0,0x0,8
tick,0x7ff954e0fd34,276304893,0,0x0,8
tick,0x7ff954e0fd34,276320180,0,0x0,8
tick,0x7ff954e0fd34,276335838,0,0x0,8
tick,0x7ff954e0fd34,276351696,0,0x0,8
tick,0x7ff954e0fd34,276367114,0,0x0,8
tick,0x7ff954e0fd34,276382494,0,0x0,8
tick,0x7ff954e0fd34,276398207,0,0x0,8
tick,0x7ff954e0fd34,276413270,0,0x0,8
tick,0x7ff954e0fd34,276429301,0,0x0,8
tick,0x7ff954e0fd34,276444893,0,0x0,8
tick,0x7ff954e0fd34,276460166,0,0x0,8
tick,0x7ff954e0fd34,276475544,0,0x0,8
tick,0x7ff954e0fd34,276490781,0,0x0,8
tick,0x7ff954e0fd34,276506274,0,0x0,8
tick,0x7ff954e0fd34,276522224,0,0x0,8
tick,0x7ff954e0fd34,276537510,0,0x0,8
tick,0x7ff954e0fd34,276552752,0,0x0,8
tick,0x7ff954e0fd34,276567935,0,0x0,8
tick,0x7ff954e0fd34,276583011,0,0x0,8
tick,0x7ff954e0fd34,276598060,0,0x0,8
tick,0x7ff954e0fd34,276612949,0,0x0,8
tick,0x7ff954e0fd34,276628105,0,0x0,8
tick,0x7ff954e0fd34,276643134,0,0x0,8
tick,0x7ff954e0fd34,276658871,0,0x0,8
tick,0x7ff954e0fd34,276674344,0,0x0,8
tick,0x7ff954e0fd34,276690014,0,0x0,8
tick,0x7ff954e0fd34,276704792,0,0x0,8
tick,0x7ff954e0fd34,276720786,0,0x0,8
tick,0x7ff954e0fd34,276736708,0,0x0,8
tick,0x7ff954e0fd34,276752759,0,0x0,8
tick,0x7ff954e0fd34,276768480,0,0x0,8
tick,0x7ff954e0fd34,276783602,0,0x0,8
tick,0x7ff954e0fd34,276799052,0,0x0,8
tick,0x7ff954e0fd34,276814727,0,0x0,8
tick,0x7ff954e0fd34,276830721,0,0x0,8
tick,0x7ff954e0fd34,276845661,0,0x0,8
tick,0x7ff954e0fd34,276860724,0,0x0,8
tick,0x7ff954e0fd34,276876650,0,0x0,8
tick,0x7ff954e0fd34,276892445,0,0x0,8
tick,0x7ff954e0fd34,276907842,0,0x0,8
tick,0x7ff954e0fd34,276923842,0,0x0,8
tick,0x7ff954e0fd34,276939035,0,0x0,8
tick,0x7ff954e0fd34,276955239,0,0x0,8
tick,0x7ff954e0fd34,276969898,0,0x0,8
tick,0x7ff954e0fd34,276985309,0,0x0,8
tick,0x7ff954e0fd34,277001483,0,0x0,8
tick,0x7ff954e0fd34,277016014,0,0x0,8
tick,0x7ff954e0fd34,277031029,0,0x0,8
tick,0x7ff954e0fd34,277046216,0,0x0,8
tick,0x7ff954e0fd34,277061141,0,0x0,8
tick,0x7ff954e0fd34,277076030,0,0x0,8
tick,0x7ff954e0fd34,277092023,0,0x0,8
tick,0x7ff954e0fd34,277108030,0,0x0,8
tick,0x7ff954e0fd34,277124133,0,0x0,8
tick,0x7ff954e0fd34,277139796,0,0x0,8
tick,0x7ff954e0fd34,277155114,0,0x0,8
tick,0x7ff954e0fd34,277170075,0,0x0,8
tick,0x7ff954e0fd34,277185864,0,0x0,8
tick,0x7ff954e0fd34,277201247,0,0x0,8
tick,0x7ff954e0fd34,277217035,0,0x0,8
tick,0x7ff954e0fd34,277232599,0,0x0,8
tick,0x7ff954e0fd34,277248243,0,0x0,8
tick,0x7ff954e0fd34,277262862,0,0x0,8
tick,0x7ff954e0fd34,277278260,0,0x0,8
tick,0x7ff954e0fd34,277293318,0,0x0,8
tick,0x7ff954e0fd34,277309324,0,0x0,8
tick,0x7ff954e0fd34,277324333,0,0x0,8
tick,0x7ff954e0fd34,277339899,0,0x0,8
tick,0x7ff954e0fd34,277355364,0,0x0,8
tick,0x7ff954e0fd34,277370616,0,0x0,8
tick,0x7ff954e0fd34,277386166,0,0x0,8
tick,0x7ff954e0fd34,277400956,0,0x0,8
tick,0x7ff954e0fd34,277416755,0,0x0,8
tick,0x7ff954e0fd34,277432393,0,0x0,8
tick,0x7ff954e0fd34,277448349,0,0x0,8
tick,0x7ff954e0fd34,277463940,0,0x0,8
tick,0x7ff954e0fd34,277479889,0,0x0,8
tick,0x7ff954e0fd34,277495906,0,0x0,8
tick,0x7ff954e0fd34,277511810,0,0x0,8
tick,0x7ff954e0fd34,277527764,0,0x0,8
tick,0x7ff954e0fd34,277543756,0,0x0,8
tick,0x7ff954e0fd34,277559673,0,0x0,8
tick,0x7ff954e0fd34,277574673,0,0x0,8
tick,0x7ff954e0fd34,277589898,0,0x0,8
tick,0x7ff954e0fd34,277605928,0,0x0,8
tick,0x7ff954e0fd34,277621047,0,0x0,8
tick,0x7ff954e0fd34,277635775,0,0x0,8
tick,0x7ff954e0fd34,277651084,0,0x0,8
tick,0x7ff954e0fd34,277666301,0,0x0,8
tick,0x7ff954e0fd34,277681841,0,0x0,8
tick,0x7ff954e0fd34,277696623,0,0x0,8
tick,0x7ff954e0fd34,277711801,0,0x0,8
tick,0x7ff954e0fd34,277726777,0,0x0,8
tick,0x7ff954e0fd34,277742177,0,0x0,8
tick,0x7ff954e0fd34,277758145,0,0x0,8
tick,0x7ff954e0fd34,277774265,0,0x0,8
tick,0x7ff954e0fd34,277790018,0,0x0,8
tick,0x7ff954e0fd34,277805706,0,0x0,8
tick,0x7ff954e0fd34,277821999,0,0x0,8
tick,0x7ff954e0fd34,277837907,0,0x0,8
tick,0x7ff954e0fd34,277853700,0,0x0,8
tick,0x7ff954e0fd34,277869055,0,0x0,8
tick,0x7ff954e0fd34,277884459,0,0x0,8
tick,0x7ff954e0fd34,277900068,0,0x0,8
tick,0x7ff954e0fd34,277915216,0,0x0,8
tick,0x7ff954e0fd34,277931032,0,0x0,8
tick,0x7ff954e0fd34,277946301,0,0x0,8
tick,0x7ff954e0fd34,277961029,0,0x0,8
tick,0x7ff954e0fd34,277975814,0,0x0,8
tick,0x7ff954e0fd34,277991217,0,0x0,8
tick,0x7ff954e0fd34,278006687,0,0x0,8
tick,0x7ff954e0fd34,278022435,0,0x0,8
tick,0x7ff954e0fd34,278038089,0,0x0,8
tick,0x7ff954e0fd34,278053164,0,0x0,8
tick,0x7ff954e0fd34,278069223,0,0x0,8
tick,0x7ff954e0fd34,278084587,0,0x0,8
tick,0x7ff954e0fd34,278100235,0,0x0,8
tick,0x7ff954e0fd34,278115170,0,0x0,8
tick,0x7ff954e0fd34,278130734,0,0x0,8
tick,0x7ff954e0fd34,278146552,0,0x0,8
tick,0x7ff954e0fd34,278161215,0,0x0,8
tick,0x7ff954e0fd34,278177336,0,0x0,8
tick,0x7ff954e0fd34,278192431,0,0x0,8
tick,0x7ff954e0fd34,278207425,0,0x0,8
tick,0x7ff954e0fd34,278222845,0,0x0,8
tick,0x7ff954e0fd34,278239004,0,0x0,8
tick,0x7ff954e0fd34,278254390,0,0x0,8
tick,0x7ff954e0fd34,278269846,0,0x0,8
tick,0x7ff954e0fd34,278284724,0,0x0,8
tick,0x7ff954e0fd34,278300060,0,0x0,8
tick,0x7ff954e0fd34,278316004,0,0x0,8
tick,0x7ff954e0fd34,278332067,0,0x0,8
tick,0x7ff954e0fd34,278346928,0,0x0,8
tick,0x7ff954e0fd34,278361870,0,0x0,8
tick,0x7ff954e0fd34,278377230,0,0x0,8
tick,0x7ff954e0fd34,278393168,0,0x0,8
tick,0x7ff954e0fd34,278408633,0,0x0,8
tick,0x7ff954e0fd34,278424753,0,0x0,8
tick,0x7ff954e0fd34,278440267,0,0x0,8
tick,0x7ff954e0fd34,278456005,0,0x0,8
tick,0x7ff954e0fd34,278471596,0,0x0,8
tick,0x7ff954e0fd34,278486932,0,0x0,8
tick,0x7ff954e0fd34,278502052,0,0x0,8
tick,0x7ff954e0fd34,278517370,0,0x0,8
tick,0x7ff954e0fd34,278533060,0,0x0,8
tick,0x7ff954e0fd34,278548106,0,0x0,8
tick,0x7ff954e0fd34,278564398,0,0x0,8
tick,0x7ff954e0fd34,278579929,0,0x0,8
tick,0x7ff954e0fd34,278595036,0,0x0,8
tick,0x7ff954e0fd34,278610147,0,0x0,8
tick,0x7ff954e0fd34,278626322,0,0x0,8
tick,0x7ff954e0fd34,278642473,0,0x0,8
tick,0x7ff954e0fd34,278658448,0,0x0,8
tick,0x7ff954e0fd34,278673284,0,0x0,8
tick,0x7ff954e0fd34,278689175,0,0x0,8
tick,0x7ff954e0fd34,278704080,0,0x0,8
tick,0x7ff954e0fd34,278720189,0,0x0,8
tick,0x7ff954e0fd34,278735922,0,0x0,8
tick,0x7ff954e0fd34,278752024,0,0x0,8
tick,0x7ff954e0fd34,278768026,0,0x0,8
tick,0x7ff954e0fd34,278783190,0,0x0,8
tick,0x7ff954e0fd34,278799556,0,0x0,8
tick,0x7ff954e0fd34,278814985,0,0x0,8
tick,0x7ff954e0fd34,278830838,0,0x0,8
tick,0x7ff954e0fd34,278846086,0,0x0,8
tick,0x7ff954e0fd34,278861136,0,0x0,8
tick,0x7ff954e0fd34,278876251,0,0x0,8
tick,0x7ff954e0fd34,278891721,0,0x0,8
tick,0x7ff954e0fd34,278907913,0,0x0,8
tick,0x7ff954e0fd34,278923868,0,0x0,8
tick,0x7ff954e0fd34,278939703,0,0x0,8
tick,0x7ff954e0fd34,278954974,0,0x0,8
tick,0x7ff954e0fd34,278971055,0,0x0,8
tick,0x7ff954e0fd34,278985925,0,0x0,8
tick,0x7ff954e0fd34,279000876,0,0x0,8
tick,0x7ff954e0fd34,279015905,0,0x0,8
tick,0x7ff954e0fd34,279030860,0,0x0,8
tick,0x7ff954e0fd34,279046738,0,0x0,8
tick,0x7ff954e0fd34,279062302,0,0x0,8
tick,0x7ff954e0fd34,279078195,0,0x0,8
tick,0x7ff954e0fd34,279094160,0,0x0,8
tick,0x7ff954e0fd34,279110070,0,0x0,8
tick,0x7ff954e0fd34,279126001,0,0x0,8
tick,0x7ff954e0fd34,279140908,0,0x0,8
tick,0x7ff954e0fd34,279155873,0,0x0,8
tick,0x7ff954e0fd34,279170787,0,0x0,8
tick,0x7ff954e0fd34,279185754,0,0x0,8
tick,0x7ff954e0fd34,279201213,0,0x0,8
tick,0x7ff954e0fd34,279216362,0,0x0,8
tick,0x7ff954e0fd34,279232296,0,0x0,8
tick,0x7ff954e0fd34,279247237,0,0x0,8
tick,0x7ff954e0fd34,279263307,0,0x0,8
tick,0x7ff954e0fd34,279279078,0,0x0,8
tick,0x7ff954e0fd34,279295070,0,0x0,8
tick,0x7ff954e0fd34,279310860,0,0x0,8
tick,0x7ff954e0fd34,279325900,0,0x0,8
tick,0x7ff954e0fd34,279341112,0,0x0,8
tick,0x7ff954e0fd34,279356485,0,0x0,8
tick,0x7ff954e0fd34,279372009,0,0x0,8
tick,0x7ff954e0fd34,279387128,0,0x0,8
tick,0x7ff954e0fd34,279402964,0,0x0,8
tick,0x7ff954e0fd34,279418191,0,0x0,8
tick,0x7ff954e0fd34,279433507,0,0x0,8
tick,0x7ff954e0fd34,279448854,0,0x0,8
tick,0x7ff954e0fd34,279464399,0,0x0,8
tick,0x7ff954e0fd34,279479840,0,0x0,8
tick,0x7ff954e0fd34,279495062,0,0x0,8
tick,0x7ff954e0fd34,279510253,0,0x0,8
tick,0x7ff954e0fd34,279526290,0,0x0,8
tick,0x7ff954e0fd34,279542014,0,0x0,8
tick,0x7ff954e0fd34,279558153,0,0x0,8
tick,0x7ff954e0fd34,279573562,0,0x0,8
tick,0x7ff954e0fd34,279589865,0,0x0,8
tick,0x7ff954e0fd34,279605024,0,0x0,8
tick,0x7ff954e0fd34,279620213,0,0x0,8
tick,0x7ff954e0fd34,279635050,0,0x0,8
tick,0x7ff954e0fd34,279650088,0,0x0,8
tick,0x7ff954e0fd34,279665018,0,0x0,8
tick,0x7ff954e0fd34,279680395,0,0x0,8
tick,0x7ff954e0fd34,279696083,0,0x0,8
tick,0x7ff954e0fd34,279711216,0,0x0,8
tick,0x7ff954e0fd34,279726277,0,0x0,8
tick,0x7ff954e0fd34,279741810,0,0x0,8
tick,0x7ff954e0fd34,279757591,0,0x0,8
tick,0x7ff954e0fd34,279773505,0,0x0,8
tick,0x7ff954e0fd34,279789386,0,0x0,8
tick,0x7ff954e0fd34,279805608,0,0x0,8
tick,0x7ff954e0fd34,279821185,0,0x0,8
tick,0x7ff954e0fd34,279836414,0,0x0,8
tick,0x7ff954e0fd34,279851931,0,0x0,8
tick,0x7ff954e0fd34,279866917,0,0x0,8
tick,0x7ff954e0fd34,279882526,0,0x0,8
tick,0x7ff954e0fd34,279898161,0,0x0,8
tick,0x7ff954e0fd34,279914392,0,0x0,8
tick,0x7ff954e0fd34,279929992,0,0x0,8
tick,0x7ff954e0fd34,279945174,0,0x0,8
tick,0x7ff954e0fd34,279960765,0,0x0,8
tick,0x7ff954e0fd34,279975983,0,0x0,8
tick,0x7ff954e0fd34,279992170,0,0x0,8
tick,0x7ff954e0fd34,280007737,0,0x0,8
tick,0x7ff954e0fd34,280023109,0,0x0,8
tick,0x7ff954e0fd34,280038991,0,0x0,8
tick,0x7ff954e0fd34,280053799,0,0x0,8
tick,0x7ff954e0fd34,280069855,0,0x0,8
tick,0x7ff954e0fd34,280084906,0,0x0,8
tick,0x7ff954e0fd34,280099988,0,0x0,8
tick,0x7ff954e0fd34,280115502,0,0x0,8
tick,0x7ff954e0fd34,280130750,0,0x0,8
tick,0x7ff954e0fd34,280146724,0,0x0,8
tick,0x7ff954e0fd34,280162169,0,0x0,8
tick,0x7ff954e0fd34,280178128,0,0x0,8
tick,0x7ff954e0fd34,280194097,0,0x0,8
tick,0x7ff954e0fd34,280210085,0,0x0,8
tick,0x7ff954e0fd34,280226210,0,0x0,8
tick,0x7ff954e0fd34,280242018,0,0x0,8
tick,0x7ff954e0fd34,280257973,0,0x0,8
tick,0x7ff954e0fd34,280272994,0,0x0,8
tick,0x7ff954e0fd34,280288038,0,0x0,8
tick,0x7ff954e0fd34,280302849,0,0x0,8
tick,0x7ff954e0fd34,280317833,0,0x0,8
tick,0x7ff954e0fd34,280332757,0,0x0,8
tick,0x7ff954e0fd34,280347920,0,0x0,8
tick,0x7ff954e0fd34,280362891,0,0x0,8
tick,0x7ff954e0fd34,280378825,0,0x0,8
tick,0x7ff954e0fd34,280394785,0,0x0,8
tick,0x7ff954e0fd34,280410770,0,0x0,8
tick,0x7ff954e0fd34,280426656,0,0x0,8
tick,0x7ff954e0fd34,280442598,0,0x0,8
tick,0x7ff954e0fd34,280458030,0,0x0,8
tick,0x7ff954e0fd34,280472975,0,0x0,8
tick,0x7ff954e0fd34,280488957,0,0x0,8
tick,0x7ff954e0fd34,280504914,0,0x0,8
tick,0x7ff954e0fd34,280520925,0,0x0,8
tick,0x7ff954e0fd34,280536785,0,0x0,8
tick,0x7ff954e0fd34,280552764,0,0x0,8
tick,0x7ff954e0fd34,280568743,0,0x0,8
tick,0x7ff954e0fd34,280584732,0,0x0,8
tick,0x7ff954e0fd34,280599638,0,0x0,8
tick,0x7ff954e0fd34,280615659,0,0x0,8
tick,0x7ff954e0fd34,280630876,0,0x0,8
tick,0x7ff954e0fd34,280645837,0,0x0,8
tick,0x7ff954e0fd34,280661850,0,0x0,8
tick,0x7ff954e0fd34,280676777,0,0x0,8
tick,0x7ff954e0fd34,280692707,0,0x0,8
tick,0x7ff954e0fd34,280708688,0,0x0,8
tick,0x7ff954e0fd34,280723786,0,0x0,8
tick,0x7ff954e0fd34,280739637,0,0x0,8
tick,0x7ff954e0fd34,280754615,0,0x0,8
tick,0x7ff954e0fd34,280770568,0,0x0,8
tick,0x7ff954e0fd34,280786477,0,0x0,8
tick,0x7ff954e0fd34,280801305,0,0x0,8
tick,0x7ff954e0fd34,280816251,0,0x0,8
tick,0x7ff954e0fd34,280831180,0,0x0,8
tick,0x7ff954e0fd34,280847121,0,0x0,8
tick,0x7ff954e0fd34,280863076,0,0x0,8
tick,0x7ff954e0fd34,280878399,0,0x0,8
tick,0x7ff954e0fd34,280893906,0,0x0,8
tick,0x7ff954e0fd34,280909047,0,0x0,8
tick,0x7ff954e0fd34,280923959,0,0x0,8
tick,0x7ff954e0fd34,280940005,0,0x0,8
tick,0x7ff954e0fd34,280954907,0,0x0,8
tick,0x7ff954e0fd34,280969882,0,0x0,8
tick,0x7ff954e0fd34,280985591,0,0x0,8
tick,0x7ff954e0fd34,281001144,0,0x0,8
tick,0x7ff954e0fd34,281017074,0,0x0,8
tick,0x7ff954e0fd34,281033068,0,0x0,8
tick,0x7ff954e0fd34,281048993,0,0x0,8
tick,0x7ff954e0fd34,281064423,0,0x0,8
tick,0x7ff954e0fd34,281080322,0,0x0,8
tick,0x7ff954e0fd34,281096294,0,0x0,8
tick,0x7ff954e0fd34,281112295,0,0x0,8
tick,0x7ff954e0fd34,281128249,0,0x0,8
tick,0x7ff954e0fd34,281143217,0,0x0,8
tick,0x7ff954e0fd34,281159118,0,0x0,8
tick,0x7ff954e0fd34,281174145,0,0x0,8
tick,0x7ff954e0fd34,281190110,0,0x0,8
tick,0x7ff954e0fd34,281206101,0,0x0,8
tick,0x7ff954e0fd34,281222048,0,0x0,8
tick,0x7ff954e0fd34,281243351,0,0x0,8
tick,0x7ff954e0fd34,281252873,0,0x0,8
tick,0x7ff954e0fd34,281269081,0,0x0,8
tick,0x7ff954e0fd34,281283895,0,0x0,8
tick,0x7ff954e0fd34,281298800,0,0x0,8
tick,0x7ff954e0fd34,281313850,0,0x0,8
tick,0x7ff954e0fd34,281328820,0,0x0,8
tick,0x7ff954e0fd34,281344698,0,0x0,8
tick,0x7ff954e0fd34,281360775,0,0x0,8
tick,0x7ff954e0fd34,281376610,0,0x0,8
tick,0x7ff954e0fd34,281392587,0,0x0,8
tick,0x7ff954e0fd34,281408493,0,0x0,8
tick,0x7ff954e0fd34,281424460,0,0x0,8
tick,0x7ff954e0fd34,281439431,0,0x0,8
tick,0x7ff954e0fd34,281454527,0,0x0,8
tick,0x7ff954e0fd34,281469532,0,0x0,8
tick,0x7ff954e0fd34,281485414,0,0x0,8
tick,0x7ff954e0fd34,281501381,0,0x0,8
tick,0x7ff954e0fd34,281517336,0,0x0,8
tick,0x7ff954e0fd34,281533322,0,0x0,8
tick,0x7ff954e0fd34,281549287,0,0x0,8
tick,0x7ff954e0fd34,281565246,0,0x0,8
tick,0x7ff954e0fd34,281581172,0,0x0,8
tick,0x7ff954e0fd34,281597126,0,0x0,8
tick,0x7ff954e0fd34,281613116,0,0x0,8
tick,0x7ff954e0fd34,281629120,0,0x0,8
tick,0x7ff954e0fd34,281645010,0,0x0,8
tick,0x7ff954e0fd34,281660992,0,0x0,8
tick,0x7ff954e0fd34,281676884,0,0x0,8
tick,0x7ff954e0fd34,281692866,0,0x0,8
tick,0x7ff954e0fd34,281708801,0,0x0,8
tick,0x7ff954e0fd34,281724732,0,0x0,8
tick,0x7ff954e0fd34,281740844,0,0x0,8
tick,0x7ff954e0fd34,281756795,0,0x0,8
tick,0x7ff954e0fd34,281772755,0,0x0,8
tick,0x7ff954e0fd34,281788699,0,0x0,8
tick,0x7ff954e0fd34,281803724,0,0x0,8
tick,0x7ff954e0fd34,281818644,0,0x0,8
tick,0x7ff954e0fd34,281833577,0,0x0,8
tick,0x7ff954e0fd34,281849518,0,0x0,8
tick,0x7ff954e0fd34,281865479,0,0x0,8
tick,0x7ff954e0fd34,281881447,0,0x0,8
tick,0x7ff954e0fd34,281897456,0,0x0,8
tick,0x7ff954e0fd34,281913196,0,0x0,8
tick,0x7ff954e0fd34,281928472,0,0x0,8
tick,0x7ff954e0fd34,281943443,0,0x0,8
tick,0x7ff954e0fd34,281959364,0,0x0,8
tick,0x7ff954e0fd34,281974285,0,0x0,8
tick,0x7ff954e0fd34,281990274,0,0x0,8
tick,0x7ff954e0fd34,282006228,0,0x0,8
tick,0x7ff954e0fd34,282021295,0,0x0,8
tick,0x7ff954e0fd34,282036248,0,0x0,8
tick,0x7ff954e0fd34,282052215,0,0x0,8
tick,0x7ff954e0fd34,282068195,0,0x0,8
tick,0x7ff954e0fd34,282084119,0,0x0,8
tick,0x7ff954e0fd34,282100085,0,0x0,8
tick,0x7ff954e0fd34,282116106,0,0x0,8
tick,0x7ff954e0fd34,282131011,0,0x0,8
tick,0x7ff954e0fd34,282145954,0,0x0,8
tick,0x7ff954e0fd34,282161029,0,0x0,8
tick,0x7ff954e0fd34,282176867,0,0x0,8
tick,0x7ff954e0fd34,282191831,0,0x0,8
tick,0x7ff954e0fd34,282207830,0,0x0,8
tick,0x7ff954e0fd34,282223735,0,0x0,8
tick,0x7ff954e0fd34,282239762,0,0x0,8
tick,0x7ff954e0fd34,282255745,0,0x0,8
tick,0x7ff954e0fd34,282271647,0,0x0,8
tick,0x7ff954e0fd34,282286584,0,0x0,8
tick,0x7ff954e0fd34,282301586,0,0x0,8
tick,0x7ff954e0fd34,282317543,0,0x0,8
tick,0x7ff954e0fd34,282333479,0,0x0,8
tick,0x7ff954e0fd34,282348427,0,0x0,8
tick,0x7ff954e0fd34,282364397,0,0x0,8
tick,0x7ff954e0fd34,282379412,0,0x0,8
tick,0x7ff954e0fd34,282395314,0,0x0,8
tick,0x7ff954e0fd34,282411253,0,0x0,8
tick,0x7ff954e0fd34,282427108,0,0x0,8
tick,0x7ff954e0fd34,282442527,0,0x0,8
tick,0x7ff954e0fd34,282458462,0,0x0,8
tick,0x7ff954e0fd34,282474447,0,0x0,8
tick,0x7ff954e0fd34,282490485,0,0x0,8
tick,0x7ff954e0fd34,282506352,0,0x0,8
tick,0x7ff954e0fd34,282522270,0,0x0,8
tick,0x7ff954e0fd34,282538220,0,0x0,8
tick,0x7ff954e0fd34,282554231,0,0x0,8
tick,0x7ff954e0fd34,282570165,0,0x0,8
tick,0x7ff954e0fd34,282586116,0,0x0,8
tick,0x7ff954e0fd34,282601055,0,0x0,8
tick,0x7ff954e0fd34,282616032,0,0x0,8
tick,0x7ff954e0fd34,282632015,0,0x0,8
tick,0x7ff954e0fd34,282647937,0,0x0,8
tick,0x7ff954e0fd34,282663884,0,0x0,8
tick,0x7ff954e0fd34,282679874,0,0x0,8
tick,0x7ff954e0fd34,282695814,0,0x0,8
tick,0x7ff954e0fd34,282711791,0,0x0,8
tick,0x7ff954e0fd34,282727119,0,0x0,8
tick,0x7ff954e0fd34,282743081,0,0x0,8
tick,0x7ff954e0fd34,282759053,0,0x0,8
tick,0x7ff954e0fd34,282775117,0,0x0,8
tick,0x7ff954e0fd34,282791019,0,0x0,8
tick,0x7ff954e0fd34,282806363,0,0x0,8
tick,0x7ff954e0fd34,282821365,0,0x0,8
tick,0x7ff954e0fd34,282837350,0,0x0,8
tick,0x7ff954e0fd34,282852949,0,0x0,8
tick,0x7ff954e0fd34,282868119,0,0x0,8
tick,0x7ff954e0fd34,282883781,0,0x0,8
tick,0x7ff954e0fd34,282898773,0,0x0,8
tick,0x7ff954e0fd34,282914669,0,0x0,8
tick,0x7ff954e0fd34,282930690,0,0x0,8
tick,0x7ff954e0fd34,282946643,0,0x0,8
tick,0x7ff954e0fd34,282962569,0,0x0,8
tick,0x7ff954e0fd34,282977763,0,0x0,8
tick,0x7ff954e0fd34,282993034,0,0x0,8
tick,0x7ff954e0fd34,283008994,0,0x0,8
tick,0x7ff954e0fd34,283024807,0,0x0,8
tick,0x7ff954e0fd34,283040512,0,0x0,8
tick,0x7ff954e0fd34,283056501,0,0x0,8
tick,0x7ff954e0fd34,283072448,0,0x0,8
tick,0x7ff954e0fd34,283088388,0,0x0,8
tick,0x7ff954e0fd34,283104387,0,0x0,8
tick,0x7ff954e0fd34,283120322,0,0x0,8
tick,0x7ff954e0fd34,283136275,0,0x0,8
tick,0x7ff954e0fd34,283152289,0,0x0,8
tick,0x7ff954e0fd34,283167179,0,0x0,8
tick,0x7ff954e0fd34,283182140,0,0x0,8
tick,0x7ff954e0fd34,283198103,0,0x0,8
tick,0x7ff954e0fd34,283213533,0,0x0,8
tick,0x7ff954e0fd34,283229477,0,0x0,8
tick,0x7ff954e0fd34,283244782,0,0x0,8
tick,0x7ff954e0fd34,283259805,0,0x0,8
tick,0x7ff954e0fd34,283275395,0,0x0,8
tick,0x7ff954e0fd34,283291402,0,0x0,8
tick,0x7ff954e0fd34,283307339,0,0x0,8
tick,0x7ff954e0fd34,283323182,0,0x0,8
tick,0x7ff954e0fd34,283339151,0,0x0,8
tick,0x7ff954e0fd34,283355001,0,0x0,8
tick,0x7ff954e0fd34,283370817,0,0x0,8
tick,0x7ff954e0fd34,283386506,0,0x0,8
tick,0x7ff954e0fd34,283401373,0,0x0,8
tick,0x7ff954e0fd34,283416970,0,0x0,8
tick,0x7ff954e0fd34,283432940,0,0x0,8
tick,0x7ff954e0fd34,283448573,0,0x0,8
tick,0x7ff954e0fd34,283464387,0,0x0,8
tick,0x7ff954e0fd34,283480329,0,0x0,8
tick,0x7ff954e0fd34,283495819,0,0x0,8
tick,0x7ff954e0fd34,283510957,0,0x0,8
tick,0x7ff954e0fd34,283526437,0,0x0,8
tick,0x7ff954e0fd34,283542349,0,0x0,8
tick,0x7ff954e0fd34,283558413,0,0x0,8
tick,0x7ff954e0fd34,283574265,0,0x0,8
tick,0x7ff954e0fd34,283590223,0,0x0,8
tick,0x7ff954e0fd34,283606196,0,0x0,8
tick,0x7ff954e0fd34,283622140,0,0x0,8
tick,0x7ff954e0fd34,283638069,0,0x0,8
tick,0x7ff954e0fd34,283654106,0,0x0,8
tick,0x7ff954e0fd34,283670069,0,0x0,8
tick,0x7ff954e0fd34,283686001,0,0x0,8
tick,0x7ff954e0fd34,283701917,0,0x0,8
tick,0x7ff954e0fd34,283717907,0,0x0,8
tick,0x7ff954e0fd34,283732863,0,0x0,8
tick,0x7ff954e0fd34,283747827,0,0x0,8
tick,0x7ff954e0fd34,283763749,0,0x0,8
tick,0x7ff954e0fd34,283780093,0,0x0,8
tick,0x7ff954e0fd34,283795659,0,0x0,8
tick,0x7ff954e0fd34,283811664,0,0x0,8
tick,0x7ff954e0fd34,283827594,0,0x0,8
tick,0x7ff954e0fd34,283843709,0,0x0,8
tick,0x7ff954e0fd34,283859541,0,0x0,8
tick,0x7ff954e0fd34,283875626,0,0x0,8
tick,0x7ff954e0fd34,283891438,0,0x0,8
tick,0x7ff954e0fd34,283907353,0,0x0,8
tick,0x7ff954e0fd34,283923301,0,0x0,8
tick,0x7ff954e0fd34,283938581,0,0x0,8
tick,0x7ff954e0fd34,283953545,0,0x0,8
tick,0x7ff954e0fd34,283969510,0,0x0,8
tick,0x7ff954e0fd34,283985461,0,0x0,8
tick,0x7ff954e0fd34,284001957,0,0x0,8
tick,0x7ff954e0fd34,284017459,0,0x0,8
tick,0x7ff954e0fd34,284034175,0,0x0,8
tick,0x7ff954e0fd34,284048809,0,0x0,8
tick,0x7ff954e0fd34,284064792,0,0x0,8
tick,0x7ff954e0fd34,284080727,0,0x0,8
tick,0x7ff954e0fd34,284096791,0,0x0,8
tick,0x7ff954e0fd34,284112663,0,0x0,8
tick,0x7ff954e0fd34,284128607,0,0x0,8
tick,0x7ff954e0fd34,284143587,0,0x0,8
tick,0x7ff954e0fd34,284158542,0,0x0,8
tick,0x7ff954e0fd34,284173456,0,0x0,8
tick,0x7ff954e0fd34,284188450,0,0x0,8
tick,0x7ff954e0fd34,284203436,0,0x0,8
tick,0x7ff954e0fd34,284218339,0,0x0,8
tick,0x7ff954e0fd34,284233339,0,0x0,8
tick,0x7ff954e0fd34,284249279,0,0x0,8
tick,0x7ff954e0fd34,284265225,0,0x0,8
tick,0x7ff954e0fd34,284281207,0,0x0,8
tick,0x7ff954e0fd34,284296136,0,0x0,8
tick,0x7ff954e0fd34,284312165,0,0x0,8
tick,0x7ff954e0fd34,284327259,0,0x0,8
tick,0x7ff954e0fd34,284343186,0,0x0,8
tick,0x7ff954e0fd34,284359157,0,0x0,8
tick,0x7ff954e0fd34,284375164,0,0x0,8
tick,0x7ff954e0fd34,284391328,0,0x0,8
tick,0x7ff954e0fd34,284406416,0,0x0,8
tick,0x7ff954e0fd34,284422374,0,0x0,8
tick,0x7ff954e0fd34,284438351,0,0x0,8
tick,0x7ff954e0fd34,284454307,0,0x0,8
tick,0x7ff954e0fd34,284469268,0,0x0,8
tick,0x7ff954e0fd34,284485200,0,0x0,8
tick,0x7ff954e0fd34,284500207,0,0x0,8
tick,0x7ff954e0fd34,284516185,0,0x0,8
tick,0x7ff954e0fd34,284532085,0,0x0,8
tick,0x7ff954e0fd34,284547041,0,0x0,8
tick,0x7ff954e0fd34,284563029,0,0x0,8
tick,0x7ff954e0fd34,284577967,0,0x0,8
tick,0x7ff954e0fd34,284594172,0,0x0,8
tick,0x7ff954e0fd34,284609920,0,0x0,8
tick,0x7ff954e0fd34,284625772,0,0x0,8
tick,0x7ff954e0fd34,284641710,0,0x0,8
tick,0x7ff954e0fd34,284657752,0,0x0,8
tick,0x7ff954e0fd34,284673625,0,0x0,8
tick,0x7ff954e0fd34,284689572,0,0x0,8
tick,0x7ff954e0fd34,284705552,0,0x0,8
tick,0x7ff954e0fd34,284721471,0,0x0,8
tick,0x7ff954e0fd34,284737440,0,0x0,8
tick,0x7ff954e0fd34,284753414,0,0x0,8
tick,0x7ff954e0fd34,284769379,0,0x0,8
tick,0x7ff954e0fd34,284785161,0,0x0,8
tick,0x7ff954e0fd34,284801096,0,0x0,8
tick,0x7ff954e0fd34,284816756,0,0x0,8
tick,0x7ff954e0fd34,284832668,0,0x0,8
tick,0x7ff954e0fd34,284848634,0,0x0,8
tick,0x7ff954e0fd34,284863597,0,0x0,8
tick,0x7ff954e0fd34,284878601,0,0x0,8
tick,0x7ff954e0fd34,284894543,0,0x0,8
tick,0x7ff954e0fd34,284910075,0,0x0,8
tick,0x7ff954e0fd34,284926005,0,0x0,8
tick,0x7ff954e0fd34,284941986,0,0x0,8
tick,0x7ff954e0fd34,284957940,0,0x0,8
tick,0x7ff954e0fd34,284972893,0,0x0,8
tick,0x7ff954e0fd34,284987833,0,0x0,8
tick,0x7ff954e0fd34,285002819,0,0x0,8
tick,0x7ff954e0fd34,285018817,0,0x0,8
tick,0x7ff954e0fd34,285033725,0,0x0,8
tick,0x7ff954e0fd34,285049699,0,0x0,8
tick,0x7ff954e0fd34,285064637,0,0x0,8
tick,0x7ff954e0fd34,285079622,0,0x0,8
tick,0x7ff954e0fd34,285095594,0,0x0,8
tick,0x7ff954e0fd34,285111581,0,0x0,8
tick,0x7ff954e0fd34,285127592,0,0x0,8
tick,0x7ff954e0fd34,285143121,0,0x0,8
tick,0x7ff954e0fd34,285158945,0,0x0,8
tick,0x7ff954e0fd34,285173912,0,0x0,8
tick,0x7ff954e0fd34,285188854,0,0x0,8
tick,0x7ff954e0fd34,285203851,0,0x0,8
tick,0x7ff954e0fd34,285219363,0,0x0,8
tick,0x7ff954e0fd34,285235274,0,0x0,8
tick,0x7ff954e0fd34,285251241,0,0x0,8
tick,0x7ff954e0fd34,285266207,0,0x0,8
tick,0x7ff954e0fd34,285281150,0,0x0,8
tick,0x7ff954e0fd34,285297179,0,0x0,8
tick,0x7ff954e0fd34,285312691,0,0x0,8
tick,0x7ff954e0fd34,285327617,0,0x0,8
tick,0x7ff954e0fd34,285343565,0,0x0,8
tick,0x7ff954e0fd34,285358498,0,0x0,8
tick,0x7ff954e0fd34,285374465,0,0x0,8
tick,0x7ff954e0fd34,285390452,0,0x0,8
tick,0x7ff954e0fd34,285406333,0,0x0,8
tick,0x7ff954e0fd34,285421814,0,0x0,8
tick,0x7ff954e0fd34,285437775,0,0x0,8
tick,0x7ff954e0fd34,285453748,0,0x0,8
tick,0x7ff954e0fd34,285468733,0,0x0,8
tick,0x7ff954e0fd34,285484659,0,0x0,8
tick,0x7ff954e0fd34,285499627,0,0x0,8
tick,0x7ff954e0fd34,285515563,0,0x0,8
tick,0x7ff954e0fd34,285531660,0,0x0,8
tick,0x7ff954e0fd34,285547595,0,0x0,8
tick,0x7ff954e0fd34,285563529,0,0x0,8
tick,0x7ff954e0fd34,285579501,0,0x0,8
tick,0x7ff954e0fd34,285595474,0,0x0,8
tick,0x7ff954e0fd34,285611508,0,0x0,8
tick,0x7ff954e0fd34,285627427,0,0x0,8
tick,0x7ff954e0fd34,285642338,0,0x0,8
tick,0x7ff954e0fd34,285658311,0,0x0,8
tick,0x7ff954e0fd34,285673241,0,0x0,8
tick,0x7ff954e0fd34,285689204,0,0x0,8
tick,0x7ff954e0fd34,285704229,0,0x0,8
tick,0x7ff954e0fd34,285719153,0,0x0,8
tick,0x7ff954e0fd34,285734122,0,0x0,8
tick,0x7ff954e0fd34,285749104,0,0x0,8
tick,0x7ff954e0fd34,285765018,0,0x0,8
tick,0x7ff954e0fd34,285781048,0,0x0,8
tick,0x7ff954e0fd34,285797010,0,0x0,8
tick,0x7ff954e0fd34,285812901,0,0x0,8
tick,0x7ff954e0fd34,285828887,0,0x0,8
tick,0x7ff954e0fd34,285843873,0,0x0,8
tick,0x7ff954e0fd34,285859835,0,0x0,8
tick,0x7ff954e0fd34,285874735,0,0x0,8
tick,0x7ff954e0fd34,285889724,0,0x0,8
tick,0x7ff954e0fd34,285904667,0,0x0,8
tick,0x7ff954e0fd34,285919669,0,0x0,8
tick,0x7ff954e0fd34,285935641,0,0x0,8
tick,0x7ff954e0fd34,285951555,0,0x0,8
tick,0x7ff954e0fd34,285967538,0,0x0,8
tick,0x7ff954e0fd34,285983462,0,0x0,8
tick,0x7ff954e0fd34,285999412,0,0x0,8
tick,0x7ff954e0fd34,286015515,0,0x0,8
tick,0x7ff954e0fd34,286030509,0,0x0,8
tick,0x7ff954e0fd34,286046568,0,0x0,8
tick,0x7ff954e0fd34,286061627,0,0x0,8
tick,0x7ff954e0fd34,286077546,0,0x0,8
tick,0x7ff954e0fd34,286093527,0,0x0,8
tick,0x7ff954e0fd34,286109440,0,0x0,8
tick,0x7ff954e0fd34,286125384,0,0x0,8
tick,0x7ff954e0fd34,286141339,0,0x0,8
tick,0x7ff954e0fd34,286157285,0,0x0,8
tick,0x7ff954e0fd34,286173247,0,0x0,8
tick,0x7ff954e0fd34,286189223,0,0x0,8
tick,0x7ff954e0fd34,286205151,0,0x0,8
tick,0x7ff954e0fd34,286221112,0,0x0,8
tick,0x7ff954e0fd34,286237072,0,0x0,8
tick,0x7ff954e0fd34,286253053,0,0x0,8
tick,0x7ff954e0fd34,286269033,0,0x0,8
tick,0x7ff954e0fd34,286284017,0,0x0,8
tick,0x7ff954e0fd34,286298900,0,0x0,8
tick,0x7ff954e0fd34,286313866,0,0x0,8
tick,0x7ff954e0fd34,286328826,0,0x0,8
tick,0x7ff954e0fd34,286344863,0,0x0,8
tick,0x7ff954e0fd34,286360815,0,0x0,8
tick,0x7ff954e0fd34,286376698,0,0x0,8
tick,0x7ff954e0fd34,286392760,0,0x0,8
tick,0x7ff954e0fd34,286408611,0,0x0,8
tick,0x7ff954e0fd34,286424201,0,0x0,8
tick,0x7ff954e0fd34,286440186,0,0x0,8
tick,0x7ff954e0fd34,286455134,0,0x0,8
tick,0x7ff954e0fd34,286471073,0,0x0,8
tick,0x7ff954e0fd34,286486051,0,0x0,8
tick,0x7ff954e0fd34,286502082,0,0x0,8
tick,0x7ff954e0fd34,286517500,0,0x0,8
tick,0x7ff954e0fd34,286532440,0,0x0,8
tick,0x7ff954e0fd34,286547412,0,0x0,8
tick,0x7ff954e0fd34,286562341,0,0x0,8
tick,0x7ff954e0fd34,286577355,0,0x0,8
tick,0x7ff954e0fd34,286592704,0,0x0,8
tick,0x7ff954e0fd34,286608704,0,0x0,8
tick,0x7ff954e0fd34,286624714,0,0x0,8
tick,0x7ff954e0fd34,286639925,0,0x0,8
tick,0x7ff954e0fd34,286654916,0,0x0,8
tick,0x7ff954e0fd34,286670845,0,0x0,8
tick,0x7ff954e0fd34,286686793,0,0x0,8
tick,0x7ff954e0fd34,286702738,0,0x0,8
tick,0x7ff954e0fd34,286718727,0,0x0,8
tick,0x7ff954e0fd34,286734503,0,0x0,8
tick,0x7ff954e0fd34,286750458,0,0x0,8
tick,0x7ff954e0fd34,286766409,0,0x0,8
tick,0x7ff954e0fd34,286782382,0,0x0,8
tick,0x7ff954e0fd34,286797348,0,0x0,8
tick,0x7ff954e0fd34,286813275,0,0x0,8
tick,0x7ff954e0fd34,286828263,0,0x0,8
tick,0x7ff954e0fd34,286844254,0,0x0,8
tick,0x7ff954e0fd34,286859180,0,0x0,8
tick,0x7ff954e0fd34,286874779,0,0x0,8
tick,0x7ff954e0fd34,286890704,0,0x0,8
tick,0x7ff954e0fd34,286906660,0,0x0,8
tick,0x7ff954e0fd34,286921936,0,0x0,8
tick,0x7ff954e0fd34,286937419,0,0x0,8
tick,0x7ff954e0fd34,286953275,0,0x0,8
tick,0x7ff954e0fd34,286968268,0,0x0,8
tick,0x7ff954e0fd34,286984214,0,0x0,8
tick,0x7ff954e0fd34,286999633,0,0x0,8
tick,0x7ff954e0fd34,287015618,0,0x0,8
tick,0x7ff954e0fd34,287031139,0,0x0,8
tick,0x7ff954e0fd34,287047152,0,0x0,8
tick,0x7ff954e0fd34,287062183,0,0x0,8
tick,0x7ff954e0fd34,287077052,0,0x0,8
tick,0x7ff954e0fd34,287091975,0,0x0,8
tick,0x7ff954e0fd34,287107930,0,0x0,8
tick,0x7ff954e0fd34,287122885,0,0x0,8
tick,0x7ff954e0fd34,287138857,0,0x0,8
tick,0x7ff954e0fd34,287154814,0,0x0,8
tick,0x7ff954e0fd34,287170770,0,0x0,8
tick,0x7ff954e0fd34,287186712,0,0x0,8
tick,0x7ff954e0fd34,287201708,0,0x0,8
tick,0x7ff954e0fd34,287216637,0,0x0,8
tick,0x7ff954e0fd34,287231433,0,0x0,8
tick,0x7ff954e0fd34,287246528,0,0x0,8
tick,0x7ff954e0fd34,287262469,0,0x0,8
tick,0x7ff954e0fd34,287277486,0,0x0,8
tick,0x7ff954e0fd34,287293426,0,0x0,8
tick,0x7ff954e0fd34,287309405,0,0x0,8
tick,0x7ff954e0fd34,287325318,0,0x0,8
tick,0x7ff954e0fd34,287341278,0,0x0,8
tick,0x7ff954e0fd34,287357280,0,0x0,8
tick,0x7ff954e0fd34,287372233,0,0x0,8
tick,0x7ff954e0fd34,287387738,0,0x0,8
tick,0x7ff954e0fd34,287403698,0,0x0,8
tick,0x7ff954e0fd34,287418915,0,0x0,8
tick,0x7ff954e0fd34,287433889,0,0x0,8
tick,0x7ff954e0fd34,287449296,0,0x0,8
tick,0x7ff954e0fd34,287465249,0,0x0,8
tick,0x7ff954e0fd34,287481202,0,0x0,8
tick,0x7ff954e0fd34,287496769,0,0x0,8
tick,0x7ff954e0fd34,287512751,0,0x0,8
tick,0x7ff954e0fd34,287527891,0,0x0,8
tick,0x7ff954e0fd34,287542847,0,0x0,8
tick,0x7ff954e0fd34,287558845,0,0x0,8
tick,0x7ff954e0fd34,287574823,0,0x0,8
tick,0x7ff954e0fd34,287590519,0,0x0,8
tick,0x7ff954e0fd34,287606466,0,0x0,8
tick,0x7ff954e0fd34,287622450,0,0x0,8
tick,0x7ff954e0fd34,287637832,0,0x0,8
tick,0x7ff954e0fd34,287653770,0,0x0,8
tick,0x7ff954e0fd34,287669831,0,0x0,8
tick,0x7ff954e0fd34,287685730,0,0x0,8
tick,0x7ff954e0fd34,287701637,0,0x0,8
tick,0x7ff954e0fd34,287717568,0,0x0,8
tick,0x7ff954e0fd34,287733518,0,0x0,8
tick,0x7ff954e0fd34,287748503,0,0x0,8
tick,0x7ff954e0fd34,287764446,0,0x0,8
tick,0x7ff954e0fd34,287779423,0,0x0,8
tick,0x7ff954e0fd34,287795372,0,0x0,8
tick,0x7ff954e0fd34,287810529,0,0x0,8
tick,0x7ff954e0fd34,287825504,0,0x0,8
tick,0x7ff954e0fd34,287840459,0,0x0,8
tick,0x7ff954e0fd34,287855412,0,0x0,8
tick,0x7ff954e0fd34,287870891,0,0x0,8
tick,0x7ff954e0fd34,287886863,0,0x0,8
tick,0x7ff954e0fd34,287902806,0,0x0,8
tick,0x7ff954e0fd34,287917776,0,0x0,8
tick,0x7ff954e0fd34,287933003,0,0x0,8
tick,0x7ff954e0fd34,287948551,0,0x0,8
tick,0x7ff954e0fd34,287964518,0,0x0,8
tick,0x7ff954e0fd34,287980610,0,0x0,8
tick,0x7ff954e0fd34,287995800,0,0x0,8
tick,0x7ff954e0fd34,288011982,0,0x0,8
tick,0x7ff954e0fd34,288028139,0,0x0,8
tick,0x7ff954e0fd34,288043868,0,0x0,8
tick,0x7ff954e0fd34,288059948,0,0x0,8
tick,0x7ff954e0fd34,288075104,0,0x0,8
tick,0x7ff954e0fd34,288090084,0,0x0,8
tick,0x7ff954e0fd34,288105881,0,0x0,8
tick,0x7ff954e0fd34,288121576,0,0x0,8
tick,0x7ff954e0fd34,288137558,0,0x0,8
tick,0x7ff954e0fd34,288153313,0,0x0,8
tick,0x7ff954e0fd34,288169233,0,0x0,8
tick,0x7ff954e0fd34,288185209,0,0x0,8
tick,0x7ff954e0fd34,288201152,0,0x0,8
tick,0x7ff954e0fd34,288217093,0,0x0,8
tick,0x7ff954e0fd34,288233061,0,0x0,8
tick,0x7ff954e0fd34,288248068,0,0x0,8
tick,0x7ff954e0fd34,288263982,0,0x0,8
tick,0x7ff954e0fd34,288279924,0,0x0,8
tick,0x7ff954e0fd34,288295886,0,0x0,8
tick,0x7ff954e0fd34,288311866,0,0x0,8
tick,0x7ff954e0fd34,288327913,0,0x0,8
tick,0x7ff954e0fd34,288343759,0,0x0,8
tick,0x7ff954e0fd34,288359722,0,0x0,8
tick,0x7ff954e0fd34,288375668,0,0x0,8
tick,0x7ff954e0fd34,288391740,0,0x0,8
tick,0x7ff954e0fd34,288407591,0,0x0,8
tick,0x7ff954e0fd34,288423601,0,0x0,8
tick,0x7ff954e0fd34,288439518,0,0x0,8
tick,0x7ff954e0fd34,288455500,0,0x0,8
tick,0x7ff954e0fd34,288470650,0,0x0,8
tick,0x7ff954e0fd34,288486647,0,0x0,8
tick,0x7ff954e0fd34,288501574,0,0x0,8
tick,0x7ff954e0fd34,288517541,0,0x0,8
tick,0x7ff954e0fd34,288533475,0,0x0,8
tick,0x7ff954e0fd34,288549521,0,0x0,8
tick,0x7ff954e0fd34,288565464,0,0x0,8
tick,0x7ff954e0fd34,288581472,0,0x0,8
tick,0x7ff954e0fd34,288597424,0,0x0,8
tick,0x7ff954e0fd34,288613371,0,0x0,8
tick,0x7ff954e0fd34,288629425,0,0x0,8
tick,0x7ff954e0fd34,288645455,0,0x0,8
tick,0x7ff954e0fd34,288661014,0,0x0,8
tick,0x7ff954e0fd34,288676963,0,0x0,8
tick,0x7ff954e0fd34,288692924,0,0x0,8
tick,0x7ff954e0fd34,288708889,0,0x0,8
tick,0x7ff954e0fd34,288724101,0,0x0,8
tick,0x7ff954e0fd34,288739029,0,0x0,8
tick,0x7ff954e0fd34,288754976,0,0x0,8
tick,0x7ff954e0fd34,288770730,0,0x0,8
tick,0x7ff954e0fd34,288786673,0,0x0,8
tick,0x7ff954e0fd34,288802645,0,0x0,8
tick,0x7ff954e0fd34,288818590,0,0x0,8
tick,0x7ff954e0fd34,288834421,0,0x0,8
tick,0x7ff954e0fd34,288850339,0,0x0,8
tick,0x7ff954e0fd34,288865339,0,0x0,8
tick,0x7ff954e0fd34,288880284,0,0x0,8
tick,0x7ff954e0fd34,288895254,0,0x0,8
tick,0x7ff954e0fd34,288910303,0,0x0,8
tick,0x7ff954e0fd34,288926248,0,0x0,8
tick,0x7ff954e0fd34,288941223,0,0x0,8
tick,0x7ff954e0fd34,288957044,0,0x0,8
tick,0x7ff954e0fd34,288972012,0,0x0,8
tick,0x7ff954e0fd34,288986960,0,0x0,8
tick,0x7ff954e0fd34,289001975,0,0x0,8
tick,0x7ff954e0fd34,289017761,0,0x0,8
tick,0x7ff954e0fd34,289033729,0,0x0,8
tick,0x7ff954e0fd34,289048630,0,0x0,8
tick,0x7ff954e0fd34,289063970,0,0x0,8
tick,0x7ff954e0fd34,289079935,0,0x0,8
tick,0x7ff954e0fd34,289095937,0,0x0,8
tick,0x7ff954e0fd34,289110958,0,0x0,8
tick,0x7ff954e0fd34,289126692,0,0x0,8
tick,0x7ff954e0fd34,289142636,0,0x0,8
tick,0x7ff954e0fd34,289158573,0,0x0,8
tick,0x7ff954e0fd34,289173764,0,0x0,8
tick,0x7ff954e0fd34,289188687,0,0x0,8
tick,0x7ff954e0fd34,289204655,0,0x0,8
tick,0x7ff954e0fd34,289220611,0,0x0,8
tick,0x7ff954e0fd34,289236550,0,0x0,8
tick,0x7ff954e0fd34,289252520,0,0x0,8
tick,0x7ff954e0fd34,289268469,0,0x0,8
tick,0x7ff954e0fd34,289284438,0,0x0,8
tick,0x7ff954e0fd34,289300407,0,0x0,8
tick,0x7ff954e0fd34,289316365,0,0x0,8
tick,0x7ff954e0fd34,289332327,0,0x0,8
tick,0x7ff954e0fd34,289348291,0,0x0,8
tick,0x7ff954e0fd34,289364281,0,0x0,8
tick,0x7ff954e0fd34,289380225,0,0x0,8
tick,0x7ff954e0fd34,289396179,0,0x0,8
tick,0x7ff954e0fd34,289412282,0,0x0,8
tick,0x7ff954e0fd34,289426796,0,0x0,8
tick,0x7ff954e0fd34,289441725,0,0x0,8
tick,0x7ff954e0fd34,289457716,0,0x0,8
tick,0x7ff954e0fd34,289473637,0,0x0,8
tick,0x7ff954e0fd34,289489583,0,0x0,8
tick,0x7ff954e0fd34,289505572,0,0x0,8
tick,0x7ff954e0fd34,289521534,0,0x0,8
tick,0x7ff954e0fd34,289537525,0,0x0,8
tick,0x7ff954e0fd34,289553422,0,0x0,8
tick,0x7ff954e0fd34,289569382,0,0x0,8
tick,0x7ff954e0fd34,289585343,0,0x0,8
tick,0x7ff954e0fd34,289600304,0,0x0,8
tick,0x7ff954e0fd34,289616246,0,0x0,8
tick,0x7ff954e0fd34,289631255,0,0x0,8
tick,0x7ff954e0fd34,289647177,0,0x0,8
tick,0x7ff954e0fd34,289663143,0,0x0,8
tick,0x7ff954e0fd34,289679103,0,0x0,8
tick,0x7ff954e0fd34,289695078,0,0x0,8
tick,0x7ff954e0fd34,289711021,0,0x0,8
tick,0x7ff954e0fd34,289727047,0,0x0,8
tick,0x7ff954e0fd34,289743012,0,0x0,8
tick,0x7ff954e0fd34,289757986,0,0x0,8
tick,0x7ff954e0fd34,289772923,0,0x0,8
tick,0x7ff954e0fd34,289787912,0,0x0,8
tick,0x7ff954e0fd34,289803951,0,0x0,8
tick,0x7ff954e0fd34,289818932,0,0x0,8
tick,0x7ff954e0fd34,289834888,0,0x0,8
tick,0x7ff954e0fd34,289850905,0,0x0,8
tick,0x7ff954e0fd34,289865601,0,0x0,8
tick,0x7ff954e0fd34,289880259,0,0x0,8
tick,0x7ff954e0fd34,289896235,0,0x0,8
tick,0x7ff954e0fd34,289911777,0,0x0,8
tick,0x7ff954e0fd34,289927374,0,0x0,8
tick,0x7ff954e0fd34,289942328,0,0x0,8
tick,0x7ff954e0fd34,289957282,0,0x0,8
tick,0x7ff954e0fd34,289972792,0,0x0,8
tick,0x7ff954e0fd34,289987918,0,0x0,8
tick,0x7ff954e0fd34,290002811,0,0x0,8
tick,0x7ff954e0fd34,290017770,0,0x0,8
tick,0x7ff954e0fd34,290033262,0,0x0,8
tick,0x7ff954e0fd34,290048252,0,0x0,8
tick,0x7ff954e0fd34,290064200,0,0x0,8
tick,0x7ff954e0fd34,290079141,0,0x0,8
tick,0x7ff954e0fd34,290095143,0,0x0,8
tick,0x7ff954e0fd34,290111066,0,0x0,8
tick,0x7ff954e0fd34,290127015,0,0x0,8
tick,0x7ff954e0fd34,290142886,0,0x0,8
tick,0x7ff954e0fd34,290157844,0,0x0,8
tick,0x7ff954e0fd34,290172804,0,0x0,8
tick,0x7ff954e0fd34,290188741,0,0x0,8
tick,0x7ff954e0fd34,290204699,0,0x0,8
tick,0x7ff954e0fd34,290219558,0,0x0,8
tick,0x7ff954e0fd34,290235508,0,0x0,8
tick,0x7ff954e0fd34,290250973,0,0x0,8
tick,0x7ff954e0fd34,290266565,0,0x0,8
tick,0x7ff954e0fd34,290281351,0,0x0,8
tick,0x7ff954e0fd34,290296519,0,0x0,8
tick,0x7ff954e0fd34,290312510,0,0x0,8
tick,0x7ff954e0fd34,290327503,0,0x0,8
tick,0x7ff954e0fd34,290342459,0,0x0,8
tick,0x7ff954e0fd34,290357392,0,0x0,8
tick,0x7ff954e0fd34,290372342,0,0x0,8
tick,0x7ff954e0fd34,290388294,0,0x0,8
tick,0x7ff954e0fd34,290404294,0,0x0,8
tick,0x7ff954e0fd34,290420217,0,0x0,8
tick,0x7ff954e0fd34,290435709,0,0x0,8
tick,0x7ff954e0fd34,290451637,0,0x0,8
tick,0x7ff954e0fd34,290467596,0,0x0,8
tick,0x7ff954e0fd34,290483589,0,0x0,8
tick,0x7ff954e0fd34,290498524,0,0x0,8
tick,0x7ff954e0fd34,290513541,0,0x0,8
tick,0x7ff954e0fd34,290528471,0,0x0,8
tick,0x7ff954e0fd34,290543405,0,0x0,8
tick,0x7ff954e0fd34,290559390,0,0x0,8
tick,0x7ff954e0fd34,290575329,0,0x0,8
tick,0x7ff954e0fd34,290591281,0,0x0,8
tick,0x7ff954e0fd34,290607257,0,0x0,8
tick,0x7ff954e0fd34,290623184,0,0x0,8
tick,0x7ff954e0fd34,290639160,0,0x0,8
tick,0x7ff954e0fd34,290654131,0,0x0,8
tick,0x7ff954e0fd34,290669104,0,0x0,8
tick,0x7ff954e0fd34,290685046,0,0x0,8
tick,0x7ff954e0fd34,290700711,0,0x0,8
tick,0x7ff954e0fd34,290716294,0,0x0,8
tick,0x7ff954e0fd34,290732254,0,0x0,8
tick,0x7ff954e0fd34,290748209,0,0x0,8
tick,0x7ff954e0fd34,290764197,0,0x0,8
tick,0x7ff954e0fd34,290779769,0,0x0,8
tick,0x7ff954e0fd34,290795728,0,0x0,8
tick,0x7ff954e0fd34,290811691,0,0x0,8
tick,0x7ff954e0fd34,290827149,0,0x0,8
tick,0x7ff954e0fd34,290842468,0,0x0,8
tick,0x7ff954e0fd34,290858521,0,0x0,8
tick,0x7ff954e0fd34,290874459,0,0x0,8
tick,0x7ff954e0fd34,290889436,0,0x0,8
tick,0x7ff954e0fd34,290905104,0,0x0,8
tick,0x7ff954e0fd34,290920090,0,0x0,8
tick,0x7ff954e0fd34,290935037,0,0x0,8
tick,0x7ff954e0fd34,290950111,0,0x0,8
tick,0x7ff954e0fd34,290965941,0,0x0,8
tick,0x7ff954e0fd34,290980930,0,0x0,8
tick,0x7ff954e0fd34,290995858,0,0x0,8
tick,0x7ff954e0fd34,291011827,0,0x0,8
tick,0x7ff954e0fd34,291027801,0,0x0,8
tick,0x7ff954e0fd34,291043715,0,0x0,8
tick,0x7ff954e0fd34,291058698,0,0x0,8
tick,0x7ff954e0fd34,291073664,0,0x0,8
tick,0x7ff954e0fd34,291088614,0,0x0,8
tick,0x7ff954e0fd34,291104564,0,0x0,8
tick,0x7ff954e0fd34,291119657,0,0x0,8
tick,0x7ff954e0fd34,291134630,0,0x0,8
tick,0x7ff954e0fd34,291150650,0,0x0,8
tick,0x7ff954e0fd34,291165568,0,0x0,8
tick,0x7ff954e0fd34,291181482,0,0x0,8
tick,0x7ff954e0fd34,291197449,0,0x0,8
tick,0x7ff954e0fd34,291213438,0,0x0,8
tick,0x7ff954e0fd34,291228698,0,0x0,8
tick,0x7ff954e0fd34,291243635,0,0x0,8
tick,0x7ff954e0fd34,291258600,0,0x0,8
tick,0x7ff954e0fd34,291274000,0,0x0,8
tick,0x7ff954e0fd34,291289564,0,0x0,8
tick,0x7ff954e0fd34,291304797,0,0x0,8
tick,0x7ff954e0fd34,291320126,0,0x0,8
tick,0x7ff954e0fd34,291335300,0,0x0,8
tick,0x7ff954e0fd34,291350408,0,0x0,8
tick,0x7ff954e0fd34,291365557,0,0x0,8
tick,0x7ff954e0fd34,291380782,0,0x0,8
tick,0x7ff954e0fd34,291396098,0,0x0,8
tick,0x7ff954e0fd34,291411964,0,0x0,8
tick,0x7ff954e0fd34,291427009,0,0x0,8
tick,0x7ff954e0fd34,291442903,0,0x0,8
tick,0x7ff954e0fd34,291457845,0,0x0,8
tick,0x7ff954e0fd34,291473438,0,0x0,8
tick,0x7ff954e0fd34,291489373,0,0x0,8
tick,0x7ff954e0fd34,291504331,0,0x0,8
tick,0x7ff954e0fd34,291519701,0,0x0,8
tick,0x7ff954e0fd34,291534715,0,0x0,8
tick,0x7ff954e0fd34,291550629,0,0x0,8
tick,0x7ff954e0fd34,291565601,0,0x0,8
tick,0x7ff954e0fd34,291581561,0,0x0,8
tick,0x7ff954e0fd34,291596954,0,0x0,8
tick,0x7ff954e0fd34,291612421,0,0x0,8
tick,0x7ff954e0fd34,291627577,0,0x0,8
tick,0x7ff954e0fd34,291643246,0,0x0,8
tick,0x7ff954e0fd34,291658590,0,0x0,8
tick,0x7ff954e0fd34,291674193,0,0x0,8
tick,0x7ff954e0fd34,291690106,0,0x0,8
tick,0x7ff954e0fd34,291705261,0,0x0,8
tick,0x7ff954e0fd34,291720193,0,0x0,8
tick,0x7ff954e0fd34,291735417,0,0x0,8
tick,0x7ff954e0fd34,291750380,0,0x0,8
tick,0x7ff954e0fd34,291765647,0,0x0,8
tick,0x7ff954e0fd34,291781014,0,0x0,8
tick,0x7ff954e0fd34,291796295,0,0x0,8
tick,0x7ff954e0fd34,291811586,0,0x0,8
tick,0x7ff954e0fd34,291827538,0,0x0,8
tick,0x7ff954e0fd34,291842298,0,0x0,8
tick,0x7ff954e0fd34,291857407,0,0x0,8
tick,0x7ff954e0fd34,291872824,0,0x0,8
tick,0x7ff954e0fd34,291888904,0,0x0,8
tick,0x7ff954e0fd34,291904873,0,0x0,8
tick,0x7ff954e0fd34,291919869,0,0x0,8
tick,0x7ff954e0fd34,291934837,0,0x0,8
tick,0x7ff954e0fd34,291949778,0,0x0,8
tick,0x7ff954e0fd34,291965731,0,0x0,8
tick,0x7ff954e0fd34,291980883,0,0x0,8
tick,0x7ff954e0fd34,291995886,0,0x0,8
tick,0x7ff954e0fd34,292010925,0,0x0,8
tick,0x7ff954e0fd34,292025809,0,0x0,8
tick,0x7ff954e0fd34,292042085,0,0x0,8
tick,0x7ff954e0fd34,292057678,0,0x0,8
tick,0x7ff954e0fd34,292073644,0,0x0,8
tick,0x7ff954e0fd34,292089585,0,0x0,8
tick,0x7ff954e0fd34,292105293,0,0x0,8
tick,0x7ff954e0fd34,292121336,0,0x0,8
tick,0x7ff954e0fd34,292137176,0,0x0,8
tick,0x7ff954e0fd34,292153289,0,0x0,8
tick,0x7ff954e0fd34,292169156,0,0x0,8
tick,0x7ff954e0fd34,292185104,0,0x0,8
tick,0x7ff954e0fd34,292201068,0,0x0,8
tick,0x7ff954e0fd34,292217061,0,0x0,8
tick,0x7ff954e0fd34,292232965,0,0x0,8
tick,0x7ff954e0fd34,292248937,0,0x0,8
tick,0x7ff954e0fd34,292264843,0,0x0,8
tick,0x7ff954e0fd34,292280053,0,0x0,8
tick,0x7ff954e0fd34,292295809,0,0x0,8
tick,0x7ff954e0fd34,292311588,0,0x0,8
tick,0x7ff954e0fd34,292326696,0,0x0,8
tick,0x7ff954e0fd34,292342963,0,0x0,8
tick,0x7ff954e0fd34,292365536,0,0x0,8
tick,0x7ff954e0fd34,292374575,0,0x0,8
tick,0x7ff954e0fd34,292392178,0,0x0,8
tick,0x7ff954e0fd34,292413853,0,0x0,8
tick,0x7ff954e0fd34,292422883,0,0x0,8
tick,0x7ff954e0fd34,292440204,0,0x0,8
tick,0x7ff954e0fd34,292467544,0,0x0,8
tick,0x7ff954e0fd34,292473170,0,0x0,8
tick,0x7ff954e0fd34,292494752,0,0x0,8
tick,0x7ff954e0fd34,292500488,0,0x0,8
tick,0x7ff954e0fd34,292513224,0,0x0,8
tick,0x7ff954e0fd34,292530623,0,0x0,8
tick,0x7ff954e0fd34,292543261,0,0x0,8
tick,0x7ff954e0fd34,292558392,0,0x0,8
tick,0x7ff954e0fd34,292574719,0,0x0,8
tick,0x7ff954e0fd34,292589927,0,0x0,8
tick,0x7ff954e0fd34,292605181,0,0x0,8
tick,0x7ff954e0fd34,292623292,0,0x0,8
tick,0x7ff954e0fd34,292644852,0,0x0,8
tick,0x7ff954e0fd34,292655514,0,0x0,8
tick,0x7ff954e0fd34,292673165,0,0x0,8
tick,0x7ff954e0fd34,292684900,0,0x0,8
tick,0x7ff954e0fd34,292698873,0,0x0,8
tick,0x7ff954e0fd34,292713677,0,0x0,8
tick,0x7ff954e0fd34,292730428,0,0x0,8
tick,0x7ff954e0fd34,292747005,0,0x0,8
tick,0x7ff954e0fd34,292760936,0,0x0,8
tick,0x7ff954e0fd34,292779501,0,0x0,8
tick,0x7ff954e0fd34,292791481,0,0x0,8
tick,0x7ff954e0fd34,292810952,0,0x0,8
tick,0x7ff954e0fd34,292821906,0,0x0,8
tick,0x7ff954e0fd34,292839534,0,0x0,8
tick,0x7ff954e0fd34,292853433,0,0x0,8
tick,0x7ff954e0fd34,292872048,0,0x0,8
tick,0x7ff954e0fd34,292884970,0,0x0,8
tick,0x7ff954e0fd34,292902762,0,0x0,8
tick,0x7ff954e0fd34,292923046,0,0x0,8
tick,0x7ff954e0fd34,292933220,0,0x0,8
tick,0x7ff954e0fd34,292949507,0,0x0,8
tick,0x7ff954e0fd34,292964817,0,0x0,8
tick,0x7ff954e0fd34,292980969,0,0x0,8
tick,0x7ff954e0fd34,292995922,0,0x0,8
tick,0x7ff954e0fd34,293010508,0,0x0,8
tick,0x7ff954e0fd34,293024831,0,0x0,8
tick,0x7ff954e0fd34,293039708,0,0x0,8
tick,0x7ff954e0fd34,293055821,0,0x0,8
tick,0x7ff954e0fd34,293071584,0,0x0,8
tick,0x7ff954e0fd34,293087531,0,0x0,8
tick,0x7ff954e0fd34,293103438,0,0x0,8
tick,0x7ff954e0fd34,293120403,0,0x0,8
tick,0x7ff954e0fd34,293134574,0,0x0,8
tick,0x7ff954e0fd34,293149415,0,0x0,8
tick,0x7ff954e0fd34,293164696,0,0x0,8
tick,0x7ff954e0fd34,293180159,0,0x0,8
tick,0x7ff954e0fd34,293199951,0,0x0,8
tick,0x7ff954e0fd34,293211359,0,0x0,8
tick,0x7ff954e0fd34,293227251,0,0x0,8
tick,0x7ff954e0fd34,293246190,0,0x0,8
tick,0x7ff954e0fd34,293259043,0,0x0,8
tick,0x7ff954e0fd34,293274891,0,0x0,8
tick,0x7ff954e0fd34,293291136,0,0x0,8
tick,0x7ff954e0fd34,293306788,0,0x0,8
tick,0x7ff954e0fd34,293322746,0,0x0,8
tick,0x7ff954e0fd34,293338646,0,0x0,8
tick,0x7ff954e0fd34,293354636,0,0x0,8
tick,0x7ff954e0fd34,293370634,0,0x0,8
tick,0x7ff954e0fd34,293385773,0,0x0,8
tick,0x7ff954e0fd34,293400648,0,0x0,8
tick,0x7ff954e0fd34,293415652,0,0x0,8
tick,0x7ff954e0fd34,293431431,0,0x0,8
tick,0x7ff954e0fd34,293446428,0,0x0,8
tick,0x7ff954e0fd34,293462462,0,0x0,8
tick,0x7ff954e0fd34,293478399,0,0x0,8
tick,0x7ff954e0fd34,293494471,0,0x0,8
tick,0x7ff954e0fd34,293509202,0,0x0,8
tick,0x7ff954e0fd34,293524192,0,0x0,8
tick,0x7ff954e0fd34,293539130,0,0x0,8
tick,0x7ff954e0fd34,293554242,0,0x0,8
tick,0x7ff954e0fd34,293570036,0,0x0,8
tick,0x7ff954e0fd34,293586002,0,0x0,8
tick,0x7ff954e0fd34,293602012,0,0x0,8
tick,0x7ff954e0fd34,293617905,0,0x0,8
tick,0x7ff954e0fd34,293633854,0,0x0,8
tick,0x7ff954e0fd34,293649869,0,0x0,8
tick,0x7ff954e0fd34,293665792,0,0x0,8
tick,0x7ff954e0fd34,293681744,0,0x0,8
tick,0x7ff954e0fd34,293697719,0,0x0,8
tick,0x7ff954e0fd34,293713658,0,0x0,8
tick,0x7ff954e0fd34,293728645,0,0x0,8
tick,0x7ff954e0fd34,293743552,0,0x0,8
tick,0x7ff954e0fd34,293758545,0,0x0,8
tick,0x7ff954e0fd34,293773503,0,0x0,8
tick,0x7ff954e0fd34,293788462,0,0x0,8
tick,0x7ff954e0fd34,293803425,0,0x0,8
tick,0x7ff954e0fd34,293818408,0,0x0,8
tick,0x7ff954e0fd34,293834321,0,0x0,8
tick,0x7ff954e0fd34,293849312,0,0x0,8
tick,0x7ff954e0fd34,293865248,0,0x0,8
tick,0x7ff954e0fd34,293880214,0,0x0,8
tick,0x7ff954e0fd34,293896168,0,0x0,8
tick,0x7ff954e0fd34,293912128,0,0x0,8
tick,0x7ff954e0fd34,293927094,0,0x0,8
tick,0x7ff954e0fd34,293943087,0,0x0,8
tick,0x7ff954e0fd34,293958000,0,0x0,8
tick,0x7ff954e0fd34,293973974,0,0x0,8
tick,0x7ff954e0fd34,293988915,0,0x0,8
tick,0x7ff954e0fd34,294003862,0,0x0,8
tick,0x7ff954e0fd34,294019824,0,0x0,8
tick,0x7ff954e0fd34,294035806,0,0x0,8
tick,0x7ff954e0fd34,294051754,0,0x0,8
tick,0x7ff954e0fd34,294067751,0,0x0,8
tick,0x7ff954e0fd34,294083605,0,0x0,8
tick,0x7ff954e0fd34,294099533,0,0x0,8
tick,0x7ff954e0fd34,294115496,0,0x0,8
tick,0x7ff954e0fd34,294131459,0,0x0,8
tick,0x7ff954e0fd34,294147366,0,0x0,8
tick,0x7ff954e0fd34,294162834,0,0x0,8
tick,0x7ff954e0fd34,294177474,0,0x0,8
tick,0x7ff954e0fd34,294192434,0,0x0,8
tick,0x7ff954e0fd34,294208395,0,0x0,8
tick,0x7ff954e0fd34,294224464,0,0x0,8
tick,0x7ff954e0fd34,294240426,0,0x0,8
tick,0x7ff954e0fd34,294255932,0,0x0,8
tick,0x7ff954e0fd34,294271942,0,0x0,8
tick,0x7ff954e0fd34,294287869,0,0x0,8
tick,0x7ff954e0fd34,294303813,0,0x0,8
tick,0x7ff954e0fd34,294319836,0,0x0,8
tick,0x7ff954e0fd34,294335775,0,0x0,8
tick,0x7ff954e0fd34,294351837,0,0x0,8
tick,0x7ff954e0fd34,294366653,0,0x0,8
tick,0x7ff954e0fd34,294381629,0,0x0,8
tick,0x7ff954e0fd34,294397184,0,0x0,8
tick,0x7ff954e0fd34,294413066,0,0x0,8
tick,0x7ff954e0fd34,294427946,0,0x0,8
tick,0x7ff954e0fd34,294442687,0,0x0,8
tick,0x7ff954e0fd34,294458944,0,0x0,8
tick,0x7ff954e0fd34,294474609,0,0x0,8
tick,0x7ff954e0fd34,294490108,0,0x0,8
tick,0x7ff954e0fd34,294505888,0,0x0,8
tick,0x7ff954e0fd34,294521652,0,0x0,8
tick,0x7ff954e0fd34,294537420,0,0x0,8
tick,0x7ff954e0fd34,294552330,0,0x0,8
tick,0x7ff954e0fd34,294567304,0,0x0,8
tick,0x7ff954e0fd34,294583240,0,0x0,8
tick,0x7ff954e0fd34,294598234,0,0x0,8
tick,0x7ff954e0fd34,294613161,0,0x0,8
tick,0x7ff954e0fd34,294628691,0,0x0,8
tick,0x7ff954e0fd34,294643649,0,0x0,8
tick,0x7ff954e0fd34,294659708,0,0x0,8
tick,0x7ff954e0fd34,294675660,0,0x0,8
tick,0x7ff954e0fd34,294691646,0,0x0,8
tick,0x7ff954e0fd34,294707558,0,0x0,8
tick,0x7ff954e0fd34,294723505,0,0x0,8
tick,0x7ff954e0fd34,294739471,0,0x0,8
tick,0x7ff954e0fd34,294755426,0,0x0,8
tick,0x7ff954e0fd34,294770380,0,0x0,8
tick,0x7ff954e0fd34,294785320,0,0x0,8
tick,0x7ff954e0fd34,294800314,0,0x0,8
tick,0x7ff954e0fd34,294816252,0,0x0,8
tick,0x7ff954e0fd34,294831804,0,0x0,8
tick,0x7ff954e0fd34,294847849,0,0x0,8
tick,0x7ff954e0fd34,294862718,0,0x0,8
tick,0x7ff954e0fd34,294877685,0,0x0,8
tick,0x7ff954e0fd34,294893632,0,0x0,8
tick,0x7ff954e0fd34,294909621,0,0x0,8
tick,0x7ff954e0fd34,294925537,0,0x0,8
tick,0x7ff954e0fd34,294941539,0,0x0,8
tick,0x7ff954e0fd34,294957459,0,0x0,8
tick,0x7ff954e0fd34,294973409,0,0x0,8
tick,0x7ff954e0fd34,294989240,0,0x0,8
tick,0x7ff954e0fd34,295004251,0,0x0,8
tick,0x7ff954e0fd34,295019408,0,0x0,8
tick,0x7ff954e0fd34,295035353,0,0x0,8
tick,0x7ff954e0fd34,295051303,0,0x0,8
tick,0x7ff954e0fd34,295066280,0,0x0,8
tick,0x7ff954e0fd34,295082246,0,0x0,8
tick,0x7ff954e0fd34,295097175,0,0x0,8
tick,0x7ff954e0fd34,295112486,0,0x0,8
tick,0x7ff954e0fd34,295128162,0,0x0,8
tick,0x7ff954e0fd34,295143335,0,0x0,8
tick,0x7ff954e0fd34,295159317,0,0x0,8
tick,0x7ff954e0fd34,295175320,0,0x0,8
tick,0x7ff954e0fd34,295191267,0,0x0,8
tick,0x7ff954e0fd34,295206773,0,0x0,8
tick,0x7ff954e0fd34,295222363,0,0x0,8
tick,0x7ff954e0fd34,295238320,0,0x0,8
tick,0x7ff954e0fd34,295254289,0,0x0,8
tick,0x7ff954e0fd34,295270220,0,0x0,8
tick,0x7ff954e0fd34,295286174,0,0x0,8
tick,0x7ff954e0fd34,295301123,0,0x0,8
tick,0x7ff954e0fd34,295316092,0,0x0,8
tick,0x7ff954e0fd34,295332047,0,0x0,8
tick,0x7ff954e0fd34,295347045,0,0x0,8
tick,0x7ff954e0fd34,295361954,0,0x0,8
tick,0x7ff954e0fd34,295377007,0,0x0,8
tick,0x7ff954e0fd34,295392886,0,0x0,8
tick,0x7ff954e0fd34,295407834,0,0x0,8
tick,0x7ff954e0fd34,295423810,0,0x0,8
tick,0x7ff954e0fd34,295438783,0,0x0,8
tick,0x7ff954e0fd34,295453907,0,0x0,8
tick,0x7ff954e0fd34,295468816,0,0x0,8
tick,0x7ff954e0fd34,295483647,0,0x0,8
tick,0x7ff954e0fd34,295498620,0,0x0,8
tick,0x7ff954e0fd34,295514572,0,0x0,8
tick,0x7ff954e0fd34,295530569,0,0x0,8
tick,0x7ff954e0fd34,295546531,0,0x0,8
tick,0x7ff954e0fd34,295561462,0,0x0,8
tick,0x7ff954e0fd34,295576395,0,0x0,8
tick,0x7ff954e0fd34,295591365,0,0x0,8
tick,0x7ff954e0fd34,295607324,0,0x0,8
tick,0x7ff954e0fd34,295622272,0,0x0,8
tick,0x7ff954e0fd34,295638246,0,0x0,8
tick,0x7ff954e0fd34,295654193,0,0x0,8
tick,0x7ff954e0fd34,295670258,0,0x0,8
tick,0x7ff954e0fd34,295686239,0,0x0,8
tick,0x7ff954e0fd34,295702166,0,0x0,8
tick,0x7ff954e0fd34,295718115,0,0x0,8
tick,0x7ff954e0fd34,295733051,0,0x0,8
tick,0x7ff954e0fd34,295748787,0,0x0,8
tick,0x7ff954e0fd34,295764765,0,0x0,8
tick,0x7ff954e0fd34,295780453,0,0x0,8
tick,0x7ff954e0fd34,295795991,0,0x0,8
tick,0x7ff954e0fd34,295810875,0,0x0,8
tick,0x7ff954e0fd34,295826839,0,0x0,8
tick,0x7ff954e0fd34,295841827,0,0x0,8
tick,0x7ff954e0fd34,295856750,0,0x0,8
tick,0x7ff954e0fd34,295872719,0,0x0,8
tick,0x7ff954e0fd34,295888696,0,0x0,8
tick,0x7ff954e0fd34,295903877,0,0x0,8
tick,0x7ff954e0fd34,295918825,0,0x0,8
tick,0x7ff954e0fd34,295934787,0,0x0,8
tick,0x7ff954e0fd34,295950734,0,0x0,8
tick,0x7ff954e0fd34,295966678,0,0x0,8
tick,0x7ff954e0fd34,295982631,0,0x0,8
tick,0x7ff954e0fd34,295997611,0,0x0,8
tick,0x7ff954e0fd34,296013582,0,0x0,8
tick,0x7ff954e0fd34,296029561,0,0x0,8
tick,0x7ff954e0fd34,296045512,0,0x0,8
tick,0x7ff954e0fd34,296061483,0,0x0,8
tick,0x7ff954e0fd34,296077427,0,0x0,8
tick,0x7ff954e0fd34,296093386,0,0x0,8
tick,0x7ff954e0fd34,296108310,0,0x0,8
tick,0x7ff954e0fd34,296123276,0,0x0,8
tick,0x7ff954e0fd34,296138241,0,0x0,8
tick,0x7ff954e0fd34,296154192,0,0x0,8
tick,0x7ff954e0fd34,296169156,0,0x0,8
tick,0x7ff954e0fd34,296185020,0,0x0,8
tick,0x7ff954e0fd34,296199995,0,0x0,8
tick,0x7ff954e0fd34,296215969,0,0x0,8
tick,0x7ff954e0fd34,296231922,0,0x0,8
tick,0x7ff954e0fd34,296247833,0,0x0,8
tick,0x7ff954e0fd34,296263801,0,0x0,8
tick,0x7ff954e0fd34,296279767,0,0x0,8
tick,0x7ff954e0fd34,296295728,0,0x0,8
tick,0x7ff954e0fd34,296310680,0,0x0,8
tick,0x7ff954e0fd34,296325648,0,0x0,8
tick,0x7ff954e0fd34,296340624,0,0x0,8
tick,0x7ff954e0fd34,296356556,0,0x0,8
tick,0x7ff954e0fd34,296371546,0,0x0,8
tick,0x7ff954e0fd34,296387511,0,0x0,8
tick,0x7ff954e0fd34,296402532,0,0x0,8
tick,0x7ff954e0fd34,296417495,0,0x0,8
tick,0x7ff954e0fd34,296433442,0,0x0,8
tick,0x7ff954e0fd34,296449444,0,0x0,8
tick,0x7ff954e0fd34,296465575,0,0x0,8
tick,0x7ff954e0fd34,296480567,0,0x0,8
tick,0x7ff954e0fd34,296495499,0,0x0,8
tick,0x7ff954e0fd34,296510498,0,0x0,8
tick,0x7ff954e0fd34,296526458,0,0x0,8
tick,0x7ff954e0fd34,296541413,0,0x0,8
tick,0x7ff954e0fd34,296557380,0,0x0,8
tick,0x7ff954e0fd34,296573294,0,0x0,8
tick,0x7ff954e0fd34,296589306,0,0x0,8
tick,0x7ff954e0fd34,296605279,0,0x0,8
tick,0x7ff954e0fd34,296621192,0,0x0,8
tick,0x7ff954e0fd34,296636766,0,0x0,8
tick,0x7ff954e0fd34,296652762,0,0x0,8
tick,0x7ff954e0fd34,296668659,0,0x0,8
tick,0x7ff954e0fd34,296683934,0,0x0,8
tick,0x7ff954e0fd34,296699348,0,0x0,8
tick,0x7ff954e0fd34,296715150,0,0x0,8
tick,0x7ff954e0fd34,296730330,0,0x0,8
tick,0x7ff954e0fd34,296746333,0,0x0,8
tick,0x7ff954e0fd34,296761259,0,0x0,8
tick,0x7ff954e0fd34,296777226,0,0x0,8
tick,0x7ff954e0fd34,296793173,0,0x0,8
tick,0x7ff954e0fd34,296808102,0,0x0,8
tick,0x7ff954e0fd34,296824366,0,0x0,8
tick,0x7ff954e0fd34,296839219,0,0x0,8
tick,0x7ff954e0fd34,296855002,0,0x0,8
tick,0x7ff954e0fd34,296869995,0,0x0,8
tick,0x7ff954e0fd34,296884998,0,0x0,8
tick,0x7ff954e0fd34,296900910,0,0x0,8
tick,0x7ff954e0fd34,296916729,0,0x0,8
tick,0x7ff954e0fd34,296931466,0,0x0,8
tick,0x7ff954e0fd34,296947370,0,0x0,8
tick,0x7ff954e0fd34,296962273,0,0x0,8
tick,0x7ff954e0fd34,296978275,0,0x0,8
tick,0x7ff954e0fd34,296994155,0,0x0,8
tick,0x7ff954e0fd34,297010140,0,0x0,8
tick,0x7ff954e0fd34,297024849,0,0x0,8
tick,0x7ff954e0fd34,297039836,0,0x0,8
tick,0x7ff954e0fd34,297055702,0,0x0,8
tick,0x7ff954e0fd34,297071653,0,0x0,8
tick,0x7ff954e0fd34,297087577,0,0x0,8
tick,0x7ff954e0fd34,297103553,0,0x0,8
tick,0x7ff954e0fd34,297119499,0,0x0,8
tick,0x7ff954e0fd34,297134641,0,0x0,8
tick,0x7ff954e0fd34,297149453,0,0x0,8
tick,0x7ff954e0fd34,297164399,0,0x0,8
tick,0x7ff954e0fd34,297180349,0,0x0,8
tick,0x7ff954e0fd34,297195932,0,0x0,8
tick,0x7ff954e0fd34,297211355,0,0x0,8
tick,0x7ff954e0fd34,297227306,0,0x0,8
tick,0x7ff954e0fd34,297243439,0,0x0,8
tick,0x7ff954e0fd34,297258871,0,0x0,8
tick,0x7ff954e0fd34,297274791,0,0x0,8
tick,0x7ff954e0fd34,297289768,0,0x0,8
tick,0x7ff954e0fd34,297305229,0,0x0,8
tick,0x7ff954e0fd34,297321128,0,0x0,8
tick,0x7ff954e0fd34,297336294,0,0x0,8
tick,0x7ff954e0fd34,297351489,0,0x0,8
tick,0x7ff954e0fd34,297367421,0,0x0,8
tick,0x7ff954e0fd34,297383404,0,0x0,8
tick,0x7ff954e0fd34,297398434,0,0x0,8
tick,0x7ff954e0fd34,297413335,0,0x0,8
tick,0x7ff954e0fd34,297428341,0,0x0,8
tick,0x7ff954e0fd34,297444237,0,0x0,8
tick,0x7ff954e0fd34,297460509,0,0x0,8
tick,0x7ff954e0fd34,297475140,0,0x0,8
tick,0x7ff954e0fd34,297492202,0,0x0,8
tick,0x7ff954e0fd34,297506074,0,0x0,8
tick,0x7ff954e0fd34,297521881,0,0x0,8
tick,0x7ff954e0fd34,297536597,0,0x0,8
tick,0x7ff954e0fd34,297552535,0,0x0,8
tick,0x7ff954e0fd34,297567428,0,0x0,8
tick,0x7ff954e0fd34,297583550,0,0x0,8
tick,0x7ff954e0fd34,297598639,0,0x0,8
tick,0x7ff954e0fd34,297614476,0,0x0,8
tick,0x7ff954e0fd34,297629823,0,0x0,8
tick,0x7ff954e0fd34,297645771,0,0x0,8
tick,0x7ff954e0fd34,297660703,0,0x0,8
tick,0x7ff954e0fd34,297675848,0,0x0,8
tick,0x7ff954e0fd34,297691642,0,0x0,8
tick,0x7ff954e0fd34,297706699,0,0x0,8
tick,0x7ff954e0fd34,297721593,0,0x0,8
tick,0x7ff954e0fd34,297737030,0,0x0,8
tick,0x7ff954e0fd34,297752998,0,0x0,8
tick,0x7ff954e0fd34,297768915,0,0x0,8
tick,0x7ff954e0fd34,297784864,0,0x0,8
tick,0x7ff954e0fd34,297799837,0,0x0,8
tick,0x7ff954e0fd34,297814813,0,0x0,8
tick,0x7ff954e0fd34,297830746,0,0x0,8
tick,0x7ff954e0fd34,297846722,0,0x0,8
tick,0x7ff954e0fd34,297862685,0,0x0,8
tick,0x7ff954e0fd34,297877625,0,0x0,8
tick,0x7ff954e0fd34,297893588,0,0x0,8
tick,0x7ff954e0fd34,297908610,0,0x0,8
tick,0x7ff954e0fd34,297923502,0,0x0,8
tick,0x7ff954e0fd34,297938765,0,0x0,8
tick,0x7ff954e0fd34,297953536,0,0x0,8
tick,0x7ff954e0fd34,297969473,0,0x0,8
tick,0x7ff954e0fd34,297985435,0,0x0,8
tick,0x7ff954e0fd34,298001404,0,0x0,8
tick,0x7ff954e0fd34,298017336,0,0x0,8
tick,0x7ff954e0fd34,298033293,0,0x0,8
tick,0x7ff954e0fd34,298049255,0,0x0,8
tick,0x7ff954e0fd34,298065488,0,0x0,8
tick,0x7ff954e0fd34,298080162,0,0x0,8
tick,0x7ff954e0fd34,298095831,0,0x0,8
tick,0x7ff954e0fd34,298111792,0,0x0,8
tick,0x7ff954e0fd34,298126776,0,0x0,8
tick,0x7ff954e0fd34,298142007,0,0x0,8
tick,0x7ff954e0fd34,298157975,0,0x0,8
tick,0x7ff954e0fd34,298173987,0,0x0,8
tick,0x7ff954e0fd34,298189882,0,0x0,8
tick,0x7ff954e0fd34,298205825,0,0x0,8
tick,0x7ff954e0fd34,298221932,0,0x0,8
tick,0x7ff954e0fd34,298237815,0,0x0,8
tick,0x7ff954e0fd34,298252583,0,0x0,8
tick,0x7ff954e0fd34,298268522,0,0x0,8
tick,0x7ff954e0fd34,298284481,0,0x0,8
tick,0x7ff954e0fd34,298299513,0,0x0,8
tick,0x7ff954e0fd34,298315246,0,0x0,8
tick,0x7ff954e0fd34,298331199,0,0x0,8
tick,0x7ff954e0fd34,298346500,0,0x0,8
tick,0x7ff954e0fd34,298362465,0,0x0,8
tick,0x7ff954e0fd34,298378441,0,0x0,8
tick,0x7ff954e0fd34,298394080,0,0x0,8
tick,0x7ff954e0fd34,298410024,0,0x0,8
tick,0x7ff954e0fd34,298425812,0,0x0,8
tick,0x7ff954e0fd34,298441708,0,0x0,8
tick,0x7ff954e0fd34,298457635,0,0x0,8
tick,0x7ff954e0fd34,298472867,0,0x0,8
tick,0x7ff954e0fd34,298488893,0,0x0,8
tick,0x7ff954e0fd34,298503833,0,0x0,8
tick,0x7ff954e0fd34,298518807,0,0x0,8
tick,0x7ff954e0fd34,298533711,0,0x0,8
tick,0x7ff954e0fd34,298548680,0,0x0,8
tick,0x7ff954e0fd34,298563626,0,0x0,8
tick,0x7ff954e0fd34,298579589,0,0x0,8
tick,0x7ff954e0fd34,298594564,0,0x0,8
tick,0x7ff954e0fd34,298609541,0,0x0,8
tick,0x7ff954e0fd34,298624503,0,0x0,8
tick,0x7ff954e0fd34,298640429,0,0x0,8
tick,0x7ff954e0fd34,298655459,0,0x0,8
tick,0x7ff954e0fd34,298671446,0,0x0,8
tick,0x7ff954e0fd34,298686930,0,0x0,8
tick,0x7ff954e0fd34,298702234,0,0x0,8
tick,0x7ff954e0fd34,298717345,0,0x0,8
tick,0x7ff954e0fd34,298732270,0,0x0,8
tick,0x7ff954e0fd34,298747424,0,0x0,8
tick,0x7ff954e0fd34,298762328,0,0x0,8
tick,0x7ff954e0fd34,298777802,0,0x0,8
tick,0x7ff954e0fd34,298793763,0,0x0,8
tick,0x7ff954e0fd34,298809871,0,0x0,8
tick,0x7ff954e0fd34,298824767,0,0x0,8
tick,0x7ff954e0fd34,298840752,0,0x0,8
tick,0x7ff954e0fd34,298855674,0,0x0,8
tick,0x7ff954e0fd34,298871374,0,0x0,8
tick,0x7ff954e0fd34,298887349,0,0x0,8
tick,0x7ff954e0fd34,298903286,0,0x0,8
tick,0x7ff954e0fd34,298919169,0,0x0,8
tick,0x7ff954e0fd34,298935127,0,0x0,8
tick,0x7ff954e0fd34,298951128,0,0x0,8
tick,0x7ff954e0fd34,298966292,0,0x0,8
tick,0x7ff954e0fd34,298981832,0,0x0,8
tick,0x7ff954e0fd34,298997893,0,0x0,8
tick,0x7ff954e0fd34,299013916,0,0x0,8
tick,0x7ff954e0fd34,299029488,0,0x0,8
tick,0x7ff954e0fd34,299045088,0,0x0,8
tick,0x7ff954e0fd34,299061012,0,0x0,8
tick,0x7ff954e0fd34,299076151,0,0x0,8
tick,0x7ff954e0fd34,299092172,0,0x0,8
tick,0x7ff954e0fd34,299107348,0,0x0,8
tick,0x7ff954e0fd34,299123316,0,0x0,8
tick,0x7ff954e0fd34,299139243,0,0x0,8
tick,0x7ff954e0fd34,299154171,0,0x0,8
tick,0x7ff954e0fd34,299169676,0,0x0,8
tick,0x7ff954e0fd34,299184550,0,0x0,8
tick,0x7ff954e0fd34,299200503,0,0x0,8
tick,0x7ff954e0fd34,299216522,0,0x0,8
tick,0x7ff954e0fd34,299232494,0,0x0,8
tick,0x7ff954e0fd34,299248429,0,0x0,8
tick,0x7ff954e0fd34,299263717,0,0x0,8
tick,0x7ff954e0fd34,299279478,0,0x0,8
tick,0x7ff954e0fd34,299295034,0,0x0,8
tick,0x7ff954e0fd34,299310976,0,0x0,8
tick,0x7ff954e0fd34,299326508,0,0x0,8
tick,0x7ff954e0fd34,299341450,0,0x0,8
tick,0x7ff954e0fd34,299356444,0,0x0,8
tick,0x7ff954e0fd34,299371406,0,0x0,8
tick,0x7ff954e0fd34,299387053,0,0x0,8
tick,0x7ff954e0fd34,299401998,0,0x0,8
tick,0x7ff954e0fd34,299417332,0,0x0,8
tick,0x7ff954e0fd34,299432279,0,0x0,8
tick,0x7ff954e0fd34,299448225,0,0x0,8
tick,0x7ff954e0fd34,299463174,0,0x0,8
tick,0x7ff954e0fd34,299479146,0,0x0,8
tick,0x7ff954e0fd34,299495128,0,0x0,8
tick,0x7ff954e0fd34,299511049,0,0x0,8
tick,0x7ff954e0fd34,299527119,0,0x0,8
tick,0x7ff954e0fd34,299542284,0,0x0,8
tick,0x7ff954e0fd34,299558205,0,0x0,8
tick,0x7ff954e0fd34,299573218,0,0x0,8
tick,0x7ff954e0fd34,299589270,0,0x0,8
tick,0x7ff954e0fd34,299604092,0,0x0,8
tick,0x7ff954e0fd34,299619043,0,0x0,8
tick,0x7ff954e0fd34,299635037,0,0x0,8
tick,0x7ff954e0fd34,299650626,0,0x0,8
tick,0x7ff954e0fd34,299665566,0,0x0,8
tick,0x7ff954e0fd34,299680550,0,0x0,8
tick,0x7ff954e0fd34,299696506,0,0x0,8
tick,0x7ff954e0fd34,299712460,0,0x0,8
tick,0x7ff954e0fd34,299727792,0,0x0,8
tick,0x7ff954e0fd34,299742556,0,0x0,8
tick,0x7ff954e0fd34,299758006,0,0x0,8
tick,0x7ff954e0fd34,299773943,0,0x0,8
tick,0x7ff954e0fd34,299789894,0,0x0,8
tick,0x7ff954e0fd34,299805893,0,0x0,8
tick,0x7ff954e0fd34,299821855,0,0x0,8
tick,0x7ff954e0fd34,299837767,0,0x0,8
tick,0x7ff954e0fd34,299853085,0,0x0,8
tick,0x7ff954e0fd34,299868245,0,0x0,8
tick,0x7ff954e0fd34,299884136,0,0x0,8
tick,0x7ff954e0fd34,299900092,0,0x0,8
tick,0x7ff954e0fd34,299916128,0,0x0,8
tick,0x7ff954e0fd34,299932014,0,0x0,8
tick,0x7ff954e0fd34,299947978,0,0x0,8
tick,0x7ff954e0fd34,299964044,0,0x0,8
tick,0x7ff954e0fd34,299979893,0,0x0,8
tick,0x7ff954e0fd34,299995857,0,0x0,8
tick,0x7ff954e0fd34,300011797,0,0x0,8
tick,0x7ff954e0fd34,300027766,0,0x0,8
tick,0x7ff954e0fd34,300043354,0,0x0,8
tick,0x7ff954e0fd34,300059008,0,0x0,8
tick,0x7ff954e0fd34,300075133,0,0x0,8
tick,0x7ff954e0fd34,300090927,0,0x0,8
tick,0x7ff954e0fd34,300106878,0,0x0,8
tick,0x7ff954e0fd34,300122626,0,0x0,8
tick,0x7ff954e0fd34,300138606,0,0x0,8
tick,0x7ff954e0fd34,300154474,0,0x0,8
tick,0x7ff954e0fd34,300170410,0,0x0,8
tick,0x7ff954e0fd34,300185924,0,0x0,8
tick,0x7ff954e0fd34,300201921,0,0x0,8
tick,0x7ff954e0fd34,300217907,0,0x0,8
tick,0x7ff954e0fd34,300233761,0,0x0,8
tick,0x7ff954e0fd34,300249604,0,0x0,8
tick,0x7ff954e0fd34,300265566,0,0x0,8
tick,0x7ff954e0fd34,300281484,0,0x0,8
tick,0x7ff954e0fd34,300297458,0,0x0,8
tick,0x7ff954e0fd34,300312938,0,0x0,8
tick,0x7ff954e0fd34,300328951,0,0x0,8
tick,0x7ff954e0fd34,300344021,0,0x0,8
tick,0x7ff954e0fd34,300359796,0,0x0,8
tick,0x7ff954e0fd34,300375259,0,0x0,8
tick,0x7ff954e0fd34,300391267,0,0x0,8
tick,0x7ff954e0fd34,300407129,0,0x0,8
tick,0x7ff954e0fd34,300422584,0,0x0,8
tick,0x7ff954e0fd34,300438358,0,0x0,8
tick,0x7ff954e0fd34,300453303,0,0x0,8
tick,0x7ff954e0fd34,300468587,0,0x0,8
tick,0x7ff954e0fd34,300484556,0,0x0,8
tick,0x7ff954e0fd34,300499513,0,0x0,8
tick,0x7ff954e0fd34,300515607,0,0x0,8
tick,0x7ff954e0fd34,300531550,0,0x0,8
tick,0x7ff954e0fd34,300546504,0,0x0,8
tick,0x7ff954e0fd34,300562482,0,0x0,8
tick,0x7ff954e0fd34,300577423,0,0x0,8
tick,0x7ff954e0fd34,300593393,0,0x0,8
tick,0x7ff954e0fd34,300609346,0,0x0,8
tick,0x7ff954e0fd34,300625348,0,0x0,8
tick,0x7ff954e0fd34,300641276,0,0x0,8
tick,0x7ff954e0fd34,300657227,0,0x0,8
tick,0x7ff954e0fd34,300673190,0,0x0,8
tick,0x7ff954e0fd34,300689155,0,0x0,8
tick,0x7ff954e0fd34,300705112,0,0x0,8
tick,0x7ff954e0fd34,300721087,0,0x0,8
tick,0x7ff954e0fd34,300737073,0,0x0,8
tick,0x7ff954e0fd34,300753078,0,0x0,8
tick,0x7ff954e0fd34,300768904,0,0x0,8
tick,0x7ff954e0fd34,300784933,0,0x0,8
tick,0x7ff954e0fd34,300800364,0,0x0,8
tick,0x7ff954e0fd34,300815822,0,0x0,8
tick,0x7ff954e0fd34,300831761,0,0x0,8
tick,0x7ff954e0fd34,300847101,0,0x0,8
tick,0x7ff954e0fd34,300863188,0,0x0,8
tick,0x7ff954e0fd34,300878243,0,0x0,8
tick,0x7ff954e0fd34,300893588,0,0x0,8
tick,0x7ff954e0fd34,300908255,0,0x0,8
tick,0x7ff954e0fd34,300924202,0,0x0,8
tick,0x7ff954e0fd34,300940190,0,0x0,8
tick,0x7ff954e0fd34,300956148,0,0x0,8
tick,0x7ff954e0fd34,300971431,0,0x0,8
tick,0x7ff954e0fd34,300986356,0,0x0,8
tick,0x7ff954e0fd34,301001911,0,0x0,8
tick,0x7ff954e0fd34,301017115,0,0x0,8
tick,0x7ff954e0fd34,301033097,0,0x0,8
tick,0x7ff954e0fd34,301049039,0,0x0,8
tick,0x7ff954e0fd34,301064439,0,0x0,8
tick,0x7ff954e0fd34,301080341,0,0x0,8
tick,0x7ff954e0fd34,301095286,0,0x0,8
tick,0x7ff954e0fd34,301111257,0,0x0,8
tick,0x7ff954e0fd34,301127299,0,0x0,8
tick,0x7ff954e0fd34,301143347,0,0x0,8
tick,0x7ff954e0fd34,301158741,0,0x0,8
tick,0x7ff954e0fd34,301174018,0,0x0,8
tick,0x7ff954e0fd34,301189952,0,0x0,8
tick,0x7ff954e0fd34,301205894,0,0x0,8
tick,0x7ff954e0fd34,301221736,0,0x0,8
tick,0x7ff954e0fd34,301236859,0,0x0,8
tick,0x7ff954e0fd34,301252869,0,0x0,8
tick,0x7ff954e0fd34,301267768,0,0x0,8
tick,0x7ff954e0fd34,301283748,0,0x0,8
tick,0x7ff954e0fd34,301299842,0,0x0,8
tick,0x7ff954e0fd34,301315766,0,0x0,8
tick,0x7ff954e0fd34,301331546,0,0x0,8
tick,0x7ff954e0fd34,301347149,0,0x0,8
tick,0x7ff954e0fd34,301363137,0,0x0,8
tick,0x7ff954e0fd34,301379236,0,0x0,8
tick,0x7ff954e0fd34,301395025,0,0x0,8
tick,0x7ff954e0fd34,301410331,0,0x0,8
tick,0x7ff954e0fd34,301426291,0,0x0,8
tick,0x7ff954e0fd34,301441265,0,0x0,8
tick,0x7ff954e0fd34,301456759,0,0x0,8
tick,0x7ff954e0fd34,301472741,0,0x0,8
tick,0x7ff954e0fd34,301488558,0,0x0,8
tick,0x7ff954e0fd34,301504490,0,0x0,8
tick,0x7ff954e0fd34,301519444,0,0x0,8
tick,0x7ff954e0fd34,301534175,0,0x0,8
tick,0x7ff954e0fd34,301549408,0,0x0,8
tick,0x7ff954e0fd34,301564294,0,0x0,8
tick,0x7ff954e0fd34,301580231,0,0x0,8
tick,0x7ff954e0fd34,301595445,0,0x0,8
tick,0x7ff954e0fd34,301611041,0,0x0,8
tick,0x7ff954e0fd34,301627155,0,0x0,8
tick,0x7ff954e0fd34,301643068,0,0x0,8
tick,0x7ff954e0fd34,301658544,0,0x0,8
tick,0x7ff954e0fd34,301674549,0,0x0,8
tick,0x7ff954e0fd34,301689978,0,0x0,8
tick,0x7ff954e0fd34,301705865,0,0x0,8
tick,0x7ff954e0fd34,301721828,0,0x0,8
tick,0x7ff954e0fd34,301737792,0,0x0,8
tick,0x7ff954e0fd34,301752746,0,0x0,8
tick,0x7ff954e0fd34,301767741,0,0x0,8
tick,0x7ff954e0fd34,301783558,0,0x0,8
tick,0x7ff954e0fd34,301798546,0,0x0,8
tick,0x7ff954e0fd34,301814480,0,0x0,8
tick,0x7ff954e0fd34,301830447,0,0x0,8
tick,0x7ff954e0fd34,301846399,0,0x0,8
tick,0x7ff954e0fd34,301861356,0,0x0,8
tick,0x7ff954e0fd34,301877346,0,0x0,8
tick,0x7ff954e0fd34,301893127,0,0x0,8
tick,0x7ff954e0fd34,301908933,0,0x0,8
tick,0x7ff954e0fd34,301924918,0,0x0,8
tick,0x7ff954e0fd34,301940170,0,0x0,8
tick,0x7ff954e0fd34,301955478,0,0x0,8
tick,0x7ff954e0fd34,301971460,0,0x0,8
tick,0x7ff954e0fd34,301987431,0,0x0,8
tick,0x7ff954e0fd34,302003186,0,0x0,8
tick,0x7ff954e0fd34,302019142,0,0x0,8
tick,0x7ff954e0fd34,302034074,0,0x0,8
tick,0x7ff954e0fd34,302049068,0,0x0,8
tick,0x7ff954e0fd34,302064009,0,0x0,8
tick,0x7ff954e0fd34,302079264,0,0x0,8
tick,0x7ff954e0fd34,302094954,0,0x0,8
tick,0x7ff954e0fd34,302109934,0,0x0,8
tick,0x7ff954e0fd34,302126101,0,0x0,8
tick,0x7ff954e0fd34,302140808,0,0x0,8
tick,0x7ff954e0fd34,302156775,0,0x0,8
tick,0x7ff954e0fd34,302172716,0,0x0,8
tick,0x7ff954e0fd34,302188684,0,0x0,8
tick,0x7ff954e0fd34,302204651,0,0x0,8
tick,0x7ff954e0fd34,302220630,0,0x0,8
tick,0x7ff954e0fd34,302235563,0,0x0,8
tick,0x7ff954e0fd34,302251124,0,0x0,8
tick,0x7ff954e0fd34,302266982,0,0x0,8
tick,0x7ff954e0fd34,302282948,0,0x0,8
tick,0x7ff954e0fd34,302297914,0,0x0,8
tick,0x7ff954e0fd34,302312749,0,0x0,8
tick,0x7ff954e0fd34,302328667,0,0x0,8
tick,0x7ff954e0fd34,302344649,0,0x0,8
tick,0x7ff954e0fd34,302360101,0,0x0,8
tick,0x7ff954e0fd34,302376060,0,0x0,8
tick,0x7ff954e0fd34,302390900,0,0x0,8
tick,0x7ff954e0fd34,302406872,0,0x0,8
tick,0x7ff954e0fd34,302422802,0,0x0,8
tick,0x7ff954e0fd34,302438840,0,0x0,8
tick,0x7ff954e0fd34,302454279,0,0x0,8
tick,0x7ff954e0fd34,302470193,0,0x0,8
tick,0x7ff954e0fd34,302486103,0,0x0,8
tick,0x7ff954e0fd34,302502116,0,0x0,8
tick,0x7ff954e0fd34,302518041,0,0x0,8
tick,0x7ff954e0fd34,302534019,0,0x0,8
tick,0x7ff954e0fd34,302549941,0,0x0,8
tick,0x7ff954e0fd34,302564936,0,0x0,8
tick,0x7ff954e0fd34,302579852,0,0x0,8
tick,0x7ff954e0fd34,302594843,0,0x0,8
tick,0x7ff954e0fd34,302610775,0,0x0,8
tick,0x7ff954e0fd34,302625746,0,0x0,8
tick,0x7ff954e0fd34,302641704,0,0x0,8
tick,0x7ff954e0fd34,302657147,0,0x0,8
tick,0x7ff954e0fd34,302673107,0,0x0,8
tick,0x7ff954e0fd34,302688414,0,0x0,8
tick,0x7ff954e0fd34,302703364,0,0x0,8
tick,0x7ff954e0fd34,302719335,0,0x0,8
tick,0x7ff954e0fd34,302734783,0,0x0,8
tick,0x7ff954e0fd34,302750773,0,0x0,8
tick,0x7ff954e0fd34,302765730,0,0x0,8
tick,0x7ff954e0fd34,302781574,0,0x0,8
tick,0x7ff954e0fd34,302797510,0,0x0,8
tick,0x7ff954e0fd34,302812502,0,0x0,8
tick,0x7ff954e0fd34,302827453,0,0x0,8
tick,0x7ff954e0fd34,302843261,0,0x0,8
tick,0x7ff954e0fd34,302858712,0,0x0,8
tick,0x7ff954e0fd34,302874677,0,0x0,8
tick,0x7ff954e0fd34,302890057,0,0x0,8
tick,0x7ff954e0fd34,302905638,0,0x0,8
tick,0x7ff954e0fd34,302921608,0,0x0,8
tick,0x7ff954e0fd34,302937583,0,0x0,8
tick,0x7ff954e0fd34,302953535,0,0x0,8
tick,0x7ff954e0fd34,302968460,0,0x0,8
tick,0x7ff954e0fd34,302984436,0,0x0,8
tick,0x7ff954e0fd34,302999404,0,0x0,8
tick,0x7ff954e0fd34,303015411,0,0x0,8
tick,0x7ff954e0fd34,303031292,0,0x0,8
tick,0x7ff954e0fd34,303047250,0,0x0,8
tick,0x7ff954e0fd34,303062219,0,0x0,8
tick,0x7ff954e0fd34,303077174,0,0x0,8
tick,0x7ff954e0fd34,303093134,0,0x0,8
tick,0x7ff954e0fd34,303109121,0,0x0,8
tick,0x7ff954e0fd34,303125044,0,0x0,8
tick,0x7ff954e0fd34,303141065,0,0x0,8
tick,0x7ff954e0fd34,303157178,0,0x0,8
tick,0x7ff954e0fd34,303172078,0,0x0,8
tick,0x7ff954e0fd34,303187616,0,0x0,8
tick,0x7ff954e0fd34,303203590,0,0x0,8
tick,0x7ff954e0fd34,303219548,0,0x0,8
tick,0x7ff954e0fd34,303235548,0,0x0,8
tick,0x7ff954e0fd34,303251141,0,0x0,8
tick,0x7ff954e0fd34,303267244,0,0x0,8
tick,0x7ff954e0fd34,303282450,0,0x0,8
tick,0x7ff954e0fd34,303298361,0,0x0,8
tick,0x7ff954e0fd34,303314227,0,0x0,8
tick,0x7ff954e0fd34,303329372,0,0x0,8
tick,0x7ff954e0fd34,303345321,0,0x0,8
tick,0x7ff954e0fd34,303360146,0,0x0,8
tick,0x7ff954e0fd34,303376069,0,0x0,8
tick,0x7ff954e0fd34,303391816,0,0x0,8
tick,0x7ff954e0fd34,303407794,0,0x0,8
tick,0x7ff954e0fd34,303423769,0,0x0,8
tick,0x7ff954e0fd34,303439596,0,0x0,8
tick,0x7ff954e0fd34,303455503,0,0x0,8
tick,0x7ff954e0fd34,303471552,0,0x0,8
tick,0x7ff954e0fd34,303486811,0,0x0,8
tick,0x7ff954e0fd34,303501616,0,0x0,8
tick,0x7ff954e0fd34,303517187,0,0x0,8
tick,0x7ff954e0fd34,303533145,0,0x0,8
tick,0x7ff954e0fd34,303548570,0,0x0,8
tick,0x7ff954e0fd34,303564529,0,0x0,8
tick,0x7ff954e0fd34,303580497,0,0x0,8
tick,0x7ff954e0fd34,303596426,0,0x0,8
tick,0x7ff954e0fd34,303612407,0,0x0,8
tick,0x7ff954e0fd34,303627373,0,0x0,8
tick,0x7ff954e0fd34,303642325,0,0x0,8
tick,0x7ff954e0fd34,303657273,0,0x0,8
tick,0x7ff954e0fd34,303672256,0,0x0,8
tick,0x7ff954e0fd34,303687218,0,0x0,8
tick,0x7ff954e0fd34,303702154,0,0x0,8
tick,0x7ff954e0fd34,303717759,0,0x0,8
tick,0x7ff954e0fd34,303733034,0,0x0,8
tick,0x7ff954e0fd34,303748427,0,0x0,8
tick,0x7ff954e0fd34,303763513,0,0x0,8
tick,0x7ff954e0fd34,303779121,0,0x0,8
tick,0x7ff954e0fd34,303794275,0,0x0,8
tick,0x7ff954e0fd34,303810237,0,0x0,8
tick,0x7ff954e0fd34,303825211,0,0x0,8
tick,0x7ff954e0fd34,303840140,0,0x0,8
tick,0x7ff954e0fd34,303854924,0,0x0,8
tick,0x7ff954e0fd34,303870899,0,0x0,8
tick,0x7ff954e0fd34,303886819,0,0x0,8
tick,0x7ff954e0fd34,303902629,0,0x0,8
tick,0x7ff954e0fd34,303918499,0,0x0,8
tick,0x7ff954e0fd34,303934542,0,0x0,8
tick,0x7ff954e0fd34,303950411,0,0x0,8
tick,0x7ff954e0fd34,303966027,0,0x0,8
tick,0x7ff954e0fd34,303982121,0,0x0,8
tick,0x7ff954e0fd34,303998253,0,0x0,8
tick,0x7ff954e0fd34,304013374,0,0x0,8
tick,0x7ff954e0fd34,304028464,0,0x0,8
tick,0x7ff954e0fd34,304044254,0,0x0,8
tick,0x7ff954e0fd34,304059567,0,0x0,8
tick,0x7ff954e0fd34,304075352,0,0x0,8
tick,0x7ff954e0fd34,304090627,0,0x0,8
tick,0x7ff954e0fd34,304106308,0,0x0,8
tick,0x7ff954e0fd34,304122231,0,0x0,8
tick,0x7ff954e0fd34,304138310,0,0x0,8
tick,0x7ff954e0fd34,304153967,0,0x0,8
tick,0x7ff954e0fd34,304169826,0,0x0,8
tick,0x7ff954e0fd34,304185786,0,0x0,8
tick,0x7ff954e0fd34,304201753,0,0x0,8
tick,0x7ff954e0fd34,304217698,0,0x0,8
tick,0x7ff954e0fd34,304233630,0,0x0,8
tick,0x7ff954e0fd34,304249605,0,0x0,8
tick,0x7ff954e0fd34,304264600,0,0x0,8
tick,0x7ff954e0fd34,304280611,0,0x0,8
tick,0x7ff954e0fd34,304295471,0,0x0,8
tick,0x7ff954e0fd34,304311462,0,0x0,8
tick,0x7ff954e0fd34,304326408,0,0x0,8
tick,0x7ff954e0fd34,304341368,0,0x0,8
tick,0x7ff954e0fd34,304356347,0,0x0,8
tick,0x7ff954e0fd34,304371298,0,0x0,8
tick,0x7ff954e0fd34,304386239,0,0x0,8
tick,0x7ff954e0fd34,304401233,0,0x0,8
tick,0x7ff954e0fd34,304416184,0,0x0,8
tick,0x7ff954e0fd34,304432148,0,0x0,8
tick,0x7ff954e0fd34,304447145,0,0x0,8
tick,0x7ff954e0fd34,304462028,0,0x0,8
tick,0x7ff954e0fd34,304476985,0,0x0,8
tick,0x7ff954e0fd34,304491976,0,0x0,8
tick,0x7ff954e0fd34,304507921,0,0x0,8
tick,0x7ff954e0fd34,304522884,0,0x0,8
tick,0x7ff954e0fd34,304538917,0,0x0,8
tick,0x7ff954e0fd34,304554835,0,0x0,8
tick,0x7ff954e0fd34,304570785,0,0x0,8
tick,0x7ff954e0fd34,304586766,0,0x0,8
tick,0x7ff954e0fd34,304602673,0,0x0,8
tick,0x7ff954e0fd34,304617626,0,0x0,8
tick,0x7ff954e0fd34,304632595,0,0x0,8
tick,0x7ff954e0fd34,304648578,0,0x0,8
tick,0x7ff954e0fd34,304664051,0,0x0,8
tick,0x7ff954e0fd34,304679180,0,0x0,8
tick,0x7ff954e0fd34,304695122,0,0x0,8
tick,0x7ff954e0fd34,304710111,0,0x0,8
tick,0x7ff954e0fd34,304725832,0,0x0,8
tick,0x7ff954e0fd34,304740739,0,0x0,8
tick,0x7ff954e0fd34,304756045,0,0x0,8
tick,0x7ff954e0fd34,304771888,0,0x0,8
tick,0x7ff954e0fd34,304786803,0,0x0,8
tick,0x7ff954e0fd34,304802731,0,0x0,8
tick,0x7ff954e0fd34,304818084,0,0x0,8
tick,0x7ff954e0fd34,304834050,0,0x0,8
tick,0x7ff954e0fd34,304849686,0,0x0,8
tick,0x7ff954e0fd34,304865525,0,0x0,8
tick,0x7ff954e0fd34,304881493,0,0x0,8
tick,0x7ff954e0fd34,304897446,0,0x0,8
tick,0x7ff954e0fd34,304913516,0,0x0,8
tick,0x7ff954e0fd34,304929365,0,0x0,8
tick,0x7ff954e0fd34,304944335,0,0x0,8
tick,0x7ff954e0fd34,304959691,0,0x0,8
tick,0x7ff954e0fd34,304974696,0,0x0,8
tick,0x7ff954e0fd34,304990627,0,0x0,8
tick,0x7ff954e0fd34,305006554,0,0x0,8
tick,0x7ff954e0fd34,305022499,0,0x0,8
tick,0x7ff954e0fd34,305038453,0,0x0,8
tick,0x7ff954e0fd34,305054474,0,0x0,8
tick,0x7ff954e0fd34,305069405,0,0x0,8
tick,0x7ff954e0fd34,305084330,0,0x0,8
tick,0x7ff954e0fd34,305099297,0,0x0,8
tick,0x7ff954e0fd34,305115267,0,0x0,8
tick,0x7ff954e0fd34,305130237,0,0x0,8
tick,0x7ff954e0fd34,305145479,0,0x0,8
tick,0x7ff954e0fd34,305161283,0,0x0,8
tick,0x7ff954e0fd34,305176635,0,0x0,8
tick,0x7ff954e0fd34,305192653,0,0x0,8
tick,0x7ff954e0fd34,305208562,0,0x0,8
tick,0x7ff954e0fd34,305223805,0,0x0,8
tick,0x7ff954e0fd34,305239799,0,0x0,8
tick,0x7ff954e0fd34,305255401,0,0x0,8
tick,0x7ff954e0fd34,305270654,0,0x0,8
tick,0x7ff954e0fd34,305286241,0,0x0,8
tick,0x7ff954e0fd34,305302274,0,0x0,8
tick,0x7ff954e0fd34,305317540,0,0x0,8
tick,0x7ff954e0fd34,305332687,0,0x0,8
tick,0x7ff954e0fd34,305348665,0,0x0,8
tick,0x7ff954e0fd34,305364578,0,0x0,8
tick,0x7ff954e0fd34,305380061,0,0x0,8
tick,0x7ff954e0fd34,305396064,0,0x0,8
tick,0x7ff954e0fd34,305412004,0,0x0,8
tick,0x7ff954e0fd34,305427179,0,0x0,8
tick,0x7ff954e0fd34,305443065,0,0x0,8
tick,0x7ff954e0fd34,305458109,0,0x0,8
tick,0x7ff954e0fd34,305474011,0,0x0,8
tick,0x7ff954e0fd34,305489616,0,0x0,8
tick,0x7ff954e0fd34,305505507,0,0x0,8
tick,0x7ff954e0fd34,305521491,0,0x0,8
tick,0x7ff954e0fd34,305537016,0,0x0,8
tick,0x7ff954e0fd34,305551970,0,0x0,8
tick,0x7ff954e0fd34,305567534,0,0x0,8
tick,0x7ff954e0fd34,305582806,0,0x0,8
tick,0x7ff954e0fd34,305598182,0,0x0,8
tick,0x7ff954e0fd34,305614127,0,0x0,8
tick,0x7ff954e0fd34,305630139,0,0x0,8
tick,0x7ff954e0fd34,305645381,0,0x0,8
tick,0x7ff954e0fd34,305661385,0,0x0,8
tick,0x7ff954e0fd34,305677336,0,0x0,8
tick,0x7ff954e0fd34,305693262,0,0x0,8
tick,0x7ff954e0fd34,305709267,0,0x0,8
tick,0x7ff954e0fd34,305724848,0,0x0,8
tick,0x7ff954e0fd34,305739856,0,0x0,8
tick,0x7ff954e0fd34,305755633,0,0x0,8
tick,0x7ff954e0fd34,305771370,0,0x0,8
tick,0x7ff954e0fd34,305787310,0,0x0,8
tick,0x7ff954e0fd34,305802542,0,0x0,8
tick,0x7ff954e0fd34,305817595,0,0x0,8
tick,0x7ff954e0fd34,305832657,0,0x0,8
tick,0x7ff954e0fd34,305848780,0,0x0,8
tick,0x7ff954e0fd34,305864545,0,0x0,8
tick,0x7ff954e0fd34,305879479,0,0x0,8
tick,0x7ff954e0fd34,305895422,0,0x0,8
tick,0x7ff954e0fd34,305911369,0,0x0,8
tick,0x7ff954e0fd34,305927339,0,0x0,8
tick,0x7ff954e0fd34,305943267,0,0x0,8
tick,0x7ff954e0fd34,305958243,0,0x0,8
tick,0x7ff954e0fd34,305974195,0,0x0,8
tick,0x7ff954e0fd34,305989157,0,0x0,8
tick,0x7ff954e0fd34,306004121,0,0x0,8
tick,0x7ff954e0fd34,306019091,0,0x0,8
tick,0x7ff954e0fd34,306034416,0,0x0,8
tick,0x7ff954e0fd34,306049368,0,0x0,8
tick,0x7ff954e0fd34,306065340,0,0x0,8
tick,0x7ff954e0fd34,306080277,0,0x0,8
tick,0x7ff954e0fd34,306095878,0,0x0,8
tick,0x7ff954e0fd34,306111692,0,0x0,8
tick,0x7ff954e0fd34,306127568,0,0x0,8
tick,0x7ff954e0fd34,306143653,0,0x0,8
tick,0x7ff954e0fd34,306159618,0,0x0,8
tick,0x7ff954e0fd34,306175248,0,0x0,8
tick,0x7ff954e0fd34,306191293,0,0x0,8
tick,0x7ff954e0fd34,306206458,0,0x0,8
tick,0x7ff954e0fd34,306221415,0,0x0,8
tick,0x7ff954e0fd34,306236921,0,0x0,8
tick,0x7ff954e0fd34,306252837,0,0x0,8
tick,0x7ff954e0fd34,306268817,0,0x0,8
tick,0x7ff954e0fd34,306284799,0,0x0,8
tick,0x7ff954e0fd34,306300657,0,0x0,8
tick,0x7ff954e0fd34,306316591,0,0x0,8
tick,0x7ff954e0fd34,306332591,0,0x0,8
tick,0x7ff954e0fd34,306348511,0,0x0,8
tick,0x7ff954e0fd34,306364068,0,0x0,8
tick,0x7ff954e0fd34,306379656,0,0x0,8
tick,0x7ff954e0fd34,306394624,0,0x0,8
tick,0x7ff954e0fd34,306410487,0,0x0,8
tick,0x7ff954e0fd34,306425420,0,0x0,8
tick,0x7ff954e0fd34,306441443,0,0x0,8
tick,0x7ff954e0fd34,306456941,0,0x0,8
tick,0x7ff954e0fd34,306472980,0,0x0,8
tick,0x7ff954e0fd34,306488902,0,0x0,8
tick,0x7ff954e0fd34,306504197,0,0x0,8
tick,0x7ff954e0fd34,306518899,0,0x0,8
tick,0x7ff954e0fd34,306533899,0,0x0,8
tick,0x7ff954e0fd34,306549898,0,0x0,8
tick,0x7ff954e0fd34,306564875,0,0x0,8
tick,0x7ff954e0fd34,306579725,0,0x0,8
tick,0x7ff954e0fd34,306594757,0,0x0,8
tick,0x7ff954e0fd34,306609692,0,0x0,8
tick,0x7ff954e0fd34,306625610,0,0x0,8
tick,0x7ff954e0fd34,306641573,0,0x0,8
tick,0x7ff954e0fd34,306656518,0,0x0,8
tick,0x7ff954e0fd34,306671545,0,0x0,8
tick,0x7ff954e0fd34,306686590,0,0x0,8
tick,0x7ff954e0fd34,306701455,0,0x0,8
tick,0x7ff954e0fd34,306716384,0,0x0,8
tick,0x7ff954e0fd34,306731335,0,0x0,8
tick,0x7ff954e0fd34,306746324,0,0x0,8
tick,0x7ff954e0fd34,306762241,0,0x0,8
tick,0x7ff954e0fd34,306777552,0,0x0,8
tick,0x7ff954e0fd34,306793544,0,0x0,8
tick,0x7ff954e0fd34,306809176,0,0x0,8
tick,0x7ff954e0fd34,306825143,0,0x0,8
tick,0x7ff954e0fd34,306841112,0,0x0,8
tick,0x7ff954e0fd34,306857180,0,0x0,8
tick,0x7ff954e0fd34,306873134,0,0x0,8
tick,0x7ff954e0fd34,306888585,0,0x0,8
tick,0x7ff954e0fd34,306904531,0,0x0,8
tick,0x7ff954e0fd34,306919499,0,0x0,8
tick,0x7ff954e0fd34,306935466,0,0x0,8
tick,0x7ff954e0fd34,306950410,0,0x0,8
tick,0x7ff954e0fd34,306966406,0,0x0,8
tick,0x7ff954e0fd34,306981353,0,0x0,8
tick,0x7ff954e0fd34,306996292,0,0x0,8
tick,0x7ff954e0fd34,307011270,0,0x0,8
tick,0x7ff954e0fd34,307026214,0,0x0,8
tick,0x7ff954e0fd34,307042166,0,0x0,8
tick,0x7ff954e0fd34,307057618,0,0x0,8
tick,0x7ff954e0fd34,307073542,0,0x0,8
tick,0x7ff954e0fd34,307089526,0,0x0,8
tick,0x7ff954e0fd34,307104870,0,0x0,8
tick,0x7ff954e0fd34,307120891,0,0x0,8
tick,0x7ff954e0fd34,307136897,0,0x0,8
tick,0x7ff954e0fd34,307152709,0,0x0,8
tick,0x7ff954e0fd34,307168340,0,0x0,8
tick,0x7ff954e0fd34,307184313,0,0x0,8
tick,0x7ff954e0fd34,307200264,0,0x0,8
tick,0x7ff954e0fd34,307215786,0,0x0,8
tick,0x7ff954e0fd34,307231316,0,0x0,8
tick,0x7ff954e0fd34,307246291,0,0x0,8
tick,0x7ff954e0fd34,307261231,0,0x0,8
tick,0x7ff954e0fd34,307276226,0,0x0,8
tick,0x7ff954e0fd34,307291217,0,0x0,8
tick,0x7ff954e0fd34,307306150,0,0x0,8
tick,0x7ff954e0fd34,307321737,0,0x0,8
tick,0x7ff954e0fd34,307337678,0,0x0,8
tick,0x7ff954e0fd34,307353603,0,0x0,8
tick,0x7ff954e0fd34,307369655,0,0x0,8
tick,0x7ff954e0fd34,307384995,0,0x0,8
tick,0x7ff954e0fd34,307400965,0,0x0,8
tick,0x7ff954e0fd34,307416931,0,0x0,8
tick,0x7ff954e0fd34,307432606,0,0x0,8
tick,0x7ff954e0fd34,307448598,0,0x0,8
tick,0x7ff954e0fd34,307464638,0,0x0,8
tick,0x7ff954e0fd34,307479911,0,0x0,8
tick,0x7ff954e0fd34,307495919,0,0x0,8
tick,0x7ff954e0fd34,307510700,0,0x0,8
tick,0x7ff954e0fd34,307525917,0,0x0,8
tick,0x7ff954e0fd34,307541810,0,0x0,8
tick,0x7ff954e0fd34,307557901,0,0x0,8
tick,0x7ff954e0fd34,307573845,0,0x0,8
tick,0x7ff954e0fd34,307588819,0,0x0,8
tick,0x7ff954e0fd34,307604554,0,0x0,8
tick,0x7ff954e0fd34,307619567,0,0x0,8
tick,0x7ff954e0fd34,307635012,0,0x0,8
tick,0x7ff954e0fd34,307650512,0,0x0,8
tick,0x7ff954e0fd34,307666313,0,0x0,8
tick,0x7ff954e0fd34,307682333,0,0x0,8
tick,0x7ff954e0fd34,307697266,0,0x0,8
tick,0x7ff954e0fd34,307712856,0,0x0,8
tick,0x7ff954e0fd34,307727861,0,0x0,8
tick,0x7ff954e0fd34,307743451,0,0x0,8
tick,0x7ff954e0fd34,307759391,0,0x0,8
tick,0x7ff954e0fd34,307775117,0,0x0,8
tick,0x7ff954e0fd34,307791033,0,0x0,8
tick,0x7ff954e0fd34,307806959,0,0x0,8
tick,0x7ff954e0fd34,307822924,0,0x0,8
tick,0x7ff954e0fd34,307838882,0,0x0,8
tick,0x7ff954e0fd34,307854855,0,0x0,8
tick,0x7ff954e0fd34,307870841,0,0x0,8
tick,0x7ff954e0fd34,307886207,0,0x0,8
tick,0x7ff954e0fd34,307902220,0,0x0,8
tick,0x7ff954e0fd34,307917941,0,0x0,8
tick,0x7ff954e0fd34,307933467,0,0x0,8
tick,0x7ff954e0fd34,307949379,0,0x0,8
tick,0x7ff954e0fd34,307964310,0,0x0,8
tick,0x7ff954e0fd34,307979269,0,0x0,8
tick,0x7ff954e0fd34,307994244,0,0x0,8
tick,0x7ff954e0fd34,308010212,0,0x0,8
tick,0x7ff954e0fd34,308026134,0,0x0,8
tick,0x7ff954e0fd34,308041120,0,0x0,8
tick,0x7ff954e0fd34,308056065,0,0x0,8
tick,0x7ff954e0fd34,308071829,0,0x0,8
tick,0x7ff954e0fd34,308085979,0,0x0,8
tick,0x7ff954e0fd34,308101004,0,0x0,8
tick,0x7ff954e0fd34,308115956,0,0x0,8
tick,0x7ff954e0fd34,308131867,0,0x0,8
tick,0x7ff954e0fd34,308146812,0,0x0,8
tick,0x7ff954e0fd34,308161829,0,0x0,8
tick,0x7ff954e0fd34,308177760,0,0x0,8
tick,0x7ff954e0fd34,308192746,0,0x0,8
tick,0x7ff954e0fd34,308207653,0,0x0,8
tick,0x7ff954e0fd34,308222660,0,0x0,8
tick,0x7ff954e0fd34,308237596,0,0x0,8
tick,0x7ff954e0fd34,308252608,0,0x0,8
tick,0x7ff954e0fd34,308267548,0,0x0,8
tick,0x7ff954e0fd34,308282467,0,0x0,8
tick,0x7ff954e0fd34,308297422,0,0x0,8
tick,0x7ff954e0fd34,308312401,0,0x0,8
tick,0x7ff954e0fd34,308327340,0,0x0,8
tick,0x7ff954e0fd34,308342930,0,0x0,8
tick,0x7ff954e0fd34,308358908,0,0x0,8
tick,0x7ff954e0fd34,308374817,0,0x0,8
tick,0x7ff954e0fd34,308390790,0,0x0,8
tick,0x7ff954e0fd34,308406757,0,0x0,8
tick,0x7ff954e0fd34,308422736,0,0x0,8
tick,0x7ff954e0fd34,308438664,0,0x0,8
tick,0x7ff954e0fd34,308454610,0,0x0,8
tick,0x7ff954e0fd34,308470086,0,0x0,8
tick,0x7ff954e0fd34,308486065,0,0x0,8
tick,0x7ff954e0fd34,308502019,0,0x0,8
tick,0x7ff954e0fd34,308517984,0,0x0,8
tick,0x7ff954e0fd34,308534131,0,0x0,8
tick,0x7ff954e0fd34,308549928,0,0x0,8
tick,0x7ff954e0fd34,308564840,0,0x0,8
tick,0x7ff954e0fd34,308579840,0,0x0,8
tick,0x7ff954e0fd34,308594860,0,0x0,8
tick,0x7ff954e0fd34,308609768,0,0x0,8
tick,0x7ff954e0fd34,308625677,0,0x0,8
tick,0x7ff954e0fd34,308641649,0,0x0,8
tick,0x7ff954e0fd34,308657659,0,0x0,8
tick,0x7ff954e0fd34,308673550,0,0x0,8
tick,0x7ff954e0fd34,308689519,0,0x0,8
tick,0x7ff954e0fd34,308705467,0,0x0,8
tick,0x7ff954e0fd34,308720482,0,0x0,8
tick,0x7ff954e0fd34,308735392,0,0x0,8
tick,0x7ff954e0fd34,308750678,0,0x0,8
tick,0x7ff954e0fd34,308766585,0,0x0,8
tick,0x7ff954e0fd34,308781542,0,0x0,8
tick,0x7ff954e0fd34,308797507,0,0x0,8
tick,0x7ff954e0fd34,308813450,0,0x0,8
tick,0x7ff954e0fd34,308829450,0,0x0,8
tick,0x7ff954e0fd34,308844594,0,0x0,8
tick,0x7ff954e0fd34,308859591,0,0x0,8
tick,0x7ff954e0fd34,308875518,0,0x0,8
tick,0x7ff954e0fd34,308890484,0,0x0,8
tick,0x7ff954e0fd34,308905501,0,0x0,8
tick,0x7ff954e0fd34,308920473,0,0x0,8
tick,0x7ff954e0fd34,308936394,0,0x0,8
tick,0x7ff954e0fd34,308951325,0,0x0,8
tick,0x7ff954e0fd34,308966297,0,0x0,8
tick,0x7ff954e0fd34,308982120,0,0x0,8
tick,0x7ff954e0fd34,308997999,0,0x0,8
tick,0x7ff954e0fd34,309014006,0,0x0,8
tick,0x7ff954e0fd34,309028917,0,0x0,8
tick,0x7ff954e0fd34,309043870,0,0x0,8
tick,0x7ff954e0fd34,309058867,0,0x0,8
tick,0x7ff954e0fd34,309074789,0,0x0,8
tick,0x7ff954e0fd34,309089771,0,0x0,8
tick,0x7ff954e0fd34,309105777,0,0x0,8
tick,0x7ff954e0fd34,309121733,0,0x0,8
tick,0x7ff954e0fd34,309137682,0,0x0,8
tick,0x7ff954e0fd34,309153649,0,0x0,8
tick,0x7ff954e0fd34,309169619,0,0x0,8
tick,0x7ff954e0fd34,309185539,0,0x0,8
tick,0x7ff954e0fd34,309201509,0,0x0,8
tick,0x7ff954e0fd34,309217373,0,0x0,8
tick,0x7ff954e0fd34,309233340,0,0x0,8
tick,0x7ff954e0fd34,309248324,0,0x0,8
tick,0x7ff954e0fd34,309263352,0,0x0,8
tick,0x7ff954e0fd34,309279290,0,0x0,8
tick,0x7ff954e0fd34,309295303,0,0x0,8
tick,0x7ff954e0fd34,309311223,0,0x0,8
tick,0x7ff954e0fd34,309327176,0,0x0,8
tick,0x7ff954e0fd34,309342152,0,0x0,8
tick,0x7ff954e0fd34,309357107,0,0x0,8
tick,0x7ff954e0fd34,309372038,0,0x0,8
tick,0x7ff954e0fd34,309387219,0,0x0,8
tick,0x7ff954e0fd34,309403192,0,0x0,8
tick,0x7ff954e0fd34,309418118,0,0x0,8
tick,0x7ff954e0fd34,309434128,0,0x0,8
tick,0x7ff954e0fd34,309449050,0,0x0,8
tick,0x7ff954e0fd34,309463977,0,0x0,8
tick,0x7ff954e0fd34,309478941,0,0x0,8
tick,0x7ff954e0fd34,309493965,0,0x0,8
tick,0x7ff954e0fd34,309508884,0,0x0,8
tick,0x7ff954e0fd34,309524811,0,0x0,8
tick,0x7ff954e0fd34,309540892,0,0x0,8
tick,0x7ff954e0fd34,309556418,0,0x0,8
tick,0x7ff954e0fd34,309572368,0,0x0,8
tick,0x7ff954e0fd34,309588343,0,0x0,8
tick,0x7ff954e0fd34,309604296,0,0x0,8
tick,0x7ff954e0fd34,309620254,0,0x0,8
tick,0x7ff954e0fd34,309636228,0,0x0,8
tick,0x7ff954e0fd34,309652222,0,0x0,8
tick,0x7ff954e0fd34,309667735,0,0x0,8
tick,0x7ff954e0fd34,309683701,0,0x0,8
tick,0x7ff954e0fd34,309699636,0,0x0,8
tick,0x7ff954e0fd34,309715639,0,0x0,8
tick,0x7ff954e0fd34,309731608,0,0x0,8
tick,0x7ff954e0fd34,309746537,0,0x0,8
tick,0x7ff954e0fd34,309762496,0,0x0,8
tick,0x7ff954e0fd34,309777522,0,0x0,8
tick,0x7ff954e0fd34,309793520,0,0x0,8
tick,0x7ff954e0fd34,309809454,0,0x0,8
tick,0x7ff954e0fd34,309825417,0,0x0,8
tick,0x7ff954e0fd34,309841377,0,0x0,8
tick,0x7ff954e0fd34,309857337,0,0x0,8
tick,0x7ff954e0fd34,309873278,0,0x0,8
tick,0x7ff954e0fd34,309888231,0,0x0,8
tick,0x7ff954e0fd34,309904213,0,0x0,8
tick,0x7ff954e0fd34,309919161,0,0x0,8
tick,0x7ff954e0fd34,309935121,0,0x0,8
tick,0x7ff954e0fd34,309951087,0,0x0,8
tick,0x7ff954e0fd34,309967025,0,0x0,8
tick,0x7ff954e0fd34,309983029,0,0x0,8
tick,0x7ff954e0fd34,309998974,0,0x0,8
tick,0x7ff954e0fd34,310014869,0,0x0,8
tick,0x7ff954e0fd34,310030855,0,0x0,8
tick,0x7ff954e0fd34,310045833,0,0x0,8
tick,0x7ff954e0fd34,310060955,0,0x0,8
tick,0x7ff954e0fd34,310076539,0,0x0,8
tick,0x7ff954e0fd34,310092480,0,0x0,8
tick,0x7ff954e0fd34,310108702,0,0x0,8
tick,0x7ff954e0fd34,310124076,0,0x0,8
tick,0x7ff954e0fd34,310140073,0,0x0,8
tick,0x7ff954e0fd34,310155980,0,0x0,8
tick,0x7ff954e0fd34,310171948,0,0x0,8
tick,0x7ff954e0fd34,310186923,0,0x0,8
tick,0x7ff954e0fd34,310202530,0,0x0,8
tick,0x7ff954e0fd34,310218136,0,0x0,8
tick,0x7ff954e0fd34,310233091,0,0x0,8
tick,0x7ff954e0fd34,310248994,0,0x0,8
tick,0x7ff954e0fd34,310264370,0,0x0,8
tick,0x7ff954e0fd34,310280276,0,0x0,8
tick,0x7ff954e0fd34,310296254,0,0x0,8
tick,0x7ff954e0fd34,310311469,0,0x0,8
tick,0x7ff954e0fd34,310326434,0,0x0,8
tick,0x7ff954e0fd34,310342363,0,0x0,8
tick,0x7ff954e0fd34,310357837,0,0x0,8
tick,0x7ff954e0fd34,310373848,0,0x0,8
tick,0x7ff954e0fd34,310389640,0,0x0,8
tick,0x7ff954e0fd34,310405593,0,0x0,8
tick,0x7ff954e0fd34,310421546,0,0x0,8
tick,0x7ff954e0fd34,310437495,0,0x0,8
tick,0x7ff954e0fd34,310453443,0,0x0,8
tick,0x7ff954e0fd34,310469432,0,0x0,8
tick,0x7ff954e0fd34,310485388,0,0x0,8
tick,0x7ff954e0fd34,310501387,0,0x0,8
tick,0x7ff954e0fd34,310516309,0,0x0,8
tick,0x7ff954e0fd34,310531263,0,0x0,8
tick,0x7ff954e0fd34,310546215,0,0x0,8
tick,0x7ff954e0fd34,310562164,0,0x0,8
tick,0x7ff954e0fd34,310577175,0,0x0,8
tick,0x7ff954e0fd34,310592646,0,0x0,8
tick,0x7ff954e0fd34,310608390,0,0x0,8
tick,0x7ff954e0fd34,310623531,0,0x0,8
tick,0x7ff954e0fd34,310639038,0,0x0,8
tick,0x7ff954e0fd34,310654419,0,0x0,8
tick,0x7ff954e0fd34,310670153,0,0x0,8
tick,0x7ff954e0fd34,310685651,0,0x0,8
tick,0x7ff954e0fd34,310701656,0,0x0,8
tick,0x7ff954e0fd34,310717580,0,0x0,8
tick,0x7ff954e0fd34,310733240,0,0x0,8
tick,0x7ff954e0fd34,310749163,0,0x0,8
tick,0x7ff954e0fd34,310764585,0,0x0,8
tick,0x7ff954e0fd34,310779768,0,0x0,8
tick,0x7ff954e0fd34,310795394,0,0x0,8
tick,0x7ff954e0fd34,310810675,0,0x0,8
tick,0x7ff954e0fd34,310826743,0,0x0,8
tick,0x7ff954e0fd34,310841657,0,0x0,8
tick,0x7ff954e0fd34,310857154,0,0x0,8
tick,0x7ff954e0fd34,310872558,0,0x0,8
tick,0x7ff954e0fd34,310887818,0,0x0,8
tick,0x7ff954e0fd34,310902604,0,0x0,8
tick,0x7ff954e0fd34,310918653,0,0x0,8
tick,0x7ff954e0fd34,310934711,0,0x0,8
tick,0x7ff954e0fd34,310950469,0,0x0,8
tick,0x7ff954e0fd34,310966379,0,0x0,8
tick,0x7ff954e0fd34,310981939,0,0x0,8
tick,0x7ff954e0fd34,310997752,0,0x0,8
tick,0x7ff954e0fd34,311013616,0,0x0,8
tick,0x7ff954e0fd34,311029405,0,0x0,8
tick,0x7ff954e0fd34,311045353,0,0x0,8
tick,0x7ff954e0fd34,311060293,0,0x0,8
tick,0x7ff954e0fd34,311075534,0,0x0,8
tick,0x7ff954e0fd34,311090577,0,0x0,8
tick,0x7ff954e0fd34,311106486,0,0x0,8
tick,0x7ff954e0fd34,311121479,0,0x0,8
tick,0x7ff954e0fd34,311137440,0,0x0,8
tick,0x7ff954e0fd34,311153359,0,0x0,8
tick,0x7ff954e0fd34,311169322,0,0x0,8
tick,0x7ff954e0fd34,311185277,0,0x0,8
tick,0x7ff954e0fd34,311201239,0,0x0,8
tick,0x7ff954e0fd34,311217196,0,0x0,8
tick,0x7ff954e0fd34,311233152,0,0x0,8
tick,0x7ff954e0fd34,311249125,0,0x0,8
tick,0x7ff954e0fd34,311265158,0,0x0,8
tick,0x7ff954e0fd34,311280626,0,0x0,8
tick,0x7ff954e0fd34,311296551,0,0x0,8
tick,0x7ff954e0fd34,311312504,0,0x0,8
tick,0x7ff954e0fd34,311327468,0,0x0,8
tick,0x7ff954e0fd34,311342435,0,0x0,8
tick,0x7ff954e0fd34,311357387,0,0x0,8
tick,0x7ff954e0fd34,311372415,0,0x0,8
tick,0x7ff954e0fd34,311387296,0,0x0,8
tick,0x7ff954e0fd34,311403237,0,0x0,8
tick,0x7ff954e0fd34,311418246,0,0x0,8
tick,0x7ff954e0fd34,311434264,0,0x0,8
tick,0x7ff954e0fd34,311449169,0,0x0,8
tick,0x7ff954e0fd34,311464493,0,0x0,8
tick,0x7ff954e0fd34,311480319,0,0x0,8
tick,0x7ff954e0fd34,311495281,0,0x0,8
tick,0x7ff954e0fd34,311511277,0,0x0,8
tick,0x7ff954e0fd34,311526812,0,0x0,8
tick,0x7ff954e0fd34,311542856,0,0x0,8
tick,0x7ff954e0fd34,311558783,0,0x0,8
tick,0x7ff954e0fd34,311574608,0,0x0,8
tick,0x7ff954e0fd34,311589939,0,0x0,8
tick,0x7ff954e0fd34,311605112,0,0x0,8
tick,0x7ff954e0fd34,311621006,0,0x0,8
tick,0x7ff954e0fd34,311636492,0,0x0,8
tick,0x7ff954e0fd34,311651463,0,0x0,8
tick,0x7ff954e0fd34,311667448,0,0x0,8
tick,0x7ff954e0fd34,311682389,0,0x0,8
tick,0x7ff954e0fd34,311698361,0,0x0,8
tick,0x7ff954e0fd34,311713809,0,0x0,8
tick,0x7ff954e0fd34,311728783,0,0x0,8
tick,0x7ff954e0fd34,311743810,0,0x0,8
tick,0x7ff954e0fd34,311758565,0,0x0,8
tick,0x7ff954e0fd34,311773517,0,0x0,8
tick,0x7ff954e0fd34,311788506,0,0x0,8
tick,0x7ff954e0fd34,311803451,0,0x0,8
tick,0x7ff954e0fd34,311819545,0,0x0,8
tick,0x7ff954e0fd34,311835374,0,0x0,8
tick,0x7ff954e0fd34,311851313,0,0x0,8
tick,0x7ff954e0fd34,311866504,0,0x0,8
tick,0x7ff954e0fd34,311881683,0,0x0,8
tick,0x7ff954e0fd34,311897439,0,0x0,8
tick,0x7ff954e0fd34,311912437,0,0x0,8
tick,0x7ff954e0fd34,311928409,0,0x0,8
tick,0x7ff954e0fd34,311943828,0,0x0,8
tick,0x7ff954e0fd34,311958932,0,0x0,8
tick,0x7ff954e0fd34,311974902,0,0x0,8
tick,0x7ff954e0fd34,311990853,0,0x0,8
tick,0x7ff954e0fd34,312005881,0,0x0,8
tick,0x7ff954e0fd34,312021762,0,0x0,8
tick,0x7ff954e0fd34,312037719,0,0x0,8
tick,0x7ff954e0fd34,312053664,0,0x0,8
tick,0x7ff954e0fd34,312068639,0,0x0,8
tick,0x7ff954e0fd34,312084596,0,0x0,8
tick,0x7ff954e0fd34,312099571,0,0x0,8
tick,0x7ff954e0fd34,312114812,0,0x0,8
tick,0x7ff954e0fd34,312129752,0,0x0,8
tick,0x7ff954e0fd34,312145405,0,0x0,8
tick,0x7ff954e0fd34,312160055,0,0x0,8
tick,0x7ff954e0fd34,312175168,0,0x0,8
tick,0x7ff954e0fd34,312190400,0,0x0,8
tick,0x7ff954e0fd34,312206464,0,0x0,8
tick,0x7ff954e0fd34,312222143,0,0x0,8
tick,0x7ff954e0fd34,312238012,0,0x0,8
tick,0x7ff954e0fd34,312253945,0,0x0,8
tick,0x7ff954e0fd34,312269142,0,0x0,8
tick,0x7ff954e0fd34,312284499,0,0x0,8
tick,0x7ff954e0fd34,312300511,0,0x0,8
tick,0x7ff954e0fd34,312316471,0,0x0,8
tick,0x7ff954e0fd34,312332250,0,0x0,8
tick,0x7ff954e0fd34,312347883,0,0x0,8
tick,0x7ff954e0fd34,312363818,0,0x0,8
tick,0x7ff954e0fd34,312379219,0,0x0,8
tick,0x7ff954e0fd34,312394973,0,0x0,8
tick,0x7ff954e0fd34,312409942,0,0x0,8
tick,0x7ff954e0fd34,312425889,0,0x0,8
tick,0x7ff954e0fd34,312441691,0,0x0,8
tick,0x7ff954e0fd34,312457404,0,0x0,8
tick,0x7ff954e0fd34,312472487,0,0x0,8
tick,0x7ff954e0fd34,312487639,0,0x0,8
tick,0x7ff954e0fd34,312503557,0,0x0,8
tick,0x7ff954e0fd34,312519559,0,0x0,8
tick,0x7ff954e0fd34,312535465,0,0x0,8
tick,0x7ff954e0fd34,312551166,0,0x0,8
tick,0x7ff954e0fd34,312567118,0,0x0,8
tick,0x7ff954e0fd34,312583004,0,0x0,8
tick,0x7ff954e0fd34,312598977,0,0x0,8
tick,0x7ff954e0fd34,312614900,0,0x0,8
tick,0x7ff954e0fd34,312630805,0,0x0,8
tick,0x7ff954e0fd34,312645862,0,0x0,8
tick,0x7ff954e0fd34,312660968,0,0x0,8
tick,0x7ff954e0fd34,312675869,0,0x0,8
tick,0x7ff954e0fd34,312690734,0,0x0,8
tick,0x7ff954e0fd34,312706666,0,0x0,8
tick,0x7ff954e0fd34,312722617,0,0x0,8
tick,0x7ff954e0fd34,312738576,0,0x0,8
tick,0x7ff954e0fd34,312754136,0,0x0,8
tick,0x7ff954e0fd34,312770270,0,0x0,8
tick,0x7ff954e0fd34,312786308,0,0x0,8
tick,0x7ff954e0fd34,312801272,0,0x0,8
tick,0x7ff954e0fd34,312816088,0,0x0,8
tick,0x7ff954e0fd34,312831394,0,0x0,8
tick,0x7ff954e0fd34,312847322,0,0x0,8
tick,0x7ff954e0fd34,312862286,0,0x0,8
tick,0x7ff954e0fd34,312877877,0,0x0,8
tick,0x7ff954e0fd34,312893838,0,0x0,8
tick,0x7ff954e0fd34,312908815,0,0x0,8
tick,0x7ff954e0fd34,312924769,0,0x0,8
tick,0x7ff954e0fd34,312939702,0,0x0,8
tick,0x7ff954e0fd34,312955660,0,0x0,8
tick,0x7ff954e0fd34,312971628,0,0x0,8
tick,0x7ff954e0fd34,312987571,0,0x0,8
tick,0x7ff954e0fd34,313002560,0,0x0,8
tick,0x7ff954e0fd34,313017499,0,0x0,8
tick,0x7ff954e0fd34,313032465,0,0x0,8
tick,0x7ff954e0fd34,313048434,0,0x0,8
tick,0x7ff954e0fd34,313063363,0,0x0,8
tick,0x7ff954e0fd34,313078552,0,0x0,8
tick,0x7ff954e0fd34,313094569,0,0x0,8
tick,0x7ff954e0fd34,313109560,0,0x0,8
tick,0x7ff954e0fd34,313125180,0,0x0,8
tick,0x7ff954e0fd34,313141168,0,0x0,8
tick,0x7ff954e0fd34,313156605,0,0x0,8
tick,0x7ff954e0fd34,313172512,0,0x0,8
tick,0x7ff954e0fd34,313188139,0,0x0,8
tick,0x7ff954e0fd34,313203620,0,0x0,8
tick,0x7ff954e0fd34,313218424,0,0x0,8
tick,0x7ff954e0fd34,313234440,0,0x0,8
tick,0x7ff954e0fd34,313250373,0,0x0,8
tick,0x7ff954e0fd34,313265663,0,0x0,8
tick,0x7ff954e0fd34,313281612,0,0x0,8
tick,0x7ff954e0fd34,313297330,0,0x0,8
tick,0x7ff954e0fd34,313313246,0,0x0,8
tick,0x7ff954e0fd34,313329257,0,0x0,8
tick,0x7ff954e0fd34,313345226,0,0x0,8
tick,0x7ff954e0fd34,313361171,0,0x0,8
tick,0x7ff954e0fd34,313377089,0,0x0,8
tick,0x7ff954e0fd34,313393063,0,0x0,8
tick,0x7ff954e0fd34,313409038,0,0x0,8
tick,0x7ff954e0fd34,313424970,0,0x0,8
tick,0x7ff954e0fd34,313440952,0,0x0,8
tick,0x7ff954e0fd34,313456898,0,0x0,8
tick,0x7ff954e0fd34,313472852,0,0x0,8
tick,0x7ff954e0fd34,313488135,0,0x0,8
tick,0x7ff954e0fd34,313504065,0,0x0,8
tick,0x7ff954e0fd34,313519049,0,0x0,8
tick,0x7ff954e0fd34,313534983,0,0x0,8
tick,0x7ff954e0fd34,313550948,0,0x0,8
tick,0x7ff954e0fd34,313566895,0,0x0,8
tick,0x7ff954e0fd34,313581888,0,0x0,8
tick,0x7ff954e0fd34,313597084,0,0x0,8
tick,0x7ff954e0fd34,313613056,0,0x0,8
tick,0x7ff954e0fd34,313629028,0,0x0,8
tick,0x7ff954e0fd34,313645028,0,0x0,8
tick,0x7ff954e0fd34,313661039,0,0x0,8
tick,0x7ff954e0fd34,313676625,0,0x0,8
tick,0x7ff954e0fd34,313692538,0,0x0,8
tick,0x7ff954e0fd34,313707523,0,0x0,8
tick,0x7ff954e0fd34,313722466,0,0x0,8
tick,0x7ff954e0fd34,313737427,0,0x0,8
tick,0x7ff954e0fd34,313753369,0,0x0,8
tick,0x7ff954e0fd34,313769342,0,0x0,8
tick,0x7ff954e0fd34,313785304,0,0x0,8
tick,0x7ff954e0fd34,313801071,0,0x0,8
tick,0x7ff954e0fd34,313817063,0,0x0,8
tick,0x7ff954e0fd34,313832595,0,0x0,8
tick,0x7ff954e0fd34,313848561,0,0x0,8
tick,0x7ff954e0fd34,313864535,0,0x0,8
tick,0x7ff954e0fd34,313879480,0,0x0,8
tick,0x7ff954e0fd34,313895023,0,0x0,8
tick,0x7ff954e0fd34,313911020,0,0x0,8
tick,0x7ff954e0fd34,313925940,0,0x0,8
tick,0x7ff954e0fd34,313941919,0,0x0,8
tick,0x7ff954e0fd34,313956853,0,0x0,8
tick,0x7ff954e0fd34,313971853,0,0x0,8
tick,0x7ff954e0fd34,313987767,0,0x0,8
tick,0x7ff954e0fd34,314002763,0,0x0,8
tick,0x7ff954e0fd34,314018690,0,0x0,8
tick,0x7ff954e0fd34,314033908,0,0x0,8
tick,0x7ff954e0fd34,314049607,0,0x0,8
tick,0x7ff954e0fd34,314065268,0,0x0,8
tick,0x7ff954e0fd34,314081250,0,0x0,8
tick,0x7ff954e0fd34,314097102,0,0x0,8
tick,0x7ff954e0fd34,314112912,0,0x0,8
tick,0x7ff954e0fd34,314128180,0,0x0,8
tick,0x7ff954e0fd34,314143578,0,0x0,8
tick,0x7ff954e0fd34,314159545,0,0x0,8
tick,0x7ff954e0fd34,314175538,0,0x0,8
tick,0x7ff954e0fd34,314191502,0,0x0,8
tick,0x7ff954e0fd34,314206730,0,0x0,8
tick,0x7ff954e0fd34,314222716,0,0x0,8
tick,0x7ff954e0fd34,314237648,0,0x0,8
tick,0x7ff954e0fd34,314253766,0,0x0,8
tick,0x7ff954e0fd34,314269695,0,0x0,8
tick,0x7ff954e0fd34,314285686,0,0x0,8
tick,0x7ff954e0fd34,314301659,0,0x0,8
tick,0x7ff954e0fd34,314316818,0,0x0,8
tick,0x7ff954e0fd34,314332857,0,0x0,8
tick,0x7ff954e0fd34,314347754,0,0x0,8
tick,0x7ff954e0fd34,314363629,0,0x0,8
tick,0x7ff954e0fd34,314378284,0,0x0,8
tick,0x7ff954e0fd34,314394254,0,0x0,8
tick,0x7ff954e0fd34,314410080,0,0x0,8
tick,0x7ff954e0fd34,314425629,0,0x0,8
tick,0x7ff954e0fd34,314441287,0,0x0,8
tick,0x7ff954e0fd34,314457230,0,0x0,8
tick,0x7ff954e0fd34,314472772,0,0x0,8
tick,0x7ff954e0fd34,314488718,0,0x0,8
tick,0x7ff954e0fd34,314504682,0,0x0,8
tick,0x7ff954e0fd34,314520433,0,0x0,8
tick,0x7ff954e0fd34,314536395,0,0x0,8
tick,0x7ff954e0fd34,314552345,0,0x0,8
tick,0x7ff954e0fd34,314568285,0,0x0,8
tick,0x7ff954e0fd34,314584196,0,0x0,8
tick,0x7ff954e0fd34,314600229,0,0x0,8
tick,0x7ff954e0fd34,314615991,0,0x0,8
tick,0x7ff954e0fd34,314631897,0,0x0,8
tick,0x7ff954e0fd34,314647863,0,0x0,8
tick,0x7ff954e0fd34,314662896,0,0x0,8
tick,0x7ff954e0fd34,314678864,0,0x0,8
tick,0x7ff954e0fd34,314693852,0,0x0,8
tick,0x7ff954e0fd34,314708902,0,0x0,8
tick,0x7ff954e0fd34,314723624,0,0x0,8
tick,0x7ff954e0fd34,314738582,0,0x0,8
tick,0x7ff954e0fd34,314753564,0,0x0,8
tick,0x7ff954e0fd34,314769304,0,0x0,8
tick,0x7ff954e0fd34,314784673,0,0x0,8
tick,0x7ff954e0fd34,314799838,0,0x0,8
tick,0x7ff954e0fd34,314815303,0,0x0,8
tick,0x7ff954e0fd34,314830307,0,0x0,8
tick,0x7ff954e0fd34,314845508,0,0x0,8
tick,0x7ff954e0fd34,314861118,0,0x0,8
tick,0x7ff954e0fd34,314876175,0,0x0,8
tick,0x7ff954e0fd34,314892155,0,0x0,8
tick,0x7ff954e0fd34,314907770,0,0x0,8
tick,0x7ff954e0fd34,314923663,0,0x0,8
tick,0x7ff954e0fd34,314939662,0,0x0,8
tick,0x7ff954e0fd34,314955607,0,0x0,8
tick,0x7ff954e0fd34,314971544,0,0x0,8
tick,0x7ff954e0fd34,314986506,0,0x0,8
tick,0x7ff954e0fd34,315002448,0,0x0,8
tick,0x7ff954e0fd34,315017448,0,0x0,8
tick,0x7ff954e0fd34,315033382,0,0x0,8
tick,0x7ff954e0fd34,315048398,0,0x0,8
tick,0x7ff954e0fd34,315063135,0,0x0,8
tick,0x7ff954e0fd34,315078100,0,0x0,8
tick,0x7ff954e0fd34,315093112,0,0x0,8
tick,0x7ff954e0fd34,315108046,0,0x0,8
tick,0x7ff954e0fd34,315122974,0,0x0,8
tick,0x7ff954e0fd34,315137998,0,0x0,8
tick,0x7ff954e0fd34,315153636,0,0x0,8
tick,0x7ff954e0fd34,315169598,0,0x0,8
tick,0x7ff954e0fd34,315185550,0,0x0,8
tick,0x7ff954e0fd34,315201537,0,0x0,8
tick,0x7ff954e0fd34,315217466,0,0x0,8
tick,0x7ff954e0fd34,315233413,0,0x0,8
tick,0x7ff954e0fd34,315249359,0,0x0,8
tick,0x7ff954e0fd34,315265325,0,0x0,8
tick,0x7ff954e0fd34,315280442,0,0x0,8
tick,0x7ff954e0fd34,315296083,0,0x0,8
tick,0x7ff954e0fd34,315312043,0,0x0,8
tick,0x7ff954e0fd34,315328084,0,0x0,8
tick,0x7ff954e0fd34,315343938,0,0x0,8
tick,0x7ff954e0fd34,315359292,0,0x0,8
tick,0x7ff954e0fd34,315375260,0,0x0,8
tick,0x7ff954e0fd34,315391211,0,0x0,8
tick,0x7ff954e0fd34,315406562,0,0x0,8
tick,0x7ff954e0fd34,315422521,0,0x0,8
tick,0x7ff954e0fd34,315438521,0,0x0,8
tick,0x7ff954e0fd34,315453634,0,0x0,8
tick,0x7ff954e0fd34,315468624,0,0x0,8
tick,0x7ff954e0fd34,315483970,0,0x0,8
tick,0x7ff954e0fd34,315499859,0,0x0,8
tick,0x7ff954e0fd34,315515424,0,0x0,8
tick,0x7ff954e0fd34,315531398,0,0x0,8
tick,0x7ff954e0fd34,315546335,0,0x0,8
tick,0x7ff954e0fd34,315561262,0,0x0,8
tick,0x7ff954e0fd34,315576305,0,0x0,8
tick,0x7ff954e0fd34,315591279,0,0x0,8
tick,0x7ff954e0fd34,315606858,0,0x0,8
tick,0x7ff954e0fd34,315621997,0,0x0,8
tick,0x7ff954e0fd34,315636771,0,0x0,8
tick,0x7ff954e0fd34,315651749,0,0x0,8
tick,0x7ff954e0fd34,315666742,0,0x0,8
tick,0x7ff954e0fd34,315682644,0,0x0,8
tick,0x7ff954e0fd34,315697809,0,0x0,8
tick,0x7ff954e0fd34,315713755,0,0x0,8
tick,0x7ff954e0fd34,315729733,0,0x0,8
tick,0x7ff954e0fd34,315745663,0,0x0,8
tick,0x7ff954e0fd34,315761623,0,0x0,8
tick,0x7ff954e0fd34,315776764,0,0x0,8
tick,0x7ff954e0fd34,315792876,0,0x0,8
tick,0x7ff954e0fd34,315808433,0,0x0,8
tick,0x7ff954e0fd34,315824345,0,0x0,8
tick,0x7ff954e0fd34,315840326,0,0x0,8
tick,0x7ff954e0fd34,315855518,0,0x0,8
tick,0x7ff954e0fd34,315870598,0,0x0,8
tick,0x7ff954e0fd34,315886673,0,0x0,8
tick,0x7ff954e0fd34,315902512,0,0x0,8
tick,0x7ff954e0fd34,315918453,0,0x0,8
tick,0x7ff954e0fd34,315933437,0,0x0,8
tick,0x7ff954e0fd34,315949194,0,0x0,8
tick,0x7ff954e0fd34,315964703,0,0x0,8
tick,0x7ff954e0fd34,315979671,0,0x0,8
tick,0x7ff954e0fd34,315995648,0,0x0,8
tick,0x7ff954e0fd34,316011697,0,0x0,8
tick,0x7ff954e0fd34,316026608,0,0x0,8
tick,0x7ff954e0fd34,316041549,0,0x0,8
tick,0x7ff954e0fd34,316056438,0,0x0,8
tick,0x7ff954e0fd34,316071431,0,0x0,8
tick,0x7ff954e0fd34,316086663,0,0x0,8
tick,0x7ff954e0fd34,316101598,0,0x0,8
tick,0x7ff954e0fd34,316117608,0,0x0,8
tick,0x7ff954e0fd34,316132737,0,0x0,8
tick,0x7ff954e0fd34,316148486,0,0x0,8
tick,0x7ff954e0fd34,316163480,0,0x0,8
tick,0x7ff954e0fd34,316178424,0,0x0,8
tick,0x7ff954e0fd34,316193388,0,0x0,8
tick,0x7ff954e0fd34,316209021,0,0x0,8
tick,0x7ff954e0fd34,316224977,0,0x0,8
tick,0x7ff954e0fd34,316240893,0,0x0,8
tick,0x7ff954e0fd34,316256861,0,0x0,8
tick,0x7ff954e0fd34,316272833,0,0x0,8
tick,0x7ff954e0fd34,316288863,0,0x0,8
tick,0x7ff954e0fd34,316304103,0,0x0,8
tick,0x7ff954e0fd34,316319602,0,0x0,8
tick,0x7ff954e0fd34,316335603,0,0x0,8
tick,0x7ff954e0fd34,316351518,0,0x0,8
tick,0x7ff954e0fd34,316367455,0,0x0,8
tick,0x7ff954e0fd34,316382451,0,0x0,8
tick,0x7ff954e0fd34,316397967,0,0x0,8
tick,0x7ff954e0fd34,316414020,0,0x0,8
tick,0x7ff954e0fd34,316429719,0,0x0,8
tick,0x7ff954e0fd34,316444716,0,0x0,8
tick,0x7ff954e0fd34,316460670,0,0x0,8
tick,0x7ff954e0fd34,316476607,0,0x0,8
tick,0x7ff954e0fd34,316492597,0,0x0,8
tick,0x7ff954e0fd34,316508301,0,0x0,8
tick,0x7ff954e0fd34,316523295,0,0x0,8
tick,0x7ff954e0fd34,316538263,0,0x0,8
tick,0x7ff954e0fd34,316554236,0,0x0,8
tick,0x7ff954e0fd34,316570155,0,0x0,8
tick,0x7ff954e0fd34,316586154,0,0x0,8
tick,0x7ff954e0fd34,316602152,0,0x0,8
tick,0x7ff954e0fd34,316618096,0,0x0,8
tick,0x7ff954e0fd34,316634053,0,0x0,8
tick,0x7ff954e0fd34,316649010,0,0x0,8
tick,0x7ff954e0fd34,316664984,0,0x0,8
tick,0x7ff954e0fd34,316679920,0,0x0,8
tick,0x7ff954e0fd34,316695884,0,0x0,8
tick,0x7ff954e0fd34,316711849,0,0x0,8
tick,0x7ff954e0fd34,316727958,0,0x0,8
tick,0x7ff954e0fd34,316743818,0,0x0,8
tick,0x7ff954e0fd34,316759732,0,0x0,8
tick,0x7ff954e0fd34,316774680,0,0x0,8
tick,0x7ff954e0fd34,316789683,0,0x0,8
tick,0x7ff954e0fd34,316805595,0,0x0,8
tick,0x7ff954e0fd34,316820585,0,0x0,8
tick,0x7ff954e0fd34,316835532,0,0x0,8
tick,0x7ff954e0fd34,316850473,0,0x0,8
tick,0x7ff954e0fd34,316865418,0,0x0,8
tick,0x7ff954e0fd34,316881379,0,0x0,8
tick,0x7ff954e0fd34,316897338,0,0x0,8
tick,0x7ff954e0fd34,316913347,0,0x0,8
tick,0x7ff954e0fd34,316929311,0,0x0,8
tick,0x7ff954e0fd34,316945240,0,0x0,8
tick,0x7ff954e0fd34,316961052,0,0x0,8
tick,0x7ff954e0fd34,316977039,0,0x0,8
tick,0x7ff954e0fd34,316993107,0,0x0,8
tick,0x7ff954e0fd34,317009049,0,0x0,8
tick,0x7ff954e0fd34,317024906,0,0x0,8
tick,0x7ff954e0fd34,317040067,0,0x0,8
tick,0x7ff954e0fd34,317055048,0,0x0,8
tick,0x7ff954e0fd34,317071089,0,0x0,8
tick,0x7ff954e0fd34,317086973,0,0x0,8
tick,0x7ff954e0fd34,317102905,0,0x0,8
tick,0x7ff954e0fd34,317117886,0,0x0,8
tick,0x7ff954e0fd34,317133808,0,0x0,8
tick,0x7ff954e0fd34,317148779,0,0x0,8
tick,0x7ff954e0fd34,317164753,0,0x0,8
tick,0x7ff954e0fd34,317179691,0,0x0,8
tick,0x7ff954e0fd34,317194653,0,0x0,8
tick,0x7ff954e0fd34,317209640,0,0x0,8
tick,0x7ff954e0fd34,317225561,0,0x0,8
tick,0x7ff954e0fd34,317241533,0,0x0,8
tick,0x7ff954e0fd34,317256863,0,0x0,8
tick,0x7ff954e0fd34,317272391,0,0x0,8
tick,0x7ff954e0fd34,317288329,0,0x0,8
tick,0x7ff954e0fd34,317304285,0,0x0,8
tick,0x7ff954e0fd34,317319327,0,0x0,8
tick,0x7ff954e0fd34,317334310,0,0x0,8
tick,0x7ff954e0fd34,317349155,0,0x0,8
tick,0x7ff954e0fd34,317364109,0,0x0,8
tick,0x7ff954e0fd34,317380083,0,0x0,8
tick,0x7ff954e0fd34,317396064,0,0x0,8
tick,0x7ff954e0fd34,317411494,0,0x0,8
tick,0x7ff954e0fd34,317427164,0,0x0,8
tick,0x7ff954e0fd34,317443094,0,0x0,8
tick,0x7ff954e0fd34,317458968,0,0x0,8
tick,0x7ff954e0fd34,317474676,0,0x0,8
tick,0x7ff954e0fd34,317490632,0,0x0,8
tick,0x7ff954e0fd34,317505299,0,0x0,8
tick,0x7ff954e0fd34,317520848,0,0x0,8
tick,0x7ff954e0fd34,317536369,0,0x0,8
tick,0x7ff954e0fd34,317551580,0,0x0,8
tick,0x7ff954e0fd34,317567557,0,0x0,8
tick,0x7ff954e0fd34,317582557,0,0x0,8
tick,0x7ff954e0fd34,317597501,0,0x0,8
tick,0x7ff954e0fd34,317612462,0,0x0,8
tick,0x7ff954e0fd34,317628443,0,0x0,8
tick,0x7ff954e0fd34,317644385,0,0x0,8
tick,0x7ff954e0fd34,317660366,0,0x0,8
tick,0x7ff954e0fd34,317676285,0,0x0,8
tick,0x7ff954e0fd34,317692256,0,0x0,8
tick,0x7ff954e0fd34,317708196,0,0x0,8
tick,0x7ff954e0fd34,317724178,0,0x0,8
tick,0x7ff954e0fd34,317740117,0,0x0,8
tick,0x7ff954e0fd34,317755091,0,0x0,8
tick,0x7ff954e0fd34,317770443,0,0x0,8
tick,0x7ff954e0fd34,317786411,0,0x0,8
tick,0x7ff954e0fd34,317802398,0,0x0,8
tick,0x7ff954e0fd34,317818296,0,0x0,8
tick,0x7ff954e0fd34,317834269,0,0x0,8
tick,0x7ff954e0fd34,317850231,0,0x0,8
tick,0x7ff954e0fd34,317865175,0,0x0,8
tick,0x7ff954e0fd34,317880161,0,0x0,8
tick,0x7ff954e0fd34,317895109,0,0x0,8
tick,0x7ff954e0fd34,317910075,0,0x0,8
tick,0x7ff954e0fd34,317926026,0,0x0,8
tick,0x7ff954e0fd34,317941003,0,0x0,8
tick,0x7ff954e0fd34,317956947,0,0x0,8
tick,0x7ff954e0fd34,317971914,0,0x0,8
tick,0x7ff954e0fd34,317986842,0,0x0,8
tick,0x7ff954e0fd34,318001839,0,0x0,8
tick,0x7ff954e0fd34,318016726,0,0x0,8
tick,0x7ff954e0fd34,318032659,0,0x0,8
tick,0x7ff954e0fd34,318047637,0,0x0,8
tick,0x7ff954e0fd34,318063574,0,0x0,8
tick,0x7ff954e0fd34,318078571,0,0x0,8
tick,0x7ff954e0fd34,318094514,0,0x0,8
tick,0x7ff954e0fd34,318109997,0,0x0,8
tick,0x7ff954e0fd34,318125997,0,0x0,8
tick,0x7ff954e0fd34,318141449,0,0x0,8
tick,0x7ff954e0fd34,318156964,0,0x0,8
tick,0x7ff954e0fd34,318172916,0,0x0,8
tick,0x7ff954e0fd34,318188876,0,0x0,8
tick,0x7ff954e0fd34,318204910,0,0x0,8
tick,0x7ff954e0fd34,318219839,0,0x0,8
tick,0x7ff954e0fd34,318235757,0,0x0,8
tick,0x7ff954e0fd34,318250739,0,0x0,8
tick,0x7ff954e0fd34,318266690,0,0x0,8
tick,0x7ff954e0fd34,318282633,0,0x0,8
tick,0x7ff954e0fd34,318298608,0,0x0,8
tick,0x7ff954e0fd34,318314562,0,0x0,8
tick,0x7ff954e0fd34,318330536,0,0x0,8
tick,0x7ff954e0fd34,318346104,0,0x0,8
tick,0x7ff954e0fd34,318362111,0,0x0,8
tick,0x7ff954e0fd34,318377399,0,0x0,8
tick,0x7ff954e0fd34,318393355,0,0x0,8
tick,0x7ff954e0fd34,318409364,0,0x0,8
tick,0x7ff954e0fd34,318425243,0,0x0,8
tick,0x7ff954e0fd34,318442189,0,0x0,8
tick,0x7ff954e0fd34,318456261,0,0x0,8
tick,0x7ff954e0fd34,318472114,0,0x0,8
tick,0x7ff954e0fd34,318487086,0,0x0,8
tick,0x7ff954e0fd34,318502259,0,0x0,8
tick,0x7ff954e0fd34,318518171,0,0x0,8
tick,0x7ff954e0fd34,318533111,0,0x0,8
tick,0x7ff954e0fd34,318549074,0,0x0,8
tick,0x7ff954e0fd34,318564046,0,0x0,8
tick,0x7ff954e0fd34,318579370,0,0x0,8
tick,0x7ff954e0fd34,318594170,0,0x0,8
tick,0x7ff954e0fd34,318609534,0,0x0,8
tick,0x7ff954e0fd34,318625462,0,0x0,8
tick,0x7ff954e0fd34,318641447,0,0x0,8
tick,0x7ff954e0fd34,318656383,0,0x0,8
tick,0x7ff954e0fd34,318671321,0,0x0,8
tick,0x7ff954e0fd34,318686312,0,0x0,8
tick,0x7ff954e0fd34,318701236,0,0x0,8
tick,0x7ff954e0fd34,318715872,0,0x0,8
tick,0x7ff954e0fd34,318731823,0,0x0,8
tick,0x7ff954e0fd34,318746789,0,0x0,8
tick,0x7ff954e0fd34,318761730,0,0x0,8
tick,0x7ff954e0fd34,318776728,0,0x0,8
tick,0x7ff954e0fd34,318792827,0,0x0,8
tick,0x7ff954e0fd34,318807605,0,0x0,8
tick,0x7ff954e0fd34,318823394,0,0x0,8
tick,0x7ff954e0fd34,318838683,0,0x0,8
tick,0x7ff954e0fd34,318853647,0,0x0,8
tick,0x7ff954e0fd34,318868627,0,0x0,8
tick,0x7ff954e0fd34,318883478,0,0x0,8
tick,0x7ff954e0fd34,318899401,0,0x0,8
tick,0x7ff954e0fd34,318915352,0,0x0,8
tick,0x7ff954e0fd34,318930856,0,0x0,8
tick,0x7ff954e0fd34,318946691,0,0x0,8
tick,0x7ff954e0fd34,318962656,0,0x0,8
tick,0x7ff954e0fd34,318978592,0,0x0,8
tick,0x7ff954e0fd34,318994597,0,0x0,8
tick,0x7ff954e0fd34,319010678,0,0x0,8
tick,0x7ff954e0fd34,319026512,0,0x0,8
tick,0x7ff954e0fd34,319042423,0,0x0,8
tick,0x7ff954e0fd34,319058449,0,0x0,8
tick,0x7ff954e0fd34,319074388,0,0x0,8
tick,0x7ff954e0fd34,319090299,0,0x0,8
tick,0x7ff954e0fd34,319105258,0,0x0,8
tick,0x7ff954e0fd34,319120770,0,0x0,8
tick,0x7ff954e0fd34,319136710,0,0x0,8
tick,0x7ff954e0fd34,319152268,0,0x0,8
tick,0x7ff954e0fd34,319168213,0,0x0,8
tick,0x7ff954e0fd34,319184070,0,0x0,8
tick,0x7ff954e0fd34,319200014,0,0x0,8
tick,0x7ff954e0fd34,319214833,0,0x0,8
tick,0x7ff954e0fd34,319230602,0,0x0,8
tick,0x7ff954e0fd34,319246526,0,0x0,8
tick,0x7ff954e0fd34,319262028,0,0x0,8
tick,0x7ff954e0fd34,319277338,0,0x0,8
tick,0x7ff954e0fd34,319293303,0,0x0,8
tick,0x7ff954e0fd34,319309275,0,0x0,8
tick,0x7ff954e0fd34,319324984,0,0x0,8
tick,0x7ff954e0fd34,319340815,0,0x0,8
tick,0x7ff954e0fd34,319356753,0,0x0,8
tick,0x7ff954e0fd34,319372715,0,0x0,8
tick,0x7ff954e0fd34,319388672,0,0x0,8
tick,0x7ff954e0fd34,319404648,0,0x0,8
tick,0x7ff954e0fd34,319420629,0,0x0,8
tick,0x7ff954e0fd34,319436582,0,0x0,8
tick,0x7ff954e0fd34,319452521,0,0x0,8
tick,0x7ff954e0fd34,319468065,0,0x0,8
tick,0x7ff954e0fd34,319484036,0,0x0,8
tick,0x7ff954e0fd34,319499347,0,0x0,8
tick,0x7ff954e0fd34,319515282,0,0x0,8
tick,0x7ff954e0fd34,319530606,0,0x0,8
tick,0x7ff954e0fd34,319546571,0,0x0,8
tick,0x7ff954e0fd34,319561603,0,0x0,8
tick,0x7ff954e0fd34,319577119,0,0x0,8
tick,0x7ff954e0fd34,319592509,0,0x0,8
tick,0x7ff954e0fd34,319607776,0,0x0,8
tick,0x7ff954e0fd34,319623329,0,0x0,8
tick,0x7ff954e0fd34,319638250,0,0x0,8
tick,0x7ff954e0fd34,319653240,0,0x0,8
tick,0x7ff954e0fd34,319668205,0,0x0,8
tick,0x7ff954e0fd34,319683199,0,0x0,8
tick,0x7ff954e0fd34,319698624,0,0x0,8
tick,0x7ff954e0fd34,319714640,0,0x0,8
tick,0x7ff954e0fd34,319729547,0,0x0,8
tick,0x7ff954e0fd34,319746251,0,0x0,8
tick,0x7ff954e0fd34,319760505,0,0x0,8
tick,0x7ff954e0fd34,319776422,0,0x0,8
tick,0x7ff954e0fd34,319792380,0,0x0,8
tick,0x7ff954e0fd34,319808365,0,0x0,8
tick,0x7ff954e0fd34,319824401,0,0x0,8
tick,0x7ff954e0fd34,319840375,0,0x0,8
tick,0x7ff954e0fd34,319856300,0,0x0,8
tick,0x7ff954e0fd34,319871224,0,0x0,8
tick,0x7ff954e0fd34,319886153,0,0x0,8
tick,0x7ff954e0fd34,319902091,0,0x0,8
tick,0x7ff954e0fd34,319918118,0,0x0,8
tick,0x7ff954e0fd34,319934191,0,0x0,8
tick,0x7ff954e0fd34,319953206,0,0x0,8
tick,0x7ff954e0fd34,319969213,0,0x0,8
tick,0x7ff954e0fd34,319981354,0,0x0,8
tick,0x7ff954e0fd34,319996469,0,0x0,8
tick,0x7ff954e0fd34,320010845,0,0x0,8
tick,0x7ff954e0fd34,320047819,0,0x0,8
tick,0x7ff954e0fd34,320055786,0,0x0,8
tick,0x7ff954e0fd34,320070874,0,0x0,8
tick,0x7ff954e0fd34,320085653,0,0x0,8
tick,0x7ff954e0fd34,320100813,0,0x0,8
tick,0x7ff954e0fd34,320116628,0,0x0,8
tick,0x7ff954e0fd34,320136170,0,0x0,8
tick,0x7ff954e0fd34,320148666,0,0x0,8
tick,0x7ff954e0fd34,320164531,0,0x0,8
tick,0x7ff954e0fd34,320180786,0,0x0,8
tick,0x7ff954e0fd34,320196405,0,0x0,8
tick,0x7ff954e0fd34,320212165,0,0x0,8
tick,0x7ff954e0fd34,320228402,0,0x0,8
tick,0x7ff954e0fd34,320244254,0,0x0,8
tick,0x7ff954e0fd34,320260024,0,0x0,8
tick,0x7ff954e0fd34,320275914,0,0x0,8
tick,0x7ff954e0fd34,320290881,0,0x0,8
tick,0x7ff954e0fd34,320305879,0,0x0,8
tick,0x7ff954e0fd34,320320817,0,0x0,8
tick,0x7ff954e0fd34,320335816,0,0x0,8
tick,0x7ff954e0fd34,320351746,0,0x0,8
tick,0x7ff954e0fd34,320367699,0,0x0,8
tick,0x7ff954e0fd34,320383764,0,0x0,8
tick,0x7ff954e0fd34,320399601,0,0x0,8
tick,0x7ff954e0fd34,320415674,0,0x0,8
tick,0x7ff954e0fd34,320431217,0,0x0,8
tick,0x7ff954e0fd34,320446117,0,0x0,8
tick,0x7ff954e0fd34,320461160,0,0x0,8
tick,0x7ff954e0fd34,320476021,0,0x0,8
tick,0x7ff954e0fd34,320490934,0,0x0,8
tick,0x7ff954e0fd34,320505714,0,0x0,8
tick,0x7ff954e0fd34,320520738,0,0x0,8
tick,0x7ff954e0fd34,320535628,0,0x0,8
tick,0x7ff954e0fd34,320551622,0,0x0,8
tick,0x7ff954e0fd34,320566603,0,0x0,8
tick,0x7ff954e0fd34,320582525,0,0x0,8
tick,0x7ff954e0fd34,320597492,0,0x0,8
tick,0x7ff954e0fd34,320613448,0,0x0,8
tick,0x7ff954e0fd34,320629844,0,0x0,8
tick,0x7ff954e0fd34,320646089,0,0x0,8
tick,0x7ff954e0fd34,320660343,0,0x0,8
tick,0x7ff954e0fd34,320675267,0,0x0,8
tick,0x7ff954e0fd34,320690276,0,0x0,8
tick,0x7ff954e0fd34,320705207,0,0x0,8
tick,0x7ff954e0fd34,320720725,0,0x0,8
tick,0x7ff954e0fd34,320736671,0,0x0,8
tick,0x7ff954e0fd34,320752655,0,0x0,8
tick,0x7ff954e0fd34,320768602,0,0x0,8
tick,0x7ff954e0fd34,320783551,0,0x0,8
tick,0x7ff954e0fd34,320798508,0,0x0,8
tick,0x7ff954e0fd34,320813540,0,0x0,8
tick,0x7ff954e0fd34,320828702,0,0x0,8
tick,0x7ff954e0fd34,320844491,0,0x0,8
tick,0x7ff954e0fd34,320860368,0,0x0,8
tick,0x7ff954e0fd34,320875332,0,0x0,8
tick,0x7ff954e0fd34,320890257,0,0x0,8
tick,0x7ff954e0fd34,320905240,0,0x0,8
tick,0x7ff954e0fd34,320920696,0,0x0,8
tick,0x7ff954e0fd34,320935671,0,0x0,8
tick,0x7ff954e0fd34,320951618,0,0x0,8
tick,0x7ff954e0fd34,320967573,0,0x0,8
tick,0x7ff954e0fd34,320982640,0,0x0,8
tick,0x7ff954e0fd34,320998591,0,0x0,8
tick,0x7ff954e0fd34,321013512,0,0x0,8
tick,0x7ff954e0fd34,321028721,0,0x0,8
tick,0x7ff954e0fd34,321043596,0,0x0,8
tick,0x7ff954e0fd34,321058547,0,0x0,8
tick,0x7ff954e0fd34,321073507,0,0x0,8
tick,0x7ff954e0fd34,321089488,0,0x0,8
tick,0x7ff954e0fd34,321104400,0,0x0,8
tick,0x7ff954e0fd34,321120410,0,0x0,8
tick,0x7ff954e0fd34,321136359,0,0x0,8
tick,0x7ff954e0fd34,321152295,0,0x0,8
tick,0x7ff954e0fd34,321168399,0,0x0,8
tick,0x7ff954e0fd34,321184275,0,0x0,8
tick,0x7ff954e0fd34,321200394,0,0x0,8
tick,0x7ff954e0fd34,321215208,0,0x0,8
tick,0x7ff954e0fd34,321231124,0,0x0,8
tick,0x7ff954e0fd34,321246246,0,0x0,8
tick,0x7ff954e0fd34,321262092,0,0x0,8
tick,0x7ff954e0fd34,321278278,0,0x0,8
tick,0x7ff954e0fd34,321293868,0,0x0,8
tick,0x7ff954e0fd34,321310137,0,0x0,8
tick,0x7ff954e0fd34,321325874,0,0x0,8
tick,0x7ff954e0fd34,321341818,0,0x0,8
tick,0x7ff954e0fd34,321357770,0,0x0,8
tick,0x7ff954e0fd34,321373662,0,0x0,8
tick,0x7ff954e0fd34,321389692,0,0x0,8
tick,0x7ff954e0fd34,321404673,0,0x0,8
tick,0x7ff954e0fd34,321419614,0,0x0,8
tick,0x7ff954e0fd34,321434531,0,0x0,8
tick,0x7ff954e0fd34,321449450,0,0x0,8
tick,0x7ff954e0fd34,321464392,0,0x0,8
tick,0x7ff954e0fd34,321479406,0,0x0,8
tick,0x7ff954e0fd34,321494398,0,0x0,8
tick,0x7ff954e0fd34,321509659,0,0x0,8
tick,0x7ff954e0fd34,321525602,0,0x0,8
tick,0x7ff954e0fd34,321541042,0,0x0,8
tick,0x7ff954e0fd34,321556970,0,0x0,8
tick,0x7ff954e0fd34,321571917,0,0x0,8
tick,0x7ff954e0fd34,321586891,0,0x0,8
tick,0x7ff954e0fd34,321601918,0,0x0,8
tick,0x7ff954e0fd34,321616845,0,0x0,8
tick,0x7ff954e0fd34,321632783,0,0x0,8
tick,0x7ff954e0fd34,321648659,0,0x0,8
tick,0x7ff954e0fd34,321664578,0,0x0,8
tick,0x7ff954e0fd34,321680523,0,0x0,8
tick,0x7ff954e0fd34,321695494,0,0x0,8
tick,0x7ff954e0fd34,321710461,0,0x0,8
tick,0x7ff954e0fd34,321725501,0,0x0,8
tick,0x7ff954e0fd34,321740819,0,0x0,8
tick,0x7ff954e0fd34,321756363,0,0x0,8
tick,0x7ff954e0fd34,321772340,0,0x0,8
tick,0x7ff954e0fd34,321788292,0,0x0,8
tick,0x7ff954e0fd34,321804249,0,0x0,8
tick,0x7ff954e0fd34,321819193,0,0x0,8
tick,0x7ff954e0fd34,321834156,0,0x0,8
tick,0x7ff954e0fd34,321850113,0,0x0,8
tick,0x7ff954e0fd34,321865958,0,0x0,8
tick,0x7ff954e0fd34,321881911,0,0x0,8
tick,0x7ff954e0fd34,321897879,0,0x0,8
tick,0x7ff954e0fd34,321913809,0,0x0,8
tick,0x7ff954e0fd34,321928768,0,0x0,8
tick,0x7ff954e0fd34,321943729,0,0x0,8
tick,0x7ff954e0fd34,321958735,0,0x0,8
tick,0x7ff954e0fd34,321974702,0,0x0,8
tick,0x7ff954e0fd34,321989652,0,0x0,8
tick,0x7ff954e0fd34,322005637,0,0x0,8
tick,0x7ff954e0fd34,322020511,0,0x0,8
tick,0x7ff954e0fd34,322036466,0,0x0,8
tick,0x7ff954e0fd34,322052033,0,0x0,8
tick,0x7ff954e0fd34,322068064,0,0x0,8
tick,0x7ff954e0fd34,322083995,0,0x0,8
tick,0x7ff954e0fd34,322099950,0,0x0,8
tick,0x7ff954e0fd34,322115685,0,0x0,8
tick,0x7ff954e0fd34,322131077,0,0x0,8
tick,0x7ff954e0fd34,322146063,0,0x0,8
tick,0x7ff954e0fd34,322162002,0,0x0,8
tick,0x7ff954e0fd34,322178081,0,0x0,8
tick,0x7ff954e0fd34,322193619,0,0x0,8
tick,0x7ff954e0fd34,322208527,0,0x0,8
tick,0x7ff954e0fd34,322223999,0,0x0,8
tick,0x7ff954e0fd34,322239453,0,0x0,8
tick,0x7ff954e0fd34,322255400,0,0x0,8
tick,0x7ff954e0fd34,322271408,0,0x0,8
tick,0x7ff954e0fd34,322287282,0,0x0,8
tick,0x7ff954e0fd34,322303264,0,0x0,8
tick,0x7ff954e0fd34,322319085,0,0x0,8
tick,0x7ff954e0fd34,322334359,0,0x0,8
tick,0x7ff954e0fd34,322349619,0,0x0,8
tick,0x7ff954e0fd34,322364556,0,0x0,8
tick,0x7ff954e0fd34,322380535,0,0x0,8
tick,0x7ff954e0fd34,322396520,0,0x0,8
tick,0x7ff954e0fd34,322412421,0,0x0,8
tick,0x7ff954e0fd34,322428404,0,0x0,8
tick,0x7ff954e0fd34,322443399,0,0x0,8
tick,0x7ff954e0fd34,322458297,0,0x0,8
tick,0x7ff954e0fd34,322473293,0,0x0,8
tick,0x7ff954e0fd34,322489263,0,0x0,8
tick,0x7ff954e0fd34,322505175,0,0x0,8
tick,0x7ff954e0fd34,322521381,0,0x0,8
tick,0x7ff954e0fd34,322537107,0,0x0,8
tick,0x7ff954e0fd34,322553095,0,0x0,8
tick,0x7ff954e0fd34,322568051,0,0x0,8
tick,0x7ff954e0fd34,322583032,0,0x0,8
tick,0x7ff954e0fd34,322598945,0,0x0,8
tick,0x7ff954e0fd34,322613994,0,0x0,8
tick,0x7ff954e0fd34,322628867,0,0x0,8
tick,0x7ff954e0fd34,322643823,0,0x0,8
tick,0x7ff954e0fd34,322659505,0,0x0,8
tick,0x7ff954e0fd34,322675368,0,0x0,8
tick,0x7ff954e0fd34,322691353,0,0x0,8
tick,0x7ff954e0fd34,322707290,0,0x0,8
tick,0x7ff954e0fd34,322722240,0,0x0,8
tick,0x7ff954e0fd34,322737791,0,0x0,8
tick,0x7ff954e0fd34,322753724,0,0x0,8
tick,0x7ff954e0fd34,322769719,0,0x0,8
tick,0x7ff954e0fd34,322784687,0,0x0,8
tick,0x7ff954e0fd34,322800005,0,0x0,8
tick,0x7ff954e0fd34,322814991,0,0x0,8
tick,0x7ff954e0fd34,322829813,0,0x0,8
tick,0x7ff954e0fd34,322844814,0,0x0,8
tick,0x7ff954e0fd34,322860829,0,0x0,8
tick,0x7ff954e0fd34,322876814,0,0x0,8
tick,0x7ff954e0fd34,322892505,0,0x0,8
tick,0x7ff954e0fd34,322907774,0,0x0,8
tick,0x7ff954e0fd34,322922724,0,0x0,8
tick,0x7ff954e0fd34,322938027,0,0x0,8
tick,0x7ff954e0fd34,322953033,0,0x0,8
tick,0x7ff954e0fd34,322969079,0,0x0,8
tick,0x7ff954e0fd34,322984933,0,0x0,8
tick,0x7ff954e0fd34,323000501,0,0x0,8
tick,0x7ff954e0fd34,323016447,0,0x0,8
tick,0x7ff954e0fd34,323032214,0,0x0,8
tick,0x7ff954e0fd34,323047993,0,0x0,8
tick,0x7ff954e0fd34,323063981,0,0x0,8
tick,0x7ff954e0fd34,323079924,0,0x0,8
tick,0x7ff954e0fd34,323095844,0,0x0,8
tick,0x7ff954e0fd34,323111838,0,0x0,8
tick,0x7ff954e0fd34,323127753,0,0x0,8
tick,0x7ff954e0fd34,323143725,0,0x0,8
tick,0x7ff954e0fd34,323159673,0,0x0,8
tick,0x7ff954e0fd34,323175649,0,0x0,8
tick,0x7ff954e0fd34,323191589,0,0x0,8
tick,0x7ff954e0fd34,323206542,0,0x0,8
tick,0x7ff954e0fd34,323222488,0,0x0,8
tick,0x7ff954e0fd34,323238181,0,0x0,8
tick,0x7ff954e0fd34,323253505,0,0x0,8
tick,0x7ff954e0fd34,323269484,0,0x0,8
tick,0x7ff954e0fd34,323284198,0,0x0,8
tick,0x7ff954e0fd34,323300145,0,0x0,8
tick,0x7ff954e0fd34,323315268,0,0x0,8
tick,0x7ff954e0fd34,323330208,0,0x0,8
tick,0x7ff954e0fd34,323345145,0,0x0,8
tick,0x7ff954e0fd34,323359899,0,0x0,8
tick,0x7ff954e0fd34,323375898,0,0x0,8
tick,0x7ff954e0fd34,323391807,0,0x0,8
tick,0x7ff954e0fd34,323406848,0,0x0,8
tick,0x7ff954e0fd34,323421729,0,0x0,8
tick,0x7ff954e0fd34,323437840,0,0x0,8
tick,0x7ff954e0fd34,323452285,0,0x0,8
tick,0x7ff954e0fd34,323468222,0,0x0,8
tick,0x7ff954e0fd34,323484199,0,0x0,8
tick,0x7ff954e0fd34,323499120,0,0x0,8
tick,0x7ff954e0fd34,323514413,0,0x0,8
tick,0x7ff954e0fd34,323529040,0,0x0,8
tick,0x7ff954e0fd34,323544077,0,0x0,8
tick,0x7ff954e0fd34,323560029,0,0x0,8
tick,0x7ff954e0fd34,323574922,0,0x0,8
tick,0x7ff954e0fd34,323590901,0,0x0,8
tick,0x7ff954e0fd34,323605820,0,0x0,8
tick,0x7ff954e0fd34,323620817,0,0x0,8
tick,0x7ff954e0fd34,323635775,0,0x0,8
tick,0x7ff954e0fd34,323650716,0,0x0,8
tick,0x7ff954e0fd34,323666718,0,0x0,8
tick,0x7ff954e0fd34,323682616,0,0x0,8
tick,0x7ff954e0fd34,323698949,0,0x0,8
tick,0x7ff954e0fd34,323714887,0,0x0,8
tick,0x7ff954e0fd34,323728534,0,0x0,8
tick,0x7ff954e0fd34,323744475,0,0x0,8
tick,0x7ff954e0fd34,323760432,0,0x0,8
tick,0x7ff954e0fd34,323775897,0,0x0,8
tick,0x7ff954e0fd34,323790888,0,0x0,8
tick,0x7ff954e0fd34,323806809,0,0x0,8
tick,0x7ff954e0fd34,323822780,0,0x0,8
tick,0x7ff954e0fd34,323838727,0,0x0,8
tick,0x7ff954e0fd34,323854692,0,0x0,8
tick,0x7ff954e0fd34,323870749,0,0x0,8
tick,0x7ff954e0fd34,323886627,0,0x0,8
tick,0x7ff954e0fd34,323902732,0,0x0,8
tick,0x7ff954e0fd34,323920386,0,0x0,8
tick,0x7ff954e0fd34,323934710,0,0x0,8
tick,0x7ff954e0fd34,323950450,0,0x0,8
tick,0x7ff954e0fd34,323966555,0,0x0,8
tick,0x7ff954e0fd34,323981490,0,0x0,8
tick,0x7ff954e0fd34,323997288,0,0x0,8
tick,0x7ff954e0fd34,324012282,0,0x0,8
tick,0x7ff954e0fd34,324028213,0,0x0,8
tick,0x7ff954e0fd34,324044177,0,0x0,8
tick,0x7ff954e0fd34,324060142,0,0x0,8
tick,0x7ff954e0fd34,324076073,0,0x0,8
tick,0x7ff954e0fd34,324092014,0,0x0,8
tick,0x7ff954e0fd34,324108077,0,0x0,8
tick,0x7ff954e0fd34,324123929,0,0x0,8
tick,0x7ff954e0fd34,324138893,0,0x0,8
tick,0x7ff954e0fd34,324153887,0,0x0,8
tick,0x7ff954e0fd34,324168862,0,0x0,8
tick,0x7ff954e0fd34,324183829,0,0x0,8
tick,0x7ff954e0fd34,324200244,0,0x0,8
tick,0x7ff954e0fd34,324215701,0,0x0,8
tick,0x7ff954e0fd34,324231647,0,0x0,8
tick,0x7ff954e0fd34,324246900,0,0x0,8
tick,0x7ff954e0fd34,324262581,0,0x0,8
tick,0x7ff954e0fd34,324291139,0,0x0,8
tick,0x7ff954e0fd34,324302215,0,0x0,8
tick,0x7ff954e0fd34,324313639,0,0x0,8
tick,0x7ff954e0fd34,324323068,0,0x0,8
tick,0x7ff954e0fd34,324338091,0,0x0,8
tick,0x7ff954e0fd34,324356407,0,0x0,8
tick,0x7ff954e0fd34,324368830,0,0x0,8
tick,0x7ff954e0fd34,324384982,0,0x0,8
tick,0x7ff954e0fd34,324400450,0,0x0,8
tick,0x7ff954e0fd34,324415734,0,0x0,8
tick,0x7ff954e0fd34,324431747,0,0x0,8
tick,0x7ff954e0fd34,324447636,0,0x0,8
tick,0x7ff954e0fd34,324463594,0,0x0,8
tick,0x7ff954e0fd34,324479545,0,0x0,8
tick,0x7ff954e0fd34,324495494,0,0x0,8
tick,0x7ff954e0fd34,324510458,0,0x0,8
tick,0x7ff954e0fd34,324526425,0,0x0,8
tick,0x7ff954e0fd34,324541920,0,0x0,8
tick,0x7ff954e0fd34,324556879,0,0x0,8
tick,0x7ff954e0fd34,324571866,0,0x0,8
tick,0x7ff954e0fd34,324587771,0,0x0,8
tick,0x7ff954e0fd34,324602743,0,0x0,8
tick,0x7ff954e0fd34,324617736,0,0x0,8
tick,0x7ff954e0fd34,324632780,0,0x0,8
tick,0x7ff954e0fd34,324648718,0,0x0,8
tick,0x7ff954e0fd34,324663721,0,0x0,8
tick,0x7ff954e0fd34,324678675,0,0x0,8
tick,0x7ff954e0fd34,324693605,0,0x0,8
tick,0x7ff954e0fd34,324708590,0,0x0,8
tick,0x7ff954e0fd34,324723658,0,0x0,8
tick,0x7ff954e0fd34,324739018,0,0x0,8
tick,0x7ff954e0fd34,324754997,0,0x0,8
tick,0x7ff954e0fd34,324770092,0,0x0,8
tick,0x7ff954e0fd34,324785213,0,0x0,8
tick,0x7ff954e0fd34,324800388,0,0x0,8
tick,0x7ff954e0fd34,324815492,0,0x0,8
tick,0x7ff954e0fd34,324831263,0,0x0,8
tick,0x7ff954e0fd34,324846273,0,0x0,8
tick,0x7ff954e0fd34,324862185,0,0x0,8
tick,0x7ff954e0fd34,324878157,0,0x0,8
tick,0x7ff954e0fd34,324894120,0,0x0,8
tick,0x7ff954e0fd34,324910112,0,0x0,8
tick,0x7ff954e0fd34,324926014,0,0x0,8
tick,0x7ff954e0fd34,324941501,0,0x0,8
tick,0x7ff954e0fd34,324957411,0,0x0,8
tick,0x7ff954e0fd34,324973383,0,0x0,8
tick,0x7ff954e0fd34,324988343,0,0x0,8
tick,0x7ff954e0fd34,325004338,0,0x0,8
tick,0x7ff954e0fd34,325019275,0,0x0,8
tick,0x7ff954e0fd34,325035220,0,0x0,8
tick,0x7ff954e0fd34,325050743,0,0x0,8
tick,0x7ff954e0fd34,325066424,0,0x0,8
tick,0x7ff954e0fd34,325082375,0,0x0,8
tick,0x7ff954e0fd34,325098362,0,0x0,8
tick,0x7ff954e0fd34,325114285,0,0x0,8
tick,0x7ff954e0fd34,325130238,0,0x0,8
tick,0x7ff954e0fd34,325146188,0,0x0,8
tick,0x7ff954e0fd34,325162168,0,0x0,8
tick,0x7ff954e0fd34,325178134,0,0x0,8
tick,0x7ff954e0fd34,325194081,0,0x0,8
tick,0x7ff954e0fd34,325210120,0,0x0,8
tick,0x7ff954e0fd34,325224987,0,0x0,8
tick,0x7ff954e0fd34,325240958,0,0x0,8
tick,0x7ff954e0fd34,325255910,0,0x0,8
tick,0x7ff954e0fd34,325270854,0,0x0,8
tick,0x7ff954e0fd34,325285839,0,0x0,8
tick,0x7ff954e0fd34,325301624,0,0x0,8
tick,0x7ff954e0fd34,325316577,0,0x0,8
tick,0x7ff954e0fd34,325332573,0,0x0,8
tick,0x7ff954e0fd34,325348497,0,0x0,8
tick,0x7ff954e0fd34,325363808,0,0x0,8
tick,0x7ff954e0fd34,325379388,0,0x0,8
tick,0x7ff954e0fd34,325394633,0,0x0,8
tick,0x7ff954e0fd34,325409540,0,0x0,8
tick,0x7ff954e0fd34,325424781,0,0x0,8
tick,0x7ff954e0fd34,325440726,0,0x0,8
tick,0x7ff954e0fd34,325456316,0,0x0,8
tick,0x7ff954e0fd34,325472297,0,0x0,8
tick,0x7ff954e0fd34,325487165,0,0x0,8
tick,0x7ff954e0fd34,325502265,0,0x0,8
tick,0x7ff954e0fd34,325517273,0,0x0,8
tick,0x7ff954e0fd34,325533251,0,0x0,8
tick,0x7ff954e0fd34,325548173,0,0x0,8
tick,0x7ff954e0fd34,325564044,0,0x0,8
tick,0x7ff954e0fd34,325580014,0,0x0,8
tick,0x7ff954e0fd34,325595677,0,0x0,8
tick,0x7ff954e0fd34,325611626,0,0x0,8
tick,0x7ff954e0fd34,325626562,0,0x0,8
tick,0x7ff954e0fd34,325641537,0,0x0,8
tick,0x7ff954e0fd34,325656477,0,0x0,8
tick,0x7ff954e0fd34,325671480,0,0x0,8
tick,0x7ff954e0fd34,325687385,0,0x0,8
tick,0x7ff954e0fd34,325702442,0,0x0,8
tick,0x7ff954e0fd34,325718331,0,0x0,8
tick,0x7ff954e0fd34,325733416,0,0x0,8
tick,0x7ff954e0fd34,325749421,0,0x0,8
tick,0x7ff954e0fd34,325764359,0,0x0,8
tick,0x7ff954e0fd34,325779309,0,0x0,8
tick,0x7ff954e0fd34,325795300,0,0x0,8
tick,0x7ff954e0fd34,325811255,0,0x0,8
tick,0x7ff954e0fd34,325826805,0,0x0,8
tick,0x7ff954e0fd34,325841807,0,0x0,8
tick,0x7ff954e0fd34,325857789,0,0x0,8
tick,0x7ff954e0fd34,325872707,0,0x0,8
tick,0x7ff954e0fd34,325888670,0,0x0,8
tick,0x7ff954e0fd34,325903728,0,0x0,8
tick,0x7ff954e0fd34,325919707,0,0x0,8
tick,0x7ff954e0fd34,325935116,0,0x0,8
tick,0x7ff954e0fd34,325950534,0,0x0,8
tick,0x7ff954e0fd34,325965891,0,0x0,8
tick,0x7ff954e0fd34,325980861,0,0x0,8
tick,0x7ff954e0fd34,325996825,0,0x0,8
tick,0x7ff954e0fd34,326012795,0,0x0,8
tick,0x7ff954e0fd34,326028568,0,0x0,8
tick,0x7ff954e0fd34,326044538,0,0x0,8
tick,0x7ff954e0fd34,326059898,0,0x0,8
tick,0x7ff954e0fd34,326076027,0,0x0,8
tick,0x7ff954e0fd34,326090945,0,0x0,8
tick,0x7ff954e0fd34,326106085,0,0x0,8
tick,0x7ff954e0fd34,326121779,0,0x0,8
tick,0x7ff954e0fd34,326137752,0,0x0,8
tick,0x7ff954e0fd34,326152712,0,0x0,8
tick,0x7ff954e0fd34,326168621,0,0x0,8
tick,0x7ff954e0fd34,326183575,0,0x0,8
tick,0x7ff954e0fd34,326198508,0,0x0,8
tick,0x7ff954e0fd34,326213494,0,0x0,8
tick,0x7ff954e0fd34,326228459,0,0x0,8
tick,0x7ff954e0fd34,326244427,0,0x0,8
tick,0x7ff954e0fd34,326259375,0,0x0,8
tick,0x7ff954e0fd34,326274380,0,0x0,8
tick,0x7ff954e0fd34,326289304,0,0x0,8
tick,0x7ff954e0fd34,326304280,0,0x0,8
tick,0x7ff954e0fd34,326319190,0,0x0,8
tick,0x7ff954e0fd34,326334824,0,0x0,8
tick,0x7ff954e0fd34,326349132,0,0x0,8
tick,0x7ff954e0fd34,326364100,0,0x0,8
tick,0x7ff954e0fd34,326379073,0,0x0,8
tick,0x7ff954e0fd34,326395013,0,0x0,8
tick,0x7ff954e0fd34,326409977,0,0x0,8
tick,0x7ff954e0fd34,326425946,0,0x0,8
tick,0x7ff954e0fd34,326440890,0,0x0,8
tick,0x7ff954e0fd34,326456827,0,0x0,8
tick,0x7ff954e0fd34,326470797,0,0x0,8
tick,0x7ff954e0fd34,326485812,0,0x0,8
tick,0x7ff954e0fd34,326501767,0,0x0,8
tick,0x7ff954e0fd34,326517696,0,0x0,8
tick,0x7ff954e0fd34,326533768,0,0x0,8
tick,0x7ff954e0fd34,326548857,0,0x0,8
tick,0x7ff954e0fd34,326563812,0,0x0,8
tick,0x7ff954e0fd34,326578782,0,0x0,8
tick,0x7ff954e0fd34,326593704,0,0x0,8
tick,0x7ff954e0fd34,326609643,0,0x0,8
tick,0x7ff954e0fd34,326624639,0,0x0,8
tick,0x7ff954e0fd34,326639583,0,0x0,8
tick,0x7ff954e0fd34,326654554,0,0x0,8
tick,0x7ff954e0fd34,326669499,0,0x0,8
tick,0x7ff954e0fd34,326684517,0,0x0,8
tick,0x7ff954e0fd34,326700527,0,0x0,8
tick,0x7ff954e0fd34,326715378,0,0x0,8
tick,0x7ff954e0fd34,326731326,0,0x0,8
tick,0x7ff954e0fd34,326746283,0,0x0,8
tick,0x7ff954e0fd34,326761308,0,0x0,8
tick,0x7ff954e0fd34,326776290,0,0x0,8
tick,0x7ff954e0fd34,326791220,0,0x0,8
tick,0x7ff954e0fd34,326807178,0,0x0,8
tick,0x7ff954e0fd34,326823174,0,0x0,8
tick,0x7ff954e0fd34,326839096,0,0x0,8
tick,0x7ff954e0fd34,326855138,0,0x0,8
tick,0x7ff954e0fd34,326870004,0,0x0,8
tick,0x7ff954e0fd34,326884981,0,0x0,8
tick,0x7ff954e0fd34,326900978,0,0x0,8
tick,0x7ff954e0fd34,326916895,0,0x0,8
tick,0x7ff954e0fd34,326932905,0,0x0,8
tick,0x7ff954e0fd34,326947923,0,0x0,8
tick,0x7ff954e0fd34,326963829,0,0x0,8
tick,0x7ff954e0fd34,326978801,0,0x0,8
tick,0x7ff954e0fd34,326993846,0,0x0,8
tick,0x7ff954e0fd34,327008726,0,0x0,8
tick,0x7ff954e0fd34,327024679,0,0x0,8
tick,0x7ff954e0fd34,327039629,0,0x0,8
tick,0x7ff954e0fd34,327055495,0,0x0,8
tick,0x7ff954e0fd34,327070457,0,0x0,8
tick,0x7ff954e0fd34,327085484,0,0x0,8
tick,0x7ff954e0fd34,327101645,0,0x0,8
tick,0x7ff954e0fd34,327116317,0,0x0,8
tick,0x7ff954e0fd34,327131251,0,0x0,8
tick,0x7ff954e0fd34,327146242,0,0x0,8
tick,0x7ff954e0fd34,327161222,0,0x0,8
tick,0x7ff954e0fd34,327176177,0,0x0,8
tick,0x7ff954e0fd34,327191131,0,0x0,8
tick,0x7ff954e0fd34,327207097,0,0x0,8
tick,0x7ff954e0fd34,327222023,0,0x0,8
tick,0x7ff954e0fd34,327237059,0,0x0,8
tick,0x7ff954e0fd34,327252936,0,0x0,8
tick,0x7ff954e0fd34,327268945,0,0x0,8
tick,0x7ff954e0fd34,327284917,0,0x0,8
tick,0x7ff954e0fd34,327299877,0,0x0,8
tick,0x7ff954e0fd34,327315776,0,0x0,8
tick,0x7ff954e0fd34,327330747,0,0x0,8
tick,0x7ff954e0fd34,327346684,0,0x0,8
tick,0x7ff954e0fd34,327361683,0,0x0,8
tick,0x7ff954e0fd34,327376629,0,0x0,8
tick,0x7ff954e0fd34,327391587,0,0x0,8
tick,0x7ff954e0fd34,327407519,0,0x0,8
tick,0x7ff954e0fd34,327423483,0,0x0,8
tick,0x7ff954e0fd34,327439484,0,0x0,8
tick,0x7ff954e0fd34,327455411,0,0x0,8
tick,0x7ff954e0fd34,327470421,0,0x0,8
tick,0x7ff954e0fd34,327486353,0,0x0,8
tick,0x7ff954e0fd34,327501400,0,0x0,8
tick,0x7ff954e0fd34,327516979,0,0x0,8
tick,0x7ff954e0fd34,327532901,0,0x0,8
tick,0x7ff954e0fd34,327548871,0,0x0,8
tick,0x7ff954e0fd34,327564789,0,0x0,8
tick,0x7ff954e0fd34,327580740,0,0x0,8
tick,0x7ff954e0fd34,327596727,0,0x0,8
tick,0x7ff954e0fd34,327611653,0,0x0,8
tick,0x7ff954e0fd34,327626620,0,0x0,8
tick,0x7ff954e0fd34,327642622,0,0x0,8
tick,0x7ff954e0fd34,327658560,0,0x0,8
tick,0x7ff954e0fd34,327673482,0,0x0,8
tick,0x7ff954e0fd34,327688743,0,0x0,8
tick,0x7ff954e0fd34,327703415,0,0x0,8
tick,0x7ff954e0fd34,327718446,0,0x0,8
tick,0x7ff954e0fd34,327734367,0,0x0,8
tick,0x7ff954e0fd34,327750288,0,0x0,8
tick,0x7ff954e0fd34,327766304,0,0x0,8
tick,0x7ff954e0fd34,327781224,0,0x0,8
tick,0x7ff954e0fd34,327797195,0,0x0,8
tick,0x7ff954e0fd34,327812135,0,0x0,8
tick,0x7ff954e0fd34,327827125,0,0x0,8
tick,0x7ff954e0fd34,327843032,0,0x0,8
tick,0x7ff954e0fd34,327858007,0,0x0,8
tick,0x7ff954e0fd34,327873958,0,0x0,8
tick,0x7ff954e0fd34,327889046,0,0x0,8
tick,0x7ff954e0fd34,327903936,0,0x0,8
tick,0x7ff954e0fd34,327918926,0,0x0,8
tick,0x7ff954e0fd34,327934861,0,0x0,8
tick,0x7ff954e0fd34,327949749,0,0x0,8
tick,0x7ff954e0fd34,327965734,0,0x0,8
tick,0x7ff954e0fd34,327981661,0,0x0,8
tick,0x7ff954e0fd34,327997623,0,0x0,8
tick,0x7ff954e0fd34,328013600,0,0x0,8
tick,0x7ff954e0fd34,328029557,0,0x0,8
tick,0x7ff954e0fd34,328045496,0,0x0,8
tick,0x7ff954e0fd34,328061466,0,0x0,8
tick,0x7ff954e0fd34,328076410,0,0x0,8
tick,0x7ff954e0fd34,328091392,0,0x0,8
tick,0x7ff954e0fd34,328107340,0,0x0,8
tick,0x7ff954e0fd34,328123304,0,0x0,8
tick,0x7ff954e0fd34,328139268,0,0x0,8
tick,0x7ff954e0fd34,328155236,0,0x0,8
tick,0x7ff954e0fd34,328171186,0,0x0,8
tick,0x7ff954e0fd34,328187139,0,0x0,8
tick,0x7ff954e0fd34,328203083,0,0x0,8
tick,0x7ff954e0fd34,328219050,0,0x0,8
tick,0x7ff954e0fd34,328234985,0,0x0,8
tick,0x7ff954e0fd34,328250988,0,0x0,8
tick,0x7ff954e0fd34,328265917,0,0x0,8
tick,0x7ff954e0fd34,328281862,0,0x0,8
tick,0x7ff954e0fd34,328296819,0,0x0,8
tick,0x7ff954e0fd34,328312779,0,0x0,8
tick,0x7ff954e0fd34,328327797,0,0x0,8
tick,0x7ff954e0fd34,328342717,0,0x0,8
tick,0x7ff954e0fd34,328358681,0,0x0,8
tick,0x7ff954e0fd34,328374628,0,0x0,8
tick,0x7ff954e0fd34,328389600,0,0x0,8
tick,0x7ff954e0fd34,328405530,0,0x0,8
tick,0x7ff954e0fd34,328420524,0,0x0,8
tick,0x7ff954e0fd34,328436514,0,0x0,8
tick,0x7ff954e0fd34,328452461,0,0x0,8
tick,0x7ff954e0fd34,328467828,0,0x0,8
tick,0x7ff954e0fd34,328483745,0,0x0,8
tick,0x7ff954e0fd34,328499828,0,0x0,8
tick,0x7ff954e0fd34,328514672,0,0x0,8
tick,0x7ff954e0fd34,328529652,0,0x0,8
tick,0x7ff954e0fd34,328545584,0,0x0,8
tick,0x7ff954e0fd34,328561081,0,0x0,8
tick,0x7ff954e0fd34,328577020,0,0x0,8
tick,0x7ff954e0fd34,328592998,0,0x0,8
tick,0x7ff954e0fd34,328607928,0,0x0,8
tick,0x7ff954e0fd34,328623949,0,0x0,8
tick,0x7ff954e0fd34,328638849,0,0x0,8
tick,0x7ff954e0fd34,328654805,0,0x0,8
tick,0x7ff954e0fd34,328670840,0,0x0,8
tick,0x7ff954e0fd34,328686773,0,0x0,8
tick,0x7ff954e0fd34,328702938,0,0x0,8
tick,0x7ff954e0fd34,328718720,0,0x0,8
tick,0x7ff954e0fd34,328734618,0,0x0,8
tick,0x7ff954e0fd34,328750542,0,0x0,8
tick,0x7ff954e0fd34,328766540,0,0x0,8
tick,0x7ff954e0fd34,328782481,0,0x0,8
tick,0x7ff954e0fd34,328798423,0,0x0,8
tick,0x7ff954e0fd34,328814397,0,0x0,8
tick,0x7ff954e0fd34,328830358,0,0x0,8
tick,0x7ff954e0fd34,328845599,0,0x0,8
tick,0x7ff954e0fd34,328861623,0,0x0,8
tick,0x7ff954e0fd34,328876505,0,0x0,8
tick,0x7ff954e0fd34,328891497,0,0x0,8
tick,0x7ff954e0fd34,328906434,0,0x0,8
tick,0x7ff954e0fd34,328922372,0,0x0,8
tick,0x7ff954e0fd34,328938341,0,0x0,8
tick,0x7ff954e0fd34,328954303,0,0x0,8
tick,0x7ff954e0fd34,328970228,0,0x0,8
tick,0x7ff954e0fd34,328985711,0,0x0,8
tick,0x7ff954e0fd34,329000631,0,0x0,8
tick,0x7ff954e0fd34,329016603,0,0x0,8
tick,0x7ff954e0fd34,329032536,0,0x0,8
tick,0x7ff954e0fd34,329048403,0,0x0,8
tick,0x7ff954e0fd34,329063818,0,0x0,8
tick,0x7ff954e0fd34,329079828,0,0x0,8
tick,0x7ff954e0fd34,329095757,0,0x0,8
tick,0x7ff954e0fd34,329111025,0,0x0,8
tick,0x7ff954e0fd34,329126502,0,0x0,8
tick,0x7ff954e0fd34,329141475,0,0x0,8
tick,0x7ff954e0fd34,329157209,0,0x0,8
tick,0x7ff954e0fd34,329172654,0,0x0,8
tick,0x7ff954e0fd34,329187776,0,0x0,8
tick,0x7ff954e0fd34,329203696,0,0x0,8
tick,0x7ff954e0fd34,329219709,0,0x0,8
tick,0x7ff954e0fd34,329235166,0,0x0,8
tick,0x7ff954e0fd34,329250395,0,0x0,8
tick,0x7ff954e0fd34,329265334,0,0x0,8
tick,0x7ff954e0fd34,329280827,0,0x0,8
tick,0x7ff954e0fd34,329296782,0,0x0,8
tick,0x7ff954e0fd34,329312080,0,0x0,8
tick,0x7ff954e0fd34,329328107,0,0x0,8
tick,0x7ff954e0fd34,329342940,0,0x0,8
tick,0x7ff954e0fd34,329358902,0,0x0,8
tick,0x7ff954e0fd34,329374858,0,0x0,8
tick,0x7ff954e0fd34,329390829,0,0x0,8
tick,0x7ff954e0fd34,329406796,0,0x0,8
tick,0x7ff954e0fd34,329422748,0,0x0,8
tick,0x7ff954e0fd34,329438701,0,0x0,8
tick,0x7ff954e0fd34,329454680,0,0x0,8
tick,0x7ff954e0fd34,329470689,0,0x0,8
tick,0x7ff954e0fd34,329486589,0,0x0,8
tick,0x7ff954e0fd34,329502526,0,0x0,8
tick,0x7ff954e0fd34,329518104,0,0x0,8
tick,0x7ff954e0fd34,329534062,0,0x0,8
tick,0x7ff954e0fd34,329549617,0,0x0,8
tick,0x7ff954e0fd34,329565614,0,0x0,8
tick,0x7ff954e0fd34,329581456,0,0x0,8
tick,0x7ff954e0fd34,329597577,0,0x0,8
tick,0x7ff954e0fd34,329613491,0,0x0,8
tick,0x7ff954e0fd34,329629444,0,0x0,8
tick,0x7ff954e0fd34,329645416,0,0x0,8
tick,0x7ff954e0fd34,329661384,0,0x0,8
tick,0x7ff954e0fd34,329677352,0,0x0,8
tick,0x7ff954e0fd34,329693285,0,0x0,8
tick,0x7ff954e0fd34,329709296,0,0x0,8
tick,0x7ff954e0fd34,329725193,0,0x0,8
tick,0x7ff954e0fd34,329741155,0,0x0,8
tick,0x7ff954e0fd34,329757093,0,0x0,8
tick,0x7ff954e0fd34,329773083,0,0x0,8
tick,0x7ff954e0fd34,329789026,0,0x0,8
tick,0x7ff954e0fd34,329804969,0,0x0,8
tick,0x7ff954e0fd34,329820033,0,0x0,8
tick,0x7ff954e0fd34,329834970,0,0x0,8
tick,0x7ff954e0fd34,329850931,0,0x0,8
tick,0x7ff954e0fd34,329866866,0,0x0,8
tick,0x7ff954e0fd34,329882836,0,0x0,8
tick,0x7ff954e0fd34,329897868,0,0x0,8
tick,0x7ff954e0fd34,329912748,0,0x0,8
tick,0x7ff954e0fd34,329927801,0,0x0,8
tick,0x7ff954e0fd34,329943683,0,0x0,8
tick,0x7ff954e0fd34,329958691,0,0x0,8
tick,0x7ff954e0fd34,329974365,0,0x0,8
tick,0x7ff954e0fd34,329989821,0,0x0,8
tick,0x7ff954e0fd34,330004788,0,0x0,8
tick,0x7ff954e0fd34,330019744,0,0x0,8
tick,0x7ff954e0fd34,330035440,0,0x0,8
tick,0x7ff954e0fd34,330051238,0,0x0,8
tick,0x7ff954e0fd34,330067242,0,0x0,8
tick,0x7ff954e0fd34,330083190,0,0x0,8
tick,0x7ff954e0fd34,330098199,0,0x0,8
tick,0x7ff954e0fd34,330113589,0,0x0,8
tick,0x7ff954e0fd34,330129571,0,0x0,8
tick,0x7ff954e0fd34,330145509,0,0x0,8
tick,0x7ff954e0fd34,330160805,0,0x0,8
tick,0x7ff954e0fd34,330176076,0,0x0,8
tick,0x7ff954e0fd34,330192032,0,0x0,8
tick,0x7ff954e0fd34,330208023,0,0x0,8
tick,0x7ff954e0fd34,330223939,0,0x0,8
tick,0x7ff954e0fd34,330239310,0,0x0,8
tick,0x7ff954e0fd34,330255007,0,0x0,8
tick,0x7ff954e0fd34,330270737,0,0x0,8
tick,0x7ff954e0fd34,330285939,0,0x0,8
tick,0x7ff954e0fd34,330300914,0,0x0,8
tick,0x7ff954e0fd34,330316857,0,0x0,8
tick,0x7ff954e0fd34,330332830,0,0x0,8
tick,0x7ff954e0fd34,330348364,0,0x0,8
tick,0x7ff954e0fd34,330364369,0,0x0,8
tick,0x7ff954e0fd34,330379287,0,0x0,8
tick,0x7ff954e0fd34,330394273,0,0x0,8
tick,0x7ff954e0fd34,330408962,0,0x0,8
tick,0x7ff954e0fd34,330424904,0,0x0,8
tick,0x7ff954e0fd34,330441079,0,0x0,8
tick,0x7ff954e0fd34,330456810,0,0x0,8
tick,0x7ff954e0fd34,330471906,0,0x0,8
tick,0x7ff954e0fd34,330487043,0,0x0,8
tick,0x7ff954e0fd34,330502615,0,0x0,8
tick,0x7ff954e0fd34,330518338,0,0x0,8
tick,0x7ff954e0fd34,330534441,0,0x0,8
tick,0x7ff954e0fd34,330550331,0,0x0,8
tick,0x7ff954e0fd34,330565801,0,0x0,8
tick,0x7ff954e0fd34,330581185,0,0x0,8
tick,0x7ff954e0fd34,330597153,0,0x0,8
tick,0x7ff954e0fd34,330613270,0,0x0,8
tick,0x7ff954e0fd34,330628634,0,0x0,8
tick,0x7ff954e0fd34,330643503,0,0x0,8
tick,0x7ff954e0fd34,330658356,0,0x0,8
tick,0x7ff954e0fd34,330673531,0,0x0,8
tick,0x7ff954e0fd34,330688641,0,0x0,8
tick,0x7ff954e0fd34,330704504,0,0x0,8
tick,0x7ff954e0fd34,330719513,0,0x0,8
tick,0x7ff954e0fd34,330734456,0,0x0,8
tick,0x7ff954e0fd34,330749355,0,0x0,8
tick,0x7ff954e0fd34,330764323,0,0x0,8
tick,0x7ff954e0fd34,330780254,0,0x0,8
tick,0x7ff954e0fd34,330796242,0,0x0,8
tick,0x7ff954e0fd34,330812165,0,0x0,8
tick,0x7ff954e0fd34,330828160,0,0x0,8
tick,0x7ff954e0fd34,330844107,0,0x0,8
tick,0x7ff954e0fd34,330859813,0,0x0,8
tick,0x7ff954e0fd34,330875118,0,0x0,8
tick,0x7ff954e0fd34,330890479,0,0x0,8
tick,0x7ff954e0fd34,330906464,0,0x0,8
tick,0x7ff954e0fd34,330922412,0,0x0,8
tick,0x7ff954e0fd34,330938345,0,0x0,8
tick,0x7ff954e0fd34,330954350,0,0x0,8
tick,0x7ff954e0fd34,330969269,0,0x0,8
tick,0x7ff954e0fd34,330984228,0,0x0,8
tick,0x7ff954e0fd34,330999173,0,0x0,8
tick,0x7ff954e0fd34,331014162,0,0x0,8
tick,0x7ff954e0fd34,331030110,0,0x0,8
tick,0x7ff954e0fd34,331046051,0,0x0,8
tick,0x7ff954e0fd34,331061035,0,0x0,8
tick,0x7ff954e0fd34,331076014,0,0x0,8
tick,0x7ff954e0fd34,331090993,0,0x0,8
tick,0x7ff954e0fd34,331105927,0,0x0,8
tick,0x7ff954e0fd34,331121258,0,0x0,8
tick,0x7ff954e0fd34,331136924,0,0x0,8
tick,0x7ff954e0fd34,331151861,0,0x0,8
tick,0x7ff954e0fd34,331167910,0,0x0,8
tick,0x7ff954e0fd34,331183697,0,0x0,8
tick,0x7ff954e0fd34,331198970,0,0x0,8
tick,0x7ff954e0fd34,331213951,0,0x0,8
tick,0x7ff954e0fd34,331228924,0,0x0,8
tick,0x7ff954e0fd34,331244158,0,0x0,8
tick,0x7ff954e0fd34,331260137,0,0x0,8
tick,0x7ff954e0fd34,331275611,0,0x0,8
tick,0x7ff954e0fd34,331291573,0,0x0,8
tick,0x7ff954e0fd34,331307520,0,0x0,8
tick,0x7ff954e0fd34,331322473,0,0x0,8
tick,0x7ff954e0fd34,331337429,0,0x0,8
tick,0x7ff954e0fd34,331352403,0,0x0,8
tick,0x7ff954e0fd34,331368363,0,0x0,8
tick,0x7ff954e0fd34,331383302,0,0x0,8
tick,0x7ff954e0fd34,331399377,0,0x0,8
tick,0x7ff954e0fd34,331414850,0,0x0,8
tick,0x7ff954e0fd34,331429852,0,0x0,8
tick,0x7ff954e0fd34,331445648,0,0x0,8
tick,0x7ff954e0fd34,331461589,0,0x0,8
tick,0x7ff954e0fd34,331477589,0,0x0,8
tick,0x7ff954e0fd34,331493545,0,0x0,8
tick,0x7ff954e0fd34,331509462,0,0x0,8
tick,0x7ff954e0fd34,331525453,0,0x0,8
tick,0x7ff954e0fd34,331541376,0,0x0,8
tick,0x7ff954e0fd34,331557356,0,0x0,8
tick,0x7ff954e0fd34,331573284,0,0x0,8
tick,0x7ff954e0fd34,331589277,0,0x0,8
tick,0x7ff954e0fd34,331604236,0,0x0,8
tick,0x7ff954e0fd34,331620179,0,0x0,8
tick,0x7ff954e0fd34,331635126,0,0x0,8
tick,0x7ff954e0fd34,331651085,0,0x0,8
tick,0x7ff954e0fd34,331667043,0,0x0,8
tick,0x7ff954e0fd34,331683038,0,0x0,8
tick,0x7ff954e0fd34,331697964,0,0x0,8
tick,0x7ff954e0fd34,331712980,0,0x0,8
tick,0x7ff954e0fd34,331728949,0,0x0,8
tick,0x7ff954e0fd34,331743851,0,0x0,8
tick,0x7ff954e0fd34,331758823,0,0x0,8
tick,0x7ff954e0fd34,331773783,0,0x0,8
tick,0x7ff954e0fd34,331788736,0,0x0,8
tick,0x7ff954e0fd34,331803697,0,0x0,8
tick,0x7ff954e0fd34,331818597,0,0x0,8
tick,0x7ff954e0fd34,331834654,0,0x0,8
tick,0x7ff954e0fd34,331850494,0,0x0,8
tick,0x7ff954e0fd34,331866400,0,0x0,8
tick,0x7ff954e0fd34,331882369,0,0x0,8
tick,0x7ff954e0fd34,331897669,0,0x0,8
tick,0x7ff954e0fd34,331913667,0,0x0,8
tick,0x7ff954e0fd34,331929701,0,0x0,8
tick,0x7ff954e0fd34,331945201,0,0x0,8
tick,0x7ff954e0fd34,331960863,0,0x0,8
tick,0x7ff954e0fd34,331976841,0,0x0,8
tick,0x7ff954e0fd34,331992771,0,0x0,8
tick,0x7ff954e0fd34,332008181,0,0x0,8
tick,0x7ff954e0fd34,332024184,0,0x0,8
tick,0x7ff954e0fd34,332040031,0,0x0,8
tick,0x7ff954e0fd34,332055539,0,0x0,8
tick,0x7ff954e0fd34,332070643,0,0x0,8
tick,0x7ff954e0fd34,332086663,0,0x0,8
tick,0x7ff954e0fd34,332101611,0,0x0,8
tick,0x7ff954e0fd34,332117514,0,0x0,8
tick,0x7ff954e0fd34,332133287,0,0x0,8
tick,0x7ff954e0fd34,332149268,0,0x0,8
tick,0x7ff954e0fd34,332165095,0,0x0,8
tick,0x7ff954e0fd34,332181148,0,0x0,8
tick,0x7ff954e0fd34,332196466,0,0x0,8
tick,0x7ff954e0fd34,332211508,0,0x0,8
tick,0x7ff954e0fd34,332227259,0,0x0,8
tick,0x7ff954e0fd34,332243088,0,0x0,8
tick,0x7ff954e0fd34,332258997,0,0x0,8
tick,0x7ff954e0fd34,332274966,0,0x0,8
tick,0x7ff954e0fd34,332290941,0,0x0,8
tick,0x7ff954e0fd34,332306872,0,0x0,8
tick,0x7ff954e0fd34,332321896,0,0x0,8
tick,0x7ff954e0fd34,332337798,0,0x0,8
tick,0x7ff954e0fd34,332352734,0,0x0,8
tick,0x7ff954e0fd34,332367714,0,0x0,8
tick,0x7ff954e0fd34,332383679,0,0x0,8
tick,0x7ff954e0fd34,332398629,0,0x0,8
tick,0x7ff954e0fd34,332413900,0,0x0,8
tick,0x7ff954e0fd34,332428827,0,0x0,8
tick,0x7ff954e0fd34,332444801,0,0x0,8
tick,0x7ff954e0fd34,332460787,0,0x0,8
tick,0x7ff954e0fd34,332476724,0,0x0,8
tick,0x7ff954e0fd34,332492706,0,0x0,8
tick,0x7ff954e0fd34,332508209,0,0x0,8
tick,0x7ff954e0fd34,332523557,0,0x0,8
tick,0x7ff954e0fd34,332539511,0,0x0,8
tick,0x7ff954e0fd34,332555495,0,0x0,8
tick,0x7ff954e0fd34,332570585,0,0x0,8
tick,0x7ff954e0fd34,332586545,0,0x0,8
tick,0x7ff954e0fd34,332601471,0,0x0,8
tick,0x7ff954e0fd34,332616900,0,0x0,8
tick,0x7ff954e0fd34,332632741,0,0x0,8
tick,0x7ff954e0fd34,332647675,0,0x0,8
tick,0x7ff954e0fd34,332663607,0,0x0,8
tick,0x7ff954e0fd34,332679560,0,0x0,8
tick,0x7ff954e0fd34,332694748,0,0x0,8
tick,0x7ff954e0fd34,332710778,0,0x0,8
tick,0x7ff954e0fd34,332725530,0,0x0,8
tick,0x7ff954e0fd34,332740951,0,0x0,8
tick,0x7ff954e0fd34,332756773,0,0x0,8
tick,0x7ff954e0fd34,332772727,0,0x0,8
tick,0x7ff954e0fd34,332788093,0,0x0,8
tick,0x7ff954e0fd34,332803933,0,0x0,8
tick,0x7ff954e0fd34,332819486,0,0x0,8
tick,0x7ff954e0fd34,332835463,0,0x0,8
tick,0x7ff954e0fd34,332850977,0,0x0,8
tick,0x7ff954e0fd34,332866976,0,0x0,8
tick,0x7ff954e0fd34,332882637,0,0x0,8
tick,0x7ff954e0fd34,332897924,0,0x0,8
tick,0x7ff954e0fd34,332913762,0,0x0,8
tick,0x7ff954e0fd34,332928759,0,0x0,8
tick,0x7ff954e0fd34,332943664,0,0x0,8
tick,0x7ff954e0fd34,332958631,0,0x0,8
tick,0x7ff954e0fd34,332974592,0,0x0,8
tick,0x7ff954e0fd34,332990541,0,0x0,8
tick,0x7ff954e0fd34,333006522,0,0x0,8
tick,0x7ff954e0fd34,333022537,0,0x0,8
tick,0x7ff954e0fd34,333038415,0,0x0,8
tick,0x7ff954e0fd34,333054367,0,0x0,8
tick,0x7ff954e0fd34,333070349,0,0x0,8
tick,0x7ff954e0fd34,333085162,0,0x0,8
tick,0x7ff954e0fd34,333101146,0,0x0,8
tick,0x7ff954e0fd34,333116270,0,0x0,8
tick,0x7ff954e0fd34,333132206,0,0x0,8
tick,0x7ff954e0fd34,333147063,0,0x0,8
tick,0x7ff954e0fd34,333163120,0,0x0,8
tick,0x7ff954e0fd34,333177968,0,0x0,8
tick,0x7ff954e0fd34,333193921,0,0x0,8
tick,0x7ff954e0fd34,333209877,0,0x0,8
tick,0x7ff954e0fd34,333225239,0,0x0,8
tick,0x7ff954e0fd34,333241186,0,0x0,8
tick,0x7ff954e0fd34,333256681,0,0x0,8
tick,0x7ff954e0fd34,333272624,0,0x0,8
tick,0x7ff954e0fd34,333288227,0,0x0,8
tick,0x7ff954e0fd34,333304296,0,0x0,8
tick,0x7ff954e0fd34,333319925,0,0x0,8
tick,0x7ff954e0fd34,333335372,0,0x0,8
tick,0x7ff954e0fd34,333350661,0,0x0,8
tick,0x7ff954e0fd34,333366154,0,0x0,8
tick,0x7ff954e0fd34,333381857,0,0x0,8
tick,0x7ff954e0fd34,333397073,0,0x0,8
tick,0x7ff954e0fd34,333412080,0,0x0,8
tick,0x7ff954e0fd34,333427069,0,0x0,8
tick,0x7ff954e0fd34,333442396,0,0x0,8
tick,0x7ff954e0fd34,333457646,0,0x0,8
tick,0x7ff954e0fd34,333472549,0,0x0,8
tick,0x7ff954e0fd34,333488566,0,0x0,8
tick,0x7ff954e0fd34,333504504,0,0x0,8
tick,0x7ff954e0fd34,333520431,0,0x0,8
tick,0x7ff954e0fd34,333536408,0,0x0,8
tick,0x7ff954e0fd34,333552007,0,0x0,8
tick,0x7ff954e0fd34,333567827,0,0x0,8
tick,0x7ff954e0fd34,333583807,0,0x0,8
tick,0x7ff954e0fd34,333599781,0,0x0,8
tick,0x7ff954e0fd34,333615856,0,0x0,8
tick,0x7ff954e0fd34,333631828,0,0x0,8
tick,0x7ff954e0fd34,333647260,0,0x0,8
tick,0x7ff954e0fd34,333662154,0,0x0,8
tick,0x7ff954e0fd34,333678009,0,0x0,8
tick,0x7ff954e0fd34,333694005,0,0x0,8
tick,0x7ff954e0fd34,333709940,0,0x0,8
tick,0x7ff954e0fd34,333726214,0,0x0,8
tick,0x7ff954e0fd34,333741960,0,0x0,8
tick,0x7ff954e0fd34,333757996,0,0x0,8
tick,0x7ff954e0fd34,333773819,0,0x0,8
tick,0x7ff954e0fd34,333789731,0,0x0,8
tick,0x7ff954e0fd34,333804693,0,0x0,8
tick,0x7ff954e0fd34,333820685,0,0x0,8
tick,0x7ff954e0fd34,333835601,0,0x0,8
tick,0x7ff954e0fd34,333850530,0,0x0,8
tick,0x7ff954e0fd34,333865523,0,0x0,8
tick,0x7ff954e0fd34,333880417,0,0x0,8
tick,0x7ff954e0fd34,333895687,0,0x0,8
tick,0x7ff954e0fd34,333911038,0,0x0,8
tick,0x7ff954e0fd34,333926390,0,0x0,8
tick,0x7ff954e0fd34,333941346,0,0x0,8
tick,0x7ff954e0fd34,333956314,0,0x0,8
tick,0x7ff954e0fd34,333971268,0,0x0,8
tick,0x7ff954e0fd34,333986241,0,0x0,8
tick,0x7ff954e0fd34,334002200,0,0x0,8
tick,0x7ff954e0fd34,334017125,0,0x0,8
tick,0x7ff954e0fd34,334033130,0,0x0,8
tick,0x7ff954e0fd34,334048076,0,0x0,8
tick,0x7ff954e0fd34,334063035,0,0x0,8
tick,0x7ff954e0fd34,334078008,0,0x0,8
tick,0x7ff954e0fd34,334092995,0,0x0,8
tick,0x7ff954e0fd34,334108653,0,0x0,8
tick,0x7ff954e0fd34,334124603,0,0x0,8
tick,0x7ff954e0fd34,334139407,0,0x0,8
tick,0x7ff954e0fd34,334154200,0,0x0,8
tick,0x7ff954e0fd34,334170193,0,0x0,8
tick,0x7ff954e0fd34,334186013,0,0x0,8
tick,0x7ff954e0fd34,334201892,0,0x0,8
tick,0x7ff954e0fd34,334217201,0,0x0,8
tick,0x7ff954e0fd34,334233218,0,0x0,8
tick,0x7ff954e0fd34,334248638,0,0x0,8
tick,0x7ff954e0fd34,334263856,0,0x0,8
tick,0x7ff954e0fd34,334279395,0,0x0,8
tick,0x7ff954e0fd34,334295372,0,0x0,8
tick,0x7ff954e0fd34,334310378,0,0x0,8
tick,0x7ff954e0fd34,334325899,0,0x0,8
tick,0x7ff954e0fd34,334341821,0,0x0,8
tick,0x7ff954e0fd34,334357919,0,0x0,8
tick,0x7ff954e0fd34,334373899,0,0x0,8
tick,0x7ff954e0fd34,334389869,0,0x0,8
tick,0x7ff954e0fd34,334405812,0,0x0,8
tick,0x7ff954e0fd34,334421737,0,0x0,8
tick,0x7ff954e0fd34,334437313,0,0x0,8
tick,0x7ff954e0fd34,334453387,0,0x0,8
tick,0x7ff954e0fd34,334468879,0,0x0,8
tick,0x7ff954e0fd34,334484782,0,0x0,8
tick,0x7ff954e0fd34,334500775,0,0x0,8
tick,0x7ff954e0fd34,334515720,0,0x0,8
tick,0x7ff954e0fd34,334531676,0,0x0,8
tick,0x7ff954e0fd34,334546669,0,0x0,8
tick,0x7ff954e0fd34,334562616,0,0x0,8
tick,0x7ff954e0fd34,334577430,0,0x0,8
tick,0x7ff954e0fd34,334593403,0,0x0,8
tick,0x7ff954e0fd34,334609343,0,0x0,8
tick,0x7ff954e0fd34,334625318,0,0x0,8
tick,0x7ff954e0fd34,334641302,0,0x0,8
tick,0x7ff954e0fd34,334656535,0,0x0,8
tick,0x7ff954e0fd34,334671528,0,0x0,8
tick,0x7ff954e0fd34,334687097,0,0x0,8
tick,0x7ff954e0fd34,334702036,0,0x0,8
tick,0x7ff954e0fd34,334717176,0,0x0,8
tick,0x7ff954e0fd34,334732916,0,0x0,8
tick,0x7ff954e0fd34,334747929,0,0x0,8
tick,0x7ff954e0fd34,334763911,0,0x0,8
tick,0x7ff954e0fd34,334779867,0,0x0,8
tick,0x7ff954e0fd34,334795850,0,0x0,8
tick,0x7ff954e0fd34,334810823,0,0x0,8
tick,0x7ff954e0fd34,334826776,0,0x0,8
tick,0x7ff954e0fd34,334842703,0,0x0,8
tick,0x7ff954e0fd34,334858079,0,0x0,8
tick,0x7ff954e0fd34,334873700,0,0x0,8
tick,0x7ff954e0fd34,334888660,0,0x0,8
tick,0x7ff954e0fd34,334904220,0,0x0,8
tick,0x7ff954e0fd34,334919471,0,0x0,8
tick,0x7ff954e0fd34,334934958,0,0x0,8
tick,0x7ff954e0fd34,334950211,0,0x0,8
tick,0x7ff954e0fd34,334966226,0,0x0,8
tick,0x7ff954e0fd34,334981782,0,0x0,8
tick,0x7ff954e0fd34,334997818,0,0x0,8
tick,0x7ff954e0fd34,335013769,0,0x0,8
tick,0x7ff954e0fd34,335029617,0,0x0,8
tick,0x7ff954e0fd34,335044589,0,0x0,8
tick,0x7ff954e0fd34,335060560,0,0x0,8
tick,0x7ff954e0fd34,335075572,0,0x0,8
tick,0x7ff954e0fd34,335090880,0,0x0,8
tick,0x7ff954e0fd34,335106970,0,0x0,8
tick,0x7ff954e0fd34,335121863,0,0x0,8
tick,0x7ff954e0fd34,335137312,0,0x0,8
tick,0x7ff954e0fd34,335153242,0,0x0,8
tick,0x7ff954e0fd34,335168432,0,0x0,8
tick,0x7ff954e0fd34,335183167,0,0x0,8
tick,0x7ff954e0fd34,335199127,0,0x0,8
tick,0x7ff954e0fd34,335214728,0,0x0,8
tick,0x7ff954e0fd34,335229910,0,0x0,8
tick,0x7ff954e0fd34,335244612,0,0x0,8
tick,0x7ff954e0fd34,335260537,0,0x0,8
tick,0x7ff954e0fd34,335276234,0,0x0,8
tick,0x7ff954e0fd34,335292276,0,0x0,8
tick,0x7ff954e0fd34,335308390,0,0x0,8
tick,0x7ff954e0fd34,335324254,0,0x0,8
tick,0x7ff954e0fd34,335340221,0,0x0,8
tick,0x7ff954e0fd34,335355693,0,0x0,8
tick,0x7ff954e0fd34,335371658,0,0x0,8
tick,0x7ff954e0fd34,335386605,0,0x0,8
tick,0x7ff954e0fd34,335402179,0,0x0,8
tick,0x7ff954e0fd34,335417936,0,0x0,8
tick,0x7ff954e0fd34,335433103,0,0x0,8
tick,0x7ff954e0fd34,335449093,0,0x0,8
tick,0x7ff954e0fd34,335464068,0,0x0,8
tick,0x7ff954e0fd34,335478929,0,0x0,8
tick,0x7ff954e0fd34,335493929,0,0x0,8
tick,0x7ff954e0fd34,335509878,0,0x0,8
tick,0x7ff954e0fd34,335525828,0,0x0,8
tick,0x7ff954e0fd34,335541809,0,0x0,8
tick,0x7ff954e0fd34,335557737,0,0x0,8
tick,0x7ff954e0fd34,335573694,0,0x0,8
tick,0x7ff954e0fd34,335588727,0,0x0,8
tick,0x7ff954e0fd34,335603618,0,0x0,8
tick,0x7ff954e0fd34,335618607,0,0x0,8
tick,0x7ff954e0fd34,335634052,0,0x0,8
tick,0x7ff954e0fd34,335649023,0,0x0,8
tick,0x7ff954e0fd34,335665023,0,0x0,8
tick,0x7ff954e0fd34,335679679,0,0x0,8
tick,0x7ff954e0fd34,335694709,0,0x0,8
tick,0x7ff954e0fd34,335710380,0,0x0,8
tick,0x7ff954e0fd34,335725362,0,0x0,8
tick,0x7ff954e0fd34,335740502,0,0x0,8
tick,0x7ff954e0fd34,335755439,0,0x0,8
tick,0x7ff954e0fd34,335771421,0,0x0,8
tick,0x7ff954e0fd34,335786728,0,0x0,8
tick,0x7ff954e0fd34,335801689,0,0x0,8
tick,0x7ff954e0fd34,335817704,0,0x0,8
tick,0x7ff954e0fd34,335832645,0,0x0,8
tick,0x7ff954e0fd34,335848579,0,0x0,8
tick,0x7ff954e0fd34,335864526,0,0x0,8
tick,0x7ff954e0fd34,335879515,0,0x0,8
tick,0x7ff954e0fd34,335895434,0,0x0,8
tick,0x7ff954e0fd34,335910435,0,0x0,8
tick,0x7ff954e0fd34,335926492,0,0x0,8
tick,0x7ff954e0fd34,335941341,0,0x0,8
tick,0x7ff954e0fd34,335957193,0,0x0,8
tick,0x7ff954e0fd34,335973149,0,0x0,8
tick,0x7ff954e0fd34,335988286,0,0x0,8
tick,0x7ff954e0fd34,336003237,0,0x0,8
tick,0x7ff954e0fd34,336018200,0,0x0,8
tick,0x7ff954e0fd34,336033187,0,0x0,8
tick,0x7ff954e0fd34,336048112,0,0x0,8
tick,0x7ff954e0fd34,336064068,0,0x0,8
tick,0x7ff954e0fd34,336080024,0,0x0,8
tick,0x7ff954e0fd34,336095473,0,0x0,8
tick,0x7ff954e0fd34,336111460,0,0x0,8
tick,0x7ff954e0fd34,336127385,0,0x0,8
tick,0x7ff954e0fd34,336143427,0,0x0,8
tick,0x7ff954e0fd34,336159304,0,0x0,8
tick,0x7ff954e0fd34,336175267,0,0x0,8
tick,0x7ff954e0fd34,336190556,0,0x0,8
tick,0x7ff954e0fd34,336205658,0,0x0,8
tick,0x7ff954e0fd34,336221617,0,0x0,8
tick,0x7ff954e0fd34,336237564,0,0x0,8
tick,0x7ff954e0fd34,336253508,0,0x0,8
tick,0x7ff954e0fd34,336268493,0,0x0,8
tick,0x7ff954e0fd34,336284417,0,0x0,8
tick,0x7ff954e0fd34,336299416,0,0x0,8
tick,0x7ff954e0fd34,336314390,0,0x0,8
tick,0x7ff954e0fd34,336329344,0,0x0,8
tick,0x7ff954e0fd34,336345270,0,0x0,8
tick,0x7ff954e0fd34,336361231,0,0x0,8
tick,0x7ff954e0fd34,336376241,0,0x0,8
tick,0x7ff954e0fd34,336391582,0,0x0,8
tick,0x7ff954e0fd34,336407474,0,0x0,8
tick,0x7ff954e0fd34,336423471,0,0x0,8
tick,0x7ff954e0fd34,336439419,0,0x0,8
tick,0x7ff954e0fd34,336455343,0,0x0,8
tick,0x7ff954e0fd34,336470345,0,0x0,8
tick,0x7ff954e0fd34,336486302,0,0x0,8
tick,0x7ff954e0fd34,336501720,0,0x0,8
tick,0x7ff954e0fd34,336517307,0,0x0,8
tick,0x7ff954e0fd34,336533229,0,0x0,8
tick,0x7ff954e0fd34,336549181,0,0x0,8
tick,0x7ff954e0fd34,336564881,0,0x0,8
tick,0x7ff954e0fd34,336579833,0,0x0,8
tick,0x7ff954e0fd34,336595782,0,0x0,8
tick,0x7ff954e0fd34,336610736,0,0x0,8
tick,0x7ff954e0fd34,336626591,0,0x0,8
tick,0x7ff954e0fd34,336642550,0,0x0,8
tick,0x7ff954e0fd34,336658502,0,0x0,8
tick,0x7ff954e0fd34,336673827,0,0x0,8
tick,0x7ff954e0fd34,336689768,0,0x0,8
tick,0x7ff954e0fd34,336705766,0,0x0,8
tick,0x7ff954e0fd34,336721713,0,0x0,8
tick,0x7ff954e0fd34,336736677,0,0x0,8
tick,0x7ff954e0fd34,336751651,0,0x0,8
tick,0x7ff954e0fd34,336766598,0,0x0,8
tick,0x7ff954e0fd34,336781571,0,0x0,8
tick,0x7ff954e0fd34,336796558,0,0x0,8
tick,0x7ff954e0fd34,336812535,0,0x0,8
tick,0x7ff954e0fd34,336828417,0,0x0,8
tick,0x7ff954e0fd34,336844428,0,0x0,8
tick,0x7ff954e0fd34,336860412,0,0x0,8
tick,0x7ff954e0fd34,336876337,0,0x0,8
tick,0x7ff954e0fd34,336892253,0,0x0,8
tick,0x7ff954e0fd34,336908213,0,0x0,8
tick,0x7ff954e0fd34,336923855,0,0x0,8
tick,0x7ff954e0fd34,336939391,0,0x0,8
tick,0x7ff954e0fd34,336955404,0,0x0,8
tick,0x7ff954e0fd34,336971398,0,0x0,8
tick,0x7ff954e0fd34,336986331,0,0x0,8
tick,0x7ff954e0fd34,337001234,0,0x0,8
tick,0x7ff954e0fd34,337016211,0,0x0,8
tick,0x7ff954e0fd34,337032166,0,0x0,8
tick,0x7ff954e0fd34,337047400,0,0x0,8
tick,0x7ff954e0fd34,337063184,0,0x0,8
tick,0x7ff954e0fd34,337078183,0,0x0,8
tick,0x7ff954e0fd34,337094137,0,0x0,8
tick,0x7ff954e0fd34,337109627,0,0x0,8
tick,0x7ff954e0fd34,337125605,0,0x0,8
tick,0x7ff954e0fd34,337141561,0,0x0,8
tick,0x7ff954e0fd34,337157482,0,0x0,8
tick,0x7ff954e0fd34,337173475,0,0x0,8
tick,0x7ff954e0fd34,337188523,0,0x0,8
tick,0x7ff954e0fd34,337203390,0,0x0,8
tick,0x7ff954e0fd34,337218369,0,0x0,8
tick,0x7ff954e0fd34,337234254,0,0x0,8
tick,0x7ff954e0fd34,337250237,0,0x0,8
tick,0x7ff954e0fd34,337266155,0,0x0,8
tick,0x7ff954e0fd34,337281142,0,0x0,8
tick,0x7ff954e0fd34,337296119,0,0x0,8
tick,0x7ff954e0fd34,337312047,0,0x0,8
tick,0x7ff954e0fd34,337328064,0,0x0,8
tick,0x7ff954e0fd34,337343952,0,0x0,8
tick,0x7ff954e0fd34,337360010,0,0x0,8
tick,0x7ff954e0fd34,337375889,0,0x0,8
tick,0x7ff954e0fd34,337391828,0,0x0,8
tick,0x7ff954e0fd34,337406772,0,0x0,8
tick,0x7ff954e0fd34,337422748,0,0x0,8
tick,0x7ff954e0fd34,337437701,0,0x0,8
tick,0x7ff954e0fd34,337452681,0,0x0,8
tick,0x7ff954e0fd34,337468626,0,0x0,8
tick,0x7ff954e0fd34,337483333,0,0x0,8
tick,0x7ff954e0fd34,337498749,0,0x0,8
tick,0x7ff954e0fd34,337514724,0,0x0,8
tick,0x7ff954e0fd34,337530482,0,0x0,8
tick,0x7ff954e0fd34,337545701,0,0x0,8
tick,0x7ff954e0fd34,337560669,0,0x0,8
tick,0x7ff954e0fd34,337575694,0,0x0,8
tick,0x7ff954e0fd34,337590654,0,0x0,8
tick,0x7ff954e0fd34,337605534,0,0x0,8
tick,0x7ff954e0fd34,337621499,0,0x0,8
tick,0x7ff954e0fd34,337636472,0,0x0,8
tick,0x7ff954e0fd34,337652356,0,0x0,8
tick,0x7ff954e0fd34,337667546,0,0x0,8
tick,0x7ff954e0fd34,337683546,0,0x0,8
tick,0x7ff954e0fd34,337698448,0,0x0,8
tick,0x7ff954e0fd34,337713275,0,0x0,8
tick,0x7ff954e0fd34,337728308,0,0x0,8
tick,0x7ff954e0fd34,337743571,0,0x0,8
tick,0x7ff954e0fd34,337759129,0,0x0,8
tick,0x7ff954e0fd34,337775127,0,0x0,8
tick,0x7ff954e0fd34,337790541,0,0x0,8
tick,0x7ff954e0fd34,337806123,0,0x0,8
tick,0x7ff954e0fd34,337821041,0,0x0,8
tick,0x7ff954e0fd34,337835992,0,0x0,8
tick,0x7ff954e0fd34,337851925,0,0x0,8
tick,0x7ff954e0fd34,337866889,0,0x0,8
tick,0x7ff954e0fd34,337882868,0,0x0,8
tick,0x7ff954e0fd34,337897835,0,0x0,8
tick,0x7ff954e0fd34,337912808,0,0x0,8
tick,0x7ff954e0fd34,337928023,0,0x0,8
tick,0x7ff954e0fd34,337943949,0,0x0,8
tick,0x7ff954e0fd34,337958892,0,0x0,8
tick,0x7ff954e0fd34,337974563,0,0x0,8
tick,0x7ff954e0fd34,337990548,0,0x0,8
tick,0x7ff954e0fd34,338006494,0,0x0,8
tick,0x7ff954e0fd34,338022424,0,0x0,8
tick,0x7ff954e0fd34,338038014,0,0x0,8
tick,0x7ff954e0fd34,338053968,0,0x0,8
tick,0x7ff954e0fd34,338069905,0,0x0,8
tick,0x7ff954e0fd34,338084864,0,0x0,8
tick,0x7ff954e0fd34,338100836,0,0x0,8
tick,0x7ff954e0fd34,338115777,0,0x0,8
tick,0x7ff954e0fd34,338131748,0,0x0,8
tick,0x7ff954e0fd34,338146711,0,0x0,8
tick,0x7ff954e0fd34,338162709,0,0x0,8
tick,0x7ff954e0fd34,338178628,0,0x0,8
tick,0x7ff954e0fd34,338194598,0,0x0,8
tick,0x7ff954e0fd34,338210555,0,0x0,8
tick,0x7ff954e0fd34,338226525,0,0x0,8
tick,0x7ff954e0fd34,338242443,0,0x0,8
tick,0x7ff954e0fd34,338258417,0,0x0,8
tick,0x7ff954e0fd34,338273375,0,0x0,8
tick,0x7ff954e0fd34,338288347,0,0x0,8
tick,0x7ff954e0fd34,338304032,0,0x0,8
tick,0x7ff954e0fd34,338320008,0,0x0,8
tick,0x7ff954e0fd34,338335957,0,0x0,8
tick,0x7ff954e0fd34,338351950,0,0x0,8
tick,0x7ff954e0fd34,338367852,0,0x0,8
tick,0x7ff954e0fd34,338383839,0,0x0,8
tick,0x7ff954e0fd34,338399804,0,0x0,8
tick,0x7ff954e0fd34,338415418,0,0x0,8
tick,0x7ff954e0fd34,338431355,0,0x0,8
tick,0x7ff954e0fd34,338447433,0,0x0,8
tick,0x7ff954e0fd34,338462394,0,0x0,8
tick,0x7ff954e0fd34,338478092,0,0x0,8
tick,0x7ff954e0fd34,338494089,0,0x0,8
tick,0x7ff954e0fd34,338509987,0,0x0,8
tick,0x7ff954e0fd34,338525626,0,0x0,8
tick,0x7ff954e0fd34,338541596,0,0x0,8
tick,0x7ff954e0fd34,338557566,0,0x0,8
tick,0x7ff954e0fd34,338573526,0,0x0,8
tick,0x7ff954e0fd34,338588486,0,0x0,8
tick,0x7ff954e0fd34,338604423,0,0x0,8
tick,0x7ff954e0fd34,338620365,0,0x0,8
tick,0x7ff954e0fd34,338636303,0,0x0,8
tick,0x7ff954e0fd34,338651594,0,0x0,8
tick,0x7ff954e0fd34,338666552,0,0x0,8
tick,0x7ff954e0fd34,338682527,0,0x0,8
tick,0x7ff954e0fd34,338698452,0,0x0,8
tick,0x7ff954e0fd34,338714442,0,0x0,8
tick,0x7ff954e0fd34,338729212,0,0x0,8
tick,0x7ff954e0fd34,338744141,0,0x0,8
tick,0x7ff954e0fd34,338759135,0,0x0,8
tick,0x7ff954e0fd34,338775150,0,0x0,8
tick,0x7ff954e0fd34,338791083,0,0x0,8
tick,0x7ff954e0fd34,338806012,0,0x0,8
tick,0x7ff954e0fd34,338821133,0,0x0,8
tick,0x7ff954e0fd34,338836118,0,0x0,8
tick,0x7ff954e0fd34,338851368,0,0x0,8
tick,0x7ff954e0fd34,338866915,0,0x0,8
tick,0x7ff954e0fd34,338882050,0,0x0,8
tick,0x7ff954e0fd34,338897976,0,0x0,8
tick,0x7ff954e0fd34,338912946,0,0x0,8
tick,0x7ff954e0fd34,338928897,0,0x0,8
tick,0x7ff954e0fd34,338943817,0,0x0,8
tick,0x7ff954e0fd34,338959809,0,0x0,8
tick,0x7ff954e0fd34,338974760,0,0x0,8
tick,0x7ff954e0fd34,338990709,0,0x0,8
tick,0x7ff954e0fd34,339006651,0,0x0,8
tick,0x7ff954e0fd34,339022700,0,0x0,8
tick,0x7ff954e0fd34,339038581,0,0x0,8
tick,0x7ff954e0fd34,339053583,0,0x0,8
tick,0x7ff954e0fd34,339068575,0,0x0,8
tick,0x7ff954e0fd34,339083438,0,0x0,8
tick,0x7ff954e0fd34,339098389,0,0x0,8
tick,0x7ff954e0fd34,339113904,0,0x0,8
tick,0x7ff954e0fd34,339129369,0,0x0,8
tick,0x7ff954e0fd34,339144647,0,0x0,8
tick,0x7ff954e0fd34,339160612,0,0x0,8
tick,0x7ff954e0fd34,339175359,0,0x0,8
tick,0x7ff954e0fd34,339191318,0,0x0,8
tick,0x7ff954e0fd34,339206235,0,0x0,8
tick,0x7ff954e0fd34,339221622,0,0x0,8
tick,0x7ff954e0fd34,339237608,0,0x0,8
tick,0x7ff954e0fd34,339253552,0,0x0,8
tick,0x7ff954e0fd34,339268965,0,0x0,8
tick,0x7ff954e0fd34,339284819,0,0x0,8
tick,0x7ff954e0fd34,339300331,0,0x0,8
tick,0x7ff954e0fd34,339315824,0,0x0,8
tick,0x7ff954e0fd34,339331655,0,0x0,8
tick,0x7ff954e0fd34,339347653,0,0x0,8
tick,0x7ff954e0fd34,339363712,0,0x0,8
tick,0x7ff954e0fd34,339379774,0,0x0,8
tick,0x7ff954e0fd34,339395183,0,0x0,8
tick,0x7ff954e0fd34,339410638,0,0x0,8
tick,0x7ff954e0fd34,339426643,0,0x0,8
tick,0x7ff954e0fd34,339442688,0,0x0,8
tick,0x7ff954e0fd34,339458363,0,0x0,8
tick,0x7ff954e0fd34,339473620,0,0x0,8
tick,0x7ff954e0fd34,339489540,0,0x0,8
tick,0x7ff954e0fd34,339504998,0,0x0,8
tick,0x7ff954e0fd34,339520291,0,0x0,8
tick,0x7ff954e0fd34,339535464,0,0x0,8
tick,0x7ff954e0fd34,339551454,0,0x0,8
tick,0x7ff954e0fd34,339567387,0,0x0,8
tick,0x7ff954e0fd34,339583358,0,0x0,8
tick,0x7ff954e0fd34,339599355,0,0x0,8
tick,0x7ff954e0fd34,339615293,0,0x0,8
tick,0x7ff954e0fd34,339630543,0,0x0,8
tick,0x7ff954e0fd34,339645930,0,0x0,8
tick,0x7ff954e0fd34,339661419,0,0x0,8
tick,0x7ff954e0fd34,339677400,0,0x0,8
tick,0x7ff954e0fd34,339693027,0,0x0,8
tick,0x7ff954e0fd34,339708957,0,0x0,8
tick,0x7ff954e0fd34,339724963,0,0x0,8
tick,0x7ff954e0fd34,339740402,0,0x0,8
tick,0x7ff954e0fd34,339756390,0,0x0,8
tick,0x7ff954e0fd34,339772368,0,0x0,8
tick,0x7ff954e0fd34,339788394,0,0x0,8
tick,0x7ff954e0fd34,339804462,0,0x0,8
tick,0x7ff954e0fd34,339820282,0,0x0,8
tick,0x7ff954e0fd34,339836285,0,0x0,8
tick,0x7ff954e0fd34,339851234,0,0x0,8
tick,0x7ff954e0fd34,339866146,0,0x0,8
tick,0x7ff954e0fd34,339881151,0,0x0,8
tick,0x7ff954e0fd34,339896138,0,0x0,8
tick,0x7ff954e0fd34,339912056,0,0x0,8
tick,0x7ff954e0fd34,339926992,0,0x0,8
tick,0x7ff954e0fd34,339942975,0,0x0,8
tick,0x7ff954e0fd34,339957890,0,0x0,8
tick,0x7ff954e0fd34,339973856,0,0x0,8
tick,0x7ff954e0fd34,339988838,0,0x0,8
tick,0x7ff954e0fd34,340003769,0,0x0,8
tick,0x7ff954e0fd34,340018761,0,0x0,8
tick,0x7ff954e0fd34,340033717,0,0x0,8
tick,0x7ff954e0fd34,340049674,0,0x0,8
tick,0x7ff954e0fd34,340065623,0,0x0,8
tick,0x7ff954e0fd34,340081598,0,0x0,8
tick,0x7ff954e0fd34,340097531,0,0x0,8
tick,0x7ff954e0fd34,340113521,0,0x0,8
tick,0x7ff954e0fd34,340129058,0,0x0,8
tick,0x7ff954e0fd34,340145099,0,0x0,8
tick,0x7ff954e0fd34,340160060,0,0x0,8
tick,0x7ff954e0fd34,340176024,0,0x0,8
tick,0x7ff954e0fd34,340191929,0,0x0,8
tick,0x7ff954e0fd34,340207932,0,0x0,8
tick,0x7ff954e0fd34,340223905,0,0x0,8
tick,0x7ff954e0fd34,340239666,0,0x0,8
tick,0x7ff954e0fd34,340255717,0,0x0,8
tick,0x7ff954e0fd34,340271622,0,0x0,8
tick,0x7ff954e0fd34,340287569,0,0x0,8
tick,0x7ff954e0fd34,340303624,0,0x0,8
tick,0x7ff954e0fd34,340319682,0,0x0,8
tick,0x7ff954e0fd34,340335194,0,0x0,8
tick,0x7ff954e0fd34,340350803,0,0x0,8
tick,0x7ff954e0fd34,340365698,0,0x0,8
tick,0x7ff954e0fd34,340381652,0,0x0,8
tick,0x7ff954e0fd34,340397653,0,0x0,8
tick,0x7ff954e0fd34,340412583,0,0x0,8
tick,0x7ff954e0fd34,340428561,0,0x0,8
tick,0x7ff954e0fd34,340443525,0,0x0,8
tick,0x7ff954e0fd34,340459489,0,0x0,8
tick,0x7ff954e0fd34,340475421,0,0x0,8
tick,0x7ff954e0fd34,340491356,0,0x0,8
tick,0x7ff954e0fd34,340507334,0,0x0,8
tick,0x7ff954e0fd34,340523285,0,0x0,8
tick,0x7ff954e0fd34,340539301,0,0x0,8
tick,0x7ff954e0fd34,340554195,0,0x0,8
tick,0x7ff954e0fd34,340570202,0,0x0,8
tick,0x7ff954e0fd34,340585122,0,0x0,8
tick,0x7ff954e0fd34,340601116,0,0x0,8
tick,0x7ff954e0fd34,340617218,0,0x0,8
tick,0x7ff954e0fd34,340633066,0,0x0,8
tick,0x7ff954e0fd34,340649261,0,0x0,8
tick,0x7ff954e0fd34,340664942,0,0x0,8
tick,0x7ff954e0fd34,340679927,0,0x0,8
tick,0x7ff954e0fd34,340694823,0,0x0,8
tick,0x7ff954e0fd34,340709783,0,0x0,8
tick,0x7ff954e0fd34,340724850,0,0x0,8
tick,0x7ff954e0fd34,340740618,0,0x0,8
tick,0x7ff954e0fd34,340756146,0,0x0,8
tick,0x7ff954e0fd34,340771515,0,0x0,8
tick,0x7ff954e0fd34,340786462,0,0x0,8
tick,0x7ff954e0fd34,340801653,0,0x0,8
tick,0x7ff954e0fd34,340816814,0,0x0,8
tick,0x7ff954e0fd34,340832735,0,0x0,8
tick,0x7ff954e0fd34,340848708,0,0x0,8
tick,0x7ff954e0fd34,340864696,0,0x0,8
tick,0x7ff954e0fd34,340880059,0,0x0,8
tick,0x7ff954e0fd34,340896041,0,0x0,8
tick,0x7ff954e0fd34,340911972,0,0x0,8
tick,0x7ff954e0fd34,340926989,0,0x0,8
tick,0x7ff954e0fd34,340941911,0,0x0,8
tick,0x7ff954e0fd34,340956653,0,0x0,8
tick,0x7ff954e0fd34,340972640,0,0x0,8
tick,0x7ff954e0fd34,340988576,0,0x0,8
tick,0x7ff954e0fd34,341003554,0,0x0,8
tick,0x7ff954e0fd34,341019500,0,0x0,8
tick,0x7ff954e0fd34,341034483,0,0x0,8
tick,0x7ff954e0fd34,341050406,0,0x0,8
tick,0x7ff954e0fd34,341066372,0,0x0,8
tick,0x7ff954e0fd34,341081349,0,0x0,8
tick,0x7ff954e0fd34,341096325,0,0x0,8
tick,0x7ff954e0fd34,341111311,0,0x0,8
tick,0x7ff954e0fd34,341126842,0,0x0,8
tick,0x7ff954e0fd34,341141771,0,0x0,8
tick,0x7ff954e0fd34,341157396,0,0x0,8
tick,0x7ff954e0fd34,341172345,0,0x0,8
tick,0x7ff954e0fd34,341188354,0,0x0,8
tick,0x7ff954e0fd34,341203325,0,0x0,8
tick,0x7ff954e0fd34,341218264,0,0x0,8
tick,0x7ff954e0fd34,341233249,0,0x0,8
tick,0x7ff954e0fd34,341249247,0,0x0,8
tick,0x7ff954e0fd34,341264199,0,0x0,8
tick,0x7ff954e0fd34,341279803,0,0x0,8
tick,0x7ff954e0fd34,341294944,0,0x0,8
tick,0x7ff954e0fd34,341310456,0,0x0,8
tick,0x7ff954e0fd34,341325423,0,0x0,8
tick,0x7ff954e0fd34,341340363,0,0x0,8
tick,0x7ff954e0fd34,341355773,0,0x0,8
tick,0x7ff954e0fd34,341371712,0,0x0,8
tick,0x7ff954e0fd34,341387685,0,0x0,8
tick,0x7ff954e0fd34,341403633,0,0x0,8
tick,0x7ff954e0fd34,341419632,0,0x0,8
tick,0x7ff954e0fd34,341435599,0,0x0,8
tick,0x7ff954e0fd34,341451587,0,0x0,8
tick,0x7ff954e0fd34,341466576,0,0x0,8
tick,0x7ff954e0fd34,341481588,0,0x0,8
tick,0x7ff954e0fd34,341496502,0,0x0,8
tick,0x7ff954e0fd34,341512431,0,0x0,8
tick,0x7ff954e0fd34,341527450,0,0x0,8
tick,0x7ff954e0fd34,341543392,0,0x0,8
tick,0x7ff954e0fd34,341558362,0,0x0,8
tick,0x7ff954e0fd34,341573831,0,0x0,8
tick,0x7ff954e0fd34,341589847,0,0x0,8
tick,0x7ff954e0fd34,341605085,0,0x0,8
tick,0x7ff954e0fd34,341620045,0,0x0,8
tick,0x7ff954e0fd34,341635977,0,0x0,8
tick,0x7ff954e0fd34,341651800,0,0x0,8
tick,0x7ff954e0fd34,341666796,0,0x0,8
tick,0x7ff954e0fd34,341682053,0,0x0,8
tick,0x7ff954e0fd34,341698030,0,0x0,8
tick,0x7ff954e0fd34,341713241,0,0x0,8
tick,0x7ff954e0fd34,341729179,0,0x0,8
tick,0x7ff954e0fd34,341744168,0,0x0,8
tick,0x7ff954e0fd34,341760146,0,0x0,8
tick,0x7ff954e0fd34,341776149,0,0x0,8
tick,0x7ff954e0fd34,341791389,0,0x0,8
tick,0x7ff954e0fd34,341807399,0,0x0,8
tick,0x7ff954e0fd34,341822664,0,0x0,8
tick,0x7ff954e0fd34,341838565,0,0x0,8
tick,0x7ff954e0fd34,341854546,0,0x0,8
tick,0x7ff954e0fd34,341870479,0,0x0,8
tick,0x7ff954e0fd34,341886307,0,0x0,8
tick,0x7ff954e0fd34,341901632,0,0x0,8
tick,0x7ff954e0fd34,341917571,0,0x0,8
tick,0x7ff954e0fd34,341933522,0,0x0,8
tick,0x7ff954e0fd34,341949479,0,0x0,8
tick,0x7ff954e0fd34,341965448,0,0x0,8
tick,0x7ff954e0fd34,341981407,0,0x0,8
tick,0x7ff954e0fd34,341996999,0,0x0,8
tick,0x7ff954e0fd34,342012318,0,0x0,8
tick,0x7ff954e0fd34,342028243,0,0x0,8
tick,0x7ff954e0fd34,342044220,0,0x0,8
tick,0x7ff954e0fd34,342060184,0,0x0,8
tick,0x7ff954e0fd34,342076150,0,0x0,8
tick,0x7ff954e0fd34,342091088,0,0x0,8
tick,0x7ff954e0fd34,342106043,0,0x0,8
tick,0x7ff954e0fd34,342122024,0,0x0,8
tick,0x7ff954e0fd34,342136974,0,0x0,8
tick,0x7ff954e0fd34,342151912,0,0x0,8
tick,0x7ff954e0fd34,342166905,0,0x0,8
tick,0x7ff954e0fd34,342181864,0,0x0,8
tick,0x7ff954e0fd34,342197860,0,0x0,8
tick,0x7ff954e0fd34,342212789,0,0x0,8
tick,0x7ff954e0fd34,342228790,0,0x0,8
tick,0x7ff954e0fd34,342243675,0,0x0,8
tick,0x7ff954e0fd34,342258681,0,0x0,8
tick,0x7ff954e0fd34,342273571,0,0x0,8
tick,0x7ff954e0fd34,342289497,0,0x0,8
tick,0x7ff954e0fd34,342305438,0,0x0,8
tick,0x7ff954e0fd34,342321531,0,0x0,8
tick,0x7ff954e0fd34,342337497,0,0x0,8
tick,0x7ff954e0fd34,342353452,0,0x0,8
tick,0x7ff954e0fd34,342368894,0,0x0,8
tick,0x7ff954e0fd34,342384608,0,0x0,8
tick,0x7ff954e0fd34,342399580,0,0x0,8
tick,0x7ff954e0fd34,342415574,0,0x0,8
tick,0x7ff954e0fd34,342431478,0,0x0,8
tick,0x7ff954e0fd34,342447493,0,0x0,8
tick,0x7ff954e0fd34,342462420,0,0x0,8
tick,0x7ff954e0fd34,342477372,0,0x0,8
tick,0x7ff954e0fd34,342493307,0,0x0,8
tick,0x7ff954e0fd34,342509311,0,0x0,8
tick,0x7ff954e0fd34,342524870,0,0x0,8
tick,0x7ff954e0fd34,342540828,0,0x0,8
tick,0x7ff954e0fd34,342556801,0,0x0,8
tick,0x7ff954e0fd34,342572726,0,0x0,8
tick,0x7ff954e0fd34,342588710,0,0x0,8
tick,0x7ff954e0fd34,342604486,0,0x0,8
tick,0x7ff954e0fd34,342620493,0,0x0,8
tick,0x7ff954e0fd34,342635846,0,0x0,8
tick,0x7ff954e0fd34,342651797,0,0x0,8
tick,0x7ff954e0fd34,342667471,0,0x0,8
tick,0x7ff954e0fd34,342683184,0,0x0,8
tick,0x7ff954e0fd34,342699133,0,0x0,8
tick,0x7ff954e0fd34,342715088,0,0x0,8
tick,0x7ff954e0fd34,342731076,0,0x0,8
tick,0x7ff954e0fd34,342746298,0,0x0,8
tick,0x7ff954e0fd34,342762199,0,0x0,8
tick,0x7ff954e0fd34,342777180,0,0x0,8
tick,0x7ff954e0fd34,342793130,0,0x0,8
tick,0x7ff954e0fd34,342809121,0,0x0,8
tick,0x7ff954e0fd34,342824109,0,0x0,8
tick,0x7ff954e0fd34,342840005,0,0x0,8
tick,0x7ff954e0fd34,342854981,0,0x0,8
tick,0x7ff954e0fd34,342870970,0,0x0,8
tick,0x7ff954e0fd34,342885900,0,0x0,8
tick,0x7ff954e0fd34,342900841,0,0x0,8
tick,0x7ff954e0fd34,342915826,0,0x0,8
tick,0x7ff954e0fd34,342931807,0,0x0,8
tick,0x7ff954e0fd34,342946817,0,0x0,8
tick,0x7ff954e0fd34,342961820,0,0x0,8
tick,0x7ff954e0fd34,342977710,0,0x0,8
tick,0x7ff954e0fd34,342993632,0,0x0,8
tick,0x7ff954e0fd34,343009458,0,0x0,8
tick,0x7ff954e0fd34,343024590,0,0x0,8
tick,0x7ff954e0fd34,343039526,0,0x0,8
tick,0x7ff954e0fd34,343054511,0,0x0,8
tick,0x7ff954e0fd34,343070442,0,0x0,8
tick,0x7ff954e0fd34,343085424,0,0x0,8
tick,0x7ff954e0fd34,343100549,0,0x0,8
tick,0x7ff954e0fd34,343116511,0,0x0,8
tick,0x7ff954e0fd34,343131461,0,0x0,8
tick,0x7ff954e0fd34,343146824,0,0x0,8
tick,0x7ff954e0fd34,343161885,0,0x0,8
tick,0x7ff954e0fd34,343177861,0,0x0,8
tick,0x7ff954e0fd34,343193859,0,0x0,8
tick,0x7ff954e0fd34,343209906,0,0x0,8
tick,0x7ff954e0fd34,343224817,0,0x0,8
tick,0x7ff954e0fd34,343240709,0,0x0,8
tick,0x7ff954e0fd34,343256019,0,0x0,8
tick,0x7ff954e0fd34,343271578,0,0x0,8
tick,0x7ff954e0fd34,343287516,0,0x0,8
tick,0x7ff954e0fd34,343302558,0,0x0,8
tick,0x7ff954e0fd34,343317473,0,0x0,8
tick,0x7ff954e0fd34,343332418,0,0x0,8
tick,0x7ff954e0fd34,343347381,0,0x0,8
tick,0x7ff954e0fd34,343362320,0,0x0,8
tick,0x7ff954e0fd34,343377306,0,0x0,8
tick,0x7ff954e0fd34,343392263,0,0x0,8
tick,0x7ff954e0fd34,343408199,0,0x0,8
tick,0x7ff954e0fd34,343423815,0,0x0,8
tick,0x7ff954e0fd34,343439771,0,0x0,8
tick,0x7ff954e0fd34,343455722,0,0x0,8
tick,0x7ff954e0fd34,343471733,0,0x0,8
tick,0x7ff954e0fd34,343487707,0,0x0,8
tick,0x7ff954e0fd34,343503676,0,0x0,8
tick,0x7ff954e0fd34,343519628,0,0x0,8
tick,0x7ff954e0fd34,343535582,0,0x0,8
tick,0x7ff954e0fd34,343551567,0,0x0,8
tick,0x7ff954e0fd34,343567488,0,0x0,8
tick,0x7ff954e0fd34,343583483,0,0x0,8
tick,0x7ff954e0fd34,343599409,0,0x0,8
tick,0x7ff954e0fd34,343615386,0,0x0,8
tick,0x7ff954e0fd34,343630967,0,0x0,8
tick,0x7ff954e0fd34,343646948,0,0x0,8
tick,0x7ff954e0fd34,343661941,0,0x0,8
tick,0x7ff954e0fd34,343676868,0,0x0,8
tick,0x7ff954e0fd34,343691836,0,0x0,8
tick,0x7ff954e0fd34,343706825,0,0x0,8
tick,0x7ff954e0fd34,343722733,0,0x0,8
tick,0x7ff954e0fd34,343737675,0,0x0,8
tick,0x7ff954e0fd34,343752657,0,0x0,8
tick,0x7ff954e0fd34,343767659,0,0x0,8
tick,0x7ff954e0fd34,343782581,0,0x0,8
tick,0x7ff954e0fd34,343798529,0,0x0,8
tick,0x7ff954e0fd34,343814346,0,0x0,8
tick,0x7ff954e0fd34,343830290,0,0x0,8
tick,0x7ff954e0fd34,343845222,0,0x0,8
tick,0x7ff954e0fd34,343860200,0,0x0,8
tick,0x7ff954e0fd34,343875161,0,0x0,8
tick,0x7ff954e0fd34,343890310,0,0x0,8
tick,0x7ff954e0fd34,343906212,0,0x0,8
tick,0x7ff954e0fd34,343922188,0,0x0,8
tick,0x7ff954e0fd34,343937172,0,0x0,8
tick,0x7ff954e0fd34,343952104,0,0x0,8
tick,0x7ff954e0fd34,343967106,0,0x0,8
tick,0x7ff954e0fd34,343982027,0,0x0,8
tick,0x7ff954e0fd34,343997977,0,0x0,8
tick,0x7ff954e0fd34,344013940,0,0x0,8
tick,0x7ff954e0fd34,344028895,0,0x0,8
tick,0x7ff954e0fd34,344043869,0,0x0,8
tick,0x7ff954e0fd34,344058822,0,0x0,8
tick,0x7ff954e0fd34,344073837,0,0x0,8
tick,0x7ff954e0fd34,344089742,0,0x0,8
tick,0x7ff954e0fd34,344105212,0,0x0,8
tick,0x7ff954e0fd34,344121194,0,0x0,8
tick,0x7ff954e0fd34,344137157,0,0x0,8
tick,0x7ff954e0fd34,344153097,0,0x0,8
tick,0x7ff954e0fd34,344168909,0,0x0,8
tick,0x7ff954e0fd34,344184891,0,0x0,8
tick,0x7ff954e0fd34,344200966,0,0x0,8
tick,0x7ff954e0fd34,344217024,0,0x0,8
tick,0x7ff954e0fd34,344232873,0,0x0,8
tick,0x7ff954e0fd34,344248914,0,0x0,8
tick,0x7ff954e0fd34,344264790,0,0x0,8
tick,0x7ff954e0fd34,344280767,0,0x0,8
tick,0x7ff954e0fd34,344296752,0,0x0,8
tick,0x7ff954e0fd34,344311671,0,0x0,8
tick,0x7ff954e0fd34,344326636,0,0x0,8
tick,0x7ff954e0fd34,344342196,0,0x0,8
tick,0x7ff954e0fd34,344356608,0,0x0,8
tick,0x7ff954e0fd34,344381087,0,0x0,8
tick,0x7ff954e0fd34,344415223,0,0x0,8
tick,0x7ff954e0fd34,344417876,0,0x0,8
tick,0x7ff954e0fd34,344420758,0,0x0,8
tick,0x7ff954e0fd34,344449501,0,0x0,8
tick,0x7ff954e0fd34,344453406,0,0x0,8
tick,0x7ff954e0fd34,344468235,0,0x0,8
tick,0x7ff954e0fd34,344484320,0,0x0,8
tick,0x7ff954e0fd34,344499214,0,0x0,8
tick,0x7ff954e0fd34,344514154,0,0x0,8
tick,0x7ff954e0fd34,344529085,0,0x0,8
tick,0x7ff954e0fd34,344544087,0,0x0,8
tick,0x7ff954e0fd34,344560004,0,0x0,8
tick,0x7ff954e0fd34,344575951,0,0x0,8
tick,0x7ff954e0fd34,344591915,0,0x0,8
tick,0x7ff954e0fd34,344607923,0,0x0,8
tick,0x7ff954e0fd34,344623651,0,0x0,8
tick,0x7ff954e0fd34,344639603,0,0x0,8
tick,0x7ff954e0fd34,344655135,0,0x0,8
tick,0x7ff954e0fd34,344671056,0,0x0,8
tick,0x7ff954e0fd34,344686063,0,0x0,8
tick,0x7ff954e0fd34,344700994,0,0x0,8
tick,0x7ff954e0fd34,344716330,0,0x0,8
tick,0x7ff954e0fd34,344732281,0,0x0,8
tick,0x7ff954e0fd34,344748226,0,0x0,8
tick,0x7ff954e0fd34,344764175,0,0x0,8
tick,0x7ff954e0fd34,344779471,0,0x0,8
tick,0x7ff954e0fd34,344795515,0,0x0,8
tick,0x7ff954e0fd34,344811400,0,0x0,8
tick,0x7ff954e0fd34,344827493,0,0x0,8
tick,0x7ff954e0fd34,344843324,0,0x0,8
tick,0x7ff954e0fd34,344859346,0,0x0,8
tick,0x7ff954e0fd34,344874247,0,0x0,8
tick,0x7ff954e0fd34,344890216,0,0x0,8
tick,0x7ff954e0fd34,344905140,0,0x0,8
tick,0x7ff954e0fd34,344920118,0,0x0,8
tick,0x7ff954e0fd34,344935238,0,0x0,8
tick,0x7ff954e0fd34,344950048,0,0x0,8
tick,0x7ff954e0fd34,344966012,0,0x0,8
tick,0x7ff954e0fd34,344981979,0,0x0,8
tick,0x7ff954e0fd34,344997898,0,0x0,8
tick,0x7ff954e0fd34,345013860,0,0x0,8
tick,0x7ff954e0fd34,345028846,0,0x0,8
tick,0x7ff954e0fd34,345043795,0,0x0,8
tick,0x7ff954e0fd34,345059743,0,0x0,8
tick,0x7ff954e0fd34,345075163,0,0x0,8
tick,0x7ff954e0fd34,345090113,0,0x0,8
tick,0x7ff954e0fd34,345105094,0,0x0,8
tick,0x7ff954e0fd34,345121114,0,0x0,8
tick,0x7ff954e0fd34,345137008,0,0x0,8
tick,0x7ff954e0fd34,345153027,0,0x0,8
tick,0x7ff954e0fd34,345167918,0,0x0,8
tick,0x7ff954e0fd34,345182990,0,0x0,8
tick,0x7ff954e0fd34,345197936,0,0x0,8
tick,0x7ff954e0fd34,345212641,0,0x0,8
tick,0x7ff954e0fd34,345228613,0,0x0,8
tick,0x7ff954e0fd34,345244002,0,0x0,8
tick,0x7ff954e0fd34,345259948,0,0x0,8
tick,0x7ff954e0fd34,345275335,0,0x0,8
tick,0x7ff954e0fd34,345291272,0,0x0,8
tick,0x7ff954e0fd34,345306754,0,0x0,8
tick,0x7ff954e0fd34,345321677,0,0x0,8
tick,0x7ff954e0fd34,345337599,0,0x0,8
tick,0x7ff954e0fd34,345353554,0,0x0,8
tick,0x7ff954e0fd34,345369545,0,0x0,8
tick,0x7ff954e0fd34,345385434,0,0x0,8
tick,0x7ff954e0fd34,345401391,0,0x0,8
tick,0x7ff954e0fd34,345417339,0,0x0,8
tick,0x7ff954e0fd34,345433347,0,0x0,8
tick,0x7ff954e0fd34,345448267,0,0x0,8
tick,0x7ff954e0fd34,345464235,0,0x0,8
tick,0x7ff954e0fd34,345479182,0,0x0,8
tick,0x7ff954e0fd34,345495144,0,0x0,8
tick,0x7ff954e0fd34,345511109,0,0x0,8
tick,0x7ff954e0fd34,345527192,0,0x0,8
tick,0x7ff954e0fd34,345542881,0,0x0,8
tick,0x7ff954e0fd34,345558850,0,0x0,8
tick,0x7ff954e0fd34,345574482,0,0x0,8
tick,0x7ff954e0fd34,345590118,0,0x0,8
tick,0x7ff954e0fd34,345605429,0,0x0,8
tick,0x7ff954e0fd34,345620417,0,0x0,8
tick,0x7ff954e0fd34,345636392,0,0x0,8
tick,0x7ff954e0fd34,345651674,0,0x0,8
tick,0x7ff954e0fd34,345666635,0,0x0,8
tick,0x7ff954e0fd34,345681571,0,0x0,8
tick,0x7ff954e0fd34,345697530,0,0x0,8
tick,0x7ff954e0fd34,345712726,0,0x0,8
tick,0x7ff954e0fd34,345728660,0,0x0,8
tick,0x7ff954e0fd34,345743728,0,0x0,8
tick,0x7ff954e0fd34,345758784,0,0x0,8
tick,0x7ff954e0fd34,345773927,0,0x0,8
tick,0x7ff954e0fd34,345789775,0,0x0,8
tick,0x7ff954e0fd34,345805190,0,0x0,8
tick,0x7ff954e0fd34,345820415,0,0x0,8
tick,0x7ff954e0fd34,345835832,0,0x0,8
tick,0x7ff954e0fd34,345851267,0,0x0,8
tick,0x7ff954e0fd34,345867242,0,0x0,8
tick,0x7ff954e0fd34,345883191,0,0x0,8
tick,0x7ff954e0fd34,345899217,0,0x0,8
tick,0x7ff954e0fd34,345915094,0,0x0,8
tick,0x7ff954e0fd34,345930577,0,0x0,8
tick,0x7ff954e0fd34,345945779,0,0x0,8
tick,0x7ff954e0fd34,345961761,0,0x0,8
tick,0x7ff954e0fd34,345976715,0,0x0,8
tick,0x7ff954e0fd34,345992651,0,0x0,8
tick,0x7ff954e0fd34,346008564,0,0x0,8
tick,0x7ff954e0fd34,346024568,0,0x0,8
tick,0x7ff954e0fd34,346040478,0,0x0,8
tick,0x7ff954e0fd34,346055441,0,0x0,8
tick,0x7ff954e0fd34,346071447,0,0x0,8
tick,0x7ff954e0fd34,346086374,0,0x0,8
tick,0x7ff954e0fd34,346102322,0,0x0,8
tick,0x7ff954e0fd34,346118277,0,0x0,8
tick,0x7ff954e0fd34,346134248,0,0x0,8
tick,0x7ff954e0fd34,346149185,0,0x0,8
tick,0x7ff954e0fd34,346164164,0,0x0,8
tick,0x7ff954e0fd34,346179129,0,0x0,8
tick,0x7ff954e0fd34,346194730,0,0x0,8
tick,0x7ff954e0fd34,346210439,0,0x0,8
tick,0x7ff954e0fd34,346226460,0,0x0,8
tick,0x7ff954e0fd34,346241385,0,0x0,8
tick,0x7ff954e0fd34,346256282,0,0x0,8
tick,0x7ff954e0fd34,346271462,0,0x0,8
tick,0x7ff954e0fd34,346286377,0,0x0,8
tick,0x7ff954e0fd34,346301392,0,0x0,8
tick,0x7ff954e0fd34,346316316,0,0x0,8
tick,0x7ff954e0fd34,346332257,0,0x0,8
tick,0x7ff954e0fd34,346347225,0,0x0,8
tick,0x7ff954e0fd34,346363204,0,0x0,8
tick,0x7ff954e0fd34,346379177,0,0x0,8
tick,0x7ff954e0fd34,346395093,0,0x0,8
tick,0x7ff954e0fd34,346411064,0,0x0,8
tick,0x7ff954e0fd34,346425994,0,0x0,8
tick,0x7ff954e0fd34,346440967,0,0x0,8
tick,0x7ff954e0fd34,346455931,0,0x0,8
tick,0x7ff954e0fd34,346470902,0,0x0,8
tick,0x7ff954e0fd34,346486830,0,0x0,8
tick,0x7ff954e0fd34,346501812,0,0x0,8
tick,0x7ff954e0fd34,346517749,0,0x0,8
tick,0x7ff954e0fd34,346532780,0,0x0,8
tick,0x7ff954e0fd34,346547664,0,0x0,8
tick,0x7ff954e0fd34,346562650,0,0x0,8
tick,0x7ff954e0fd34,346577604,0,0x0,8
tick,0x7ff954e0fd34,346593149,0,0x0,8
tick,0x7ff954e0fd34,346609150,0,0x0,8
tick,0x7ff954e0fd34,346625076,0,0x0,8
tick,0x7ff954e0fd34,346641019,0,0x0,8
tick,0x7ff954e0fd34,346656582,0,0x0,8
tick,0x7ff954e0fd34,346672591,0,0x0,8
tick,0x7ff954e0fd34,346688520,0,0x0,8
tick,0x7ff954e0fd34,346704461,0,0x0,8
tick,0x7ff954e0fd34,346720484,0,0x0,8
tick,0x7ff954e0fd34,346735612,0,0x0,8
tick,0x7ff954e0fd34,346750729,0,0x0,8
tick,0x7ff954e0fd34,346766030,0,0x0,8
tick,0x7ff954e0fd34,346781956,0,0x0,8
tick,0x7ff954e0fd34,346797969,0,0x0,8
tick,0x7ff954e0fd34,346813864,0,0x0,8
tick,0x7ff954e0fd34,346828855,0,0x0,8
tick,0x7ff954e0fd34,346843838,0,0x0,8
tick,0x7ff954e0fd34,346858865,0,0x0,8
tick,0x7ff954e0fd34,346873725,0,0x0,8
tick,0x7ff954e0fd34,346889686,0,0x0,8
tick,0x7ff954e0fd34,346905644,0,0x0,8
tick,0x7ff954e0fd34,346921733,0,0x0,8
tick,0x7ff954e0fd34,346937657,0,0x0,8
tick,0x7ff954e0fd34,346953575,0,0x0,8
tick,0x7ff954e0fd34,346968519,0,0x0,8
tick,0x7ff954e0fd34,346984239,0,0x0,8
tick,0x7ff954e0fd34,346999227,0,0x0,8
tick,0x7ff954e0fd34,347015171,0,0x0,8
tick,0x7ff954e0fd34,347030075,0,0x0,8
tick,0x7ff954e0fd34,347045787,0,0x0,8
tick,0x7ff954e0fd34,347060769,0,0x0,8
tick,0x7ff954e0fd34,347076887,0,0x0,8
tick,0x7ff954e0fd34,347092592,0,0x0,8
tick,0x7ff954e0fd34,347107864,0,0x0,8
tick,0x7ff954e0fd34,347123768,0,0x0,8
tick,0x7ff954e0fd34,347138716,0,0x0,8
tick,0x7ff954e0fd34,347154735,0,0x0,8
tick,0x7ff954e0fd34,347170657,0,0x0,8
tick,0x7ff954e0fd34,347186633,0,0x0,8
tick,0x7ff954e0fd34,347202535,0,0x0,8
tick,0x7ff954e0fd34,347217538,0,0x0,8
tick,0x7ff954e0fd34,347233462,0,0x0,8
tick,0x7ff954e0fd34,347248481,0,0x0,8
tick,0x7ff954e0fd34,347264385,0,0x0,8
tick,0x7ff954e0fd34,347280382,0,0x0,8
tick,0x7ff954e0fd34,347296356,0,0x0,8
tick,0x7ff954e0fd34,347312315,0,0x0,8
tick,0x7ff954e0fd34,347328241,0,0x0,8
tick,0x7ff954e0fd34,347343806,0,0x0,8
tick,0x7ff954e0fd34,347359740,0,0x0,8
tick,0x7ff954e0fd34,347375764,0,0x0,8
tick,0x7ff954e0fd34,347391663,0,0x0,8
tick,0x7ff954e0fd34,347406670,0,0x0,8
tick,0x7ff954e0fd34,347421590,0,0x0,8
tick,0x7ff954e0fd34,347436609,0,0x0,8
tick,0x7ff954e0fd34,347451878,0,0x0,8
tick,0x7ff954e0fd34,347467851,0,0x0,8
tick,0x7ff954e0fd34,347483817,0,0x0,8
tick,0x7ff954e0fd34,347499756,0,0x0,8
tick,0x7ff954e0fd34,347514758,0,0x0,8
tick,0x7ff954e0fd34,347529704,0,0x0,8
tick,0x7ff954e0fd34,347544693,0,0x0,8
tick,0x7ff954e0fd34,347559616,0,0x0,8
tick,0x7ff954e0fd34,347574586,0,0x0,8
tick,0x7ff954e0fd34,347589559,0,0x0,8
tick,0x7ff954e0fd34,347604477,0,0x0,8
tick,0x7ff954e0fd34,347620446,0,0x0,8
tick,0x7ff954e0fd34,347635405,0,0x0,8
tick,0x7ff954e0fd34,347651384,0,0x0,8
tick,0x7ff954e0fd34,347667309,0,0x0,8
tick,0x7ff954e0fd34,347682274,0,0x0,8
tick,0x7ff954e0fd34,347698259,0,0x0,8
tick,0x7ff954e0fd34,347713207,0,0x0,8
tick,0x7ff954e0fd34,347728416,0,0x0,8
tick,0x7ff954e0fd34,347744362,0,0x0,8
tick,0x7ff954e0fd34,347759293,0,0x0,8
tick,0x7ff954e0fd34,347775187,0,0x0,8
tick,0x7ff954e0fd34,347790137,0,0x0,8
tick,0x7ff954e0fd34,347805275,0,0x0,8
tick,0x7ff954e0fd34,347820355,0,0x0,8
tick,0x7ff954e0fd34,347835257,0,0x0,8
tick,0x7ff954e0fd34,347851380,0,0x0,8
tick,0x7ff954e0fd34,347867155,0,0x0,8
tick,0x7ff954e0fd34,347882053,0,0x0,8
tick,0x7ff954e0fd34,347897031,0,0x0,8
tick,0x7ff954e0fd34,347911958,0,0x0,8
tick,0x7ff954e0fd34,347928456,0,0x0,8
tick,0x7ff954e0fd34,347942246,0,0x0,8
tick,0x7ff954e0fd34,347957628,0,0x0,8
tick,0x7ff954e0fd34,347971825,0,0x0,8
tick,0x7ff954e0fd34,347987151,0,0x0,8
tick,0x7ff954e0fd34,348003268,0,0x0,8
tick,0x7ff954e0fd34,348018930,0,0x0,8
tick,0x7ff954e0fd34,348034664,0,0x0,8
tick,0x7ff954e0fd34,348050164,0,0x0,8
tick,0x7ff954e0fd34,348066156,0,0x0,8
tick,0x7ff954e0fd34,348082485,0,0x0,8
tick,0x7ff954e0fd34,348097992,0,0x0,8
tick,0x7ff954e0fd34,348114039,0,0x0,8
tick,0x7ff954e0fd34,348128916,0,0x0,8
tick,0x7ff954e0fd34,348143879,0,0x0,8
tick,0x7ff954e0fd34,348159832,0,0x0,8
tick,0x7ff954e0fd34,348175788,0,0x0,8
tick,0x7ff954e0fd34,348191758,0,0x0,8
tick,0x7ff954e0fd34,348207691,0,0x0,8
tick,0x7ff954e0fd34,348223666,0,0x0,8
tick,0x7ff954e0fd34,348239475,0,0x0,8
tick,0x7ff954e0fd34,348254541,0,0x0,8
tick,0x7ff954e0fd34,348270408,0,0x0,8
tick,0x7ff954e0fd34,348286349,0,0x0,8
tick,0x7ff954e0fd34,348302305,0,0x0,8
tick,0x7ff954e0fd34,348318274,0,0x0,8
tick,0x7ff954e0fd34,348333273,0,0x0,8
tick,0x7ff954e0fd34,348348171,0,0x0,8
tick,0x7ff954e0fd34,348363158,0,0x0,8
tick,0x7ff954e0fd34,348378418,0,0x0,8
tick,0x7ff954e0fd34,348393849,0,0x0,8
tick,0x7ff954e0fd34,348408811,0,0x0,8
tick,0x7ff954e0fd34,348424745,0,0x0,8
tick,0x7ff954e0fd34,348439824,0,0x0,8
tick,0x7ff954e0fd34,348455768,0,0x0,8
tick,0x7ff954e0fd34,348471618,0,0x0,8
tick,0x7ff954e0fd34,348486680,0,0x0,8
tick,0x7ff954e0fd34,348502616,0,0x0,8
tick,0x7ff954e0fd34,348517520,0,0x0,8
tick,0x7ff954e0fd34,348532497,0,0x0,8
tick,0x7ff954e0fd34,348547418,0,0x0,8
tick,0x7ff954e0fd34,348562381,0,0x0,8
tick,0x7ff954e0fd34,348578347,0,0x0,8
tick,0x7ff954e0fd34,348593294,0,0x0,8
tick,0x7ff954e0fd34,348608291,0,0x0,8
tick,0x7ff954e0fd34,348624326,0,0x0,8
tick,0x7ff954e0fd34,348640281,0,0x0,8
tick,0x7ff954e0fd34,348654864,0,0x0,8
tick,0x7ff954e0fd34,348670845,0,0x0,8
tick,0x7ff954e0fd34,348685765,0,0x0,8
tick,0x7ff954e0fd34,348700750,0,0x0,8
tick,0x7ff954e0fd34,348715702,0,0x0,8
tick,0x7ff954e0fd34,348730697,0,0x0,8
tick,0x7ff954e0fd34,348746238,0,0x0,8
tick,0x7ff954e0fd34,348762196,0,0x0,8
tick,0x7ff954e0fd34,348778174,0,0x0,8
tick,0x7ff954e0fd34,348794135,0,0x0,8
tick,0x7ff954e0fd34,348810100,0,0x0,8
tick,0x7ff954e0fd34,348825240,0,0x0,8
tick,0x7ff954e0fd34,348840192,0,0x0,8
tick,0x7ff954e0fd34,348856181,0,0x0,8
tick,0x7ff954e0fd34,348872149,0,0x0,8
tick,0x7ff954e0fd34,348887597,0,0x0,8
tick,0x7ff954e0fd34,348903579,0,0x0,8
tick,0x7ff954e0fd34,348919564,0,0x0,8
tick,0x7ff954e0fd34,348935555,0,0x0,8
tick,0x7ff954e0fd34,348950659,0,0x0,8
tick,0x7ff954e0fd34,348966584,0,0x0,8
tick,0x7ff954e0fd34,348981917,0,0x0,8
tick,0x7ff954e0fd34,348996708,0,0x0,8
tick,0x7ff954e0fd34,349012652,0,0x0,8
tick,0x7ff954e0fd34,349027928,0,0x0,8
tick,0x7ff954e0fd34,349043818,0,0x0,8
tick,0x7ff954e0fd34,349058974,0,0x0,8
tick,0x7ff954e0fd34,349074774,0,0x0,8
tick,0x7ff954e0fd34,349090716,0,0x0,8
tick,0x7ff954e0fd34,349106706,0,0x0,8
tick,0x7ff954e0fd34,349122176,0,0x0,8
tick,0x7ff954e0fd34,349137437,0,0x0,8
tick,0x7ff954e0fd34,349152676,0,0x0,8
tick,0x7ff954e0fd34,349167446,0,0x0,8
tick,0x7ff954e0fd34,349182418,0,0x0,8
tick,0x7ff954e0fd34,349197664,0,0x0,8
tick,0x7ff954e0fd34,349212337,0,0x0,8
tick,0x7ff954e0fd34,349227278,0,0x0,8
tick,0x7ff954e0fd34,349243240,0,0x0,8
tick,0x7ff954e0fd34,349258724,0,0x0,8
tick,0x7ff954e0fd34,349274771,0,0x0,8
tick,0x7ff954e0fd34,349290740,0,0x0,8
tick,0x7ff954e0fd34,349306705,0,0x0,8
tick,0x7ff954e0fd34,349322243,0,0x0,8
tick,0x7ff954e0fd34,349337154,0,0x0,8
tick,0x7ff954e0fd34,349353141,0,0x0,8
tick,0x7ff954e0fd34,349369071,0,0x0,8
tick,0x7ff954e0fd34,349384054,0,0x0,8
tick,0x7ff954e0fd34,349399008,0,0x0,8
tick,0x7ff954e0fd34,349413982,0,0x0,8
tick,0x7ff954e0fd34,349428942,0,0x0,8
tick,0x7ff954e0fd34,349443883,0,0x0,8
tick,0x7ff954e0fd34,349458687,0,0x0,8
tick,0x7ff954e0fd34,349474628,0,0x0,8
tick,0x7ff954e0fd34,349489583,0,0x0,8
tick,0x7ff954e0fd34,349505560,0,0x0,8
tick,0x7ff954e0fd34,349521492,0,0x0,8
tick,0x7ff954e0fd34,349537477,0,0x0,8
tick,0x7ff954e0fd34,349553417,0,0x0,8
tick,0x7ff954e0fd34,349569402,0,0x0,8
tick,0x7ff954e0fd34,349585329,0,0x0,8
tick,0x7ff954e0fd34,349601313,0,0x0,8
tick,0x7ff954e0fd34,349616584,0,0x0,8
tick,0x7ff954e0fd34,349631507,0,0x0,8
tick,0x7ff954e0fd34,349647949,0,0x0,8
tick,0x7ff954e0fd34,349663964,0,0x0,8
tick,0x7ff954e0fd34,349679929,0,0x0,8
tick,0x7ff954e0fd34,349695850,0,0x0,8
tick,0x7ff954e0fd34,349711791,0,0x0,8
tick,0x7ff954e0fd34,349726934,0,0x0,8
tick,0x7ff954e0fd34,349742352,0,0x0,8
tick,0x7ff954e0fd34,349757290,0,0x0,8
tick,0x7ff954e0fd34,349772306,0,0x0,8
tick,0x7ff954e0fd34,349787731,0,0x0,8
tick,0x7ff954e0fd34,349802607,0,0x0,8
tick,0x7ff954e0fd34,349818539,0,0x0,8
tick,0x7ff954e0fd34,349833524,0,0x0,8
tick,0x7ff954e0fd34,349849458,0,0x0,8
tick,0x7ff954e0fd34,349865417,0,0x0,8
tick,0x7ff954e0fd34,349881471,0,0x0,8
tick,0x7ff954e0fd34,349897331,0,0x0,8
tick,0x7ff954e0fd34,349944866,0,0x0,8
tick,0x7ff954e0fd34,349960460,0,0x0,8
tick,0x7ff954e0fd34,349974247,0,0x0,8
tick,0x7ff954e0fd34,349989158,0,0x0,8
tick,0x7ff954e0fd34,350005052,0,0x0,8
tick,0x7ff954e0fd34,350020578,0,0x0,8
tick,0x7ff954e0fd34,350034960,0,0x0,8
tick,0x7ff954e0fd34,350049885,0,0x0,8
tick,0x7ff954e0fd34,350064883,0,0x0,8
tick,0x7ff954e0fd34,350080018,0,0x0,8
tick,0x7ff954e0fd34,350094656,0,0x0,8
tick,0x7ff954e0fd34,350109654,0,0x0,8
tick,0x7ff954e0fd34,350125599,0,0x0,8
tick,0x7ff954e0fd34,350141543,0,0x0,8
tick,0x7ff954e0fd34,350157496,0,0x0,8
tick,0x7ff954e0fd34,350173458,0,0x0,8
tick,0x7ff954e0fd34,350189440,0,0x0,8
tick,0x7ff954e0fd34,350205357,0,0x0,8
tick,0x7ff954e0fd34,350220405,0,0x0,8
tick,0x7ff954e0fd34,350235279,0,0x0,8
tick,0x7ff954e0fd34,350250269,0,0x0,8
tick,0x7ff954e0fd34,350265239,0,0x0,8
tick,0x7ff954e0fd34,350280308,0,0x0,8
tick,0x7ff954e0fd34,350295712,0,0x0,8
tick,0x7ff954e0fd34,350311658,0,0x0,8
tick,0x7ff954e0fd34,350327649,0,0x0,8
tick,0x7ff954e0fd34,350343540,0,0x0,8
tick,0x7ff954e0fd34,350358450,0,0x0,8
tick,0x7ff954e0fd34,350374409,0,0x0,8
tick,0x7ff954e0fd34,350389467,0,0x0,8
tick,0x7ff954e0fd34,350405374,0,0x0,8
tick,0x7ff954e0fd34,350420515,0,0x0,8
tick,0x7ff954e0fd34,350435292,0,0x0,8
tick,0x7ff954e0fd34,350450255,0,0x0,8
tick,0x7ff954e0fd34,350466167,0,0x0,8
tick,0x7ff954e0fd34,350481135,0,0x0,8
tick,0x7ff954e0fd34,350497234,0,0x0,8
tick,0x7ff954e0fd34,350513093,0,0x0,8
tick,0x7ff954e0fd34,350529051,0,0x0,8
tick,0x7ff954e0fd34,350544959,0,0x0,8
tick,0x7ff954e0fd34,350561080,0,0x0,8
tick,0x7ff954e0fd34,350576926,0,0x0,8
tick,0x7ff954e0fd34,350592933,0,0x0,8
tick,0x7ff954e0fd34,350607796,0,0x0,8
tick,0x7ff954e0fd34,350622753,0,0x0,8
tick,0x7ff954e0fd34,350638720,0,0x0,8
tick,0x7ff954e0fd34,350654689,0,0x0,8
tick,0x7ff954e0fd34,350669856,0,0x0,8
tick,0x7ff954e0fd34,350684831,0,0x0,8
tick,0x7ff954e0fd34,350700139,0,0x0,8
tick,0x7ff954e0fd34,350715926,0,0x0,8
tick,0x7ff954e0fd34,350731048,0,0x0,8
tick,0x7ff954e0fd34,350746982,0,0x0,8
tick,0x7ff954e0fd34,350761953,0,0x0,8
tick,0x7ff954e0fd34,350777649,0,0x0,8
tick,0x7ff954e0fd34,350793337,0,0x0,8
tick,0x7ff954e0fd34,350808499,0,0x0,8
tick,0x7ff954e0fd34,350823274,0,0x0,8
tick,0x7ff954e0fd34,350838261,0,0x0,8
tick,0x7ff954e0fd34,350854191,0,0x0,8
tick,0x7ff954e0fd34,350869437,0,0x0,8
tick,0x7ff954e0fd34,350884387,0,0x0,8
tick,0x7ff954e0fd34,350900314,0,0x0,8
tick,0x7ff954e0fd34,350916480,0,0x0,8
tick,0x7ff954e0fd34,350931845,0,0x0,8
tick,0x7ff954e0fd34,350947778,0,0x0,8
tick,0x7ff954e0fd34,350962723,0,0x0,8
tick,0x7ff954e0fd34,350977706,0,0x0,8
tick,0x7ff954e0fd34,350993623,0,0x0,8
tick,0x7ff954e0fd34,351009724,0,0x0,8
tick,0x7ff954e0fd34,351025674,0,0x0,8
tick,0x7ff954e0fd34,351040529,0,0x0,8
tick,0x7ff954e0fd34,351056463,0,0x0,8
tick,0x7ff954e0fd34,351071489,0,0x0,8
tick,0x7ff954e0fd34,351087124,0,0x0,8
tick,0x7ff954e0fd34,351102077,0,0x0,8
tick,0x7ff954e0fd34,351118083,0,0x0,8
tick,0x7ff954e0fd34,351133989,0,0x0,8
tick,0x7ff954e0fd34,351149955,0,0x0,8
tick,0x7ff954e0fd34,351165910,0,0x0,8
tick,0x7ff954e0fd34,351181870,0,0x0,8
tick,0x7ff954e0fd34,351196840,0,0x0,8
tick,0x7ff954e0fd34,351211783,0,0x0,8
tick,0x7ff954e0fd34,351226839,0,0x0,8
tick,0x7ff954e0fd34,351242730,0,0x0,8
tick,0x7ff954e0fd34,351257665,0,0x0,8
tick,0x7ff954e0fd34,351272621,0,0x0,8
tick,0x7ff954e0fd34,351288603,0,0x0,8
tick,0x7ff954e0fd34,351303540,0,0x0,8
tick,0x7ff954e0fd34,351318522,0,0x0,8
tick,0x7ff954e0fd34,351333477,0,0x0,8
tick,0x7ff954e0fd34,351349474,0,0x0,8
tick,0x7ff954e0fd34,351364891,0,0x0,8
tick,0x7ff954e0fd34,351380884,0,0x0,8
tick,0x7ff954e0fd34,351396834,0,0x0,8
tick,0x7ff954e0fd34,351412765,0,0x0,8
tick,0x7ff954e0fd34,351428796,0,0x0,8
tick,0x7ff954e0fd34,351443685,0,0x0,8
tick,0x7ff954e0fd34,351458630,0,0x0,8
tick,0x7ff954e0fd34,351473619,0,0x0,8
tick,0x7ff954e0fd34,351488563,0,0x0,8
tick,0x7ff954e0fd34,351504509,0,0x0,8
tick,0x7ff954e0fd34,351519510,0,0x0,8
tick,0x7ff954e0fd34,351534423,0,0x0,8
tick,0x7ff954e0fd34,351549936,0,0x0,8
tick,0x7ff954e0fd34,351564975,0,0x0,8
tick,0x7ff954e0fd34,351579854,0,0x0,8
tick,0x7ff954e0fd34,351594803,0,0x0,8
tick,0x7ff954e0fd34,351610781,0,0x0,8
tick,0x7ff954e0fd34,351626786,0,0x0,8
tick,0x7ff954e0fd34,351642763,0,0x0,8
tick,0x7ff954e0fd34,351658239,0,0x0,8
tick,0x7ff954e0fd34,351674176,0,0x0,8
tick,0x7ff954e0fd34,351690178,0,0x0,8
tick,0x7ff954e0fd34,351706152,0,0x0,8
tick,0x7ff954e0fd34,351721057,0,0x0,8
tick,0x7ff954e0fd34,351737042,0,0x0,8
tick,0x7ff954e0fd34,351751964,0,0x0,8
tick,0x7ff954e0fd34,351766941,0,0x0,8
tick,0x7ff954e0fd34,351782871,0,0x0,8
tick,0x7ff954e0fd34,351797869,0,0x0,8
tick,0x7ff954e0fd34,351812820,0,0x0,8
tick,0x7ff954e0fd34,351827897,0,0x0,8
tick,0x7ff954e0fd34,351844037,0,0x0,8
tick,0x7ff954e0fd34,351858447,0,0x0,8
tick,0x7ff954e0fd34,351873573,0,0x0,8
tick,0x7ff954e0fd34,351889560,0,0x0,8
tick,0x7ff954e0fd34,351904468,0,0x0,8
tick,0x7ff954e0fd34,351920394,0,0x0,8
tick,0x7ff954e0fd34,351935488,0,0x0,8
tick,0x7ff954e0fd34,351950355,0,0x0,8
tick,0x7ff954e0fd34,351965342,0,0x0,8
tick,0x7ff954e0fd34,351980262,0,0x0,8
tick,0x7ff954e0fd34,351996282,0,0x0,8
tick,0x7ff954e0fd34,352011816,0,0x0,8
tick,0x7ff954e0fd34,352027953,0,0x0,8
tick,0x7ff954e0fd34,352042714,0,0x0,8
tick,0x7ff954e0fd34,352057692,0,0x0,8
tick,0x7ff954e0fd34,352072662,0,0x0,8
tick,0x7ff954e0fd34,352088575,0,0x0,8
tick,0x7ff954e0fd34,352103534,0,0x0,8
tick,0x7ff954e0fd34,352119542,0,0x0,8
tick,0x7ff954e0fd34,352135462,0,0x0,8
tick,0x7ff954e0fd34,352151470,0,0x0,8
tick,0x7ff954e0fd34,352167016,0,0x0,8
tick,0x7ff954e0fd34,352182976,0,0x0,8
tick,0x7ff954e0fd34,352197908,0,0x0,8
tick,0x7ff954e0fd34,352212899,0,0x0,8
tick,0x7ff954e0fd34,352228864,0,0x0,8
tick,0x7ff954e0fd34,352243821,0,0x0,8
tick,0x7ff954e0fd34,352258786,0,0x0,8
tick,0x7ff954e0fd34,352273744,0,0x0,8
tick,0x7ff954e0fd34,352289908,0,0x0,8
tick,0x7ff954e0fd34,352304630,0,0x0,8
tick,0x7ff954e0fd34,352320600,0,0x0,8
tick,0x7ff954e0fd34,352336549,0,0x0,8
tick,0x7ff954e0fd34,352351525,0,0x0,8
tick,0x7ff954e0fd34,352367471,0,0x0,8
tick,0x7ff954e0fd34,352382445,0,0x0,8
tick,0x7ff954e0fd34,352397767,0,0x0,8
tick,0x7ff954e0fd34,352413644,0,0x0,8
tick,0x7ff954e0fd34,352428608,0,0x0,8
tick,0x7ff954e0fd34,352443600,0,0x0,8
tick,0x7ff954e0fd34,352459471,0,0x0,8
tick,0x7ff954e0fd34,352476751,0,0x0,8
tick,0x7ff954e0fd34,352491432,0,0x0,8
tick,0x7ff954e0fd34,352507907,0,0x0,8
tick,0x7ff954e0fd34,352523300,0,0x0,8
tick,0x7ff954e0fd34,352539310,0,0x0,8
tick,0x7ff954e0fd34,352555243,0,0x0,8
tick,0x7ff954e0fd34,352571358,0,0x0,8
tick,0x7ff954e0fd34,352586461,0,0x0,8
tick,0x7ff954e0fd34,352601524,0,0x0,8
tick,0x7ff954e0fd34,352617463,0,0x0,8
tick,0x7ff954e0fd34,352633440,0,0x0,8
tick,0x7ff954e0fd34,352648498,0,0x0,8
tick,0x7ff954e0fd34,352663488,0,0x0,8
tick,0x7ff954e0fd34,352678428,0,0x0,8
tick,0x7ff954e0fd34,352693279,0,0x0,8
tick,0x7ff954e0fd34,352708161,0,0x0,8
tick,0x7ff954e0fd34,352723240,0,0x0,8
tick,0x7ff954e0fd34,352739187,0,0x0,8
tick,0x7ff954e0fd34,352754129,0,0x0,8
tick,0x7ff954e0fd34,352770115,0,0x0,8
tick,0x7ff954e0fd34,352785531,0,0x0,8
tick,0x7ff954e0fd34,352801445,0,0x0,8
tick,0x7ff954e0fd34,352817417,0,0x0,8
tick,0x7ff954e0fd34,352833356,0,0x0,8
tick,0x7ff954e0fd34,352848655,0,0x0,8
tick,0x7ff954e0fd34,352863992,0,0x0,8
tick,0x7ff954e0fd34,352878882,0,0x0,8
tick,0x7ff954e0fd34,352894514,0,0x0,8
tick,0x7ff954e0fd34,352910442,0,0x0,8
tick,0x7ff954e0fd34,352926034,0,0x0,8
tick,0x7ff954e0fd34,352942053,0,0x0,8
tick,0x7ff954e0fd34,352957428,0,0x0,8
tick,0x7ff954e0fd34,352972666,0,0x0,8
tick,0x7ff954e0fd34,352988313,0,0x0,8
tick,0x7ff954e0fd34,353004283,0,0x0,8
tick,0x7ff954e0fd34,353020260,0,0x0,8
tick,0x7ff954e0fd34,353036169,0,0x0,8
tick,0x7ff954e0fd34,353052149,0,0x0,8
tick,0x7ff954e0fd34,353067108,0,0x0,8
tick,0x7ff954e0fd34,353082098,0,0x0,8
tick,0x7ff954e0fd34,353097041,0,0x0,8
tick,0x7ff954e0fd34,353112031,0,0x0,8
tick,0x7ff954e0fd34,353126984,0,0x0,8
tick,0x7ff954e0fd34,353142967,0,0x0,8
tick,0x7ff954e0fd34,353158911,0,0x0,8
tick,0x7ff954e0fd34,353174937,0,0x0,8
tick,0x7ff954e0fd34,353189784,0,0x0,8
tick,0x7ff954e0fd34,353204773,0,0x0,8
tick,0x7ff954e0fd34,353219697,0,0x0,8
tick,0x7ff954e0fd34,353234682,0,0x0,8
tick,0x7ff954e0fd34,353250625,0,0x0,8
tick,0x7ff954e0fd34,353265594,0,0x0,8
tick,0x7ff954e0fd34,353281521,0,0x0,8
tick,0x7ff954e0fd34,353297122,0,0x0,8
tick,0x7ff954e0fd34,353312976,0,0x0,8
tick,0x7ff954e0fd34,353328966,0,0x0,8
tick,0x7ff954e0fd34,353343847,0,0x0,8
tick,0x7ff954e0fd34,353359229,0,0x0,8
tick,0x7ff954e0fd34,353375137,0,0x0,8
tick,0x7ff954e0fd34,353390539,0,0x0,8
tick,0x7ff954e0fd34,353405929,0,0x0,8
tick,0x7ff954e0fd34,353421934,0,0x0,8
tick,0x7ff954e0fd34,353437857,0,0x0,8
tick,0x7ff954e0fd34,353453330,0,0x0,8
tick,0x7ff954e0fd34,353468575,0,0x0,8
tick,0x7ff954e0fd34,353484563,0,0x0,8
tick,0x7ff954e0fd34,353500513,0,0x0,8
tick,0x7ff954e0fd34,353516486,0,0x0,8
tick,0x7ff954e0fd34,353532474,0,0x0,8
tick,0x7ff954e0fd34,353548448,0,0x0,8
tick,0x7ff954e0fd34,353563424,0,0x0,8
tick,0x7ff954e0fd34,353578985,0,0x0,8
tick,0x7ff954e0fd34,353593727,0,0x0,8
tick,0x7ff954e0fd34,353609450,0,0x0,8
tick,0x7ff954e0fd34,353624355,0,0x0,8
tick,0x7ff954e0fd34,353639356,0,0x0,8
tick,0x7ff954e0fd34,353654310,0,0x0,8
tick,0x7ff954e0fd34,353669283,0,0x0,8
tick,0x7ff954e0fd34,353685208,0,0x0,8
tick,0x7ff954e0fd34,353701179,0,0x0,8
tick,0x7ff954e0fd34,353717016,0,0x0,8
tick,0x7ff954e0fd34,353732190,0,0x0,8
tick,0x7ff954e0fd34,353748186,0,0x0,8
tick,0x7ff954e0fd34,353763338,0,0x0,8
tick,0x7ff954e0fd34,353778150,0,0x0,8
tick,0x7ff954e0fd34,353794169,0,0x0,8
tick,0x7ff954e0fd34,353810119,0,0x0,8
tick,0x7ff954e0fd34,353826025,0,0x0,8
tick,0x7ff954e0fd34,353841664,0,0x0,8
tick,0x7ff954e0fd34,353856652,0,0x0,8
tick,0x7ff954e0fd34,353871371,0,0x0,8
tick,0x7ff954e0fd34,353886526,0,0x0,8
tick,0x7ff954e0fd34,353901573,0,0x0,8
tick,0x7ff954e0fd34,353917601,0,0x0,8
tick,0x7ff954e0fd34,353932602,0,0x0,8
tick,0x7ff954e0fd34,353948021,0,0x0,8
tick,0x7ff954e0fd34,353963690,0,0x0,8
tick,0x7ff954e0fd34,353979097,0,0x0,8
tick,0x7ff954e0fd34,353995020,0,0x0,8
tick,0x7ff954e0fd34,354010908,0,0x0,8
tick,0x7ff954e0fd34,354026892,0,0x0,8
tick,0x7ff954e0fd34,354041829,0,0x0,8
tick,0x7ff954e0fd34,354056760,0,0x0,8
tick,0x7ff954e0fd34,354071754,0,0x0,8
tick,0x7ff954e0fd34,354086693,0,0x0,8
tick,0x7ff954e0fd34,354102672,0,0x0,8
tick,0x7ff954e0fd34,354118649,0,0x0,8
tick,0x7ff954e0fd34,354133557,0,0x0,8
tick,0x7ff954e0fd34,354148573,0,0x0,8
tick,0x7ff954e0fd34,354164515,0,0x0,8
tick,0x7ff954e0fd34,354180270,0,0x0,8
tick,0x7ff954e0fd34,354196169,0,0x0,8
tick,0x7ff954e0fd34,354212200,0,0x0,8
tick,0x7ff954e0fd34,354228207,0,0x0,8
tick,0x7ff954e0fd34,354244101,0,0x0,8
tick,0x7ff954e0fd34,354260012,0,0x0,8
tick,0x7ff954e0fd34,354275972,0,0x0,8
tick,0x7ff954e0fd34,354291955,0,0x0,8
tick,0x7ff954e0fd34,354307910,0,0x0,8
tick,0x7ff954e0fd34,354322848,0,0x0,8
tick,0x7ff954e0fd34,354338815,0,0x0,8
tick,0x7ff954e0fd34,354353767,0,0x0,8
tick,0x7ff954e0fd34,354369749,0,0x0,8
tick,0x7ff954e0fd34,354385694,0,0x0,8
tick,0x7ff954e0fd34,354401726,0,0x0,8
tick,0x7ff954e0fd34,354417634,0,0x0,8
tick,0x7ff954e0fd34,354433569,0,0x0,8
tick,0x7ff954e0fd34,354449534,0,0x0,8
tick,0x7ff954e0fd34,354464483,0,0x0,8
tick,0x7ff954e0fd34,354480435,0,0x0,8
tick,0x7ff954e0fd34,354495750,0,0x0,8
tick,0x7ff954e0fd34,354510707,0,0x0,8
tick,0x7ff954e0fd34,354525641,0,0x0,8
tick,0x7ff954e0fd34,354541627,0,0x0,8
tick,0x7ff954e0fd34,354556623,0,0x0,8
tick,0x7ff954e0fd34,354572523,0,0x0,8
tick,0x7ff954e0fd34,354588048,0,0x0,8
tick,0x7ff954e0fd34,354603865,0,0x0,8
tick,0x7ff954e0fd34,354619884,0,0x0,8
tick,0x7ff954e0fd34,354635774,0,0x0,8
tick,0x7ff954e0fd34,354651767,0,0x0,8
tick,0x7ff954e0fd34,354667130,0,0x0,8
tick,0x7ff954e0fd34,354682965,0,0x0,8
tick,0x7ff954e0fd34,354698236,0,0x0,8
tick,0x7ff954e0fd34,354714154,0,0x0,8
tick,0x7ff954e0fd34,354730188,0,0x0,8
tick,0x7ff954e0fd34,354746063,0,0x0,8
tick,0x7ff954e0fd34,354761276,0,0x0,8
tick,0x7ff954e0fd34,354776939,0,0x0,8
tick,0x7ff954e0fd34,354791865,0,0x0,8
tick,0x7ff954e0fd34,354807829,0,0x0,8
tick,0x7ff954e0fd34,354823431,0,0x0,8
tick,0x7ff954e0fd34,354838798,0,0x0,8
tick,0x7ff954e0fd34,354854702,0,0x0,8
tick,0x7ff954e0fd34,354871176,0,0x0,8
tick,0x7ff954e0fd34,354887581,0,0x0,8
tick,0x7ff954e0fd34,354910379,0,0x0,8
tick,0x7ff954e0fd34,354920460,0,0x0,8
tick,0x7ff954e0fd34,354934824,0,0x0,8
tick,0x7ff954e0fd34,354950455,0,0x0,8
tick,0x7ff954e0fd34,354966433,0,0x0,8
tick,0x7ff954e0fd34,354981817,0,0x0,8
tick,0x7ff954e0fd34,354997870,0,0x0,8
tick,0x7ff954e0fd34,355012830,0,0x0,8
tick,0x7ff954e0fd34,355027677,0,0x0,8
tick,0x7ff954e0fd34,355042540,0,0x0,8
tick,0x7ff954e0fd34,355057530,0,0x0,8
tick,0x7ff954e0fd34,355072860,0,0x0,8
tick,0x7ff954e0fd34,355088821,0,0x0,8
tick,0x7ff954e0fd34,355103795,0,0x0,8
tick,0x7ff954e0fd34,355118722,0,0x0,8
tick,0x7ff954e0fd34,355133751,0,0x0,8
tick,0x7ff954e0fd34,355148661,0,0x0,8
tick,0x7ff954e0fd34,355163613,0,0x0,8
tick,0x7ff954e0fd34,355178614,0,0x0,8
tick,0x7ff954e0fd34,355193524,0,0x0,8
tick,0x7ff954e0fd34,355209497,0,0x0,8
tick,0x7ff954e0fd34,355225486,0,0x0,8
tick,0x7ff954e0fd34,355241422,0,0x0,8
tick,0x7ff954e0fd34,355256714,0,0x0,8
tick,0x7ff954e0fd34,355272646,0,0x0,8
tick,0x7ff954e0fd34,355287522,0,0x0,8
tick,0x7ff954e0fd34,355303474,0,0x0,8
tick,0x7ff954e0fd34,355319427,0,0x0,8
tick,0x7ff954e0fd34,355335411,0,0x0,8
tick,0x7ff954e0fd34,355350566,0,0x0,8
tick,0x7ff954e0fd34,355366203,0,0x0,8
tick,0x7ff954e0fd34,355381151,0,0x0,8
tick,0x7ff954e0fd34,355397143,0,0x0,8
tick,0x7ff954e0fd34,355412088,0,0x0,8
tick,0x7ff954e0fd34,355427049,0,0x0,8
tick,0x7ff954e0fd34,355441996,0,0x0,8
tick,0x7ff954e0fd34,355456980,0,0x0,8
tick,0x7ff954e0fd34,355471907,0,0x0,8
tick,0x7ff954e0fd34,355486911,0,0x0,8
tick,0x7ff954e0fd34,355501832,0,0x0,8
tick,0x7ff954e0fd34,355517808,0,0x0,8
tick,0x7ff954e0fd34,355533809,0,0x0,8
tick,0x7ff954e0fd34,355548726,0,0x0,8
tick,0x7ff954e0fd34,355564699,0,0x0,8
tick,0x7ff954e0fd34,355579754,0,0x0,8
tick,0x7ff954e0fd34,355595648,0,0x0,8
tick,0x7ff954e0fd34,355611551,0,0x0,8
tick,0x7ff954e0fd34,355627512,0,0x0,8
tick,0x7ff954e0fd34,355643484,0,0x0,8
tick,0x7ff954e0fd34,355659124,0,0x0,8
tick,0x7ff954e0fd34,355675111,0,0x0,8
tick,0x7ff954e0fd34,355691078,0,0x0,8
tick,0x7ff954e0fd34,355706997,0,0x0,8
tick,0x7ff954e0fd34,355721966,0,0x0,8
tick,0x7ff954e0fd34,355737936,0,0x0,8
tick,0x7ff954e0fd34,355752913,0,0x0,8
tick,0x7ff954e0fd34,355768790,0,0x0,8
tick,0x7ff954e0fd34,355784051,0,0x0,8
tick,0x7ff954e0fd34,355799028,0,0x0,8
tick,0x7ff954e0fd34,355814986,0,0x0,8
tick,0x7ff954e0fd34,355830936,0,0x0,8
tick,0x7ff954e0fd34,355846973,0,0x0,8
tick,0x7ff954e0fd34,355863079,0,0x0,8
tick,0x7ff954e0fd34,355878890,0,0x0,8
tick,0x7ff954e0fd34,355894894,0,0x0,8
tick,0x7ff954e0fd34,355910629,0,0x0,8
tick,0x7ff954e0fd34,355926649,0,0x0,8
tick,0x7ff954e0fd34,355942411,0,0x0,8
tick,0x7ff954e0fd34,355958211,0,0x0,8
tick,0x7ff954e0fd34,355974016,0,0x0,8
tick,0x7ff954e0fd34,355989987,0,0x0,8
tick,0x7ff954e0fd34,356004949,0,0x0,8
tick,0x7ff954e0fd34,356020920,0,0x0,8
tick,0x7ff954e0fd34,356035901,0,0x0,8
tick,0x7ff954e0fd34,356051842,0,0x0,8
tick,0x7ff954e0fd34,356066778,0,0x0,8
tick,0x7ff954e0fd34,356081799,0,0x0,8
tick,0x7ff954e0fd34,356096720,0,0x0,8
tick,0x7ff954e0fd34,356111695,0,0x0,8
tick,0x7ff954e0fd34,356126640,0,0x0,8
tick,0x7ff954e0fd34,356141605,0,0x0,8
tick,0x7ff954e0fd34,356156541,0,0x0,8
tick,0x7ff954e0fd34,356172515,0,0x0,8
tick,0x7ff954e0fd34,356187465,0,0x0,8
tick,0x7ff954e0fd34,356203452,0,0x0,8
tick,0x7ff954e0fd34,356218388,0,0x0,8
tick,0x7ff954e0fd34,356234351,0,0x0,8
tick,0x7ff954e0fd34,356250056,0,0x0,8
tick,0x7ff954e0fd34,356266014,0,0x0,8
tick,0x7ff954e0fd34,356282023,0,0x0,8
tick,0x7ff954e0fd34,356297899,0,0x0,8
tick,0x7ff954e0fd34,356313901,0,0x0,8
tick,0x7ff954e0fd34,356328899,0,0x0,8
tick,0x7ff954e0fd34,356343803,0,0x0,8
tick,0x7ff954e0fd34,356359518,0,0x0,8
tick,0x7ff954e0fd34,356373718,0,0x0,8
tick,0x7ff954e0fd34,356389681,0,0x0,8
tick,0x7ff954e0fd34,356404607,0,0x0,8
tick,0x7ff954e0fd34,356420590,0,0x0,8
tick,0x7ff954e0fd34,356436537,0,0x0,8
tick,0x7ff954e0fd34,356452532,0,0x0,8
tick,0x7ff954e0fd34,356468447,0,0x0,8
tick,0x7ff954e0fd34,356483250,0,0x0,8
tick,0x7ff954e0fd34,356498713,0,0x0,8
tick,0x7ff954e0fd34,356514707,0,0x0,8
tick,0x7ff954e0fd34,356530631,0,0x0,8
tick,0x7ff954e0fd34,356546268,0,0x0,8
tick,0x7ff954e0fd34,356562217,0,0x0,8
tick,0x7ff954e0fd34,356577611,0,0x0,8
tick,0x7ff954e0fd34,356593563,0,0x0,8
tick,0x7ff954e0fd34,356609534,0,0x0,8
tick,0x7ff954e0fd34,356625481,0,0x0,8
tick,0x7ff954e0fd34,356641454,0,0x0,8
tick,0x7ff954e0fd34,356656381,0,0x0,8
tick,0x7ff954e0fd34,356671353,0,0x0,8
tick,0x7ff954e0fd34,356686311,0,0x0,8
tick,0x7ff954e0fd34,356701280,0,0x0,8
tick,0x7ff954e0fd34,356716145,0,0x0,8
tick,0x7ff954e0fd34,356732330,0,0x0,8
tick,0x7ff954e0fd34,356748088,0,0x0,8
tick,0x7ff954e0fd34,356763124,0,0x0,8
tick,0x7ff954e0fd34,356778014,0,0x0,8
tick,0x7ff954e0fd34,356793677,0,0x0,8
tick,0x7ff954e0fd34,356809655,0,0x0,8
tick,0x7ff954e0fd34,356825571,0,0x0,8
tick,0x7ff954e0fd34,356841541,0,0x0,8
tick,0x7ff954e0fd34,356856490,0,0x0,8
tick,0x7ff954e0fd34,356872459,0,0x0,8
tick,0x7ff954e0fd34,356887450,0,0x0,8
tick,0x7ff954e0fd34,356903446,0,0x0,8
tick,0x7ff954e0fd34,356919439,0,0x0,8
tick,0x7ff954e0fd34,356935366,0,0x0,8
tick,0x7ff954e0fd34,356951322,0,0x0,8
tick,0x7ff954e0fd34,356966871,0,0x0,8
tick,0x7ff954e0fd34,356982857,0,0x0,8
tick,0x7ff954e0fd34,356998792,0,0x0,8
tick,0x7ff954e0fd34,357013777,0,0x0,8
tick,0x7ff954e0fd34,357029214,0,0x0,8
tick,0x7ff954e0fd34,357045158,0,0x0,8
tick,0x7ff954e0fd34,357061187,0,0x0,8
tick,0x7ff954e0fd34,357076102,0,0x0,8
tick,0x7ff954e0fd34,357092061,0,0x0,8
tick,0x7ff954e0fd34,357107443,0,0x0,8
tick,0x7ff954e0fd34,357123397,0,0x0,8
tick,0x7ff954e0fd34,357138337,0,0x0,8
tick,0x7ff954e0fd34,357153310,0,0x0,8
tick,0x7ff954e0fd34,357168301,0,0x0,8
tick,0x7ff954e0fd34,357183357,0,0x0,8
tick,0x7ff954e0fd34,357199048,0,0x0,8
tick,0x7ff954e0fd34,357215011,0,0x0,8
tick,0x7ff954e0fd34,357230973,0,0x0,8
tick,0x7ff954e0fd34,357246088,0,0x0,8
tick,0x7ff954e0fd34,357261343,0,0x0,8
tick,0x7ff954e0fd34,357277299,0,0x0,8
tick,0x7ff954e0fd34,357293270,0,0x0,8
tick,0x7ff954e0fd34,357308617,0,0x0,8
tick,0x7ff954e0fd34,357323399,0,0x0,8
tick,0x7ff954e0fd34,357339356,0,0x0,8
tick,0x7ff954e0fd34,357355390,0,0x0,8
tick,0x7ff954e0fd34,357371257,0,0x0,8
tick,0x7ff954e0fd34,357387391,0,0x0,8
tick,0x7ff954e0fd34,357403033,0,0x0,8
tick,0x7ff954e0fd34,357417931,0,0x0,8
tick,0x7ff954e0fd34,357433181,0,0x0,8
tick,0x7ff954e0fd34,357449104,0,0x0,8
tick,0x7ff954e0fd34,357464635,0,0x0,8
tick,0x7ff954e0fd34,357480680,0,0x0,8
tick,0x7ff954e0fd34,357496641,0,0x0,8
tick,0x7ff954e0fd34,357512587,0,0x0,8
tick,0x7ff954e0fd34,357527703,0,0x0,8
tick,0x7ff954e0fd34,357542975,0,0x0,8
tick,0x7ff954e0fd34,357558925,0,0x0,8
tick,0x7ff954e0fd34,357574440,0,0x0,8
tick,0x7ff954e0fd34,357589559,0,0x0,8
tick,0x7ff954e0fd34,357605430,0,0x0,8
tick,0x7ff954e0fd34,357620479,0,0x0,8
tick,0x7ff954e0fd34,357636351,0,0x0,8
tick,0x7ff954e0fd34,357652373,0,0x0,8
tick,0x7ff954e0fd34,357667650,0,0x0,8
tick,0x7ff954e0fd34,357683184,0,0x0,8
tick,0x7ff954e0fd34,357698208,0,0x0,8
tick,0x7ff954e0fd34,357714031,0,0x0,8
tick,0x7ff954e0fd34,357729487,0,0x0,8
tick,0x7ff954e0fd34,357745317,0,0x0,8
tick,0x7ff954e0fd34,357760600,0,0x0,8
tick,0x7ff954e0fd34,357775512,0,0x0,8
tick,0x7ff954e0fd34,357791467,0,0x0,8
tick,0x7ff954e0fd34,357807420,0,0x0,8
tick,0x7ff954e0fd34,357822387,0,0x0,8
tick,0x7ff954e0fd34,357838340,0,0x0,8
tick,0x7ff954e0fd34,357853319,0,0x0,8
tick,0x7ff954e0fd34,357868255,0,0x0,8
tick,0x7ff954e0fd34,357883294,0,0x0,8
tick,0x7ff954e0fd34,357899200,0,0x0,8
tick,0x7ff954e0fd34,357915175,0,0x0,8
tick,0x7ff954e0fd34,357930713,0,0x0,8
tick,0x7ff954e0fd34,357945306,0,0x0,8
tick,0x7ff954e0fd34,357961368,0,0x0,8
tick,0x7ff954e0fd34,357977340,0,0x0,8
tick,0x7ff954e0fd34,357992532,0,0x0,8
tick,0x7ff954e0fd34,358008444,0,0x0,8
tick,0x7ff954e0fd34,358023482,0,0x0,8
tick,0x7ff954e0fd34,358039426,0,0x0,8
tick,0x7ff954e0fd34,358054316,0,0x0,8
tick,0x7ff954e0fd34,358069520,0,0x0,8
tick,0x7ff954e0fd34,358084494,0,0x0,8
tick,0x7ff954e0fd34,358100271,0,0x0,8
tick,0x7ff954e0fd34,358115290,0,0x0,8
tick,0x7ff954e0fd34,358131255,0,0x0,8
tick,0x7ff954e0fd34,358147193,0,0x0,8
tick,0x7ff954e0fd34,358163055,0,0x0,8
tick,0x7ff954e0fd34,358179082,0,0x0,8
tick,0x7ff954e0fd34,358195058,0,0x0,8
tick,0x7ff954e0fd34,358210416,0,0x0,8
tick,0x7ff954e0fd34,358225295,0,0x0,8
tick,0x7ff954e0fd34,358241262,0,0x0,8
tick,0x7ff954e0fd34,358256256,0,0x0,8
tick,0x7ff954e0fd34,358271250,0,0x0,8
tick,0x7ff954e0fd34,358286845,0,0x0,8
tick,0x7ff954e0fd34,358302355,0,0x0,8
tick,0x7ff954e0fd34,358318320,0,0x0,8
tick,0x7ff954e0fd34,358334247,0,0x0,8
tick,0x7ff954e0fd34,358349258,0,0x0,8
tick,0x7ff954e0fd34,358365183,0,0x0,8
tick,0x7ff954e0fd34,358380987,0,0x0,8
tick,0x7ff954e0fd34,358396608,0,0x0,8
tick,0x7ff954e0fd34,358412664,0,0x0,8
tick,0x7ff954e0fd34,358428559,0,0x0,8
tick,0x7ff954e0fd34,358444511,0,0x0,8
tick,0x7ff954e0fd34,358460487,0,0x0,8
tick,0x7ff954e0fd34,358475988,0,0x0,8
tick,0x7ff954e0fd34,358491964,0,0x0,8
tick,0x7ff954e0fd34,358507883,0,0x0,8
tick,0x7ff954e0fd34,358523862,0,0x0,8
tick,0x7ff954e0fd34,358538806,0,0x0,8
tick,0x7ff954e0fd34,358553790,0,0x0,8
tick,0x7ff954e0fd34,358569715,0,0x0,8
tick,0x7ff954e0fd34,358585677,0,0x0,8
tick,0x7ff954e0fd34,358601667,0,0x0,8
tick,0x7ff954e0fd34,358617603,0,0x0,8
tick,0x7ff954e0fd34,358633545,0,0x0,8
tick,0x7ff954e0fd34,358649555,0,0x0,8
tick,0x7ff954e0fd34,358664746,0,0x0,8
tick,0x7ff954e0fd34,358680710,0,0x0,8
tick,0x7ff954e0fd34,358695748,0,0x0,8
tick,0x7ff954e0fd34,358711253,0,0x0,8
tick,0x7ff954e0fd34,358727196,0,0x0,8
tick,0x7ff954e0fd34,358742351,0,0x0,8
tick,0x7ff954e0fd34,358758279,0,0x0,8
tick,0x7ff954e0fd34,358773268,0,0x0,8
tick,0x7ff954e0fd34,358788919,0,0x0,8
tick,0x7ff954e0fd34,358803873,0,0x0,8
tick,0x7ff954e0fd34,358819428,0,0x0,8
tick,0x7ff954e0fd34,358835356,0,0x0,8
tick,0x7ff954e0fd34,358850298,0,0x0,8
tick,0x7ff954e0fd34,358866020,0,0x0,8
tick,0x7ff954e0fd34,358881944,0,0x0,8
tick,0x7ff954e0fd34,358897660,0,0x0,8
tick,0x7ff954e0fd34,358913653,0,0x0,8
tick,0x7ff954e0fd34,358929034,0,0x0,8
tick,0x7ff954e0fd34,358943888,0,0x0,8
tick,0x7ff954e0fd34,358959865,0,0x0,8
tick,0x7ff954e0fd34,358975195,0,0x0,8
tick,0x7ff954e0fd34,358990172,0,0x0,8
tick,0x7ff954e0fd34,359006138,0,0x0,8
tick,0x7ff954e0fd34,359021096,0,0x0,8
tick,0x7ff954e0fd34,359036042,0,0x0,8
tick,0x7ff954e0fd34,359051018,0,0x0,8
tick,0x7ff954e0fd34,359066960,0,0x0,8
tick,0x7ff954e0fd34,359082907,0,0x0,8
tick,0x7ff954e0fd34,359098873,0,0x0,8
tick,0x7ff954e0fd34,359114831,0,0x0,8
tick,0x7ff954e0fd34,359130336,0,0x0,8
tick,0x7ff954e0fd34,359146296,0,0x0,8
tick,0x7ff954e0fd34,359162202,0,0x0,8
tick,0x7ff954e0fd34,359177946,0,0x0,8
tick,0x7ff954e0fd34,359193838,0,0x0,8
tick,0x7ff954e0fd34,359208740,0,0x0,8
tick,0x7ff954e0fd34,359223728,0,0x0,8
tick,0x7ff954e0fd34,359238664,0,0x0,8
tick,0x7ff954e0fd34,359253613,0,0x0,8
tick,0x7ff954e0fd34,359269592,0,0x0,8
tick,0x7ff954e0fd34,359284532,0,0x0,8
tick,0x7ff954e0fd34,359299668,0,0x0,8
tick,0x7ff954e0fd34,359315616,0,0x0,8
tick,0x7ff954e0fd34,359331232,0,0x0,8
tick,0x7ff954e0fd34,359346796,0,0x0,8
tick,0x7ff954e0fd34,359362771,0,0x0,8
tick,0x7ff954e0fd34,359378713,0,0x0,8
tick,0x7ff954e0fd34,359394580,0,0x0,8
tick,0x7ff954e0fd34,359410008,0,0x0,8
tick,0x7ff954e0fd34,359425302,0,0x0,8
tick,0x7ff954e0fd34,359441246,0,0x0,8
tick,0x7ff954e0fd34,359457321,0,0x0,8
tick,0x7ff954e0fd34,359473311,0,0x0,8
tick,0x7ff954e0fd34,359488905,0,0x0,8
tick,0x7ff954e0fd34,359504323,0,0x0,8
tick,0x7ff954e0fd34,359519944,0,0x0,8
tick,0x7ff954e0fd34,359535802,0,0x0,8
tick,0x7ff954e0fd34,359551281,0,0x0,8
tick,0x7ff954e0fd34,359566777,0,0x0,8
tick,0x7ff954e0fd34,359582805,0,0x0,8
tick,0x7ff954e0fd34,359598135,0,0x0,8
tick,0x7ff954e0fd34,359613276,0,0x0,8
tick,0x7ff954e0fd34,359629323,0,0x0,8
tick,0x7ff954e0fd34,359645273,0,0x0,8
tick,0x7ff954e0fd34,359661241,0,0x0,8
tick,0x7ff954e0fd34,359676319,0,0x0,8
tick,0x7ff954e0fd34,359691319,0,0x0,8
tick,0x7ff954e0fd34,359706292,0,0x0,8
tick,0x7ff954e0fd34,359722213,0,0x0,8
tick,0x7ff954e0fd34,359738176,0,0x0,8
tick,0x7ff954e0fd34,359753120,0,0x0,8
tick,0x7ff954e0fd34,359769113,0,0x0,8
tick,0x7ff954e0fd34,359784659,0,0x0,8
tick,0x7ff954e0fd34,359800574,0,0x0,8
tick,0x7ff954e0fd34,359816783,0,0x0,8
tick,0x7ff954e0fd34,359832486,0,0x0,8
tick,0x7ff954e0fd34,359847659,0,0x0,8
tick,0x7ff954e0fd34,359862705,0,0x0,8
tick,0x7ff954e0fd34,359878393,0,0x0,8
tick,0x7ff954e0fd34,359894291,0,0x0,8
tick,0x7ff954e0fd34,359909486,0,0x0,8
tick,0x7ff954e0fd34,359925399,0,0x0,8
tick,0x7ff954e0fd34,359940412,0,0x0,8
tick,0x7ff954e0fd34,359956358,0,0x0,8
tick,0x7ff954e0fd34,359972416,0,0x0,8
tick,0x7ff954e0fd34,359988288,0,0x0,8
tick,0x7ff954e0fd34,360002971,0,0x0,8
tick,0x7ff954e0fd34,360018399,0,0x0,8
tick,0x7ff954e0fd34,360033361,0,0x0,8
tick,0x7ff954e0fd34,360048746,0,0x0,8
tick,0x7ff954e0fd34,360064296,0,0x0,8
tick,0x7ff954e0fd34,360079310,0,0x0,8
tick,0x7ff954e0fd34,360094261,0,0x0,8
tick,0x7ff954e0fd34,360109199,0,0x0,8
tick,0x7ff954e0fd34,360125123,0,0x0,8
tick,0x7ff954e0fd34,360141096,0,0x0,8
tick,0x7ff954e0fd34,360157065,0,0x0,8
tick,0x7ff954e0fd34,360173036,0,0x0,8
tick,0x7ff954e0fd34,360188400,0,0x0,8
tick,0x7ff954e0fd34,360204294,0,0x0,8
tick,0x7ff954e0fd34,360220283,0,0x0,8
tick,0x7ff954e0fd34,360236249,0,0x0,8
tick,0x7ff954e0fd34,360252186,0,0x0,8
tick,0x7ff954e0fd34,360267588,0,0x0,8
tick,0x7ff954e0fd34,360282546,0,0x0,8
tick,0x7ff954e0fd34,360298479,0,0x0,8
tick,0x7ff954e0fd34,360313584,0,0x0,8
tick,0x7ff954e0fd34,360329551,0,0x0,8
tick,0x7ff954e0fd34,360344738,0,0x0,8
tick,0x7ff954e0fd34,360359543,0,0x0,8
tick,0x7ff954e0fd34,360374529,0,0x0,8
tick,0x7ff954e0fd34,360390263,0,0x0,8
tick,0x7ff954e0fd34,360406306,0,0x0,8
tick,0x7ff954e0fd34,360422354,0,0x0,8
tick,0x7ff954e0fd34,360437655,0,0x0,8
tick,0x7ff954e0fd34,360453641,0,0x0,8
tick,0x7ff954e0fd34,360469687,0,0x0,8
tick,0x7ff954e0fd34,360485577,0,0x0,8
tick,0x7ff954e0fd34,360501495,0,0x0,8
tick,0x7ff954e0fd34,360516829,0,0x0,8
tick,0x7ff954e0fd34,360531969,0,0x0,8
tick,0x7ff954e0fd34,360546962,0,0x0,8
tick,0x7ff954e0fd34,360562505,0,0x0,8
tick,0x7ff954e0fd34,360577461,0,0x0,8
tick,0x7ff954e0fd34,360592397,0,0x0,8
tick,0x7ff954e0fd34,360607366,0,0x0,8
tick,0x7ff954e0fd34,360622438,0,0x0,8
tick,0x7ff954e0fd34,360638368,0,0x0,8
tick,0x7ff954e0fd34,360654342,0,0x0,8
tick,0x7ff954e0fd34,360670297,0,0x0,8
tick,0x7ff954e0fd34,360686296,0,0x0,8
tick,0x7ff954e0fd34,360702233,0,0x0,8
tick,0x7ff954e0fd34,360718186,0,0x0,8
tick,0x7ff954e0fd34,360734167,0,0x0,8
tick,0x7ff954e0fd34,360750359,0,0x0,8
tick,0x7ff954e0fd34,360766193,0,0x0,8
tick,0x7ff954e0fd34,360781113,0,0x0,8
tick,0x7ff954e0fd34,360796087,0,0x0,8
tick,0x7ff954e0fd34,360811044,0,0x0,8
tick,0x7ff954e0fd34,360826040,0,0x0,8
tick,0x7ff954e0fd34,360840975,0,0x0,8
tick,0x7ff954e0fd34,360856930,0,0x0,8
tick,0x7ff954e0fd34,360872900,0,0x0,8
tick,0x7ff954e0fd34,360888886,0,0x0,8
tick,0x7ff954e0fd34,360904799,0,0x0,8
tick,0x7ff954e0fd34,360920770,0,0x0,8
tick,0x7ff954e0fd34,360936754,0,0x0,8
tick,0x7ff954e0fd34,360951561,0,0x0,8
tick,0x7ff954e0fd34,360966478,0,0x0,8
tick,0x7ff954e0fd34,360982427,0,0x0,8
tick,0x7ff954e0fd34,360998360,0,0x0,8
tick,0x7ff954e0fd34,361014087,0,0x0,8
tick,0x7ff954e0fd34,361029020,0,0x0,8
tick,0x7ff954e0fd34,361044469,0,0x0,8
tick,0x7ff954e0fd34,361060434,0,0x0,8
tick,0x7ff954e0fd34,361076393,0,0x0,8
tick,0x7ff954e0fd34,361092363,0,0x0,8
tick,0x7ff954e0fd34,361108218,0,0x0,8
tick,0x7ff954e0fd34,361124163,0,0x0,8
tick,0x7ff954e0fd34,361140122,0,0x0,8
tick,0x7ff954e0fd34,361155062,0,0x0,8
tick,0x7ff954e0fd34,361170725,0,0x0,8
tick,0x7ff954e0fd34,361186186,0,0x0,8
tick,0x7ff954e0fd34,361201136,0,0x0,8
tick,0x7ff954e0fd34,361216927,0,0x0,8
tick,0x7ff954e0fd34,361231843,0,0x0,8
tick,0x7ff954e0fd34,361247846,0,0x0,8
tick,0x7ff954e0fd34,361263775,0,0x0,8
tick,0x7ff954e0fd34,361278741,0,0x0,8
tick,0x7ff954e0fd34,361294920,0,0x0,8
tick,0x7ff954e0fd34,361309774,0,0x0,8
tick,0x7ff954e0fd34,361324619,0,0x0,8
tick,0x7ff954e0fd34,361339609,0,0x0,8
tick,0x7ff954e0fd34,361355528,0,0x0,8
tick,0x7ff954e0fd34,361371504,0,0x0,8
tick,0x7ff954e0fd34,361387510,0,0x0,8
tick,0x7ff954e0fd34,361402400,0,0x0,8
tick,0x7ff954e0fd34,361418408,0,0x0,8
tick,0x7ff954e0fd34,361433380,0,0x0,8
tick,0x7ff954e0fd34,361449306,0,0x0,8
tick,0x7ff954e0fd34,361465383,0,0x0,8
tick,0x7ff954e0fd34,361481348,0,0x0,8
tick,0x7ff954e0fd34,361497304,0,0x0,8
tick,0x7ff954e0fd34,361513312,0,0x0,8
tick,0x7ff954e0fd34,361529258,0,0x0,8
tick,0x7ff954e0fd34,361544154,0,0x0,8
tick,0x7ff954e0fd34,361560032,0,0x0,8
tick,0x7ff954e0fd34,361574968,0,0x0,8
tick,0x7ff954e0fd34,361590914,0,0x0,8
tick,0x7ff954e0fd34,361606858,0,0x0,8
tick,0x7ff954e0fd34,361621823,0,0x0,8
tick,0x7ff954e0fd34,361637831,0,0x0,8
tick,0x7ff954e0fd34,361652758,0,0x0,8
tick,0x7ff954e0fd34,361668785,0,0x0,8
tick,0x7ff954e0fd34,361684665,0,0x0,8
tick,0x7ff954e0fd34,361700638,0,0x0,8
tick,0x7ff954e0fd34,361716568,0,0x0,8
tick,0x7ff954e0fd34,361732528,0,0x0,8
tick,0x7ff954e0fd34,361748483,0,0x0,8
tick,0x7ff954e0fd34,361764486,0,0x0,8
tick,0x7ff954e0fd34,361780416,0,0x0,8
tick,0x7ff954e0fd34,361796364,0,0x0,8
tick,0x7ff954e0fd34,361811633,0,0x0,8
tick,0x7ff954e0fd34,361827151,0,0x0,8
tick,0x7ff954e0fd34,361843154,0,0x0,8
tick,0x7ff954e0fd34,361859077,0,0x0,8
tick,0x7ff954e0fd34,361874854,0,0x0,8
tick,0x7ff954e0fd34,361890451,0,0x0,8
tick,0x7ff954e0fd34,361906440,0,0x0,8
tick,0x7ff954e0fd34,361921363,0,0x0,8
tick,0x7ff954e0fd34,361936911,0,0x0,8
tick,0x7ff954e0fd34,361952923,0,0x0,8
tick,0x7ff954e0fd34,361967868,0,0x0,8
tick,0x7ff954e0fd34,361982782,0,0x0,8
tick,0x7ff954e0fd34,361998740,0,0x0,8
tick,0x7ff954e0fd34,362014719,0,0x0,8
tick,0x7ff954e0fd34,362030676,0,0x0,8
tick,0x7ff954e0fd34,362046616,0,0x0,8
tick,0x7ff954e0fd34,362062560,0,0x0,8
tick,0x7ff954e0fd34,362078544,0,0x0,8
tick,0x7ff954e0fd34,362094564,0,0x0,8
tick,0x7ff954e0fd34,362109441,0,0x0,8
tick,0x7ff954e0fd34,362124372,0,0x0,8
tick,0x7ff954e0fd34,362139445,0,0x0,8
tick,0x7ff954e0fd34,362155333,0,0x0,8
tick,0x7ff954e0fd34,362171051,0,0x0,8
tick,0x7ff954e0fd34,362185946,0,0x0,8
tick,0x7ff954e0fd34,362201038,0,0x0,8
tick,0x7ff954e0fd34,362216019,0,0x0,8
tick,0x7ff954e0fd34,362231978,0,0x0,8
tick,0x7ff954e0fd34,362247368,0,0x0,8
tick,0x7ff954e0fd34,362263308,0,0x0,8
tick,0x7ff954e0fd34,362279301,0,0x0,8
tick,0x7ff954e0fd34,362295402,0,0x0,8
tick,0x7ff954e0fd34,362311434,0,0x0,8
tick,0x7ff954e0fd34,362327368,0,0x0,8
tick,0x7ff954e0fd34,362343363,0,0x0,8
tick,0x7ff954e0fd34,362359272,0,0x0,8
tick,0x7ff954e0fd34,362375250,0,0x0,8
tick,0x7ff954e0fd34,362391158,0,0x0,8
tick,0x7ff954e0fd34,362406725,0,0x0,8
tick,0x7ff954e0fd34,362422592,0,0x0,8
tick,0x7ff954e0fd34,362438560,0,0x0,8
tick,0x7ff954e0fd34,362454377,0,0x0,8
tick,0x7ff954e0fd34,362470345,0,0x0,8
tick,0x7ff954e0fd34,362485316,0,0x0,8
tick,0x7ff954e0fd34,362501260,0,0x0,8
tick,0x7ff954e0fd34,362516236,0,0x0,8
tick,0x7ff954e0fd34,362532164,0,0x0,8
tick,0x7ff954e0fd34,362547776,0,0x0,8
tick,0x7ff954e0fd34,362562690,0,0x0,8
tick,0x7ff954e0fd34,362578664,0,0x0,8
tick,0x7ff954e0fd34,362593624,0,0x0,8
tick,0x7ff954e0fd34,362609581,0,0x0,8
tick,0x7ff954e0fd34,362625536,0,0x0,8
tick,0x7ff954e0fd34,362641490,0,0x0,8
tick,0x7ff954e0fd34,362657494,0,0x0,8
tick,0x7ff954e0fd34,362673430,0,0x0,8
tick,0x7ff954e0fd34,362689343,0,0x0,8
tick,0x7ff954e0fd34,362705296,0,0x0,8
tick,0x7ff954e0fd34,362720537,0,0x0,8
tick,0x7ff954e0fd34,362735808,0,0x0,8
tick,0x7ff954e0fd34,362751769,0,0x0,8
tick,0x7ff954e0fd34,362767070,0,0x0,8
tick,0x7ff954e0fd34,362783146,0,0x0,8
tick,0x7ff954e0fd34,362798981,0,0x0,8
tick,0x7ff954e0fd34,362814953,0,0x0,8
tick,0x7ff954e0fd34,362830798,0,0x0,8
tick,0x7ff954e0fd34,362846769,0,0x0,8
tick,0x7ff954e0fd34,362862764,0,0x0,8
tick,0x7ff954e0fd34,362878664,0,0x0,8
tick,0x7ff954e0fd34,362894318,0,0x0,8
tick,0x7ff954e0fd34,362909851,0,0x0,8
tick,0x7ff954e0fd34,362924795,0,0x0,8
tick,0x7ff954e0fd34,362940745,0,0x0,8
tick,0x7ff954e0fd34,362956785,0,0x0,8
tick,0x7ff954e0fd34,362972687,0,0x0,8
tick,0x7ff954e0fd34,362987624,0,0x0,8
tick,0x7ff954e0fd34,363003115,0,0x0,8
tick,0x7ff954e0fd34,363019065,0,0x0,8
tick,0x7ff954e0fd34,363035011,0,0x0,8
tick,0x7ff954e0fd34,363050969,0,0x0,8
tick,0x7ff954e0fd34,363066930,0,0x0,8
tick,0x7ff954e0fd34,363082888,0,0x0,8
tick,0x7ff954e0fd34,363098853,0,0x0,8
tick,0x7ff954e0fd34,363114795,0,0x0,8
tick,0x7ff954e0fd34,363130752,0,0x0,8
tick,0x7ff954e0fd34,363145707,0,0x0,8
tick,0x7ff954e0fd34,363160682,0,0x0,8
tick,0x7ff954e0fd34,363175628,0,0x0,8
tick,0x7ff954e0fd34,363190599,0,0x0,8
tick,0x7ff954e0fd34,363206554,0,0x0,8
tick,0x7ff954e0fd34,363222528,0,0x0,8
tick,0x7ff954e0fd34,363238492,0,0x0,8
tick,0x7ff954e0fd34,363254236,0,0x0,8
tick,0x7ff954e0fd34,363270264,0,0x0,8
tick,0x7ff954e0fd34,363285225,0,0x0,8
tick,0x7ff954e0fd34,363301124,0,0x0,8
tick,0x7ff954e0fd34,363316218,0,0x0,8
tick,0x7ff954e0fd34,363331579,0,0x0,8
tick,0x7ff954e0fd34,363347228,0,0x0,8
tick,0x7ff954e0fd34,363362800,0,0x0,8
tick,0x7ff954e0fd34,363378775,0,0x0,8
tick,0x7ff954e0fd34,363393727,0,0x0,8
tick,0x7ff954e0fd34,363409187,0,0x0,8
tick,0x7ff954e0fd34,363424163,0,0x0,8
tick,0x7ff954e0fd34,363440132,0,0x0,8
tick,0x7ff954e0fd34,363455081,0,0x0,8
tick,0x7ff954e0fd34,363470673,0,0x0,8
tick,0x7ff954e0fd34,363486668,0,0x0,8
tick,0x7ff954e0fd34,363502392,0,0x0,8
tick,0x7ff954e0fd34,363517234,0,0x0,8
tick,0x7ff954e0fd34,363533264,0,0x0,8
tick,0x7ff954e0fd34,363549248,0,0x0,8
tick,0x7ff954e0fd34,363565240,0,0x0,8
tick,0x7ff954e0fd34,363580560,0,0x0,8
tick,0x7ff954e0fd34,363595555,0,0x0,8
tick,0x7ff954e0fd34,363610520,0,0x0,8
tick,0x7ff954e0fd34,363625909,0,0x0,8
tick,0x7ff954e0fd34,363641916,0,0x0,8
tick,0x7ff954e0fd34,363657857,0,0x0,8
tick,0x7ff954e0fd34,363672817,0,0x0,8
tick,0x7ff954e0fd34,363688402,0,0x0,8
tick,0x7ff954e0fd34,363704434,0,0x0,8
tick,0x7ff954e0fd34,363719936,0,0x0,8
tick,0x7ff954e0fd34,363735803,0,0x0,8
tick,0x7ff954e0fd34,363750747,0,0x0,8
tick,0x7ff954e0fd34,363765711,0,0x0,8
tick,0x7ff954e0fd34,363781662,0,0x0,8
tick,0x7ff954e0fd34,363796643,0,0x0,8
tick,0x7ff954e0fd34,363811580,0,0x0,8
tick,0x7ff954e0fd34,363826586,0,0x0,8
tick,0x7ff954e0fd34,363841509,0,0x0,8
tick,0x7ff954e0fd34,363857466,0,0x0,8
tick,0x7ff954e0fd34,363873422,0,0x0,8
tick,0x7ff954e0fd34,363888517,0,0x0,8
tick,0x7ff954e0fd34,363903611,0,0x0,8
tick,0x7ff954e0fd34,363919494,0,0x0,8
tick,0x7ff954e0fd34,363934850,0,0x0,8
tick,0x7ff954e0fd34,363949783,0,0x0,8
tick,0x7ff954e0fd34,363965833,0,0x0,8
tick,0x7ff954e0fd34,363981907,0,0x0,8
tick,0x7ff954e0fd34,363997714,0,0x0,8
tick,0x7ff954e0fd34,364013279,0,0x0,8
tick,0x7ff954e0fd34,364028304,0,0x0,8
tick,0x7ff954e0fd34,364043624,0,0x0,8
tick,0x7ff954e0fd34,364059575,0,0x0,8
tick,0x7ff954e0fd34,364075614,0,0x0,8
tick,0x7ff954e0fd34,364091569,0,0x0,8
tick,0x7ff954e0fd34,364107538,0,0x0,8
tick,0x7ff954e0fd34,364123530,0,0x0,8
tick,0x7ff954e0fd34,364139496,0,0x0,8
tick,0x7ff954e0fd34,364154497,0,0x0,8
tick,0x7ff954e0fd34,364169424,0,0x0,8
tick,0x7ff954e0fd34,364184611,0,0x0,8
tick,0x7ff954e0fd34,364200575,0,0x0,8
tick,0x7ff954e0fd34,364215308,0,0x0,8
tick,0x7ff954e0fd34,364230501,0,0x0,8
tick,0x7ff954e0fd34,364245475,0,0x0,8
tick,0x7ff954e0fd34,364261487,0,0x0,8
tick,0x7ff954e0fd34,364276571,0,0x0,8
tick,0x7ff954e0fd34,364292541,0,0x0,8
tick,0x7ff954e0fd34,364307489,0,0x0,8
tick,0x7ff954e0fd34,364323492,0,0x0,8
tick,0x7ff954e0fd34,364339418,0,0x0,8
tick,0x7ff954e0fd34,364355448,0,0x0,8
tick,0x7ff954e0fd34,364370368,0,0x0,8
tick,0x7ff954e0fd34,364385759,0,0x0,8
tick,0x7ff954e0fd34,364401757,0,0x0,8
tick,0x7ff954e0fd34,364416718,0,0x0,8
tick,0x7ff954e0fd34,364431737,0,0x0,8
tick,0x7ff954e0fd34,364447083,0,0x0,8
tick,0x7ff954e0fd34,364463040,0,0x0,8
tick,0x7ff954e0fd34,364477978,0,0x0,8
tick,0x7ff954e0fd34,364493750,0,0x0,8
tick,0x7ff954e0fd34,364509394,0,0x0,8
tick,0x7ff954e0fd34,364524540,0,0x0,8
tick,0x7ff954e0fd34,364540511,0,0x0,8
tick,0x7ff954e0fd34,364555535,0,0x0,8
tick,0x7ff954e0fd34,364571399,0,0x0,8
tick,0x7ff954e0fd34,364587371,0,0x0,8
tick,0x7ff954e0fd34,364603292,0,0x0,8
tick,0x7ff954e0fd34,364618762,0,0x0,8
tick,0x7ff954e0fd34,364634736,0,0x0,8
tick,0x7ff954e0fd34,364650702,0,0x0,8
tick,0x7ff954e0fd34,364665911,0,0x0,8
tick,0x7ff954e0fd34,364680896,0,0x0,8
tick,0x7ff954e0fd34,364696849,0,0x0,8
tick,0x7ff954e0fd34,364711827,0,0x0,8
tick,0x7ff954e0fd34,364727051,0,0x0,8
tick,0x7ff954e0fd34,364742022,0,0x0,8
tick,0x7ff954e0fd34,364757867,0,0x0,8
tick,0x7ff954e0fd34,364773804,0,0x0,8
tick,0x7ff954e0fd34,364789799,0,0x0,8
tick,0x7ff954e0fd34,364804777,0,0x0,8
tick,0x7ff954e0fd34,364819979,0,0x0,8
tick,0x7ff954e0fd34,364835625,0,0x0,8
tick,0x7ff954e0fd34,364850668,0,0x0,8
tick,0x7ff954e0fd34,364865777,0,0x0,8
tick,0x7ff954e0fd34,364881699,0,0x0,8
tick,0x7ff954e0fd34,364897335,0,0x0,8
tick,0x7ff954e0fd34,364913301,0,0x0,8
tick,0x7ff954e0fd34,364929360,0,0x0,8
tick,0x7ff954e0fd34,364944188,0,0x0,8
tick,0x7ff954e0fd34,364960146,0,0x0,8
tick,0x7ff954e0fd34,364976180,0,0x0,8
tick,0x7ff954e0fd34,364991988,0,0x0,8
tick,0x7ff954e0fd34,365007813,0,0x0,8
tick,0x7ff954e0fd34,365023807,0,0x0,8
tick,0x7ff954e0fd34,365039761,0,0x0,8
tick,0x7ff954e0fd34,365054697,0,0x0,8
tick,0x7ff954e0fd34,365070625,0,0x0,8
tick,0x7ff954e0fd34,365085586,0,0x0,8
tick,0x7ff954e0fd34,365101204,0,0x0,8
tick,0x7ff954e0fd34,365116309,0,0x0,8
tick,0x7ff954e0fd34,365132265,0,0x0,8
tick,0x7ff954e0fd34,365147192,0,0x0,8
tick,0x7ff954e0fd34,365163160,0,0x0,8
tick,0x7ff954e0fd34,365178086,0,0x0,8
tick,0x7ff954e0fd34,365194106,0,0x0,8
tick,0x7ff954e0fd34,365209072,0,0x0,8
tick,0x7ff954e0fd34,365223994,0,0x0,8
tick,0x7ff954e0fd34,365238987,0,0x0,8
tick,0x7ff954e0fd34,365254955,0,0x0,8
tick,0x7ff954e0fd34,365269897,0,0x0,8
tick,0x7ff954e0fd34,365285282,0,0x0,8
tick,0x7ff954e0fd34,365300215,0,0x0,8
tick,0x7ff954e0fd34,365316178,0,0x0,8
tick,0x7ff954e0fd34,365332124,0,0x0,8
tick,0x7ff954e0fd34,365348099,0,0x0,8
tick,0x7ff954e0fd34,365364035,0,0x0,8
tick,0x7ff954e0fd34,365380002,0,0x0,8
tick,0x7ff954e0fd34,365395193,0,0x0,8
tick,0x7ff954e0fd34,365410163,0,0x0,8
tick,0x7ff954e0fd34,365426129,0,0x0,8
tick,0x7ff954e0fd34,365441638,0,0x0,8
tick,0x7ff954e0fd34,365457551,0,0x0,8
tick,0x7ff954e0fd34,365473520,0,0x0,8
tick,0x7ff954e0fd34,365489490,0,0x0,8
tick,0x7ff954e0fd34,365505179,0,0x0,8
tick,0x7ff954e0fd34,365521152,0,0x0,8
tick,0x7ff954e0fd34,365537107,0,0x0,8
tick,0x7ff954e0fd34,365552066,0,0x0,8
tick,0x7ff954e0fd34,365567454,0,0x0,8
tick,0x7ff954e0fd34,365582364,0,0x0,8
tick,0x7ff954e0fd34,365598333,0,0x0,8
tick,0x7ff954e0fd34,365613680,0,0x0,8
tick,0x7ff954e0fd34,365629673,0,0x0,8
tick,0x7ff954e0fd34,365644433,0,0x0,8
tick,0x7ff954e0fd34,365660301,0,0x0,8
tick,0x7ff954e0fd34,365675459,0,0x0,8
tick,0x7ff954e0fd34,365691407,0,0x0,8
tick,0x7ff954e0fd34,365706404,0,0x0,8
tick,0x7ff954e0fd34,365722348,0,0x0,8
tick,0x7ff954e0fd34,365738274,0,0x0,8
tick,0x7ff954e0fd34,365754201,0,0x0,8
tick,0x7ff954e0fd34,365770156,0,0x0,8
tick,0x7ff954e0fd34,365785698,0,0x0,8
tick,0x7ff954e0fd34,365801720,0,0x0,8
tick,0x7ff954e0fd34,365816651,0,0x0,8
tick,0x7ff954e0fd34,365832580,0,0x0,8
tick,0x7ff954e0fd34,365848577,0,0x0,8
tick,0x7ff954e0fd34,365864506,0,0x0,8
tick,0x7ff954e0fd34,365880463,0,0x0,8
tick,0x7ff954e0fd34,365896222,0,0x0,8
tick,0x7ff954e0fd34,365912172,0,0x0,8
tick,0x7ff954e0fd34,365927142,0,0x0,8
tick,0x7ff954e0fd34,365943151,0,0x0,8
tick,0x7ff954e0fd34,365958776,0,0x0,8
tick,0x7ff954e0fd34,365974803,0,0x0,8
tick,0x7ff954e0fd34,365990783,0,0x0,8
tick,0x7ff954e0fd34,366005961,0,0x0,8
tick,0x7ff954e0fd34,366021850,0,0x0,8
tick,0x7ff954e0fd34,366036753,0,0x0,8
tick,0x7ff954e0fd34,366052298,0,0x0,8
tick,0x7ff954e0fd34,366067466,0,0x0,8
tick,0x7ff954e0fd34,366083435,0,0x0,8
tick,0x7ff954e0fd34,366099378,0,0x0,8
tick,0x7ff954e0fd34,366114179,0,0x0,8
tick,0x7ff954e0fd34,366129395,0,0x0,8
tick,0x7ff954e0fd34,366145331,0,0x0,8
tick,0x7ff954e0fd34,366160295,0,0x0,8
tick,0x7ff954e0fd34,366175610,0,0x0,8
tick,0x7ff954e0fd34,366191623,0,0x0,8
tick,0x7ff954e0fd34,366207524,0,0x0,8
tick,0x7ff954e0fd34,366223546,0,0x0,8
tick,0x7ff954e0fd34,366239432,0,0x0,8
tick,0x7ff954e0fd34,366255340,0,0x0,8
tick,0x7ff954e0fd34,366270317,0,0x0,8
tick,0x7ff954e0fd34,366285254,0,0x0,8
tick,0x7ff954e0fd34,366301290,0,0x0,8
tick,0x7ff954e0fd34,366317152,0,0x0,8
tick,0x7ff954e0fd34,366333052,0,0x0,8
tick,0x7ff954e0fd34,366348354,0,0x0,8
tick,0x7ff954e0fd34,366363355,0,0x0,8
tick,0x7ff954e0fd34,366379416,0,0x0,8
tick,0x7ff954e0fd34,366395395,0,0x0,8
tick,0x7ff954e0fd34,366411345,0,0x0,8
tick,0x7ff954e0fd34,366427297,0,0x0,8
tick,0x7ff954e0fd34,366443206,0,0x0,8
tick,0x7ff954e0fd34,366459151,0,0x0,8
tick,0x7ff954e0fd34,366475130,0,0x0,8
tick,0x7ff954e0fd34,366491109,0,0x0,8
tick,0x7ff954e0fd34,366506065,0,0x0,8
tick,0x7ff954e0fd34,366520982,0,0x0,8
tick,0x7ff954e0fd34,366535979,0,0x0,8
tick,0x7ff954e0fd34,366551939,0,0x0,8
tick,0x7ff954e0fd34,366566859,0,0x0,8
tick,0x7ff954e0fd34,366581842,0,0x0,8
tick,0x7ff954e0fd34,366597728,0,0x0,8
tick,0x7ff954e0fd34,366613637,0,0x0,8
tick,0x7ff954e0fd34,366629531,0,0x0,8
tick,0x7ff954e0fd34,366645007,0,0x0,8
tick,0x7ff954e0fd34,366660858,0,0x0,8
tick,0x7ff954e0fd34,366676926,0,0x0,8
tick,0x7ff954e0fd34,366692892,0,0x0,8
tick,0x7ff954e0fd34,366707872,0,0x0,8
tick,0x7ff954e0fd34,366722804,0,0x0,8
tick,0x7ff954e0fd34,366737800,0,0x0,8
tick,0x7ff954e0fd34,366752682,0,0x0,8
tick,0x7ff954e0fd34,366767504,0,0x0,8
tick,0x7ff954e0fd34,366782833,0,0x0,8
tick,0x7ff954e0fd34,366797467,0,0x0,8
tick,0x7ff954e0fd34,366813396,0,0x0,8
tick,0x7ff954e0fd34,366829339,0,0x0,8
tick,0x7ff954e0fd34,366845282,0,0x0,8
tick,0x7ff954e0fd34,366861342,0,0x0,8
tick,0x7ff954e0fd34,366877258,0,0x0,8
tick,0x7ff954e0fd34,366892202,0,0x0,8
tick,0x7ff954e0fd34,366907211,0,0x0,8
tick,0x7ff954e0fd34,366922190,0,0x0,8
tick,0x7ff954e0fd34,366937311,0,0x0,8
tick,0x7ff954e0fd34,366952738,0,0x0,8
tick,0x7ff954e0fd34,366968671,0,0x0,8
tick,0x7ff954e0fd34,366984637,0,0x0,8
tick,0x7ff954e0fd34,367000659,0,0x0,8
tick,0x7ff954e0fd34,367015723,0,0x0,8
tick,0x7ff954e0fd34,367031669,0,0x0,8
tick,0x7ff954e0fd34,367046642,0,0x0,8
tick,0x7ff954e0fd34,367061632,0,0x0,8
tick,0x7ff954e0fd34,367076583,0,0x0,8
tick,0x7ff954e0fd34,367091553,0,0x0,8
tick,0x7ff954e0fd34,367107590,0,0x0,8
tick,0x7ff954e0fd34,367122870,0,0x0,8
tick,0x7ff954e0fd34,367137723,0,0x0,8
tick,0x7ff954e0fd34,367153700,0,0x0,8
tick,0x7ff954e0fd34,367168780,0,0x0,8
tick,0x7ff954e0fd34,367183745,0,0x0,8
tick,0x7ff954e0fd34,367198804,0,0x0,8
tick,0x7ff954e0fd34,367213727,0,0x0,8
tick,0x7ff954e0fd34,367229696,0,0x0,8
tick,0x7ff954e0fd34,367244630,0,0x0,8
tick,0x7ff954e0fd34,367260379,0,0x0,8
tick,0x7ff954e0fd34,367275325,0,0x0,8
tick,0x7ff954e0fd34,367291246,0,0x0,8
tick,0x7ff954e0fd34,367306174,0,0x0,8
tick,0x7ff954e0fd34,367321161,0,0x0,8
tick,0x7ff954e0fd34,367336697,0,0x0,8
tick,0x7ff954e0fd34,367352685,0,0x0,8
tick,0x7ff954e0fd34,367368658,0,0x0,8
tick,0x7ff954e0fd34,367384588,0,0x0,8
tick,0x7ff954e0fd34,367399565,0,0x0,8
tick,0x7ff954e0fd34,367415475,0,0x0,8
tick,0x7ff954e0fd34,367431032,0,0x0,8
tick,0x7ff954e0fd34,367446915,0,0x0,8
tick,0x7ff954e0fd34,367462883,0,0x0,8
tick,0x7ff954e0fd34,367477837,0,0x0,8
tick,0x7ff954e0fd34,367492791,0,0x0,8
tick,0x7ff954e0fd34,367507764,0,0x0,8
tick,0x7ff954e0fd34,367523737,0,0x0,8
tick,0x7ff954e0fd34,367539755,0,0x0,8
tick,0x7ff954e0fd34,367555630,0,0x0,8
tick,0x7ff954e0fd34,367571591,0,0x0,8
tick,0x7ff954e0fd34,367586954,0,0x0,8
tick,0x7ff954e0fd34,367602887,0,0x0,8
tick,0x7ff954e0fd34,367617910,0,0x0,8
tick,0x7ff954e0fd34,367632808,0,0x0,8
tick,0x7ff954e0fd34,367648219,0,0x0,8
tick,0x7ff954e0fd34,367664169,0,0x0,8
tick,0x7ff954e0fd34,367680128,0,0x0,8
tick,0x7ff954e0fd34,367695105,0,0x0,8
tick,0x7ff954e0fd34,367711029,0,0x0,8
tick,0x7ff954e0fd34,367726006,0,0x0,8
tick,0x7ff954e0fd34,367741056,0,0x0,8
tick,0x7ff954e0fd34,367755957,0,0x0,8
tick,0x7ff954e0fd34,367771882,0,0x0,8
tick,0x7ff954e0fd34,367787839,0,0x0,8
tick,0x7ff954e0fd34,367802835,0,0x0,8
tick,0x7ff954e0fd34,367817809,0,0x0,8
tick,0x7ff954e0fd34,367832727,0,0x0,8
tick,0x7ff954e0fd34,367847591,0,0x0,8
tick,0x7ff954e0fd34,367862665,0,0x0,8
tick,0x7ff954e0fd34,367877707,0,0x0,8
tick,0x7ff954e0fd34,367893133,0,0x0,8
tick,0x7ff954e0fd34,367909144,0,0x0,8
tick,0x7ff954e0fd34,367924521,0,0x0,8
tick,0x7ff954e0fd34,367940467,0,0x0,8
tick,0x7ff954e0fd34,367956438,0,0x0,8
tick,0x7ff954e0fd34,367972540,0,0x0,8
tick,0x7ff954e0fd34,367988016,0,0x0,8
tick,0x7ff954e0fd34,368004044,0,0x0,8
tick,0x7ff954e0fd34,368019772,0,0x0,8
tick,0x7ff954e0fd34,368035771,0,0x0,8
tick,0x7ff954e0fd34,368051748,0,0x0,8
tick,0x7ff954e0fd34,368066664,0,0x0,8
tick,0x7ff954e0fd34,368081654,0,0x0,8
tick,0x7ff954e0fd34,368097584,0,0x0,8
tick,0x7ff954e0fd34,368113621,0,0x0,8
tick,0x7ff954e0fd34,368129563,0,0x0,8
tick,0x7ff954e0fd34,368144523,0,0x0,8
tick,0x7ff954e0fd34,368160558,0,0x0,8
tick,0x7ff954e0fd34,368176536,0,0x0,8
tick,0x7ff954e0fd34,368192472,0,0x0,8
tick,0x7ff954e0fd34,368207898,0,0x0,8
tick,0x7ff954e0fd34,368223201,0,0x0,8
tick,0x7ff954e0fd34,368238173,0,0x0,8
tick,0x7ff954e0fd34,368254150,0,0x0,8
tick,0x7ff954e0fd34,368270079,0,0x0,8
tick,0x7ff954e0fd34,368285354,0,0x0,8
tick,0x7ff954e0fd34,368300286,0,0x0,8
tick,0x7ff954e0fd34,368316241,0,0x0,8
tick,0x7ff954e0fd34,368332190,0,0x0,8
tick,0x7ff954e0fd34,368347724,0,0x0,8
tick,0x7ff954e0fd34,368363643,0,0x0,8
tick,0x7ff954e0fd34,368379655,0,0x0,8
tick,0x7ff954e0fd34,368395627,0,0x0,8
tick,0x7ff954e0fd34,368410566,0,0x0,8
tick,0x7ff954e0fd34,368426532,0,0x0,8
tick,0x7ff954e0fd34,368441514,0,0x0,8
tick,0x7ff954e0fd34,368457455,0,0x0,8
tick,0x7ff954e0fd34,368472383,0,0x0,8
tick,0x7ff954e0fd34,368488360,0,0x0,8
tick,0x7ff954e0fd34,368504333,0,0x0,8
tick,0x7ff954e0fd34,368519890,0,0x0,8
tick,0x7ff954e0fd34,368534768,0,0x0,8
tick,0x7ff954e0fd34,368549687,0,0x0,8
tick,0x7ff954e0fd34,368564959,0,0x0,8
tick,0x7ff954e0fd34,368580943,0,0x0,8
tick,0x7ff954e0fd34,368595923,0,0x0,8
tick,0x7ff954e0fd34,368611898,0,0x0,8
tick,0x7ff954e0fd34,368626799,0,0x0,8
tick,0x7ff954e0fd34,368642799,0,0x0,8
tick,0x7ff954e0fd34,368658793,0,0x0,8
tick,0x7ff954e0fd34,368674740,0,0x0,8
tick,0x7ff954e0fd34,368690026,0,0x0,8
tick,0x7ff954e0fd34,368705204,0,0x0,8
tick,0x7ff954e0fd34,368721052,0,0x0,8
tick,0x7ff954e0fd34,368737181,0,0x0,8
tick,0x7ff954e0fd34,368753116,0,0x0,8
tick,0x7ff954e0fd34,368768084,0,0x0,8
tick,0x7ff954e0fd34,368784049,0,0x0,8
tick,0x7ff954e0fd34,368800003,0,0x0,8
tick,0x7ff954e0fd34,368815959,0,0x0,8
tick,0x7ff954e0fd34,368831944,0,0x0,8
tick,0x7ff954e0fd34,368847920,0,0x0,8
tick,0x7ff954e0fd34,368863840,0,0x0,8
tick,0x7ff954e0fd34,368878796,0,0x0,8
tick,0x7ff954e0fd34,368893826,0,0x0,8
tick,0x7ff954e0fd34,368909739,0,0x0,8
tick,0x7ff954e0fd34,368924686,0,0x0,8
tick,0x7ff954e0fd34,368939831,0,0x0,8
tick,0x7ff954e0fd34,368954772,0,0x0,8
tick,0x7ff954e0fd34,368970788,0,0x0,8
tick,0x7ff954e0fd34,368985697,0,0x0,8
tick,0x7ff954e0fd34,369000643,0,0x0,8
tick,0x7ff954e0fd34,369015659,0,0x0,8
tick,0x7ff954e0fd34,369030615,0,0x0,8
tick,0x7ff954e0fd34,369045519,0,0x0,8
tick,0x7ff954e0fd34,369060406,0,0x0,8
tick,0x7ff954e0fd34,369075948,0,0x0,8
tick,0x7ff954e0fd34,369091934,0,0x0,8
tick,0x7ff954e0fd34,369108432,0,0x0,8
tick,0x7ff954e0fd34,369123078,0,0x0,8
tick,0x7ff954e0fd34,369139073,0,0x0,8
tick,0x7ff954e0fd34,369154493,0,0x0,8
tick,0x7ff954e0fd34,369169442,0,0x0,8
tick,0x7ff954e0fd34,369184368,0,0x0,8
tick,0x7ff954e0fd34,369200030,0,0x0,8
tick,0x7ff954e0fd34,369215968,0,0x0,8
tick,0x7ff954e0fd34,369231962,0,0x0,8
tick,0x7ff954e0fd34,369247851,0,0x0,8
tick,0x7ff954e0fd34,369262811,0,0x0,8
tick,0x7ff954e0fd34,369278738,0,0x0,8
tick,0x7ff954e0fd34,369294222,0,0x0,8
tick,0x7ff954e0fd34,369310178,0,0x0,8
tick,0x7ff954e0fd34,369325501,0,0x0,8
tick,0x7ff954e0fd34,369341430,0,0x0,8
tick,0x7ff954e0fd34,369357373,0,0x0,8
tick,0x7ff954e0fd34,369373315,0,0x0,8
tick,0x7ff954e0fd34,369388233,0,0x0,8
tick,0x7ff954e0fd34,369403203,0,0x0,8
tick,0x7ff954e0fd34,369419164,0,0x0,8
tick,0x7ff954e0fd34,369434138,0,0x0,8
tick,0x7ff954e0fd34,369450061,0,0x0,8
tick,0x7ff954e0fd34,369465049,0,0x0,8
tick,0x7ff954e0fd34,369481009,0,0x0,8
tick,0x7ff954e0fd34,369496982,0,0x0,8
tick,0x7ff954e0fd34,369512589,0,0x0,8
tick,0x7ff954e0fd34,369528578,0,0x0,8
tick,0x7ff954e0fd34,369543533,0,0x0,8
tick,0x7ff954e0fd34,369558846,0,0x0,8
tick,0x7ff954e0fd34,369574823,0,0x0,8
tick,0x7ff954e0fd34,369590069,0,0x0,8
tick,0x7ff954e0fd34,369606012,0,0x0,8
tick,0x7ff954e0fd34,369620997,0,0x0,8
tick,0x7ff954e0fd34,369636944,0,0x0,8
tick,0x7ff954e0fd34,369652884,0,0x0,8
tick,0x7ff954e0fd34,369668900,0,0x0,8
tick,0x7ff954e0fd34,369684806,0,0x0,8
tick,0x7ff954e0fd34,369700788,0,0x0,8
tick,0x7ff954e0fd34,369716752,0,0x0,8
tick,0x7ff954e0fd34,369732709,0,0x0,8
tick,0x7ff954e0fd34,369747642,0,0x0,8
tick,0x7ff954e0fd34,369762607,0,0x0,8
tick,0x7ff954e0fd34,369777646,0,0x0,8
tick,0x7ff954e0fd34,369793502,0,0x0,8
tick,0x7ff954e0fd34,369809416,0,0x0,8
tick,0x7ff954e0fd34,369825430,0,0x0,8
tick,0x7ff954e0fd34,369841328,0,0x0,8
tick,0x7ff954e0fd34,369857293,0,0x0,8
tick,0x7ff954e0fd34,369873245,0,0x0,8
tick,0x7ff954e0fd34,369889214,0,0x0,8
tick,0x7ff954e0fd34,369905230,0,0x0,8
tick,0x7ff954e0fd34,369920211,0,0x0,8
tick,0x7ff954e0fd34,369936165,0,0x0,8
tick,0x7ff954e0fd34,369951105,0,0x0,8
tick,0x7ff954e0fd34,369967061,0,0x0,8
tick,0x7ff954e0fd34,369982026,0,0x0,8
tick,0x7ff954e0fd34,369996968,0,0x0,8
tick,0x7ff954e0fd34,370011941,0,0x0,8
tick,0x7ff954e0fd34,370028015,0,0x0,8
tick,0x7ff954e0fd34,370043136,0,0x0,8
tick,0x7ff954e0fd34,370058982,0,0x0,8
tick,0x7ff954e0fd34,370074464,0,0x0,8
tick,0x7ff954e0fd34,370090214,0,0x0,8
tick,0x7ff954e0fd34,370106192,0,0x0,8
tick,0x7ff954e0fd34,370122160,0,0x0,8
tick,0x7ff954e0fd34,370137624,0,0x0,8
tick,0x7ff954e0fd34,370153035,0,0x0,8
tick,0x7ff954e0fd34,370169008,0,0x0,8
tick,0x7ff954e0fd34,370183947,0,0x0,8
tick,0x7ff954e0fd34,370199920,0,0x0,8
tick,0x7ff954e0fd34,370214889,0,0x0,8
tick,0x7ff954e0fd34,370230974,0,0x0,8
tick,0x7ff954e0fd34,370246586,0,0x0,8
tick,0x7ff954e0fd34,370262546,0,0x0,8
tick,0x7ff954e0fd34,370277913,0,0x0,8
tick,0x7ff954e0fd34,370293217,0,0x0,8
tick,0x7ff954e0fd34,370308890,0,0x0,8
tick,0x7ff954e0fd34,370324882,0,0x0,8
tick,0x7ff954e0fd34,370340048,0,0x0,8
tick,0x7ff954e0fd34,370356013,0,0x0,8
tick,0x7ff954e0fd34,370371020,0,0x0,8
tick,0x7ff954e0fd34,370385959,0,0x0,8
tick,0x7ff954e0fd34,370400932,0,0x0,8
tick,0x7ff954e0fd34,370416560,0,0x0,8
tick,0x7ff954e0fd34,370432223,0,0x0,8
tick,0x7ff954e0fd34,370448114,0,0x0,8
tick,0x7ff954e0fd34,370463508,0,0x0,8
tick,0x7ff954e0fd34,370479738,0,0x0,8
tick,0x7ff954e0fd34,370494909,0,0x0,8
tick,0x7ff954e0fd34,370509897,0,0x0,8
tick,0x7ff954e0fd34,370525814,0,0x0,8
tick,0x7ff954e0fd34,370541827,0,0x0,8
tick,0x7ff954e0fd34,370557333,0,0x0,8
tick,0x7ff954e0fd34,370572567,0,0x0,8
tick,0x7ff954e0fd34,370588509,0,0x0,8
tick,0x7ff954e0fd34,370603253,0,0x0,8
tick,0x7ff954e0fd34,370618261,0,0x0,8
tick,0x7ff954e0fd34,370633821,0,0x0,8
tick,0x7ff954e0fd34,370649194,0,0x0,8
tick,0x7ff954e0fd34,370664415,0,0x0,8
tick,0x7ff954e0fd34,370680343,0,0x0,8
tick,0x7ff954e0fd34,370695189,0,0x0,8
tick,0x7ff954e0fd34,370711176,0,0x0,8
tick,0x7ff954e0fd34,370727102,0,0x0,8
tick,0x7ff954e0fd34,370742688,0,0x0,8
tick,0x7ff954e0fd34,370758628,0,0x0,8
tick,0x7ff954e0fd34,370774561,0,0x0,8
tick,0x7ff954e0fd34,370790599,0,0x0,8
tick,0x7ff954e0fd34,370806573,0,0x0,8
tick,0x7ff954e0fd34,370821818,0,0x0,8
tick,0x7ff954e0fd34,370836652,0,0x0,8
tick,0x7ff954e0fd34,370852662,0,0x0,8
tick,0x7ff954e0fd34,370868593,0,0x0,8
tick,0x7ff954e0fd34,370883518,0,0x0,8
tick,0x7ff954e0fd34,370899397,0,0x0,8
tick,0x7ff954e0fd34,370915374,0,0x0,8
tick,0x7ff954e0fd34,370930418,0,0x0,8
tick,0x7ff954e0fd34,370945331,0,0x0,8
tick,0x7ff954e0fd34,370960532,0,0x0,8
tick,0x7ff954e0fd34,370976479,0,0x0,8
tick,0x7ff954e0fd34,370992426,0,0x0,8
tick,0x7ff954e0fd34,371008392,0,0x0,8
tick,0x7ff954e0fd34,371024381,0,0x0,8
tick,0x7ff954e0fd34,371039320,0,0x0,8
tick,0x7ff954e0fd34,371055325,0,0x0,8
tick,0x7ff954e0fd34,371070292,0,0x0,8
tick,0x7ff954e0fd34,371086173,0,0x0,8
tick,0x7ff954e0fd34,371102143,0,0x0,8
tick,0x7ff954e0fd34,371118096,0,0x0,8
tick,0x7ff954e0fd34,371134052,0,0x0,8
tick,0x7ff954e0fd34,371150025,0,0x0,8
tick,0x7ff954e0fd34,371165804,0,0x0,8
tick,0x7ff954e0fd34,371181866,0,0x0,8
tick,0x7ff954e0fd34,371197309,0,0x0,8
tick,0x7ff954e0fd34,371213271,0,0x0,8
tick,0x7ff954e0fd34,371228295,0,0x0,8
tick,0x7ff954e0fd34,371243715,0,0x0,8
tick,0x7ff954e0fd34,371259689,0,0x0,8
tick,0x7ff954e0fd34,371275644,0,0x0,8
tick,0x7ff954e0fd34,371291576,0,0x0,8
tick,0x7ff954e0fd34,371307582,0,0x0,8
tick,0x7ff954e0fd34,371323505,0,0x0,8
tick,0x7ff954e0fd34,371339436,0,0x0,8
tick,0x7ff954e0fd34,371355392,0,0x0,8
tick,0x7ff954e0fd34,371371328,0,0x0,8
tick,0x7ff954e0fd34,371386303,0,0x0,8
tick,0x7ff954e0fd34,371402308,0,0x0,8
tick,0x7ff954e0fd34,371417236,0,0x0,8
tick,0x7ff954e0fd34,371432191,0,0x0,8
tick,0x7ff954e0fd34,371447162,0,0x0,8
tick,0x7ff954e0fd34,371462096,0,0x0,8
tick,0x7ff954e0fd34,371478068,0,0x0,8
tick,0x7ff954e0fd34,371494212,0,0x0,8
tick,0x7ff954e0fd34,371510169,0,0x0,8
tick,0x7ff954e0fd34,371526149,0,0x0,8
tick,0x7ff954e0fd34,371542024,0,0x0,8
tick,0x7ff954e0fd34,371558106,0,0x0,8
tick,0x7ff954e0fd34,371574123,0,0x0,8
tick,0x7ff954e0fd34,371589993,0,0x0,8
tick,0x7ff954e0fd34,371605945,0,0x0,8
tick,0x7ff954e0fd34,371620975,0,0x0,8
tick,0x7ff954e0fd34,371636044,0,0x0,8
tick,0x7ff954e0fd34,371650707,0,0x0,8
tick,0x7ff954e0fd34,371666293,0,0x0,8
tick,0x7ff954e0fd34,371682230,0,0x0,8
tick,0x7ff954e0fd34,371698215,0,0x0,8
tick,0x7ff954e0fd34,371714143,0,0x0,8
tick,0x7ff954e0fd34,371729191,0,0x0,8
tick,0x7ff954e0fd34,371744079,0,0x0,8
tick,0x7ff954e0fd34,371759029,0,0x0,8
tick,0x7ff954e0fd34,371774011,0,0x0,8
tick,0x7ff954e0fd34,371789968,0,0x0,8
tick,0x7ff954e0fd34,371804923,0,0x0,8
tick,0x7ff954e0fd34,371820884,0,0x0,8
tick,0x7ff954e0fd34,371836828,0,0x0,8
tick,0x7ff954e0fd34,371852799,0,0x0,8
tick,0x7ff954e0fd34,371867727,0,0x0,8
tick,0x7ff954e0fd34,371882716,0,0x0,8
tick,0x7ff954e0fd34,371897691,0,0x0,8
tick,0x7ff954e0fd34,371912667,0,0x0,8
tick,0x7ff954e0fd34,371928620,0,0x0,8
tick,0x7ff954e0fd34,371943519,0,0x0,8
tick,0x7ff954e0fd34,371959527,0,0x0,8
tick,0x7ff954e0fd34,371974505,0,0x0,8
tick,0x7ff954e0fd34,371989476,0,0x0,8
tick,0x7ff954e0fd34,372004374,0,0x0,8
tick,0x7ff954e0fd34,372019344,0,0x0,8
tick,0x7ff954e0fd34,372035285,0,0x0,8
tick,0x7ff954e0fd34,372050332,0,0x0,8
tick,0x7ff954e0fd34,372065219,0,0x0,8
tick,0x7ff954e0fd34,372080174,0,0x0,8
tick,0x7ff954e0fd34,372095420,0,0x0,8
tick,0x7ff954e0fd34,372110414,0,0x0,8
tick,0x7ff954e0fd34,372126302,0,0x0,8
tick,0x7ff954e0fd34,372142247,0,0x0,8
tick,0x7ff954e0fd34,372157183,0,0x0,8
tick,0x7ff954e0fd34,372173134,0,0x0,8
tick,0x7ff954e0fd34,372188344,0,0x0,8
tick,0x7ff954e0fd34,372203256,0,0x0,8
tick,0x7ff954e0fd34,372218093,0,0x0,8
tick,0x7ff954e0fd34,372233608,0,0x0,8
tick,0x7ff954e0fd34,372249159,0,0x0,8
tick,0x7ff954e0fd34,372264856,0,0x0,8
tick,0x7ff954e0fd34,372279629,0,0x0,8
tick,0x7ff954e0fd34,372295593,0,0x0,8
tick,0x7ff954e0fd34,372311505,0,0x0,8
tick,0x7ff954e0fd34,372327502,0,0x0,8
tick,0x7ff954e0fd34,372342423,0,0x0,8
tick,0x7ff954e0fd34,372357395,0,0x0,8
tick,0x7ff954e0fd34,372372369,0,0x0,8
tick,0x7ff954e0fd34,372387298,0,0x0,8
tick,0x7ff954e0fd34,372403291,0,0x0,8
tick,0x7ff954e0fd34,372419241,0,0x0,8
tick,0x7ff954e0fd34,372435173,0,0x0,8
tick,0x7ff954e0fd34,372451130,0,0x0,8
tick,0x7ff954e0fd34,372466990,0,0x0,8
tick,0x7ff954e0fd34,372483029,0,0x0,8
tick,0x7ff954e0fd34,372498006,0,0x0,8
tick,0x7ff954e0fd34,372512967,0,0x0,8
tick,0x7ff954e0fd34,372528383,0,0x0,8
tick,0x7ff954e0fd34,372544337,0,0x0,8
tick,0x7ff954e0fd34,372559733,0,0x0,8
tick,0x7ff954e0fd34,372574864,0,0x0,8
tick,0x7ff954e0fd34,372590159,0,0x0,8
tick,0x7ff954e0fd34,372606156,0,0x0,8
tick,0x7ff954e0fd34,372622132,0,0x0,8
tick,0x7ff954e0fd34,372637078,0,0x0,8
tick,0x7ff954e0fd34,372653047,0,0x0,8
tick,0x7ff954e0fd34,372668599,0,0x0,8
tick,0x7ff954e0fd34,372683573,0,0x0,8
tick,0x7ff954e0fd34,372699645,0,0x0,8
tick,0x7ff954e0fd34,372714630,0,0x0,8
tick,0x7ff954e0fd34,372730553,0,0x0,8
tick,0x7ff954e0fd34,372746523,0,0x0,8
tick,0x7ff954e0fd34,372762489,0,0x0,8
tick,0x7ff954e0fd34,372777448,0,0x0,8
tick,0x7ff954e0fd34,372792409,0,0x0,8
tick,0x7ff954e0fd34,372808348,0,0x0,8
tick,0x7ff954e0fd34,372824326,0,0x0,8
tick,0x7ff954e0fd34,372839345,0,0x0,8
tick,0x7ff954e0fd34,372855228,0,0x0,8
tick,0x7ff954e0fd34,372870180,0,0x0,8
tick,0x7ff954e0fd34,372886100,0,0x0,8
tick,0x7ff954e0fd34,372901617,0,0x0,8
tick,0x7ff954e0fd34,372916943,0,0x0,8
tick,0x7ff954e0fd34,372932922,0,0x0,8
tick,0x7ff954e0fd34,372948997,0,0x0,8
tick,0x7ff954e0fd34,372964941,0,0x0,8
tick,0x7ff954e0fd34,372979568,0,0x0,8
tick,0x7ff954e0fd34,372995538,0,0x0,8
tick,0x7ff954e0fd34,373010384,0,0x0,8
tick,0x7ff954e0fd34,373025912,0,0x0,8
tick,0x7ff954e0fd34,373041891,0,0x0,8
tick,0x7ff954e0fd34,373056843,0,0x0,8
tick,0x7ff954e0fd34,373072842,0,0x0,8
tick,0x7ff954e0fd34,373088622,0,0x0,8
tick,0x7ff954e0fd34,373104639,0,0x0,8
tick,0x7ff954e0fd34,373120551,0,0x0,8
tick,0x7ff954e0fd34,373136352,0,0x0,8
tick,0x7ff954e0fd34,373151519,0,0x0,8
tick,0x7ff954e0fd34,373166472,0,0x0,8
tick,0x7ff954e0fd34,373182228,0,0x0,8
tick,0x7ff954e0fd34,373197651,0,0x0,8
tick,0x7ff954e0fd34,373212586,0,0x0,8
tick,0x7ff954e0fd34,373227755,0,0x0,8
tick,0x7ff954e0fd34,373243077,0,0x0,8
tick,0x7ff954e0fd34,373259062,0,0x0,8
tick,0x7ff954e0fd34,373275015,0,0x0,8
tick,0x7ff954e0fd34,373291072,0,0x0,8
tick,0x7ff954e0fd34,373306302,0,0x0,8
tick,0x7ff954e0fd34,373322288,0,0x0,8
tick,0x7ff954e0fd34,373338169,0,0x0,8
tick,0x7ff954e0fd34,373353608,0,0x0,8
tick,0x7ff954e0fd34,373369607,0,0x0,8
tick,0x7ff954e0fd34,373384793,0,0x0,8
tick,0x7ff954e0fd34,373399781,0,0x0,8
tick,0x7ff954e0fd34,373415758,0,0x0,8
tick,0x7ff954e0fd34,373430731,0,0x0,8
tick,0x7ff954e0fd34,373446532,0,0x0,8
tick,0x7ff954e0fd34,373462600,0,0x0,8
tick,0x7ff954e0fd34,373478574,0,0x0,8
tick,0x7ff954e0fd34,373494556,0,0x0,8
tick,0x7ff954e0fd34,373510465,0,0x0,8
tick,0x7ff954e0fd34,373526416,0,0x0,8
tick,0x7ff954e0fd34,373542354,0,0x0,8
tick,0x7ff954e0fd34,373557940,0,0x0,8
tick,0x7ff954e0fd34,373573826,0,0x0,8
tick,0x7ff954e0fd34,373589760,0,0x0,8
tick,0x7ff954e0fd34,373605832,0,0x0,8
tick,0x7ff954e0fd34,373620602,0,0x0,8
tick,0x7ff954e0fd34,373636610,0,0x0,8
tick,0x7ff954e0fd34,373652530,0,0x0,8
tick,0x7ff954e0fd34,373668542,0,0x0,8
tick,0x7ff954e0fd34,373684377,0,0x0,8
tick,0x7ff954e0fd34,373700319,0,0x0,8
tick,0x7ff954e0fd34,373716285,0,0x0,8
tick,0x7ff954e0fd34,373731456,0,0x0,8
tick,0x7ff954e0fd34,373747437,0,0x0,8
tick,0x7ff954e0fd34,373762399,0,0x0,8
tick,0x7ff954e0fd34,373778431,0,0x0,8
tick,0x7ff954e0fd34,373794449,0,0x0,8
tick,0x7ff954e0fd34,373809962,0,0x0,8
tick,0x7ff954e0fd34,373825517,0,0x0,8
tick,0x7ff954e0fd34,373840510,0,0x0,8
tick,0x7ff954e0fd34,373856461,0,0x0,8
tick,0x7ff954e0fd34,373872428,0,0x0,8
tick,0x7ff954e0fd34,373887634,0,0x0,8
tick,0x7ff954e0fd34,373903621,0,0x0,8
tick,0x7ff954e0fd34,373918594,0,0x0,8
tick,0x7ff954e0fd34,373933549,0,0x0,8
tick,0x7ff954e0fd34,373948460,0,0x0,8
tick,0x7ff954e0fd34,373964494,0,0x0,8
tick,0x7ff954e0fd34,373980356,0,0x0,8
tick,0x7ff954e0fd34,373995364,0,0x0,8
tick,0x7ff954e0fd34,374010265,0,0x0,8
tick,0x7ff954e0fd34,374025259,0,0x0,8
tick,0x7ff954e0fd34,374040916,0,0x0,8
tick,0x7ff954e0fd34,374055897,0,0x0,8
tick,0x7ff954e0fd34,374071850,0,0x0,8
tick,0x7ff954e0fd34,374086850,0,0x0,8
tick,0x7ff954e0fd34,374101816,0,0x0,8
tick,0x7ff954e0fd34,374117707,0,0x0,8
tick,0x7ff954e0fd34,374133701,0,0x0,8
tick,0x7ff954e0fd34,374148655,0,0x0,8
tick,0x7ff954e0fd34,374164691,0,0x0,8
tick,0x7ff954e0fd34,374179565,0,0x0,8
tick,0x7ff954e0fd34,374195592,0,0x0,8
tick,0x7ff954e0fd34,374211460,0,0x0,8
tick,0x7ff954e0fd34,374227431,0,0x0,8
tick,0x7ff954e0fd34,374242523,0,0x0,8
tick,0x7ff954e0fd34,374258100,0,0x0,8
tick,0x7ff954e0fd34,374273060,0,0x0,8
tick,0x7ff954e0fd34,374289039,0,0x0,8
tick,0x7ff954e0fd34,374303954,0,0x0,8
tick,0x7ff954e0fd34,374318935,0,0x0,8
tick,0x7ff954e0fd34,374333887,0,0x0,8
tick,0x7ff954e0fd34,374348929,0,0x0,8
tick,0x7ff954e0fd34,374364838,0,0x0,8
tick,0x7ff954e0fd34,374379801,0,0x0,8
tick,0x7ff954e0fd34,374394732,0,0x0,8
tick,0x7ff954e0fd34,374410699,0,0x0,8
tick,0x7ff954e0fd34,374426675,0,0x0,8
tick,0x7ff954e0fd34,374441595,0,0x0,8
tick,0x7ff954e0fd34,374456552,0,0x0,8
tick,0x7ff954e0fd34,374471670,0,0x0,8
tick,0x7ff954e0fd34,374486535,0,0x0,8
tick,0x7ff954e0fd34,374502456,0,0x0,8
tick,0x7ff954e0fd34,374518404,0,0x0,8
tick,0x7ff954e0fd34,374533618,0,0x0,8
tick,0x7ff954e0fd34,374548578,0,0x0,8
tick,0x7ff954e0fd34,374564536,0,0x0,8
tick,0x7ff954e0fd34,374580519,0,0x0,8
tick,0x7ff954e0fd34,374596458,0,0x0,8
tick,0x7ff954e0fd34,374611415,0,0x0,8
tick,0x7ff954e0fd34,374627340,0,0x0,8
tick,0x7ff954e0fd34,374643310,0,0x0,8
tick,0x7ff954e0fd34,374659294,0,0x0,8
tick,0x7ff954e0fd34,374675233,0,0x0,8
tick,0x7ff954e0fd34,374691179,0,0x0,8
tick,0x7ff954e0fd34,374707163,0,0x0,8
tick,0x7ff954e0fd34,374722125,0,0x0,8
tick,0x7ff954e0fd34,374738037,0,0x0,8
tick,0x7ff954e0fd34,374753025,0,0x0,8
tick,0x7ff954e0fd34,374767981,0,0x0,8
tick,0x7ff954e0fd34,374782957,0,0x0,8
tick,0x7ff954e0fd34,374797894,0,0x0,8
tick,0x7ff954e0fd34,374813851,0,0x0,8
tick,0x7ff954e0fd34,374828836,0,0x0,8
tick,0x7ff954e0fd34,374843814,0,0x0,8
tick,0x7ff954e0fd34,374858913,0,0x0,8
tick,0x7ff954e0fd34,374873856,0,0x0,8
tick,0x7ff954e0fd34,374889631,0,0x0,8
tick,0x7ff954e0fd34,374905591,0,0x0,8
tick,0x7ff954e0fd34,374921568,0,0x0,8
tick,0x7ff954e0fd34,374937577,0,0x0,8
tick,0x7ff954e0fd34,374953537,0,0x0,8
tick,0x7ff954e0fd34,374968561,0,0x0,8
tick,0x7ff954e0fd34,374984497,0,0x0,8
tick,0x7ff954e0fd34,375000303,0,0x0,8
tick,0x7ff954e0fd34,375015642,0,0x0,8
tick,0x7ff954e0fd34,375031649,0,0x0,8
tick,0x7ff954e0fd34,375046966,0,0x0,8
tick,0x7ff954e0fd34,375061976,0,0x0,8
tick,0x7ff954e0fd34,375076938,0,0x0,8
tick,0x7ff954e0fd34,375092946,0,0x0,8
tick,0x7ff954e0fd34,375107865,0,0x0,8
tick,0x7ff954e0fd34,375122845,0,0x0,8
tick,0x7ff954e0fd34,375137792,0,0x0,8
tick,0x7ff954e0fd34,375152735,0,0x0,8
tick,0x7ff954e0fd34,375168688,0,0x0,8
tick,0x7ff954e0fd34,375184646,0,0x0,8
tick,0x7ff954e0fd34,375200616,0,0x0,8
tick,0x7ff954e0fd34,375216568,0,0x0,8
tick,0x7ff954e0fd34,375232563,0,0x0,8
tick,0x7ff954e0fd34,375248482,0,0x0,8
tick,0x7ff954e0fd34,375263973,0,0x0,8
tick,0x7ff954e0fd34,375279499,0,0x0,8
tick,0x7ff954e0fd34,375295039,0,0x0,8
tick,0x7ff954e0fd34,375310618,0,0x0,8
tick,0x7ff954e0fd34,375326577,0,0x0,8
tick,0x7ff954e0fd34,375342464,0,0x0,8
tick,0x7ff954e0fd34,375358102,0,0x0,8
tick,0x7ff954e0fd34,375373031,0,0x0,8
tick,0x7ff954e0fd34,375388657,0,0x0,8
tick,0x7ff954e0fd34,375404615,0,0x0,8
tick,0x7ff954e0fd34,375420572,0,0x0,8
tick,0x7ff954e0fd34,375436029,0,0x0,8
tick,0x7ff954e0fd34,375451959,0,0x0,8
tick,0x7ff954e0fd34,375467902,0,0x0,8
tick,0x7ff954e0fd34,375483957,0,0x0,8
tick,0x7ff954e0fd34,375499418,0,0x0,8
tick,0x7ff954e0fd34,375515245,0,0x0,8
tick,0x7ff954e0fd34,375531160,0,0x0,8
tick,0x7ff954e0fd34,375546945,0,0x0,8
tick,0x7ff954e0fd34,375562051,0,0x0,8
tick,0x7ff954e0fd34,375577974,0,0x0,8
tick,0x7ff954e0fd34,375592953,0,0x0,8
tick,0x7ff954e0fd34,375608892,0,0x0,8
tick,0x7ff954e0fd34,375623836,0,0x0,8
tick,0x7ff954e0fd34,375638822,0,0x0,8
tick,0x7ff954e0fd34,375653827,0,0x0,8
tick,0x7ff954e0fd34,375668736,0,0x0,8
tick,0x7ff954e0fd34,375684734,0,0x0,8
tick,0x7ff954e0fd34,375699638,0,0x0,8
tick,0x7ff954e0fd34,375714605,0,0x0,8
tick,0x7ff954e0fd34,375729560,0,0x0,8
tick,0x7ff954e0fd34,375744548,0,0x0,8
tick,0x7ff954e0fd34,375759496,0,0x0,8
tick,0x7ff954e0fd34,375774625,0,0x0,8
tick,0x7ff954e0fd34,375790604,0,0x0,8
tick,0x7ff954e0fd34,375806689,0,0x0,8
tick,0x7ff954e0fd34,375822105,0,0x0,8
tick,0x7ff954e0fd34,375838008,0,0x0,8
tick,0x7ff954e0fd34,375853648,0,0x0,8
tick,0x7ff954e0fd34,375869569,0,0x0,8
tick,0x7ff954e0fd34,375885527,0,0x0,8
tick,0x7ff954e0fd34,375900466,0,0x0,8
tick,0x7ff954e0fd34,375915544,0,0x0,8
tick,0x7ff954e0fd34,375931488,0,0x0,8
tick,0x7ff954e0fd34,375947395,0,0x0,8
tick,0x7ff954e0fd34,375963397,0,0x0,8
tick,0x7ff954e0fd34,375978915,0,0x0,8
tick,0x7ff954e0fd34,375994879,0,0x0,8
tick,0x7ff954e0fd34,376010846,0,0x0,8
tick,0x7ff954e0fd34,376026780,0,0x0,8
tick,0x7ff954e0fd34,376042804,0,0x0,8
tick,0x7ff954e0fd34,376058043,0,0x0,8
tick,0x7ff954e0fd34,376074104,0,0x0,8
tick,0x7ff954e0fd34,376089044,0,0x0,8
tick,0x7ff954e0fd34,376104637,0,0x0,8
tick,0x7ff954e0fd34,376120085,0,0x0,8
tick,0x7ff954e0fd34,376135159,0,0x0,8
tick,0x7ff954e0fd34,376151008,0,0x0,8
tick,0x7ff954e0fd34,376165941,0,0x0,8
tick,0x7ff954e0fd34,376181125,0,0x0,8
tick,0x7ff954e0fd34,376196075,0,0x0,8
tick,0x7ff954e0fd34,376211037,0,0x0,8
tick,0x7ff954e0fd34,376226016,0,0x0,8
tick,0x7ff954e0fd34,376240968,0,0x0,8
tick,0x7ff954e0fd34,376256906,0,0x0,8
tick,0x7ff954e0fd34,376271863,0,0x0,8
tick,0x7ff954e0fd34,376286841,0,0x0,8
tick,0x7ff954e0fd34,376301805,0,0x0,8
tick,0x7ff954e0fd34,376316796,0,0x0,8
tick,0x7ff954e0fd34,376331734,0,0x0,8
tick,0x7ff954e0fd34,376346694,0,0x0,8
tick,0x7ff954e0fd34,376361624,0,0x0,8
tick,0x7ff954e0fd34,376377603,0,0x0,8
tick,0x7ff954e0fd34,376393246,0,0x0,8
tick,0x7ff954e0fd34,376409198,0,0x0,8
tick,0x7ff954e0fd34,376424178,0,0x0,8
tick,0x7ff954e0fd34,376439195,0,0x0,8
tick,0x7ff954e0fd34,376454094,0,0x0,8
tick,0x7ff954e0fd34,376469095,0,0x0,8
tick,0x7ff954e0fd34,376485021,0,0x0,8
tick,0x7ff954e0fd34,376501226,0,0x0,8
tick,0x7ff954e0fd34,376517719,0,0x0,8
tick,0x7ff954e0fd34,376534828,0,0x0,8
tick,0x7ff954e0fd34,376549451,0,0x0,8
tick,0x7ff954e0fd34,376563411,0,0x0,8
tick,0x7ff954e0fd34,376579387,0,0x0,8
tick,0x7ff954e0fd34,376594254,0,0x0,8
tick,0x7ff954e0fd34,376611317,0,0x0,8
tick,0x7ff954e0fd34,376625641,0,0x0,8
tick,0x7ff954e0fd34,376640793,0,0x0,8
tick,0x7ff954e0fd34,376655625,0,0x0,8
tick,0x7ff954e0fd34,376671582,0,0x0,8
tick,0x7ff954e0fd34,376687672,0,0x0,8
tick,0x7ff954e0fd34,376702453,0,0x0,8
tick,0x7ff954e0fd34,376754063,0,0x0,8
tick,0x7ff954e0fd34,376772813,0,0x0,8
tick,0x7ff954e0fd34,376782200,0,0x0,8
tick,0x7ff954e0fd34,376797061,0,0x0,8
tick,0x7ff954e0fd34,376811316,0,0x0,8
tick,0x7ff954e0fd34,376826094,0,0x0,8
tick,0x7ff954e0fd34,376842070,0,0x0,8
tick,0x7ff954e0fd34,376857008,0,0x0,8
tick,0x7ff954e0fd34,376871977,0,0x0,8
tick,0x7ff954e0fd34,376887061,0,0x0,8
tick,0x7ff954e0fd34,376901922,0,0x0,8
tick,0x7ff954e0fd34,376919396,0,0x0,8
tick,0x7ff954e0fd34,376933885,0,0x0,8
tick,0x7ff954e0fd34,376952045,0,0x0,8
tick,0x7ff954e0fd34,376964753,0,0x0,8
tick,0x7ff954e0fd34,376979707,0,0x0,8
tick,0x7ff954e0fd34,376995991,0,0x0,8
tick,0x7ff954e0fd34,377011641,0,0x0,8
tick,0x7ff954e0fd34,377026567,0,0x0,8
tick,0x7ff954e0fd34,377041541,0,0x0,8
tick,0x7ff954e0fd34,377056587,0,0x0,8
tick,0x7ff954e0fd34,377071463,0,0x0,8
tick,0x7ff954e0fd34,377086413,0,0x0,8
tick,0x7ff954e0fd34,377101557,0,0x0,8
tick,0x7ff954e0fd34,377116341,0,0x0,8
tick,0x7ff954e0fd34,377131310,0,0x0,8
tick,0x7ff954e0fd34,377146235,0,0x0,8
tick,0x7ff954e0fd34,377161227,0,0x0,8
tick,0x7ff954e0fd34,377177169,0,0x0,8
tick,0x7ff954e0fd34,377192154,0,0x0,8
tick,0x7ff954e0fd34,377208100,0,0x0,8
tick,0x7ff954e0fd34,377223039,0,0x0,8
tick,0x7ff954e0fd34,377238042,0,0x0,8
tick,0x7ff954e0fd34,377253987,0,0x0,8
tick,0x7ff954e0fd34,377268932,0,0x0,8
tick,0x7ff954e0fd34,377283859,0,0x0,8
tick,0x7ff954e0fd34,377298850,0,0x0,8
tick,0x7ff954e0fd34,377314799,0,0x0,8
tick,0x7ff954e0fd34,377329732,0,0x0,8
tick,0x7ff954e0fd34,377345699,0,0x0,8
tick,0x7ff954e0fd34,377361167,0,0x0,8
tick,0x7ff954e0fd34,377376787,0,0x0,8
tick,0x7ff954e0fd34,377391764,0,0x0,8
tick,0x7ff954e0fd34,377406706,0,0x0,8
tick,0x7ff954e0fd34,377422659,0,0x0,8
tick,0x7ff954e0fd34,377438510,0,0x0,8
tick,0x7ff954e0fd34,377454053,0,0x0,8
tick,0x7ff954e0fd34,377470017,0,0x0,8
tick,0x7ff954e0fd34,377485282,0,0x0,8
tick,0x7ff954e0fd34,377500170,0,0x0,8
tick,0x7ff954e0fd34,377516146,0,0x0,8
tick,0x7ff954e0fd34,377532164,0,0x0,8
tick,0x7ff954e0fd34,377547335,0,0x0,8
tick,0x7ff954e0fd34,377563012,0,0x0,8
tick,0x7ff954e0fd34,377578983,0,0x0,8
tick,0x7ff954e0fd34,377594898,0,0x0,8
tick,0x7ff954e0fd34,377609898,0,0x0,8
tick,0x7ff954e0fd34,377625799,0,0x0,8
tick,0x7ff954e0fd34,377640815,0,0x0,8
tick,0x7ff954e0fd34,377655746,0,0x0,8
tick,0x7ff954e0fd34,377671692,0,0x0,8
tick,0x7ff954e0fd34,377686689,0,0x0,8
tick,0x7ff954e0fd34,377701644,0,0x0,8
tick,0x7ff954e0fd34,377716603,0,0x0,8
tick,0x7ff954e0fd34,377732563,0,0x0,8
tick,0x7ff954e0fd34,377747504,0,0x0,8
tick,0x7ff954e0fd34,377763687,0,0x0,8
tick,0x7ff954e0fd34,377779295,0,0x0,8
tick,0x7ff954e0fd34,377794478,0,0x0,8
tick,0x7ff954e0fd34,377808828,0,0x0,8
tick,0x7ff954e0fd34,377831468,0,0x0,8
tick,0x7ff954e0fd34,377840606,0,0x0,8
tick,0x7ff954e0fd34,377853852,0,0x0,8
tick,0x7ff954e0fd34,377870768,0,0x0,8
tick,0x7ff954e0fd34,377889437,0,0x0,8
tick,0x7ff954e0fd34,377900517,0,0x0,8
tick,0x7ff954e0fd34,377916642,0,0x0,8
tick,0x7ff954e0fd34,377932771,0,0x0,8
tick,0x7ff954e0fd34,377947979,0,0x0,8
tick,0x7ff954e0fd34,377963638,0,0x0,8
tick,0x7ff954e0fd34,377978419,0,0x0,8
tick,0x7ff954e0fd34,377994377,0,0x0,8
tick,0x7ff954e0fd34,378009312,0,0x0,8
tick,0x7ff954e0fd34,378025369,0,0x0,8
tick,0x7ff954e0fd34,378041531,0,0x0,8
tick,0x7ff954e0fd34,378056192,0,0x0,8
tick,0x7ff954e0fd34,378072169,0,0x0,8
tick,0x7ff954e0fd34,378087091,0,0x0,8
tick,0x7ff954e0fd34,378103480,0,0x0,8
tick,0x7ff954e0fd34,378118803,0,0x0,8
tick,0x7ff954e0fd34,378133151,0,0x0,8
tick,0x7ff954e0fd34,378147953,0,0x0,8
tick,0x7ff954e0fd34,378163017,0,0x0,8
tick,0x7ff954e0fd34,378178877,0,0x0,8
tick,0x7ff954e0fd34,378194324,0,0x0,8
tick,0x7ff954e0fd34,378210396,0,0x0,8
tick,0x7ff954e0fd34,378225306,0,0x0,8
tick,0x7ff954e0fd34,378240209,0,0x0,8
tick,0x7ff954e0fd34,378256175,0,0x0,8
tick,0x7ff954e0fd34,378272344,0,0x0,8
tick,0x7ff954e0fd34,378286479,0,0x0,8
tick,0x7ff954e0fd34,378301819,0,0x0,8
tick,0x7ff954e0fd34,378317804,0,0x0,8
tick,0x7ff954e0fd34,378332623,0,0x0,8
tick,0x7ff954e0fd34,378347490,0,0x0,8
tick,0x7ff954e0fd34,378362414,0,0x0,8
tick,0x7ff954e0fd34,378377364,0,0x0,8
tick,0x7ff954e0fd34,378392861,0,0x0,8
tick,0x7ff954e0fd34,378408802,0,0x0,8
tick,0x7ff954e0fd34,378424824,0,0x0,8
tick,0x7ff954e0fd34,378440947,0,0x0,8
tick,0x7ff954e0fd34,378456837,0,0x0,8
tick,0x7ff954e0fd34,378472634,0,0x0,8
tick,0x7ff954e0fd34,378487685,0,0x0,8
tick,0x7ff954e0fd34,378503131,0,0x0,8
tick,0x7ff954e0fd34,378518096,0,0x0,8
tick,0x7ff954e0fd34,378533013,0,0x0,8
tick,0x7ff954e0fd34,378547972,0,0x0,8
tick,0x7ff954e0fd34,378562894,0,0x0,8
tick,0x7ff954e0fd34,378578886,0,0x0,8
tick,0x7ff954e0fd34,378593834,0,0x0,8
tick,0x7ff954e0fd34,378608874,0,0x0,8
tick,0x7ff954e0fd34,378623758,0,0x0,8
tick,0x7ff954e0fd34,378639817,0,0x0,8
tick,0x7ff954e0fd34,378655646,0,0x0,8
tick,0x7ff954e0fd34,378670721,0,0x0,8
tick,0x7ff954e0fd34,378685810,0,0x0,8
tick,0x7ff954e0fd34,378700945,0,0x0,8
tick,0x7ff954e0fd34,378716526,0,0x0,8
tick,0x7ff954e0fd34,378731575,0,0x0,8
tick,0x7ff954e0fd34,378747523,0,0x0,8
tick,0x7ff954e0fd34,378762354,0,0x0,8
tick,0x7ff954e0fd34,378777348,0,0x0,8
tick,0x7ff954e0fd34,378793517,0,0x0,8
tick,0x7ff954e0fd34,378809772,0,0x0,8
tick,0x7ff954e0fd34,378825529,0,0x0,8
tick,0x7ff954e0fd34,378841138,0,0x0,8
tick,0x7ff954e0fd34,378857157,0,0x0,8
tick,0x7ff954e0fd34,378872087,0,0x0,8
tick,0x7ff954e0fd34,378887647,0,0x0,8
tick,0x7ff954e0fd34,378902792,0,0x0,8
tick,0x7ff954e0fd34,378918655,0,0x0,8
tick,0x7ff954e0fd34,378932970,0,0x0,8
tick,0x7ff954e0fd34,378948277,0,0x0,8
tick,0x7ff954e0fd34,378962917,0,0x0,8
tick,0x7ff954e0fd34,378978766,0,0x0,8
tick,0x7ff954e0fd34,378994731,0,0x0,8
tick,0x7ff954e0fd34,379011206,0,0x0,8
tick,0x7ff954e0fd34,379026660,0,0x0,8
tick,0x7ff954e0fd34,379043557,0,0x0,8
tick,0x7ff954e0fd34,379059215,0,0x0,8
tick,0x7ff954e0fd34,379074663,0,0x0,8
tick,0x7ff954e0fd34,379089525,0,0x0,8
tick,0x7ff954e0fd34,379106103,0,0x0,8
tick,0x7ff954e0fd34,379120417,0,0x0,8
tick,0x7ff954e0fd34,379135393,0,0x0,8
tick,0x7ff954e0fd34,379151380,0,0x0,8
tick,0x7ff954e0fd34,379166682,0,0x0,8
tick,0x7ff954e0fd34,379182253,0,0x0,8
tick,0x7ff954e0fd34,379198181,0,0x0,8
tick,0x7ff954e0fd34,379214128,0,0x0,8
tick,0x7ff954e0fd34,379229102,0,0x0,8
tick,0x7ff954e0fd34,379244052,0,0x0,8
tick,0x7ff954e0fd34,379259079,0,0x0,8
tick,0x7ff954e0fd34,379273972,0,0x0,8
tick,0x7ff954e0fd34,379289022,0,0x0,8
tick,0x7ff954e0fd34,379303946,0,0x0,8
tick,0x7ff954e0fd34,379318906,0,0x0,8
tick,0x7ff954e0fd34,379334817,0,0x0,8
tick,0x7ff954e0fd34,379350796,0,0x0,8
tick,0x7ff954e0fd34,379365719,0,0x0,8
tick,0x7ff954e0fd34,379380730,0,0x0,8
tick,0x7ff954e0fd34,379395642,0,0x0,8
tick,0x7ff954e0fd34,379410842,0,0x0,8
tick,0x7ff954e0fd34,379426994,0,0x0,8
tick,0x7ff954e0fd34,379442817,0,0x0,8
tick,0x7ff954e0fd34,379458696,0,0x0,8
tick,0x7ff954e0fd34,379473576,0,0x0,8
tick,0x7ff954e0fd34,379489507,0,0x0,8
tick,0x7ff954e0fd34,379505056,0,0x0,8
tick,0x7ff954e0fd34,379519925,0,0x0,8
tick,0x7ff954e0fd34,379534935,0,0x0,8
code-creation,LazyCompile,10,379549275,0x4aa59ce49e,130,exit node:internal/process/per_thread:181:16,0x12f5b0d8b00,~
code-source-info,0x4aa59ce49e,30,4965,5449,C0O4979C5O4987C17O4999C20O4987C26O5026C31O5043C36O5057C43O5074C47O5089C52O5102C58O5121C64O5138C68O5153C73O5161C86O5182C94O5161C100O5402C105O5410C115O5429C123O5410C129O5448,,
code-creation,LazyCompile,10,379549708,0x4aa59ce676,307,removeListener node:events:689:28,0xc194f6bcd8,~
code-source-info,0x4aa59ce
tick,0x7ff954d9fab3,379550077,0,0x0,3,0x7ff7dde840c0,0x4aa59ce4b2,0x22cec1557e2
